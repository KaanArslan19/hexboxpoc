{"id":"bd8e52f75d129ec5be2f6959acd47b01","_format":"hh-sol-build-info-1","solcVersion":"0.8.27","solcLongVersion":"0.8.27+commit.40a35a09","input":{"language":"Solidity","sources":{"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract AutomationBase {\n  error OnlySimulatedBackend();\n\n  /**\n   * @notice method that allows it to be simulated via eth_call by checking that\n   * the sender is the zero address.\n   */\n  function _preventExecution() internal view {\n    // solhint-disable-next-line avoid-tx-origin\n    if (tx.origin != address(0) && tx.origin != address(0x1111111111111111111111111111111111111111)) {\n      revert OnlySimulatedBackend();\n    }\n  }\n\n  /**\n   * @notice modifier that allows it to be simulated via eth_call by checking\n   * that the sender is the zero address.\n   */\n  modifier cannotExecute() {\n    _preventExecution();\n    _;\n  }\n}\n"},"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {AutomationBase} from \"./AutomationBase.sol\";\nimport {AutomationCompatibleInterface} from \"./interfaces/AutomationCompatibleInterface.sol\";\n\nabstract contract AutomationCompatible is AutomationBase, AutomationCompatibleInterface {}\n"},"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface AutomationCompatibleInterface {\n  /**\n   * @notice method that is simulated by the keepers to see if any work actually\n   * needs to be performed. This method does does not actually need to be\n   * executable, and since it is only ever simulated it can consume lots of gas.\n   * @dev To ensure that it is never called, you may want to add the\n   * cannotExecute modifier from KeeperBase to your implementation of this\n   * method.\n   * @param checkData specified in the upkeep registration so it is always the\n   * same for a registered upkeep. This can easily be broken down into specific\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\n   * same contract and easily differentiated by the contract.\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\n   * performUpkeep or not.\n   * @return performData bytes that the keeper should call performUpkeep with, if\n   * upkeep is needed. If you would like to encode data to decode later, try\n   * `abi.encode`.\n   */\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\n\n  /**\n   * @notice method that is actually executed by the keepers, via the registry.\n   * The data returned by the checkUpkeep simulation will be passed into\n   * this method to actually be executed.\n   * @dev The input to this method should not be trusted, and the caller of the\n   * method should not even be restricted to any single registry. Anyone should\n   * be able call it, and the input should be validated, there is no guarantee\n   * that the data passed in is the performData returned from checkUpkeep. This\n   * could happen due to malicious keepers, racing keepers, or simply a state\n   * change while the performUpkeep transaction is waiting for confirmation.\n   * Always validate the data passed in.\n   * @param performData is the data which was passed back from the checkData\n   * simulation. If it is encoded, it can easily be decoded into other types by\n   * calling `abi.decode`. This data should not be trusted, and should be\n   * validated against the contract's current state.\n   */\n  function performUpkeep(bytes calldata performData) external;\n}\n"},"@chainlink/contracts/src/v0.8/automation/interfaces/IAutomationForwarder.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {ITypeAndVersion} from \"../../shared/interfaces/ITypeAndVersion.sol\";\nimport {IAutomationRegistryConsumer} from \"./IAutomationRegistryConsumer.sol\";\n\ninterface IAutomationForwarder is ITypeAndVersion {\n  function forward(uint256 gasAmount, bytes memory data) external returns (bool success, uint256 gasUsed);\n\n  function updateRegistry(address newRegistry) external;\n\n  function getRegistry() external view returns (IAutomationRegistryConsumer);\n\n  function getTarget() external view returns (address);\n}\n"},"@chainlink/contracts/src/v0.8/automation/interfaces/IAutomationRegistryConsumer.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/**\n * @notice IAutomationRegistryConsumer defines the LTS user-facing interface that we intend to maintain for\n * across upgrades. As long as users use functions from within this interface, their upkeeps will retain\n * backwards compatability across migrations.\n * @dev Functions can be added to this interface, but not removed.\n */\ninterface IAutomationRegistryConsumer {\n  function getBalance(uint256 id) external view returns (uint96 balance);\n\n  function getMinBalance(uint256 id) external view returns (uint96 minBalance);\n\n  function cancelUpkeep(uint256 id) external;\n\n  function pauseUpkeep(uint256 id) external;\n\n  function unpauseUpkeep(uint256 id) external;\n\n  function addFunds(uint256 id, uint96 amount) external;\n\n  function withdrawFunds(uint256 id, address to) external;\n}\n"},"@chainlink/contracts/src/v0.8/shared/interfaces/ITypeAndVersion.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface ITypeAndVersion {\n  function typeAndVersion() external pure returns (string memory);\n}\n"},"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"./IERC1155.sol\";\nimport {IERC1155MetadataURI} from \"./extensions/IERC1155MetadataURI.sol\";\nimport {ERC1155Utils} from \"./utils/ERC1155Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {Arrays} from \"../../utils/Arrays.sol\";\nimport {IERC1155Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                ERC1155Utils.checkOnERC1155Received(operator, from, to, id, value, data);\n            } else {\n                ERC1155Utils.checkOnERC1155BatchReceived(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        assembly (\"memory-safe\") {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[ERC].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC-1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC-1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/utils/ERC1155Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155Receiver} from \"../IERC1155Receiver.sol\";\nimport {IERC1155Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-1155 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n *\n * _Available since v5.1._\n */\nlibrary ERC1155Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC1155-onERC1155Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155Received(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155-onERC1155BatchReceived}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155BatchReceived(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Arrays.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Arrays.sol)\n// This file was procedurally generated from scripts/generate/templates/Arrays.js.\n\npragma solidity ^0.8.20;\n\nimport {Comparators} from \"./Comparators.sol\";\nimport {SlotDerivation} from \"./SlotDerivation.sol\";\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using SlotDerivation for bytes32;\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Sort an array of uint256 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        uint256[] memory array,\n        function(uint256, uint256) pure returns (bool) comp\n    ) internal pure returns (uint256[] memory) {\n        _quickSort(_begin(array), _end(array), comp);\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of uint256 in increasing order.\n     */\n    function sort(uint256[] memory array) internal pure returns (uint256[] memory) {\n        sort(array, Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of address (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        address[] memory array,\n        function(address, address) pure returns (bool) comp\n    ) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of address in increasing order.\n     */\n    function sort(address[] memory array) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        bytes32[] memory array,\n        function(bytes32, bytes32) pure returns (bool) comp\n    ) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of bytes32 in increasing order.\n     */\n    function sort(bytes32[] memory array) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n     * at end (exclusive). Sorting follows the `comp` comparator.\n     *\n     * Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n     *\n     * IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n     * be used only if the limits are within a memory array.\n     */\n    function _quickSort(uint256 begin, uint256 end, function(uint256, uint256) pure returns (bool) comp) private pure {\n        unchecked {\n            if (end - begin < 0x40) return;\n\n            // Use first element as pivot\n            uint256 pivot = _mload(begin);\n            // Position where the pivot should be at the end of the loop\n            uint256 pos = begin;\n\n            for (uint256 it = begin + 0x20; it < end; it += 0x20) {\n                if (comp(_mload(it), pivot)) {\n                    // If the value stored at the iterator's position comes before the pivot, we increment the\n                    // position of the pivot and move the value there.\n                    pos += 0x20;\n                    _swap(pos, it);\n                }\n            }\n\n            _swap(begin, pos); // Swap pivot into place\n            _quickSort(begin, pos, comp); // Sort the left side of the pivot\n            _quickSort(pos + 0x20, end, comp); // Sort the right side of the pivot\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first element of `array`.\n     */\n    function _begin(uint256[] memory array) private pure returns (uint256 ptr) {\n        assembly (\"memory-safe\") {\n            ptr := add(array, 0x20)\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n     * that comes just after the last element of the array.\n     */\n    function _end(uint256[] memory array) private pure returns (uint256 ptr) {\n        unchecked {\n            return _begin(array) + array.length * 0x20;\n        }\n    }\n\n    /**\n     * @dev Load memory word (as a uint256) at location `ptr`.\n     */\n    function _mload(uint256 ptr) private pure returns (uint256 value) {\n        assembly {\n            value := mload(ptr)\n        }\n    }\n\n    /**\n     * @dev Swaps the elements memory location `ptr1` and `ptr2`.\n     */\n    function _swap(uint256 ptr1, uint256 ptr2) private pure {\n        assembly {\n            let value1 := mload(ptr1)\n            let value2 := mload(ptr2)\n            mstore(ptr1, value2)\n            mstore(ptr2, value1)\n        }\n    }\n\n    /// @dev Helper: low level cast address memory array to uint256 memory array\n    function _castToUint256Array(address[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 memory array to uint256 memory array\n    function _castToUint256Array(bytes32[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast address comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(address, address) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(bytes32, bytes32) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * NOTE: The `array` is expected to be sorted in ascending order, and to\n     * contain no repeated elements.\n     *\n     * IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n     * support for repeated elements in the array. The {lowerBound} function should\n     * be used instead.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value greater or equal than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound].\n     */\n    function lowerBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value strictly greater than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound].\n     */\n    function upperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {lowerBound}, but with an array in memory.\n     */\n    function lowerBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {upperBound}, but with an array in memory.\n     */\n    function upperBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(bytes32[] memory arr, uint256 pos) internal pure returns (bytes32 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(address[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(bytes32[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(uint256[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Comparators.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Comparators.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides a set of functions to compare values.\n *\n * _Available since v5.1._\n */\nlibrary Comparators {\n    function lt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a < b;\n    }\n\n    function gt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a > b;\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/SlotDerivation.sol)\n// This file was procedurally generated from scripts/generate/templates/SlotDerivation.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n * corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n * the solidity language / compiler.\n *\n * See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n *\n * Example usage:\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using StorageSlot for bytes32;\n *     using SlotDerivation for bytes32;\n *\n *     // Declare a namespace\n *     string private constant _NAMESPACE = \"<namespace>\" // eg. OpenZeppelin.Slot\n *\n *     function setValueInNamespace(uint256 key, address newValue) internal {\n *         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n *     }\n *\n *     function getValueInNamespace(uint256 key) internal view returns (address) {\n *         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {StorageSlot}.\n *\n * NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n * upgrade safety will ignore the slots accessed through this library.\n *\n * _Available since v5.1._\n */\nlibrary SlotDerivation {\n    /**\n     * @dev Derive an ERC-7201 slot from a string (namespace).\n     */\n    function erc7201Slot(string memory namespace) internal pure returns (bytes32 slot) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, sub(keccak256(add(namespace, 0x20), mload(namespace)), 1))\n            slot := and(keccak256(0x00, 0x20), not(0xff))\n        }\n    }\n\n    /**\n     * @dev Add an offset to a slot to get the n-th element of a structure or an array.\n     */\n    function offset(bytes32 slot, uint256 pos) internal pure returns (bytes32 result) {\n        unchecked {\n            return bytes32(uint256(slot) + pos);\n        }\n    }\n\n    /**\n     * @dev Derive the location of the first element in an array from the slot where the length is stored.\n     */\n    function deriveArray(bytes32 slot) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, slot)\n            result := keccak256(0x00, 0x20)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, address key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, and(key, shr(96, not(0))))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bool key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, iszero(iszero(key)))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes32 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, uint256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, int256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, string memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/interfaces/IAutomationRegistrar.sol":{"content":" // SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IAutomationRegistrar {\n    function register(\n        string memory name,\n        bytes memory encryptedEmail,\n        address upkeepContract,\n        uint32 gasLimit,\n        address adminAddress,\n        uint8 triggerType,\n        bytes memory checkData,\n        bytes memory triggerConfig,\n        bytes memory offchainConfig,\n        uint96 amount,\n        address sender\n    ) external;\n\n    function onTokenTransfer(\n        address sender,\n        uint256 amount,\n        bytes calldata data\n    ) external returns (bool);\n}"},"contracts/interfaces/IAutomationRegistry.sol":{"content":" // SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IAutomationRegistry {\n    function register(\n        string memory name,\n        bytes memory encryptedEmail,\n        address upkeepContract,\n        uint32 gasLimit,\n        address adminAddress,\n        bytes memory checkData,\n        uint96 amount,\n        uint8 source\n    ) external;\n\n    function getUpkeep(uint256 id) external view returns (\n        address target,\n        uint32 executeGas,\n        bytes memory checkData,\n        uint96 balance,\n        address lastKeeper,\n        address admin,\n        uint64 maxValidBlocknumber,\n        uint96 amountSpent,\n        bool paused,\n        bytes memory offchainConfig\n    );\n\n    function cancelUpkeep(uint256 id) external;\n    function withdrawFunds(uint256 id, address to) external;\n}"},"contracts/mocks/MockAutomationRegistrar.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.27;\n\ncontract MockAutomationRegistrar {\n    event RegistrationRequested(\n        string name,\n        bytes encryptedEmail,\n        address upkeepContract,\n        uint32 gasLimit,\n        address adminAddress,\n        bytes checkData,\n        uint96 amount,\n        uint8 source\n    );\n\n    function register(\n        string memory name,\n        bytes memory encryptedEmail,\n        address upkeepContract,\n        uint32 gasLimit,\n        address adminAddress,\n        bytes memory checkData,\n        uint96 amount,\n        uint8 source\n    ) external returns (bool) {\n        emit RegistrationRequested(\n            name,\n            encryptedEmail,\n            upkeepContract,\n            gasLimit,\n            adminAddress,\n            checkData,\n            amount,\n            source\n        );\n        return true;\n    }\n} "},"contracts/mocks/MockLINK.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.27;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract MockLINK is ERC20 {\n    constructor() ERC20(\"Mock LINK\", \"LINK\") {\n        _mint(msg.sender, 1000000 * 10**18);\n    }\n\n    function mint(address to, uint256 amount) external {\n        _mint(to, amount);\n    }\n} "},"contracts/ProductToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\ncontract ProductToken is ERC1155, AccessControl {\n    using Strings for uint256;\n    \n    // Role definition\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    \n    // Mapping to track total supply per token ID\n    mapping(uint256 => uint256) private _productSupply;\n    \n    // Base URI for metadata\n    string private _baseUri;\n    \n    // Events\n    event ProductMinted(address indexed to, uint256 indexed productId, uint256 amount);\n    event BaseURIUpdated(string newUri);\n\n    constructor(string memory baseUri) ERC1155(\"\") {\n        _baseUri = baseUri;\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(MINTER_ROLE, msg.sender);\n    }\n\n    function mint(address to, uint256 productId, uint256 amount) external onlyRole(MINTER_ROLE) {\n        _productSupply[productId] += amount;\n        _mint(to, productId, amount, \"\");\n        emit ProductMinted(to, productId, amount);\n    }\n\n    function uri(uint256 tokenId) public view virtual override returns (string memory) {\n        return string(abi.encodePacked(_baseUri, tokenId.toString(), \".json\"));\n    }\n\n    function setBaseURI(string memory newUri) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        _baseUri = newUri;\n        emit BaseURIUpdated(newUri);\n    }\n\n    function productSupply(uint256 productId) public view returns (uint256) {\n        return _productSupply[productId];\n    }\n\n    function burn(address from, uint256 productId, uint256 amount) external onlyRole(MINTER_ROLE) {\n        _burn(from, productId, amount);\n        _productSupply[productId] -= amount;\n    }\n\n    // Required override\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        override(ERC1155, AccessControl)\n        returns (bool)\n    {\n        return super.supportsInterface(interfaceId);\n    }\n} "},"contracts/test/MockUSDC.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.27;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract MockUSDC is ERC20 {\n    constructor() ERC20(\"Mock USDC\", \"USDC\") {\n        _mint(msg.sender, 1000000 * 10**6); // Mint 1M USDC (with 6 decimals)\n    }\n\n    function decimals() public pure override returns (uint8) {\n        return 6; // USDC uses 6 decimals\n    }\n} "},"contracts/USDCFundraiser.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.27;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\";\nimport \"./ProductToken.sol\";\nimport \"./interfaces/IAutomationRegistrar.sol\";\nimport {IAutomationRegistryConsumer} from\n    \"@chainlink/contracts/src/v0.8/automation/interfaces/IAutomationRegistryConsumer.sol\";\nimport {IAutomationForwarder} from \"@chainlink/contracts/src/v0.8/automation/interfaces/IAutomationForwarder.sol\";\n\ncontract USDCFundraiser is Ownable, Pausable, ReentrancyGuard, AutomationCompatibleInterface {\n    IERC20 public usdc;\n    ProductToken public productToken;\n    address public beneficiaryWallet;\n    address public feeWallet;\n    uint256 public minimumTarget;\n    uint256 public deadline;\n    bool public enforceConditions;\n    uint256 public feePercentage; // Stored as basis points (e.g., 250 = 2.5%)\n    \n    mapping(address => uint256) public deposits;\n    uint256 public totalRaised;\n    bool public finalized;\n    uint256 private currentTokenId;\n    mapping(uint256 => uint256) public tokenDeposits; // tokenId => deposit amount\n    mapping(uint256 => uint256) public productPrices;\n\n    address CHAINLINK_REGISTRAR;\n    address CHAINLINK_REGISTRY;\n    address LINK_TOKEN;\n    bytes4 CHAINLINK_REGISTRAR_SELECTOR;\n    bool isRegisteredWithChainlink;\n\n    uint256 s_stationUpkeepID;\n    IAutomationForwarder s_forwarder;\n    bytes4 s_registerUpkeepSelector;\n\n    function getStationUpkeepID() public view returns (uint256) {\n        return s_stationUpkeepID;\n    }\n\n    struct RegistrationParams {\n        string name;\n        bytes encryptedEmail;\n        address upkeepContract;\n        uint32 gasLimit;\n        address adminAddress;\n        uint8 triggerType;\n        bytes checkData;\n        bytes triggerConfig;\n        bytes offchainConfig;\n        uint96 amount;\n    }\n\n    event Deposit(address indexed depositor, uint256 amount, uint256 fee);\n    event Refund(address indexed depositor, uint256 amount);\n    event FundsReleased(address indexed beneficiary, uint256 amount);\n    event FeeUpdated(uint256 newFeePercentage);\n    event EmergencyWithdraw(address indexed to, uint256 amount);\n    event ProductPriceSet(uint256 productId, uint256 price);\n    event Debug(string message, uint256 value);\n    event DebugBytes(string message, bytes value);\n    event ForwarderChanged(address indexed forwarder);\n    event UpkeepPerformed();\n\n    constructor(\n        address _usdcAddress,\n        address _beneficiaryWallet,\n        address _feeWallet,\n        uint256 _minimumTarget,\n        uint256 _deadline,\n        bool _enforceConditions,\n        address _productTokenAddress,\n        uint256[] memory _productIds,\n        uint256[] memory _productPrices,\n        address _linkToken,\n        address _chainlinkRegistrar,\n        address _chainlinkRegistry,\n        bytes4 _chainlinkRegistrarSelector\n    ) Ownable(msg.sender) {\n        require(_usdcAddress != address(0), \"Invalid USDC address\");\n        require(_beneficiaryWallet != address(0), \"Invalid beneficiary wallet\");\n        require(_feeWallet != address(0), \"Invalid fee wallet\");\n        require(_productIds.length == _productPrices.length, \"Arrays length mismatch\");\n        require(_productIds.length > 0, \"No products provided\");\n        \n        usdc = IERC20(_usdcAddress);\n        beneficiaryWallet = _beneficiaryWallet;\n        feeWallet = _feeWallet;\n        minimumTarget = _minimumTarget;\n        deadline = _deadline;\n        enforceConditions = _enforceConditions;\n        feePercentage = 250; // 2.5% default fee\n        productToken = ProductToken(_productTokenAddress);\n\n        // Set initial product prices\n        for(uint256 i = 0; i < _productIds.length; i++) {\n            require(_productPrices[i] > 0, \"Invalid product price\");\n            productPrices[_productIds[i]] = _productPrices[i];\n            emit ProductPriceSet(_productIds[i], _productPrices[i]);\n        }\n\n        LINK_TOKEN = _linkToken;\n        CHAINLINK_REGISTRAR = _chainlinkRegistrar;\n        CHAINLINK_REGISTRY = _chainlinkRegistry;\n        CHAINLINK_REGISTRAR_SELECTOR = _chainlinkRegistrarSelector;\n    }\n\n    function deposit(uint256 productId, uint256 quantity) external nonReentrant whenNotPaused {\n        require(quantity > 0, \"Quantity must be greater than 0\");\n        require(!finalized, \"Fundraiser is finalized\");\n        require(productPrices[productId] > 0, \"Product not available\");\n        \n        if (enforceConditions) {\n            require(block.timestamp <= deadline, \"Deadline has passed\");\n        }\n\n        uint256 totalAmount = productPrices[productId] * quantity;\n        uint256 fee = (totalAmount * feePercentage) / 10000;\n        uint256 netAmount = totalAmount - fee;\n\n        require(usdc.transferFrom(msg.sender, address(this), totalAmount), \"Transfer failed\");\n        \n        if (fee > 0) {\n            require(usdc.transfer(feeWallet, fee), \"Fee transfer failed\");\n        }\n\n        // Mint NFTs to depositor\n        productToken.mint(msg.sender, productId, quantity);\n        \n        // Store deposit amount against token ID\n        tokenDeposits[productId] += netAmount;\n        totalRaised += netAmount;\n\n        emit Deposit(msg.sender, totalAmount, fee);\n    }\n\n    function finalize() public nonReentrant whenNotPaused {\n        require(!finalized, \"Already finalized\");\n        if (enforceConditions) {\n            require(block.timestamp > deadline, \"Deadline not reached\");\n            if (totalRaised >= minimumTarget) {\n                _releaseFunds();\n            } else {\n                _processRefunds();\n            }\n        } else {\n            _releaseFunds();\n        }\n        finalized = true;\n    }\n\n    function _releaseFunds() private {\n        require(usdc.transfer(beneficiaryWallet, totalRaised), \"Transfer failed\");\n        emit FundsReleased(beneficiaryWallet, totalRaised);\n    }\n\n    function _processRefunds() private {\n        for (address depositor = address(0); deposits[depositor] > 0;) {\n            uint256 amount = deposits[depositor];\n            deposits[depositor] = 0;\n            require(usdc.transfer(depositor, amount), \"Refund failed\");\n            emit Refund(depositor, amount);\n        }\n    }\n\n    // Admin functions\n    function updateFeePercentage(uint256 newFeePercentage) external onlyOwner {\n        require(newFeePercentage <= 1000, \"Fee cannot exceed 10%\");\n        feePercentage = newFeePercentage;\n        emit FeeUpdated(newFeePercentage);\n    }\n\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    function emergencyWithdraw(address to, uint256 amount) external onlyOwner {\n        require(to != address(0), \"Invalid address\");\n        require(amount <= usdc.balanceOf(address(this)), \"Insufficient balance\");\n        require(usdc.transfer(to, amount), \"Transfer failed\");\n        emit EmergencyWithdraw(to, amount);\n    }\n\n    // Only for testing\n    function updateDeadline(uint256 newDeadline) external onlyOwner {\n        require(!finalized, \"Fundraiser is finalized\");\n        require(newDeadline > block.timestamp, \"Deadline must be in the future\");\n        deadline = newDeadline;\n    }\n\n    function setProductPrice(uint256 productId, uint256 price) external onlyOwner {\n        productPrices[productId] = price;\n        emit ProductPriceSet(productId, price);\n    }\n\n    function claimRefund(uint256 productId) external {\n        require(finalized, \"Not finalized\");\n        require(totalRaised < minimumTarget, \"Target was met\");\n        \n        uint256 balance = productToken.balanceOf(msg.sender, productId);\n        require(balance > 0, \"No tokens to refund\");\n        \n        uint256 refundAmount = (tokenDeposits[productId] * balance) / productToken.productSupply(productId);\n        tokenDeposits[productId] = tokenDeposits[productId] - refundAmount;\n        \n        // Burn the NFTs first\n        productToken.burn(msg.sender, productId, balance);\n        \n        // Then send the refund\n        require(usdc.transfer(msg.sender, refundAmount), \"Refund failed\");\n        emit Refund(msg.sender, refundAmount);\n    }\n\n    function _getStationUpkeepRegistry() internal view returns (IAutomationRegistryConsumer registry) {\n        return s_forwarder.getRegistry();\n    }\n\n    function _withdrawLink() internal {\n        IAutomationRegistryConsumer registry = _getStationUpkeepRegistry();\n        registry.withdrawFunds(s_stationUpkeepID, owner());\n    }\n\n    // Add checkUpkeep function\n    function checkUpkeep(bytes calldata /* checkData */) \n        external \n        view \n        override \n        returns (bool upkeepNeeded, bytes memory /* performData */) \n    {\n        upkeepNeeded = !finalized && block.timestamp > deadline;\n        return (upkeepNeeded, \"\");\n    }\n\n    // Add performUpkeep function\n    function performUpkeep(bytes calldata /* performData */) external override {\n        if (!finalized && block.timestamp > deadline) {\n            finalize();\n            emit UpkeepPerformed();\n            _withdrawLink();\n        }\n    }\n\n    function initializeChainlink(bytes calldata registrationParams)\n        external\n        onlyOwner\n        returns (uint256 stationUpkeepID)\n    {\n        bool approveSuccess = IERC20(LINK_TOKEN).approve(CHAINLINK_REGISTRAR, 1 ether);\n        require(approveSuccess, \"LINK approval failed\");\n\n        stationUpkeepID = _registerUpkeep(CHAINLINK_REGISTRAR, CHAINLINK_REGISTRAR_SELECTOR, registrationParams);\n        s_stationUpkeepID = stationUpkeepID;\n        isRegisteredWithChainlink = true;\n        if (CHAINLINK_REGISTRY != address(0)) {\n            (bool success, bytes memory returnData) =\n                CHAINLINK_REGISTRY.staticcall(abi.encodeWithSignature(\"getForwarder(uint256)\", stationUpkeepID));\n            if (success) {\n                address forwarder = abi.decode(returnData, (address));\n                s_forwarder = IAutomationForwarder(forwarder);\n                emit ForwarderChanged(forwarder);\n            }\n        }\n    }\n\n    function _registerUpkeep(address registrar, bytes4 selector, bytes calldata registrationParams) internal returns (uint256 upkeepID) {\n        (bool success, bytes memory returnData) =\n            registrar.call(bytes.concat(selector, registrationParams));\n        if (!success) {\n            emit Debug(\"Registration failed\", returnData.length);\n            if (returnData.length > 0) {    \n                emit DebugBytes(\"Registration data\", returnData);\n            }\n        }\n        return abi.decode(returnData, (uint256));\n    }\n} "}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol","exportedSymbols":{"AutomationBase":[37]},"id":38,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"AutomationBase","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":37,"linearizedBaseContracts":[37],"name":"AutomationBase","nameLocation":"66:14:0","nodeType":"ContractDefinition","nodes":[{"errorSelector":"b60ac5db","id":3,"name":"OnlySimulatedBackend","nameLocation":"91:20:0","nodeType":"ErrorDefinition","parameters":{"id":2,"nodeType":"ParameterList","parameters":[],"src":"111:2:0"},"src":"85:29:0"},{"body":{"id":27,"nodeType":"Block","src":"291:200:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":21,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":13,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"350:2:0","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":8,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"353:6:0","memberName":"origin","nodeType":"MemberAccess","src":"350:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":11,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"371:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"363:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"363:7:0","typeDescriptions":{}}},"id":12,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"363:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"350:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":14,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"377:2:0","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":15,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"380:6:0","memberName":"origin","nodeType":"MemberAccess","src":"377:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"307831313131313131313131313131313131313131313131313131313131313131313131313131313131","id":18,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"398:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x1111111111111111111111111111111111111111"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"390:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":16,"name":"address","nodeType":"ElementaryTypeName","src":"390:7:0","typeDescriptions":{}}},"id":19,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"390:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"377:64:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"350:91:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":26,"nodeType":"IfStatement","src":"346:141:0","trueBody":{"id":25,"nodeType":"Block","src":"443:44:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":22,"name":"OnlySimulatedBackend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3,"src":"458:20:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":23,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"458:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":24,"nodeType":"RevertStatement","src":"451:29:0"}]}}]},"documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"118:127:0","text":" @notice method that allows it to be simulated via eth_call by checking that\n the sender is the zero address."},"id":28,"implemented":true,"kind":"function","modifiers":[],"name":"_preventExecution","nameLocation":"257:17:0","nodeType":"FunctionDefinition","parameters":{"id":5,"nodeType":"ParameterList","parameters":[],"src":"274:2:0"},"returnParameters":{"id":6,"nodeType":"ParameterList","parameters":[],"src":"291:0:0"},"scope":37,"src":"248:243:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":35,"nodeType":"Block","src":"652:37:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":31,"name":"_preventExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"658:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":32,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"658:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":33,"nodeType":"ExpressionStatement","src":"658:19:0"},{"id":34,"nodeType":"PlaceholderStatement","src":"683:1:0"}]},"documentation":{"id":29,"nodeType":"StructuredDocumentation","src":"495:129:0","text":" @notice modifier that allows it to be simulated via eth_call by checking\n that the sender is the zero address."},"id":36,"name":"cannotExecute","nameLocation":"636:13:0","nodeType":"ModifierDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[],"src":"649:2:0"},"src":"627:62:0","virtual":false,"visibility":"internal"}],"scope":38,"src":"57:634:0","usedErrors":[3],"usedEvents":[]}],"src":"32:660:0"},"id":0},"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol","exportedSymbols":{"AutomationBase":[37],"AutomationCompatible":[48],"AutomationCompatibleInterface":[67]},"id":49,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":39,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:1"},{"absolutePath":"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol","file":"./AutomationBase.sol","id":41,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":49,"sourceUnit":38,"src":"57:52:1","symbolAliases":[{"foreign":{"id":40,"name":"AutomationBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"65:14:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol","file":"./interfaces/AutomationCompatibleInterface.sol","id":43,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":49,"sourceUnit":68,"src":"110:93:1","symbolAliases":[{"foreign":{"id":42,"name":"AutomationCompatibleInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"118:29:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":44,"name":"AutomationBase","nameLocations":["247:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":37,"src":"247:14:1"},"id":45,"nodeType":"InheritanceSpecifier","src":"247:14:1"},{"baseName":{"id":46,"name":"AutomationCompatibleInterface","nameLocations":["263:29:1"],"nodeType":"IdentifierPath","referencedDeclaration":67,"src":"263:29:1"},"id":47,"nodeType":"InheritanceSpecifier","src":"263:29:1"}],"canonicalName":"AutomationCompatible","contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":48,"linearizedBaseContracts":[48,67,37],"name":"AutomationCompatible","nameLocation":"223:20:1","nodeType":"ContractDefinition","nodes":[],"scope":49,"src":"205:90:1","usedErrors":[3],"usedEvents":[]}],"src":"32:264:1"},"id":1},"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol","exportedSymbols":{"AutomationCompatibleInterface":[67]},"id":68,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":50,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"AutomationCompatibleInterface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":67,"linearizedBaseContracts":[67],"name":"AutomationCompatibleInterface","nameLocation":"120:29:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"154:985:2","text":" @notice method that is simulated by the keepers to see if any work actually\n needs to be performed. This method does does not actually need to be\n executable, and since it is only ever simulated it can consume lots of gas.\n @dev To ensure that it is never called, you may want to add the\n cannotExecute modifier from KeeperBase to your implementation of this\n method.\n @param checkData specified in the upkeep registration so it is always the\n same for a registered upkeep. This can easily be broken down into specific\n arguments using `abi.decode`, so multiple upkeeps can be registered on the\n same contract and easily differentiated by the contract.\n @return upkeepNeeded boolean to indicate whether the keeper should call\n performUpkeep or not.\n @return performData bytes that the keeper should call performUpkeep with, if\n upkeep is needed. If you would like to encode data to decode later, try\n `abi.encode`."},"functionSelector":"6e04ff0d","id":60,"implemented":false,"kind":"function","modifiers":[],"name":"checkUpkeep","nameLocation":"1151:11:2","nodeType":"FunctionDefinition","parameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53,"mutability":"mutable","name":"checkData","nameLocation":"1178:9:2","nodeType":"VariableDeclaration","scope":60,"src":"1163:24:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":52,"name":"bytes","nodeType":"ElementaryTypeName","src":"1163:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1162:26:2"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"1212:12:2","nodeType":"VariableDeclaration","scope":60,"src":"1207:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":55,"name":"bool","nodeType":"ElementaryTypeName","src":"1207:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":58,"mutability":"mutable","name":"performData","nameLocation":"1239:11:2","nodeType":"VariableDeclaration","scope":60,"src":"1226:24:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":57,"name":"bytes","nodeType":"ElementaryTypeName","src":"1226:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1206:45:2"},"scope":67,"src":"1142:110:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"1256:1003:2","text":" @notice method that is actually executed by the keepers, via the registry.\n The data returned by the checkUpkeep simulation will be passed into\n this method to actually be executed.\n @dev The input to this method should not be trusted, and the caller of the\n method should not even be restricted to any single registry. Anyone should\n be able call it, and the input should be validated, there is no guarantee\n that the data passed in is the performData returned from checkUpkeep. This\n could happen due to malicious keepers, racing keepers, or simply a state\n change while the performUpkeep transaction is waiting for confirmation.\n Always validate the data passed in.\n @param performData is the data which was passed back from the checkData\n simulation. If it is encoded, it can easily be decoded into other types by\n calling `abi.decode`. This data should not be trusted, and should be\n validated against the contract's current state."},"functionSelector":"4585e33b","id":66,"implemented":false,"kind":"function","modifiers":[],"name":"performUpkeep","nameLocation":"2271:13:2","nodeType":"FunctionDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"performData","nameLocation":"2300:11:2","nodeType":"VariableDeclaration","scope":66,"src":"2285:26:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":62,"name":"bytes","nodeType":"ElementaryTypeName","src":"2285:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2284:28:2"},"returnParameters":{"id":65,"nodeType":"ParameterList","parameters":[],"src":"2321:0:2"},"scope":67,"src":"2262:60:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":68,"src":"110:2214:2","usedErrors":[],"usedEvents":[]}],"src":"32:2293:2"},"id":2},"@chainlink/contracts/src/v0.8/automation/interfaces/IAutomationForwarder.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/automation/interfaces/IAutomationForwarder.sol","exportedSymbols":{"IAutomationForwarder":[103],"IAutomationRegistryConsumer":[150],"ITypeAndVersion":[158]},"id":104,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":69,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:3"},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/ITypeAndVersion.sol","file":"../../shared/interfaces/ITypeAndVersion.sol","id":71,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":104,"sourceUnit":159,"src":"57:76:3","symbolAliases":[{"foreign":{"id":70,"name":"ITypeAndVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"65:15:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/automation/interfaces/IAutomationRegistryConsumer.sol","file":"./IAutomationRegistryConsumer.sol","id":73,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":104,"sourceUnit":151,"src":"134:78:3","symbolAliases":[{"foreign":{"id":72,"name":"IAutomationRegistryConsumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"142:27:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":74,"name":"ITypeAndVersion","nameLocations":["248:15:3"],"nodeType":"IdentifierPath","referencedDeclaration":158,"src":"248:15:3"},"id":75,"nodeType":"InheritanceSpecifier","src":"248:15:3"}],"canonicalName":"IAutomationForwarder","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":103,"linearizedBaseContracts":[103,158],"name":"IAutomationForwarder","nameLocation":"224:20:3","nodeType":"ContractDefinition","nodes":[{"functionSelector":"79188d16","id":86,"implemented":false,"kind":"function","modifiers":[],"name":"forward","nameLocation":"277:7:3","nodeType":"FunctionDefinition","parameters":{"id":80,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77,"mutability":"mutable","name":"gasAmount","nameLocation":"293:9:3","nodeType":"VariableDeclaration","scope":86,"src":"285:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":76,"name":"uint256","nodeType":"ElementaryTypeName","src":"285:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":79,"mutability":"mutable","name":"data","nameLocation":"317:4:3","nodeType":"VariableDeclaration","scope":86,"src":"304:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":78,"name":"bytes","nodeType":"ElementaryTypeName","src":"304:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"284:38:3"},"returnParameters":{"id":85,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"success","nameLocation":"346:7:3","nodeType":"VariableDeclaration","scope":86,"src":"341:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":81,"name":"bool","nodeType":"ElementaryTypeName","src":"341:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":84,"mutability":"mutable","name":"gasUsed","nameLocation":"363:7:3","nodeType":"VariableDeclaration","scope":86,"src":"355:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":83,"name":"uint256","nodeType":"ElementaryTypeName","src":"355:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"340:31:3"},"scope":103,"src":"268:104:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"1a5da6c8","id":91,"implemented":false,"kind":"function","modifiers":[],"name":"updateRegistry","nameLocation":"385:14:3","nodeType":"FunctionDefinition","parameters":{"id":89,"nodeType":"ParameterList","parameters":[{"constant":false,"id":88,"mutability":"mutable","name":"newRegistry","nameLocation":"408:11:3","nodeType":"VariableDeclaration","scope":91,"src":"400:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":87,"name":"address","nodeType":"ElementaryTypeName","src":"400:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"399:21:3"},"returnParameters":{"id":90,"nodeType":"ParameterList","parameters":[],"src":"429:0:3"},"scope":103,"src":"376:54:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5ab1bd53","id":97,"implemented":false,"kind":"function","modifiers":[],"name":"getRegistry","nameLocation":"443:11:3","nodeType":"FunctionDefinition","parameters":{"id":92,"nodeType":"ParameterList","parameters":[],"src":"454:2:3"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[{"constant":false,"id":95,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":97,"src":"480:27:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAutomationRegistryConsumer_$150","typeString":"contract IAutomationRegistryConsumer"},"typeName":{"id":94,"nodeType":"UserDefinedTypeName","pathNode":{"id":93,"name":"IAutomationRegistryConsumer","nameLocations":["480:27:3"],"nodeType":"IdentifierPath","referencedDeclaration":150,"src":"480:27:3"},"referencedDeclaration":150,"src":"480:27:3","typeDescriptions":{"typeIdentifier":"t_contract$_IAutomationRegistryConsumer_$150","typeString":"contract IAutomationRegistryConsumer"}},"visibility":"internal"}],"src":"479:29:3"},"scope":103,"src":"434:75:3","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f00e6a2a","id":102,"implemented":false,"kind":"function","modifiers":[],"name":"getTarget","nameLocation":"522:9:3","nodeType":"FunctionDefinition","parameters":{"id":98,"nodeType":"ParameterList","parameters":[],"src":"531:2:3"},"returnParameters":{"id":101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":102,"src":"557:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":99,"name":"address","nodeType":"ElementaryTypeName","src":"557:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"556:9:3"},"scope":103,"src":"513:53:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":104,"src":"214:354:3","usedErrors":[],"usedEvents":[]}],"src":"32:537:3"},"id":3},"@chainlink/contracts/src/v0.8/automation/interfaces/IAutomationRegistryConsumer.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/automation/interfaces/IAutomationRegistryConsumer.sol","exportedSymbols":{"IAutomationRegistryConsumer":[150]},"id":151,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":105,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IAutomationRegistryConsumer","contractDependencies":[],"contractKind":"interface","documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"57:333:4","text":" @notice IAutomationRegistryConsumer defines the LTS user-facing interface that we intend to maintain for\n across upgrades. As long as users use functions from within this interface, their upkeeps will retain\n backwards compatability across migrations.\n @dev Functions can be added to this interface, but not removed."},"fullyImplemented":false,"id":150,"linearizedBaseContracts":[150],"name":"IAutomationRegistryConsumer","nameLocation":"401:27:4","nodeType":"ContractDefinition","nodes":[{"functionSelector":"1e010439","id":113,"implemented":false,"kind":"function","modifiers":[],"name":"getBalance","nameLocation":"442:10:4","nodeType":"FunctionDefinition","parameters":{"id":109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":108,"mutability":"mutable","name":"id","nameLocation":"461:2:4","nodeType":"VariableDeclaration","scope":113,"src":"453:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":107,"name":"uint256","nodeType":"ElementaryTypeName","src":"453:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"452:12:4"},"returnParameters":{"id":112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":111,"mutability":"mutable","name":"balance","nameLocation":"495:7:4","nodeType":"VariableDeclaration","scope":113,"src":"488:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":110,"name":"uint96","nodeType":"ElementaryTypeName","src":"488:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"487:16:4"},"scope":150,"src":"433:71:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d7632648","id":120,"implemented":false,"kind":"function","modifiers":[],"name":"getMinBalance","nameLocation":"517:13:4","nodeType":"FunctionDefinition","parameters":{"id":116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":115,"mutability":"mutable","name":"id","nameLocation":"539:2:4","nodeType":"VariableDeclaration","scope":120,"src":"531:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":114,"name":"uint256","nodeType":"ElementaryTypeName","src":"531:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"530:12:4"},"returnParameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"minBalance","nameLocation":"573:10:4","nodeType":"VariableDeclaration","scope":120,"src":"566:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":117,"name":"uint96","nodeType":"ElementaryTypeName","src":"566:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"565:19:4"},"scope":150,"src":"508:77:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c8048022","id":125,"implemented":false,"kind":"function","modifiers":[],"name":"cancelUpkeep","nameLocation":"598:12:4","nodeType":"FunctionDefinition","parameters":{"id":123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":122,"mutability":"mutable","name":"id","nameLocation":"619:2:4","nodeType":"VariableDeclaration","scope":125,"src":"611:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":121,"name":"uint256","nodeType":"ElementaryTypeName","src":"611:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"610:12:4"},"returnParameters":{"id":124,"nodeType":"ParameterList","parameters":[],"src":"631:0:4"},"scope":150,"src":"589:43:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"8765ecbe","id":130,"implemented":false,"kind":"function","modifiers":[],"name":"pauseUpkeep","nameLocation":"645:11:4","nodeType":"FunctionDefinition","parameters":{"id":128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"mutability":"mutable","name":"id","nameLocation":"665:2:4","nodeType":"VariableDeclaration","scope":130,"src":"657:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":126,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:12:4"},"returnParameters":{"id":129,"nodeType":"ParameterList","parameters":[],"src":"677:0:4"},"scope":150,"src":"636:42:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5165f2f5","id":135,"implemented":false,"kind":"function","modifiers":[],"name":"unpauseUpkeep","nameLocation":"691:13:4","nodeType":"FunctionDefinition","parameters":{"id":133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"id","nameLocation":"713:2:4","nodeType":"VariableDeclaration","scope":135,"src":"705:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":131,"name":"uint256","nodeType":"ElementaryTypeName","src":"705:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"704:12:4"},"returnParameters":{"id":134,"nodeType":"ParameterList","parameters":[],"src":"725:0:4"},"scope":150,"src":"682:44:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"948108f7","id":142,"implemented":false,"kind":"function","modifiers":[],"name":"addFunds","nameLocation":"739:8:4","nodeType":"FunctionDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":137,"mutability":"mutable","name":"id","nameLocation":"756:2:4","nodeType":"VariableDeclaration","scope":142,"src":"748:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":136,"name":"uint256","nodeType":"ElementaryTypeName","src":"748:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":139,"mutability":"mutable","name":"amount","nameLocation":"767:6:4","nodeType":"VariableDeclaration","scope":142,"src":"760:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":138,"name":"uint96","nodeType":"ElementaryTypeName","src":"760:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"747:27:4"},"returnParameters":{"id":141,"nodeType":"ParameterList","parameters":[],"src":"783:0:4"},"scope":150,"src":"730:54:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"744bfe61","id":149,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawFunds","nameLocation":"797:13:4","nodeType":"FunctionDefinition","parameters":{"id":147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":144,"mutability":"mutable","name":"id","nameLocation":"819:2:4","nodeType":"VariableDeclaration","scope":149,"src":"811:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":143,"name":"uint256","nodeType":"ElementaryTypeName","src":"811:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":146,"mutability":"mutable","name":"to","nameLocation":"831:2:4","nodeType":"VariableDeclaration","scope":149,"src":"823:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"823:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"810:24:4"},"returnParameters":{"id":148,"nodeType":"ParameterList","parameters":[],"src":"843:0:4"},"scope":150,"src":"788:56:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":151,"src":"391:455:4","usedErrors":[],"usedEvents":[]}],"src":"32:815:4"},"id":4},"@chainlink/contracts/src/v0.8/shared/interfaces/ITypeAndVersion.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/ITypeAndVersion.sol","exportedSymbols":{"ITypeAndVersion":[158]},"id":159,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":152,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"ITypeAndVersion","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":158,"linearizedBaseContracts":[158],"name":"ITypeAndVersion","nameLocation":"67:15:5","nodeType":"ContractDefinition","nodes":[{"functionSelector":"181f5a77","id":157,"implemented":false,"kind":"function","modifiers":[],"name":"typeAndVersion","nameLocation":"96:14:5","nodeType":"FunctionDefinition","parameters":{"id":153,"nodeType":"ParameterList","parameters":[],"src":"110:2:5"},"returnParameters":{"id":156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":155,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":157,"src":"136:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":154,"name":"string","nodeType":"ElementaryTypeName","src":"136:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"135:15:5"},"scope":158,"src":"87:64:5","stateMutability":"pure","virtual":false,"visibility":"external"}],"scope":159,"src":"57:96:5","usedErrors":[],"usedEvents":[]}],"src":"32:122:5"},"id":5},"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[454],"Context":[3633],"ERC165":[4469],"IAccessControl":[537]},"id":455,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":160,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:6"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":162,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":455,"sourceUnit":538,"src":"134:52:6","symbolAliases":[{"foreign":{"id":161,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"142:14:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":164,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":455,"sourceUnit":3634,"src":"187:45:6","symbolAliases":[{"foreign":{"id":163,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"195:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":166,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":455,"sourceUnit":4470,"src":"233:57:6","symbolAliases":[{"foreign":{"id":165,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4469,"src":"241:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":168,"name":"Context","nameLocations":["1988:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":3633,"src":"1988:7:6"},"id":169,"nodeType":"InheritanceSpecifier","src":"1988:7:6"},{"baseName":{"id":170,"name":"IAccessControl","nameLocations":["1997:14:6"],"nodeType":"IdentifierPath","referencedDeclaration":537,"src":"1997:14:6"},"id":171,"nodeType":"InheritanceSpecifier","src":"1997:14:6"},{"baseName":{"id":172,"name":"ERC165","nameLocations":["2013:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":4469,"src":"2013:6:6"},"id":173,"nodeType":"InheritanceSpecifier","src":"2013:6:6"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"292:1660:6","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":454,"linearizedBaseContracts":[454,4469,4481,537,3633],"name":"AccessControl","nameLocation":"1971:13:6","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":180,"members":[{"constant":false,"id":177,"mutability":"mutable","name":"hasRole","nameLocation":"2085:7:6","nodeType":"VariableDeclaration","scope":180,"src":"2052:40:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":176,"keyName":"account","keyNameLocation":"2068:7:6","keyType":{"id":174,"name":"address","nodeType":"ElementaryTypeName","src":"2060:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2052:32:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":175,"name":"bool","nodeType":"ElementaryTypeName","src":"2079:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":179,"mutability":"mutable","name":"adminRole","nameLocation":"2110:9:6","nodeType":"VariableDeclaration","scope":180,"src":"2102:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":178,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2102:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2033:8:6","nodeType":"StructDefinition","scope":454,"src":"2026:100:6","visibility":"public"},{"constant":false,"id":185,"mutability":"mutable","name":"_roles","nameLocation":"2174:6:6","nodeType":"VariableDeclaration","scope":454,"src":"2132:48:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$180_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":184,"keyName":"role","keyNameLocation":"2148:4:6","keyType":{"id":181,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2140:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2132:33:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$180_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":183,"nodeType":"UserDefinedTypeName","pathNode":{"id":182,"name":"RoleData","nameLocations":["2156:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":180,"src":"2156:8:6"},"referencedDeclaration":180,"src":"2156:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$180_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":188,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2211:18:6","nodeType":"VariableDeclaration","scope":454,"src":"2187:49:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":186,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2187:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2232:4:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":198,"nodeType":"Block","src":"2454:44:6","statements":[{"expression":{"arguments":[{"id":194,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"2475:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":193,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[252,273],"referencedDeclaration":252,"src":"2464:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2464:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":196,"nodeType":"ExpressionStatement","src":"2464:16:6"},{"id":197,"nodeType":"PlaceholderStatement","src":"2490:1:6"}]},"documentation":{"id":189,"nodeType":"StructuredDocumentation","src":"2243:174:6","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":199,"name":"onlyRole","nameLocation":"2431:8:6","nodeType":"ModifierDefinition","parameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":191,"mutability":"mutable","name":"role","nameLocation":"2448:4:6","nodeType":"VariableDeclaration","scope":199,"src":"2440:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":190,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2440:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2439:14:6"},"src":"2422:76:6","virtual":false,"visibility":"internal"},{"baseFunctions":[4468],"body":{"id":220,"nodeType":"Block","src":"2656:111:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":208,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"2673:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":210,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"2693:14:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$537_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$537_$","typeString":"type(contract IAccessControl)"}],"id":209,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2688:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2688:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$537","typeString":"type(contract IAccessControl)"}},"id":212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2709:11:6","memberName":"interfaceId","nodeType":"MemberAccess","src":"2688:32:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2673:47:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":216,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"2748:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":214,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2724:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$454_$","typeString":"type(contract super AccessControl)"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2730:17:6","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4468,"src":"2724:23:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2724:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2673:87:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":207,"id":219,"nodeType":"Return","src":"2666:94:6"}]},"documentation":{"id":200,"nodeType":"StructuredDocumentation","src":"2504:56:6","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":221,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2574:17:6","nodeType":"FunctionDefinition","overrides":{"id":204,"nodeType":"OverrideSpecifier","overrides":[],"src":"2632:8:6"},"parameters":{"id":203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":202,"mutability":"mutable","name":"interfaceId","nameLocation":"2599:11:6","nodeType":"VariableDeclaration","scope":221,"src":"2592:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":201,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2592:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2591:20:6"},"returnParameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":221,"src":"2650:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":205,"name":"bool","nodeType":"ElementaryTypeName","src":"2650:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2649:6:6"},"scope":454,"src":"2565:202:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[504],"body":{"id":238,"nodeType":"Block","src":"2937:53:6","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":231,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"2954:6:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$180_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":233,"indexExpression":{"id":232,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"2961:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:12:6","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$180_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":234,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2967:7:6","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":177,"src":"2954:20:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":236,"indexExpression":{"id":235,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"2975:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:29:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":230,"id":237,"nodeType":"Return","src":"2947:36:6"}]},"documentation":{"id":222,"nodeType":"StructuredDocumentation","src":"2773:76:6","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":239,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2863:7:6","nodeType":"FunctionDefinition","parameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":224,"mutability":"mutable","name":"role","nameLocation":"2879:4:6","nodeType":"VariableDeclaration","scope":239,"src":"2871:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":223,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2871:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":226,"mutability":"mutable","name":"account","nameLocation":"2893:7:6","nodeType":"VariableDeclaration","scope":239,"src":"2885:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":225,"name":"address","nodeType":"ElementaryTypeName","src":"2885:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2870:31:6"},"returnParameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":239,"src":"2931:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":228,"name":"bool","nodeType":"ElementaryTypeName","src":"2931:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2930:6:6"},"scope":454,"src":"2854:136:6","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":251,"nodeType":"Block","src":"3255:47:6","statements":[{"expression":{"arguments":[{"id":246,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"3276:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":247,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"3282:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3282:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":245,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[252,273],"referencedDeclaration":273,"src":"3265:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":250,"nodeType":"ExpressionStatement","src":"3265:30:6"}]},"documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"2996:198:6","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":252,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3208:10:6","nodeType":"FunctionDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":242,"mutability":"mutable","name":"role","nameLocation":"3227:4:6","nodeType":"VariableDeclaration","scope":252,"src":"3219:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":241,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3219:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3218:14:6"},"returnParameters":{"id":244,"nodeType":"ParameterList","parameters":[],"src":"3255:0:6"},"scope":454,"src":"3199:103:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":272,"nodeType":"Block","src":"3505:124:6","statements":[{"condition":{"id":264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3519:23:6","subExpression":{"arguments":[{"id":261,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"3528:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":262,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"3534:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":260,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"3520:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3520:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":271,"nodeType":"IfStatement","src":"3515:108:6","trueBody":{"id":270,"nodeType":"Block","src":"3544:79:6","statements":[{"errorCall":{"arguments":[{"id":266,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"3598:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":267,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"3607:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":265,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"3565:32:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$","typeString":"function (address,bytes32) pure returns (error)"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3565:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":269,"nodeType":"RevertStatement","src":"3558:54:6"}]}}]},"documentation":{"id":253,"nodeType":"StructuredDocumentation","src":"3308:119:6","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":273,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3441:10:6","nodeType":"FunctionDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":255,"mutability":"mutable","name":"role","nameLocation":"3460:4:6","nodeType":"VariableDeclaration","scope":273,"src":"3452:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":254,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3452:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":257,"mutability":"mutable","name":"account","nameLocation":"3474:7:6","nodeType":"VariableDeclaration","scope":273,"src":"3466:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"3466:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3451:31:6"},"returnParameters":{"id":259,"nodeType":"ParameterList","parameters":[],"src":"3505:0:6"},"scope":454,"src":"3432:197:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[512],"body":{"id":286,"nodeType":"Block","src":"3884:46:6","statements":[{"expression":{"expression":{"baseExpression":{"id":281,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"3901:6:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$180_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":283,"indexExpression":{"id":282,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"3908:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:12:6","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$180_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":284,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3914:9:6","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":179,"src":"3901:22:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":280,"id":285,"nodeType":"Return","src":"3894:29:6"}]},"documentation":{"id":274,"nodeType":"StructuredDocumentation","src":"3635:170:6","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":287,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"3819:12:6","nodeType":"FunctionDefinition","parameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"role","nameLocation":"3840:4:6","nodeType":"VariableDeclaration","scope":287,"src":"3832:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":275,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3832:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3831:14:6"},"returnParameters":{"id":280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":287,"src":"3875:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":278,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3875:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3874:9:6"},"scope":454,"src":"3810:120:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[520],"body":{"id":305,"nodeType":"Block","src":"4320:42:6","statements":[{"expression":{"arguments":[{"id":301,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"4341:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":302,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"4347:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":300,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"4330:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4330:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":304,"nodeType":"ExpressionStatement","src":"4330:25:6"}]},"documentation":{"id":288,"nodeType":"StructuredDocumentation","src":"3936:285:6","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":306,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":296,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"4313:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":295,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"4300:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4300:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":298,"kind":"modifierInvocation","modifierName":{"id":294,"name":"onlyRole","nameLocations":["4291:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":199,"src":"4291:8:6"},"nodeType":"ModifierInvocation","src":"4291:28:6"}],"name":"grantRole","nameLocation":"4235:9:6","nodeType":"FunctionDefinition","parameters":{"id":293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":290,"mutability":"mutable","name":"role","nameLocation":"4253:4:6","nodeType":"VariableDeclaration","scope":306,"src":"4245:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":289,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4245:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":292,"mutability":"mutable","name":"account","nameLocation":"4267:7:6","nodeType":"VariableDeclaration","scope":306,"src":"4259:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":291,"name":"address","nodeType":"ElementaryTypeName","src":"4259:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4244:31:6"},"returnParameters":{"id":299,"nodeType":"ParameterList","parameters":[],"src":"4320:0:6"},"scope":454,"src":"4226:136:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[528],"body":{"id":324,"nodeType":"Block","src":"4737:43:6","statements":[{"expression":{"arguments":[{"id":320,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"4759:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":321,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":311,"src":"4765:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":319,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"4747:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4747:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":323,"nodeType":"ExpressionStatement","src":"4747:26:6"}]},"documentation":{"id":307,"nodeType":"StructuredDocumentation","src":"4368:269:6","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":325,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":315,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"4730:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":314,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"4717:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4717:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":317,"kind":"modifierInvocation","modifierName":{"id":313,"name":"onlyRole","nameLocations":["4708:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":199,"src":"4708:8:6"},"nodeType":"ModifierInvocation","src":"4708:28:6"}],"name":"revokeRole","nameLocation":"4651:10:6","nodeType":"FunctionDefinition","parameters":{"id":312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":309,"mutability":"mutable","name":"role","nameLocation":"4670:4:6","nodeType":"VariableDeclaration","scope":325,"src":"4662:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":308,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4662:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":311,"mutability":"mutable","name":"account","nameLocation":"4684:7:6","nodeType":"VariableDeclaration","scope":325,"src":"4676:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":310,"name":"address","nodeType":"ElementaryTypeName","src":"4676:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4661:31:6"},"returnParameters":{"id":318,"nodeType":"ParameterList","parameters":[],"src":"4737:0:6"},"scope":454,"src":"4642:138:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[536],"body":{"id":347,"nodeType":"Block","src":"5407:166:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":333,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"5421:18:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":334,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"5443:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5443:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5421:34:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":341,"nodeType":"IfStatement","src":"5417:102:6","trueBody":{"id":340,"nodeType":"Block","src":"5457:62:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":337,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"5478:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5478:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":339,"nodeType":"RevertStatement","src":"5471:37:6"}]}},{"expression":{"arguments":[{"id":343,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"5541:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":344,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"5547:18:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":342,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"5529:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":346,"nodeType":"ExpressionStatement","src":"5529:37:6"}]},"documentation":{"id":326,"nodeType":"StructuredDocumentation","src":"4786:537:6","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":348,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5337:12:6","nodeType":"FunctionDefinition","parameters":{"id":331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":328,"mutability":"mutable","name":"role","nameLocation":"5358:4:6","nodeType":"VariableDeclaration","scope":348,"src":"5350:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":327,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5350:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":330,"mutability":"mutable","name":"callerConfirmation","nameLocation":"5372:18:6","nodeType":"VariableDeclaration","scope":348,"src":"5364:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":329,"name":"address","nodeType":"ElementaryTypeName","src":"5364:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5349:42:6"},"returnParameters":{"id":332,"nodeType":"ParameterList","parameters":[],"src":"5407:0:6"},"scope":454,"src":"5328:245:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":375,"nodeType":"Block","src":"5771:174:6","statements":[{"assignments":[357],"declarations":[{"constant":false,"id":357,"mutability":"mutable","name":"previousAdminRole","nameLocation":"5789:17:6","nodeType":"VariableDeclaration","scope":375,"src":"5781:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":356,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5781:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":361,"initialValue":{"arguments":[{"id":359,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"5822:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":358,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"5809:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5809:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5781:46:6"},{"expression":{"id":367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":362,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"5837:6:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$180_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":364,"indexExpression":{"id":363,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"5844:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5837:12:6","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$180_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":365,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5850:9:6","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":179,"src":"5837:22:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":366,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":353,"src":"5862:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5837:34:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":368,"nodeType":"ExpressionStatement","src":"5837:34:6"},{"eventCall":{"arguments":[{"id":370,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"5903:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":371,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"5909:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":372,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":353,"src":"5928:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":369,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"5886:16:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5886:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":374,"nodeType":"EmitStatement","src":"5881:57:6"}]},"documentation":{"id":349,"nodeType":"StructuredDocumentation","src":"5579:114:6","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":376,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"5707:13:6","nodeType":"FunctionDefinition","parameters":{"id":354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":351,"mutability":"mutable","name":"role","nameLocation":"5729:4:6","nodeType":"VariableDeclaration","scope":376,"src":"5721:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5721:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":353,"mutability":"mutable","name":"adminRole","nameLocation":"5743:9:6","nodeType":"VariableDeclaration","scope":376,"src":"5735:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":352,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5735:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5720:33:6"},"returnParameters":{"id":355,"nodeType":"ParameterList","parameters":[],"src":"5771:0:6"},"scope":454,"src":"5698:247:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":414,"nodeType":"Block","src":"6262:233:6","statements":[{"condition":{"id":390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6276:23:6","subExpression":{"arguments":[{"id":387,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"6285:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":388,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"6291:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":386,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"6277:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6277:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":412,"nodeType":"Block","src":"6452:37:6","statements":[{"expression":{"hexValue":"66616c7365","id":410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6473:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":385,"id":411,"nodeType":"Return","src":"6466:12:6"}]},"id":413,"nodeType":"IfStatement","src":"6272:217:6","trueBody":{"id":409,"nodeType":"Block","src":"6301:145:6","statements":[{"expression":{"id":398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":391,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"6315:6:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$180_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":393,"indexExpression":{"id":392,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"6322:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6315:12:6","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$180_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":394,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6328:7:6","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":177,"src":"6315:20:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":396,"indexExpression":{"id":395,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"6336:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6315:29:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6347:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6315:36:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":399,"nodeType":"ExpressionStatement","src":"6315:36:6"},{"eventCall":{"arguments":[{"id":401,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"6382:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":402,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"6388:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":403,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"6397:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6397:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":400,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"6370:11:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6370:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":406,"nodeType":"EmitStatement","src":"6365:45:6"},{"expression":{"hexValue":"74727565","id":407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6431:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":385,"id":408,"nodeType":"Return","src":"6424:11:6"}]}}]},"documentation":{"id":377,"nodeType":"StructuredDocumentation","src":"5951:223:6","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":415,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"6188:10:6","nodeType":"FunctionDefinition","parameters":{"id":382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":379,"mutability":"mutable","name":"role","nameLocation":"6207:4:6","nodeType":"VariableDeclaration","scope":415,"src":"6199:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":378,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6199:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":381,"mutability":"mutable","name":"account","nameLocation":"6221:7:6","nodeType":"VariableDeclaration","scope":415,"src":"6213:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":380,"name":"address","nodeType":"ElementaryTypeName","src":"6213:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6198:31:6"},"returnParameters":{"id":385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":415,"src":"6256:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":383,"name":"bool","nodeType":"ElementaryTypeName","src":"6256:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6255:6:6"},"scope":454,"src":"6179:316:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":452,"nodeType":"Block","src":"6814:233:6","statements":[{"condition":{"arguments":[{"id":426,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"6836:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":427,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"6842:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":425,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"6828:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6828:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":450,"nodeType":"Block","src":"7004:37:6","statements":[{"expression":{"hexValue":"66616c7365","id":448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7025:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":424,"id":449,"nodeType":"Return","src":"7018:12:6"}]},"id":451,"nodeType":"IfStatement","src":"6824:217:6","trueBody":{"id":447,"nodeType":"Block","src":"6852:146:6","statements":[{"expression":{"id":436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":429,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"6866:6:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$180_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":431,"indexExpression":{"id":430,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"6873:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6866:12:6","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$180_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":432,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6879:7:6","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":177,"src":"6866:20:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":434,"indexExpression":{"id":433,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"6887:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6866:29:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6898:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6866:37:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":437,"nodeType":"ExpressionStatement","src":"6866:37:6"},{"eventCall":{"arguments":[{"id":439,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"6934:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":440,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"6940:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":441,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"6949:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6949:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":438,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"6922:11:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6922:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":444,"nodeType":"EmitStatement","src":"6917:45:6"},{"expression":{"hexValue":"74727565","id":445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6983:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":424,"id":446,"nodeType":"Return","src":"6976:11:6"}]}}]},"documentation":{"id":416,"nodeType":"StructuredDocumentation","src":"6501:224:6","text":" @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":453,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"6739:11:6","nodeType":"FunctionDefinition","parameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"role","nameLocation":"6759:4:6","nodeType":"VariableDeclaration","scope":453,"src":"6751:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":417,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6751:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":420,"mutability":"mutable","name":"account","nameLocation":"6773:7:6","nodeType":"VariableDeclaration","scope":453,"src":"6765:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":419,"name":"address","nodeType":"ElementaryTypeName","src":"6765:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6750:31:6"},"returnParameters":{"id":424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":453,"src":"6808:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":422,"name":"bool","nodeType":"ElementaryTypeName","src":"6808:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6807:6:6"},"scope":454,"src":"6730:317:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":455,"src":"1953:5096:6","usedErrors":[464,467],"usedEvents":[476,485,494]}],"src":"108:6942:6"},"id":6},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[537]},"id":538,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":456,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":457,"nodeType":"StructuredDocumentation","src":"135:90:7","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":537,"linearizedBaseContracts":[537],"name":"IAccessControl","nameLocation":"236:14:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":458,"nodeType":"StructuredDocumentation","src":"257:56:7","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":464,"name":"AccessControlUnauthorizedAccount","nameLocation":"324:32:7","nodeType":"ErrorDefinition","parameters":{"id":463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":460,"mutability":"mutable","name":"account","nameLocation":"365:7:7","nodeType":"VariableDeclaration","scope":464,"src":"357:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":459,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":462,"mutability":"mutable","name":"neededRole","nameLocation":"382:10:7","nodeType":"VariableDeclaration","scope":464,"src":"374:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":461,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"356:37:7"},"src":"318:76:7"},{"documentation":{"id":465,"nodeType":"StructuredDocumentation","src":"400:148:7","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":467,"name":"AccessControlBadConfirmation","nameLocation":"559:28:7","nodeType":"ErrorDefinition","parameters":{"id":466,"nodeType":"ParameterList","parameters":[],"src":"587:2:7"},"src":"553:37:7"},{"anonymous":false,"documentation":{"id":468,"nodeType":"StructuredDocumentation","src":"596:254:7","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":476,"name":"RoleAdminChanged","nameLocation":"861:16:7","nodeType":"EventDefinition","parameters":{"id":475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":470,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"894:4:7","nodeType":"VariableDeclaration","scope":476,"src":"878:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":469,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":472,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"916:17:7","nodeType":"VariableDeclaration","scope":476,"src":"900:33:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":471,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":474,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"951:12:7","nodeType":"VariableDeclaration","scope":476,"src":"935:28:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":473,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:87:7"},"src":"855:110:7"},{"anonymous":false,"documentation":{"id":477,"nodeType":"StructuredDocumentation","src":"971:295:7","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":485,"name":"RoleGranted","nameLocation":"1277:11:7","nodeType":"EventDefinition","parameters":{"id":484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":479,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1305:4:7","nodeType":"VariableDeclaration","scope":485,"src":"1289:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":478,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":481,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1327:7:7","nodeType":"VariableDeclaration","scope":485,"src":"1311:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":480,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":483,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1352:6:7","nodeType":"VariableDeclaration","scope":485,"src":"1336:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:71:7"},"src":"1271:89:7"},{"anonymous":false,"documentation":{"id":486,"nodeType":"StructuredDocumentation","src":"1366:275:7","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":494,"name":"RoleRevoked","nameLocation":"1652:11:7","nodeType":"EventDefinition","parameters":{"id":493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":488,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1680:4:7","nodeType":"VariableDeclaration","scope":494,"src":"1664:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":487,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1664:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":490,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1702:7:7","nodeType":"VariableDeclaration","scope":494,"src":"1686:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":489,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":492,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1727:6:7","nodeType":"VariableDeclaration","scope":494,"src":"1711:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":491,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:71:7"},"src":"1646:89:7"},{"documentation":{"id":495,"nodeType":"StructuredDocumentation","src":"1741:76:7","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":504,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1831:7:7","nodeType":"FunctionDefinition","parameters":{"id":500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":497,"mutability":"mutable","name":"role","nameLocation":"1847:4:7","nodeType":"VariableDeclaration","scope":504,"src":"1839:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":496,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1839:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":499,"mutability":"mutable","name":"account","nameLocation":"1861:7:7","nodeType":"VariableDeclaration","scope":504,"src":"1853:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":498,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:31:7"},"returnParameters":{"id":503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":502,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":504,"src":"1893:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":501,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:7"},"scope":537,"src":"1822:77:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":505,"nodeType":"StructuredDocumentation","src":"1905:184:7","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":512,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2103:12:7","nodeType":"FunctionDefinition","parameters":{"id":508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":507,"mutability":"mutable","name":"role","nameLocation":"2124:4:7","nodeType":"VariableDeclaration","scope":512,"src":"2116:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":506,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2116:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2115:14:7"},"returnParameters":{"id":511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":512,"src":"2153:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":509,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2152:9:7"},"scope":537,"src":"2094:68:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":513,"nodeType":"StructuredDocumentation","src":"2168:239:7","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":520,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2421:9:7","nodeType":"FunctionDefinition","parameters":{"id":518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":515,"mutability":"mutable","name":"role","nameLocation":"2439:4:7","nodeType":"VariableDeclaration","scope":520,"src":"2431:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":514,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2431:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":517,"mutability":"mutable","name":"account","nameLocation":"2453:7:7","nodeType":"VariableDeclaration","scope":520,"src":"2445:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":516,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:31:7"},"returnParameters":{"id":519,"nodeType":"ParameterList","parameters":[],"src":"2470:0:7"},"scope":537,"src":"2412:59:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"2477:223:7","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":528,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2714:10:7","nodeType":"FunctionDefinition","parameters":{"id":526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":523,"mutability":"mutable","name":"role","nameLocation":"2733:4:7","nodeType":"VariableDeclaration","scope":528,"src":"2725:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":522,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":525,"mutability":"mutable","name":"account","nameLocation":"2747:7:7","nodeType":"VariableDeclaration","scope":528,"src":"2739:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:31:7"},"returnParameters":{"id":527,"nodeType":"ParameterList","parameters":[],"src":"2764:0:7"},"scope":537,"src":"2705:60:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":529,"nodeType":"StructuredDocumentation","src":"2771:491:7","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":536,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3276:12:7","nodeType":"FunctionDefinition","parameters":{"id":534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":531,"mutability":"mutable","name":"role","nameLocation":"3297:4:7","nodeType":"VariableDeclaration","scope":536,"src":"3289:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":530,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":533,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3311:18:7","nodeType":"VariableDeclaration","scope":536,"src":"3303:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":532,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3288:42:7"},"returnParameters":{"id":535,"nodeType":"ParameterList","parameters":[],"src":"3339:0:7"},"scope":537,"src":"3267:73:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":538,"src":"226:3116:7","usedErrors":[464,467],"usedEvents":[476,485,494]}],"src":"109:3234:7"},"id":7},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[3633],"Ownable":[685]},"id":686,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":539,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":541,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":686,"sourceUnit":3634,"src":"128:45:8","symbolAliases":[{"foreign":{"id":540,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"136:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":543,"name":"Context","nameLocations":["692:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":3633,"src":"692:7:8"},"id":544,"nodeType":"InheritanceSpecifier","src":"692:7:8"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":542,"nodeType":"StructuredDocumentation","src":"175:487:8","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":685,"linearizedBaseContracts":[685,3633],"name":"Ownable","nameLocation":"681:7:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":546,"mutability":"mutable","name":"_owner","nameLocation":"722:6:8","nodeType":"VariableDeclaration","scope":685,"src":"706:22:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":545,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":547,"nodeType":"StructuredDocumentation","src":"735:85:8","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":551,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:8","nodeType":"ErrorDefinition","parameters":{"id":550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":549,"mutability":"mutable","name":"account","nameLocation":"866:7:8","nodeType":"VariableDeclaration","scope":551,"src":"858:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":548,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:8"},"src":"825:50:8"},{"documentation":{"id":552,"nodeType":"StructuredDocumentation","src":"881:82:8","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":556,"name":"OwnableInvalidOwner","nameLocation":"974:19:8","nodeType":"ErrorDefinition","parameters":{"id":555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":554,"mutability":"mutable","name":"owner","nameLocation":"1002:5:8","nodeType":"VariableDeclaration","scope":556,"src":"994:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":553,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:8"},"src":"968:41:8"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":562,"name":"OwnershipTransferred","nameLocation":"1021:20:8","nodeType":"EventDefinition","parameters":{"id":561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":558,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:8","nodeType":"VariableDeclaration","scope":562,"src":"1042:29:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":557,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":560,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:8","nodeType":"VariableDeclaration","scope":562,"src":"1073:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":559,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:8"},"src":"1015:84:8"},{"body":{"id":587,"nodeType":"Block","src":"1259:153:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":568,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"1273:12:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":569,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:8","typeDescriptions":{}}},"id":572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":582,"nodeType":"IfStatement","src":"1269:95:8","trueBody":{"id":581,"nodeType":"Block","src":"1301:63:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":575,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:8","typeDescriptions":{}}},"id":578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":574,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"1322:19:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":580,"nodeType":"RevertStatement","src":"1315:38:8"}]}},{"expression":{"arguments":[{"id":584,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"1392:12:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":583,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"1373:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":586,"nodeType":"ExpressionStatement","src":"1373:32:8"}]},"documentation":{"id":563,"nodeType":"StructuredDocumentation","src":"1105:115:8","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":588,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":565,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:8","nodeType":"VariableDeclaration","scope":588,"src":"1237:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":564,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:8"},"returnParameters":{"id":567,"nodeType":"ParameterList","parameters":[],"src":"1259:0:8"},"scope":685,"src":"1225:187:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":595,"nodeType":"Block","src":"1521:41:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":591,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"1531:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":593,"nodeType":"ExpressionStatement","src":"1531:13:8"},{"id":594,"nodeType":"PlaceholderStatement","src":"1554:1:8"}]},"documentation":{"id":589,"nodeType":"StructuredDocumentation","src":"1418:77:8","text":" @dev Throws if called by any account other than the owner."},"id":596,"name":"onlyOwner","nameLocation":"1509:9:8","nodeType":"ModifierDefinition","parameters":{"id":590,"nodeType":"ParameterList","parameters":[],"src":"1518:2:8"},"src":"1500:62:8","virtual":false,"visibility":"internal"},{"body":{"id":604,"nodeType":"Block","src":"1693:30:8","statements":[{"expression":{"id":602,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"1710:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":601,"id":603,"nodeType":"Return","src":"1703:13:8"}]},"documentation":{"id":597,"nodeType":"StructuredDocumentation","src":"1568:65:8","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":605,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:8","nodeType":"FunctionDefinition","parameters":{"id":598,"nodeType":"ParameterList","parameters":[],"src":"1652:2:8"},"returnParameters":{"id":601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":605,"src":"1684:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":599,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:8"},"scope":685,"src":"1638:85:8","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":621,"nodeType":"Block","src":"1841:117:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":609,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"1855:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":611,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"1866:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":620,"nodeType":"IfStatement","src":"1851:101:8","trueBody":{"id":619,"nodeType":"Block","src":"1880:72:8","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":615,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"1928:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":614,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"1901:26:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":618,"nodeType":"RevertStatement","src":"1894:47:8"}]}}]},"documentation":{"id":606,"nodeType":"StructuredDocumentation","src":"1729:62:8","text":" @dev Throws if the sender is not the owner."},"id":622,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:8","nodeType":"FunctionDefinition","parameters":{"id":607,"nodeType":"ParameterList","parameters":[],"src":"1816:2:8"},"returnParameters":{"id":608,"nodeType":"ParameterList","parameters":[],"src":"1841:0:8"},"scope":685,"src":"1796:162:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":635,"nodeType":"Block","src":"2347:47:8","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":629,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:8","typeDescriptions":{}}},"id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":628,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"2357:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":634,"nodeType":"ExpressionStatement","src":"2357:30:8"}]},"documentation":{"id":623,"nodeType":"StructuredDocumentation","src":"1964:324:8","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":636,"implemented":true,"kind":"function","modifiers":[{"id":626,"kind":"modifierInvocation","modifierName":{"id":625,"name":"onlyOwner","nameLocations":["2337:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":596,"src":"2337:9:8"},"nodeType":"ModifierInvocation","src":"2337:9:8"}],"name":"renounceOwnership","nameLocation":"2302:17:8","nodeType":"FunctionDefinition","parameters":{"id":624,"nodeType":"ParameterList","parameters":[],"src":"2319:2:8"},"returnParameters":{"id":627,"nodeType":"ParameterList","parameters":[],"src":"2347:0:8"},"scope":685,"src":"2293:101:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":663,"nodeType":"Block","src":"2613:145:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":644,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"2627:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":645,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:8","typeDescriptions":{}}},"id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":658,"nodeType":"IfStatement","src":"2623:91:8","trueBody":{"id":657,"nodeType":"Block","src":"2651:63:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":651,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:8","typeDescriptions":{}}},"id":654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":650,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"2672:19:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":656,"nodeType":"RevertStatement","src":"2665:38:8"}]}},{"expression":{"arguments":[{"id":660,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"2742:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":659,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"2723:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":662,"nodeType":"ExpressionStatement","src":"2723:28:8"}]},"documentation":{"id":637,"nodeType":"StructuredDocumentation","src":"2400:138:8","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":664,"implemented":true,"kind":"function","modifiers":[{"id":642,"kind":"modifierInvocation","modifierName":{"id":641,"name":"onlyOwner","nameLocations":["2603:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":596,"src":"2603:9:8"},"nodeType":"ModifierInvocation","src":"2603:9:8"}],"name":"transferOwnership","nameLocation":"2552:17:8","nodeType":"FunctionDefinition","parameters":{"id":640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":639,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:8","nodeType":"VariableDeclaration","scope":664,"src":"2570:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":638,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:8"},"returnParameters":{"id":643,"nodeType":"ParameterList","parameters":[],"src":"2613:0:8"},"scope":685,"src":"2543:215:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":683,"nodeType":"Block","src":"2975:124:8","statements":[{"assignments":[671],"declarations":[{"constant":false,"id":671,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:8","nodeType":"VariableDeclaration","scope":683,"src":"2985:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":670,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":673,"initialValue":{"id":672,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"3004:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:8"},{"expression":{"id":676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":674,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"3020:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":675,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"3029:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":677,"nodeType":"ExpressionStatement","src":"3020:17:8"},{"eventCall":{"arguments":[{"id":679,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"3073:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":680,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"3083:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":678,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"3052:20:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":682,"nodeType":"EmitStatement","src":"3047:45:8"}]},"documentation":{"id":665,"nodeType":"StructuredDocumentation","src":"2764:143:8","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":684,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:8","nodeType":"FunctionDefinition","parameters":{"id":668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":667,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:8","nodeType":"VariableDeclaration","scope":684,"src":"2940:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":666,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:8"},"returnParameters":{"id":669,"nodeType":"ParameterList","parameters":[],"src":"2975:0:8"},"scope":685,"src":"2912:187:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":686,"src":"663:2438:8","usedErrors":[551,556],"usedEvents":[562]}],"src":"102:3000:8"},"id":8},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[822],"IERC20Errors":[727],"IERC721Errors":[775]},"id":823,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":687,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":688,"nodeType":"StructuredDocumentation","src":"138:141:9","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":727,"linearizedBaseContracts":[727],"name":"IERC20Errors","nameLocation":"290:12:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":689,"nodeType":"StructuredDocumentation","src":"309:309:9","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":697,"name":"ERC20InsufficientBalance","nameLocation":"629:24:9","nodeType":"ErrorDefinition","parameters":{"id":696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":691,"mutability":"mutable","name":"sender","nameLocation":"662:6:9","nodeType":"VariableDeclaration","scope":697,"src":"654:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":690,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":693,"mutability":"mutable","name":"balance","nameLocation":"678:7:9","nodeType":"VariableDeclaration","scope":697,"src":"670:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":692,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":695,"mutability":"mutable","name":"needed","nameLocation":"695:6:9","nodeType":"VariableDeclaration","scope":697,"src":"687:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":694,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:9"},"src":"623:80:9"},{"documentation":{"id":698,"nodeType":"StructuredDocumentation","src":"709:152:9","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":702,"name":"ERC20InvalidSender","nameLocation":"872:18:9","nodeType":"ErrorDefinition","parameters":{"id":701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"mutability":"mutable","name":"sender","nameLocation":"899:6:9","nodeType":"VariableDeclaration","scope":702,"src":"891:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":699,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:9"},"src":"866:41:9"},{"documentation":{"id":703,"nodeType":"StructuredDocumentation","src":"913:159:9","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":707,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:9","nodeType":"ErrorDefinition","parameters":{"id":706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":705,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:9","nodeType":"VariableDeclaration","scope":707,"src":"1104:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":704,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:9"},"src":"1077:45:9"},{"documentation":{"id":708,"nodeType":"StructuredDocumentation","src":"1128:345:9","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":716,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:9","nodeType":"ErrorDefinition","parameters":{"id":715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":710,"mutability":"mutable","name":"spender","nameLocation":"1519:7:9","nodeType":"VariableDeclaration","scope":716,"src":"1511:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":712,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:9","nodeType":"VariableDeclaration","scope":716,"src":"1528:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":711,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":714,"mutability":"mutable","name":"needed","nameLocation":"1555:6:9","nodeType":"VariableDeclaration","scope":716,"src":"1547:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":713,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:9"},"src":"1478:85:9"},{"documentation":{"id":717,"nodeType":"StructuredDocumentation","src":"1569:174:9","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":721,"name":"ERC20InvalidApprover","nameLocation":"1754:20:9","nodeType":"ErrorDefinition","parameters":{"id":720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":719,"mutability":"mutable","name":"approver","nameLocation":"1783:8:9","nodeType":"VariableDeclaration","scope":721,"src":"1775:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":718,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:9"},"src":"1748:45:9"},{"documentation":{"id":722,"nodeType":"StructuredDocumentation","src":"1799:195:9","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":726,"name":"ERC20InvalidSpender","nameLocation":"2005:19:9","nodeType":"ErrorDefinition","parameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"mutability":"mutable","name":"spender","nameLocation":"2033:7:9","nodeType":"VariableDeclaration","scope":726,"src":"2025:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":723,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:9"},"src":"1999:43:9"}],"scope":823,"src":"280:1764:9","usedErrors":[697,702,707,716,721,726],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":728,"nodeType":"StructuredDocumentation","src":"2046:143:9","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":775,"linearizedBaseContracts":[775],"name":"IERC721Errors","nameLocation":"2200:13:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":729,"nodeType":"StructuredDocumentation","src":"2220:219:9","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":733,"name":"ERC721InvalidOwner","nameLocation":"2450:18:9","nodeType":"ErrorDefinition","parameters":{"id":732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":731,"mutability":"mutable","name":"owner","nameLocation":"2477:5:9","nodeType":"VariableDeclaration","scope":733,"src":"2469:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":730,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:9"},"src":"2444:40:9"},{"documentation":{"id":734,"nodeType":"StructuredDocumentation","src":"2490:132:9","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":738,"name":"ERC721NonexistentToken","nameLocation":"2633:22:9","nodeType":"ErrorDefinition","parameters":{"id":737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":736,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:9","nodeType":"VariableDeclaration","scope":738,"src":"2656:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":735,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:9"},"src":"2627:46:9"},{"documentation":{"id":739,"nodeType":"StructuredDocumentation","src":"2679:289:9","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":747,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:9","nodeType":"ErrorDefinition","parameters":{"id":746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":741,"mutability":"mutable","name":"sender","nameLocation":"3008:6:9","nodeType":"VariableDeclaration","scope":747,"src":"3000:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":740,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":743,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:9","nodeType":"VariableDeclaration","scope":747,"src":"3016:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":742,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":745,"mutability":"mutable","name":"owner","nameLocation":"3041:5:9","nodeType":"VariableDeclaration","scope":747,"src":"3033:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":744,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:9"},"src":"2973:75:9"},{"documentation":{"id":748,"nodeType":"StructuredDocumentation","src":"3054:152:9","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":752,"name":"ERC721InvalidSender","nameLocation":"3217:19:9","nodeType":"ErrorDefinition","parameters":{"id":751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":750,"mutability":"mutable","name":"sender","nameLocation":"3245:6:9","nodeType":"VariableDeclaration","scope":752,"src":"3237:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":749,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:9"},"src":"3211:42:9"},{"documentation":{"id":753,"nodeType":"StructuredDocumentation","src":"3259:159:9","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":757,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:9","nodeType":"ErrorDefinition","parameters":{"id":756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:9","nodeType":"VariableDeclaration","scope":757,"src":"3451:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:9"},"src":"3423:46:9"},{"documentation":{"id":758,"nodeType":"StructuredDocumentation","src":"3475:247:9","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":764,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:9","nodeType":"ErrorDefinition","parameters":{"id":763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":760,"mutability":"mutable","name":"operator","nameLocation":"3768:8:9","nodeType":"VariableDeclaration","scope":764,"src":"3760:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":759,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":762,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:9","nodeType":"VariableDeclaration","scope":764,"src":"3778:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":761,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:9"},"src":"3727:68:9"},{"documentation":{"id":765,"nodeType":"StructuredDocumentation","src":"3801:174:9","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":769,"name":"ERC721InvalidApprover","nameLocation":"3986:21:9","nodeType":"ErrorDefinition","parameters":{"id":768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":767,"mutability":"mutable","name":"approver","nameLocation":"4016:8:9","nodeType":"VariableDeclaration","scope":769,"src":"4008:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":766,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:9"},"src":"3980:46:9"},{"documentation":{"id":770,"nodeType":"StructuredDocumentation","src":"4032:197:9","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":774,"name":"ERC721InvalidOperator","nameLocation":"4240:21:9","nodeType":"ErrorDefinition","parameters":{"id":773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":772,"mutability":"mutable","name":"operator","nameLocation":"4270:8:9","nodeType":"VariableDeclaration","scope":774,"src":"4262:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":771,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:9"},"src":"4234:46:9"}],"scope":823,"src":"2190:2092:9","usedErrors":[733,738,747,752,757,764,769,774],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":776,"nodeType":"StructuredDocumentation","src":"4284:145:9","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":822,"linearizedBaseContracts":[822],"name":"IERC1155Errors","nameLocation":"4440:14:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":777,"nodeType":"StructuredDocumentation","src":"4461:361:9","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":787,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:9","nodeType":"ErrorDefinition","parameters":{"id":786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":779,"mutability":"mutable","name":"sender","nameLocation":"4868:6:9","nodeType":"VariableDeclaration","scope":787,"src":"4860:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":778,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":781,"mutability":"mutable","name":"balance","nameLocation":"4884:7:9","nodeType":"VariableDeclaration","scope":787,"src":"4876:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":780,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":783,"mutability":"mutable","name":"needed","nameLocation":"4901:6:9","nodeType":"VariableDeclaration","scope":787,"src":"4893:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":782,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":785,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:9","nodeType":"VariableDeclaration","scope":787,"src":"4909:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":784,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:9"},"src":"4827:99:9"},{"documentation":{"id":788,"nodeType":"StructuredDocumentation","src":"4932:152:9","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":792,"name":"ERC1155InvalidSender","nameLocation":"5095:20:9","nodeType":"ErrorDefinition","parameters":{"id":791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":790,"mutability":"mutable","name":"sender","nameLocation":"5124:6:9","nodeType":"VariableDeclaration","scope":792,"src":"5116:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":789,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:9"},"src":"5089:43:9"},{"documentation":{"id":793,"nodeType":"StructuredDocumentation","src":"5138:159:9","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":797,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:9","nodeType":"ErrorDefinition","parameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":795,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:9","nodeType":"VariableDeclaration","scope":797,"src":"5331:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":794,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:9"},"src":"5302:47:9"},{"documentation":{"id":798,"nodeType":"StructuredDocumentation","src":"5355:256:9","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":804,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:9","nodeType":"ErrorDefinition","parameters":{"id":803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":800,"mutability":"mutable","name":"operator","nameLocation":"5659:8:9","nodeType":"VariableDeclaration","scope":804,"src":"5651:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":799,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":802,"mutability":"mutable","name":"owner","nameLocation":"5677:5:9","nodeType":"VariableDeclaration","scope":804,"src":"5669:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":801,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:9"},"src":"5616:68:9"},{"documentation":{"id":805,"nodeType":"StructuredDocumentation","src":"5690:174:9","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":809,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:9","nodeType":"ErrorDefinition","parameters":{"id":808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":807,"mutability":"mutable","name":"approver","nameLocation":"5906:8:9","nodeType":"VariableDeclaration","scope":809,"src":"5898:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":806,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:9"},"src":"5869:47:9"},{"documentation":{"id":810,"nodeType":"StructuredDocumentation","src":"5922:197:9","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":814,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:9","nodeType":"ErrorDefinition","parameters":{"id":813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":812,"mutability":"mutable","name":"operator","nameLocation":"6161:8:9","nodeType":"VariableDeclaration","scope":814,"src":"6153:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":811,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:9"},"src":"6124:47:9"},{"documentation":{"id":815,"nodeType":"StructuredDocumentation","src":"6177:280:9","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":821,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:9","nodeType":"ErrorDefinition","parameters":{"id":820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":817,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:9","nodeType":"VariableDeclaration","scope":821,"src":"6494:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":816,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":819,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:9","nodeType":"VariableDeclaration","scope":821,"src":"6513:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":818,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:9"},"src":"6462:73:9"}],"scope":823,"src":"4430:2107:9","usedErrors":[787,792,797,804,809,814,821],"usedEvents":[]}],"src":"112:6426:9"},"id":9},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","exportedSymbols":{"Arrays":[3571],"Context":[3633],"ERC1155":[1739],"ERC1155Utils":[2074],"ERC165":[4469],"IERC1155":[1862],"IERC1155Errors":[822],"IERC1155MetadataURI":[1920],"IERC165":[4481]},"id":1740,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":824,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"./IERC1155.sol","id":826,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1740,"sourceUnit":1863,"src":"135:40:10","symbolAliases":[{"foreign":{"id":825,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"143:8:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","file":"./extensions/IERC1155MetadataURI.sol","id":828,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1740,"sourceUnit":1921,"src":"176:73:10","symbolAliases":[{"foreign":{"id":827,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"184:19:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","file":"./utils/ERC1155Utils.sol","id":830,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1740,"sourceUnit":2075,"src":"250:54:10","symbolAliases":[{"foreign":{"id":829,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"258:12:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":832,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1740,"sourceUnit":3634,"src":"305:48:10","symbolAliases":[{"foreign":{"id":831,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"313:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":835,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1740,"sourceUnit":4470,"src":"354:69:10","symbolAliases":[{"foreign":{"id":833,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"362:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":834,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4469,"src":"371:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","file":"../../utils/Arrays.sol","id":837,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1740,"sourceUnit":3572,"src":"424:46:10","symbolAliases":[{"foreign":{"id":836,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"432:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":839,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1740,"sourceUnit":823,"src":"471:67:10","symbolAliases":[{"foreign":{"id":838,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"479:14:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":841,"name":"Context","nameLocations":["754:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":3633,"src":"754:7:10"},"id":842,"nodeType":"InheritanceSpecifier","src":"754:7:10"},{"baseName":{"id":843,"name":"ERC165","nameLocations":["763:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":4469,"src":"763:6:10"},"id":844,"nodeType":"InheritanceSpecifier","src":"763:6:10"},{"baseName":{"id":845,"name":"IERC1155","nameLocations":["771:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1862,"src":"771:8:10"},"id":846,"nodeType":"InheritanceSpecifier","src":"771:8:10"},{"baseName":{"id":847,"name":"IERC1155MetadataURI","nameLocations":["781:19:10"],"nodeType":"IdentifierPath","referencedDeclaration":1920,"src":"781:19:10"},"id":848,"nodeType":"InheritanceSpecifier","src":"781:19:10"},{"baseName":{"id":849,"name":"IERC1155Errors","nameLocations":["802:14:10"],"nodeType":"IdentifierPath","referencedDeclaration":822,"src":"802:14:10"},"id":850,"nodeType":"InheritanceSpecifier","src":"802:14:10"}],"canonicalName":"ERC1155","contractDependencies":[],"contractKind":"contract","documentation":{"id":840,"nodeType":"StructuredDocumentation","src":"540:184:10","text":" @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"},"fullyImplemented":true,"id":1739,"linearizedBaseContracts":[1739,822,1920,1862,4469,4481,3633],"name":"ERC1155","nameLocation":"743:7:10","nodeType":"ContractDefinition","nodes":[{"global":false,"id":854,"libraryName":{"id":851,"name":"Arrays","nameLocations":["829:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":3571,"src":"829:6:10"},"nodeType":"UsingForDirective","src":"823:27:10","typeName":{"baseType":{"id":852,"name":"uint256","nodeType":"ElementaryTypeName","src":"840:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":853,"nodeType":"ArrayTypeName","src":"840:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},{"global":false,"id":858,"libraryName":{"id":855,"name":"Arrays","nameLocations":["861:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":3571,"src":"861:6:10"},"nodeType":"UsingForDirective","src":"855:27:10","typeName":{"baseType":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"872:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":857,"nodeType":"ArrayTypeName","src":"872:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},{"constant":false,"id":864,"mutability":"mutable","name":"_balances","nameLocation":"955:9:10","nodeType":"VariableDeclaration","scope":1739,"src":"888:76:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":863,"keyName":"id","keyNameLocation":"904:2:10","keyType":{"id":859,"name":"uint256","nodeType":"ElementaryTypeName","src":"896:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"888:58:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":862,"keyName":"account","keyNameLocation":"926:7:10","keyType":{"id":860,"name":"address","nodeType":"ElementaryTypeName","src":"918:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"910:35:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":861,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":870,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1041:18:10","nodeType":"VariableDeclaration","scope":1739,"src":"971:88:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":869,"keyName":"account","keyNameLocation":"987:7:10","keyType":{"id":865,"name":"address","nodeType":"ElementaryTypeName","src":"979:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"971:61:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":868,"keyName":"operator","keyNameLocation":"1014:8:10","keyType":{"id":866,"name":"address","nodeType":"ElementaryTypeName","src":"1006:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"998:33:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":867,"name":"bool","nodeType":"ElementaryTypeName","src":"1026:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":872,"mutability":"mutable","name":"_uri","nameLocation":"1195:4:10","nodeType":"VariableDeclaration","scope":1739,"src":"1180:19:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":871,"name":"string","nodeType":"ElementaryTypeName","src":"1180:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":882,"nodeType":"Block","src":"1281:30:10","statements":[{"expression":{"arguments":[{"id":879,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"1299:4:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":878,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"1291:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1291:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":881,"nodeType":"ExpressionStatement","src":"1291:13:10"}]},"documentation":{"id":873,"nodeType":"StructuredDocumentation","src":"1206:38:10","text":" @dev See {_setURI}."},"id":883,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":875,"mutability":"mutable","name":"uri_","nameLocation":"1275:4:10","nodeType":"VariableDeclaration","scope":883,"src":"1261:18:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":874,"name":"string","nodeType":"ElementaryTypeName","src":"1261:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1260:20:10"},"returnParameters":{"id":877,"nodeType":"ParameterList","parameters":[],"src":"1281:0:10"},"scope":1739,"src":"1249:62:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[4468,4480],"body":{"id":913,"nodeType":"Block","src":"1486:197:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":894,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"1515:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":896,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"1535:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1862_$","typeString":"type(contract IERC1155)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1862_$","typeString":"type(contract IERC1155)"}],"id":895,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1530:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1530:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155_$1862","typeString":"type(contract IERC1155)"}},"id":898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1545:11:10","memberName":"interfaceId","nodeType":"MemberAccess","src":"1530:26:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1515:41:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":900,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"1572:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":902,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"1592:19:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1920_$","typeString":"type(contract IERC1155MetadataURI)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1920_$","typeString":"type(contract IERC1155MetadataURI)"}],"id":901,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1587:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1587:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1920","typeString":"type(contract IERC1155MetadataURI)"}},"id":904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1613:11:10","memberName":"interfaceId","nodeType":"MemberAccess","src":"1587:37:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1572:52:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1515:109:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":909,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"1664:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":907,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1640:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155_$1739_$","typeString":"type(contract super ERC1155)"}},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1646:17:10","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4468,"src":"1640:23:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1640:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1515:161:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":893,"id":912,"nodeType":"Return","src":"1496:180:10"}]},"documentation":{"id":884,"nodeType":"StructuredDocumentation","src":"1317:56:10","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":914,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1387:17:10","nodeType":"FunctionDefinition","overrides":{"id":890,"nodeType":"OverrideSpecifier","overrides":[{"id":888,"name":"ERC165","nameLocations":["1454:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":4469,"src":"1454:6:10"},{"id":889,"name":"IERC165","nameLocations":["1462:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":4481,"src":"1462:7:10"}],"src":"1445:25:10"},"parameters":{"id":887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":886,"mutability":"mutable","name":"interfaceId","nameLocation":"1412:11:10","nodeType":"VariableDeclaration","scope":914,"src":"1405:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":885,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1405:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1404:20:10"},"returnParameters":{"id":893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":914,"src":"1480:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":891,"name":"bool","nodeType":"ElementaryTypeName","src":"1480:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1479:6:10"},"scope":1739,"src":"1378:305:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1919],"body":{"id":924,"nodeType":"Block","src":"2157:28:10","statements":[{"expression":{"id":922,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"2174:4:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":921,"id":923,"nodeType":"Return","src":"2167:11:10"}]},"documentation":{"id":915,"nodeType":"StructuredDocumentation","src":"1689:388:10","text":" @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."},"functionSelector":"0e89341c","id":925,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"2091:3:10","nodeType":"FunctionDefinition","parameters":{"id":918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":925,"src":"2095:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":916,"name":"uint256","nodeType":"ElementaryTypeName","src":"2095:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2094:18:10"},"returnParameters":{"id":921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":920,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":925,"src":"2142:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":919,"name":"string","nodeType":"ElementaryTypeName","src":"2142:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2141:15:10"},"scope":1739,"src":"2082:103:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1800],"body":{"id":941,"nodeType":"Block","src":"2331:46:10","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":935,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"2348:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":937,"indexExpression":{"id":936,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"2358:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2348:13:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":939,"indexExpression":{"id":938,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"2362:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2348:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":934,"id":940,"nodeType":"Return","src":"2341:29:10"}]},"documentation":{"id":926,"nodeType":"StructuredDocumentation","src":"2191:49:10","text":" @dev See {IERC1155-balanceOf}."},"functionSelector":"00fdd58e","id":942,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2254:9:10","nodeType":"FunctionDefinition","parameters":{"id":931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":928,"mutability":"mutable","name":"account","nameLocation":"2272:7:10","nodeType":"VariableDeclaration","scope":942,"src":"2264:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":927,"name":"address","nodeType":"ElementaryTypeName","src":"2264:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":930,"mutability":"mutable","name":"id","nameLocation":"2289:2:10","nodeType":"VariableDeclaration","scope":942,"src":"2281:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":929,"name":"uint256","nodeType":"ElementaryTypeName","src":"2281:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2263:29:10"},"returnParameters":{"id":934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":933,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":942,"src":"2322:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":932,"name":"uint256","nodeType":"ElementaryTypeName","src":"2322:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2321:9:10"},"scope":1739,"src":"2245:132:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1813],"body":{"id":1011,"nodeType":"Block","src":"2676:410:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":955,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"2690:8:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2699:6:10","memberName":"length","nodeType":"MemberAccess","src":"2690:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":957,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"2709:3:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2713:6:10","memberName":"length","nodeType":"MemberAccess","src":"2709:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2690:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":968,"nodeType":"IfStatement","src":"2686:121:10","trueBody":{"id":967,"nodeType":"Block","src":"2721:86:10","statements":[{"errorCall":{"arguments":[{"expression":{"id":961,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"2768:3:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2772:6:10","memberName":"length","nodeType":"MemberAccess","src":"2768:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":963,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"2780:8:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2789:6:10","memberName":"length","nodeType":"MemberAccess","src":"2780:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":960,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"2742:25:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2742:54:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":966,"nodeType":"RevertStatement","src":"2735:61:10"}]}},{"assignments":[973],"declarations":[{"constant":false,"id":973,"mutability":"mutable","name":"batchBalances","nameLocation":"2834:13:10","nodeType":"VariableDeclaration","scope":1011,"src":"2817:30:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":971,"name":"uint256","nodeType":"ElementaryTypeName","src":"2817:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":972,"nodeType":"ArrayTypeName","src":"2817:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":980,"initialValue":{"arguments":[{"expression":{"id":977,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"2864:8:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2873:6:10","memberName":"length","nodeType":"MemberAccess","src":"2864:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2850:13:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":974,"name":"uint256","nodeType":"ElementaryTypeName","src":"2854:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":975,"nodeType":"ArrayTypeName","src":"2854:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2850:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2817:63:10"},{"body":{"id":1007,"nodeType":"Block","src":"2937:112:10","statements":[{"expression":{"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":992,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"2951:13:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":994,"indexExpression":{"id":993,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"2965:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2951:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":998,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"3008:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":996,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"2980:8:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2989:18:10","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3511,"src":"2980:27:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address[] memory,uint256) pure returns (address)"}},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2980:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1002,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"3035:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1000,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"3012:3:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3016:18:10","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3537,"src":"3012:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3012:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":995,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"2970:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2970:68:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2951:87:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1006,"nodeType":"ExpressionStatement","src":"2951:87:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":985,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"2911:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":986,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"2915:8:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2924:6:10","memberName":"length","nodeType":"MemberAccess","src":"2915:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2911:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1008,"initializationExpression":{"assignments":[982],"declarations":[{"constant":false,"id":982,"mutability":"mutable","name":"i","nameLocation":"2904:1:10","nodeType":"VariableDeclaration","scope":1008,"src":"2896:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":981,"name":"uint256","nodeType":"ElementaryTypeName","src":"2896:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":984,"initialValue":{"hexValue":"30","id":983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2908:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2896:13:10"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2932:3:10","subExpression":{"id":989,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"2934:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":991,"nodeType":"ExpressionStatement","src":"2932:3:10"},"nodeType":"ForStatement","src":"2891:158:10"},{"expression":{"id":1009,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"3066:13:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":954,"id":1010,"nodeType":"Return","src":"3059:20:10"}]},"documentation":{"id":943,"nodeType":"StructuredDocumentation","src":"2383:146:10","text":" @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":1012,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2543:14:10","nodeType":"FunctionDefinition","parameters":{"id":950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":946,"mutability":"mutable","name":"accounts","nameLocation":"2584:8:10","nodeType":"VariableDeclaration","scope":1012,"src":"2567:25:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":944,"name":"address","nodeType":"ElementaryTypeName","src":"2567:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":945,"nodeType":"ArrayTypeName","src":"2567:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":949,"mutability":"mutable","name":"ids","nameLocation":"2619:3:10","nodeType":"VariableDeclaration","scope":1012,"src":"2602:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":947,"name":"uint256","nodeType":"ElementaryTypeName","src":"2602:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":948,"nodeType":"ArrayTypeName","src":"2602:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2557:71:10"},"returnParameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1012,"src":"2658:16:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":951,"name":"uint256","nodeType":"ElementaryTypeName","src":"2658:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":952,"nodeType":"ArrayTypeName","src":"2658:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2657:18:10"},"scope":1739,"src":"2534:552:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1821],"body":{"id":1027,"nodeType":"Block","src":"3229:69:10","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1021,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"3258:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3258:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1023,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"3272:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1024,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"3282:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1020,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"3239:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3239:52:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1026,"nodeType":"ExpressionStatement","src":"3239:52:10"}]},"documentation":{"id":1013,"nodeType":"StructuredDocumentation","src":"3092:57:10","text":" @dev See {IERC1155-setApprovalForAll}."},"functionSelector":"a22cb465","id":1028,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3163:17:10","nodeType":"FunctionDefinition","parameters":{"id":1018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1015,"mutability":"mutable","name":"operator","nameLocation":"3189:8:10","nodeType":"VariableDeclaration","scope":1028,"src":"3181:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1014,"name":"address","nodeType":"ElementaryTypeName","src":"3181:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1017,"mutability":"mutable","name":"approved","nameLocation":"3204:8:10","nodeType":"VariableDeclaration","scope":1028,"src":"3199:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1016,"name":"bool","nodeType":"ElementaryTypeName","src":"3199:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3180:33:10"},"returnParameters":{"id":1019,"nodeType":"ParameterList","parameters":[],"src":"3229:0:10"},"scope":1739,"src":"3154:144:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1831],"body":{"id":1044,"nodeType":"Block","src":"3461:61:10","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1038,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"3478:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1040,"indexExpression":{"id":1039,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"3497:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3478:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1042,"indexExpression":{"id":1041,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"3506:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3478:37:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1037,"id":1043,"nodeType":"Return","src":"3471:44:10"}]},"documentation":{"id":1029,"nodeType":"StructuredDocumentation","src":"3304:56:10","text":" @dev See {IERC1155-isApprovedForAll}."},"functionSelector":"e985e9c5","id":1045,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3374:16:10","nodeType":"FunctionDefinition","parameters":{"id":1034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1031,"mutability":"mutable","name":"account","nameLocation":"3399:7:10","nodeType":"VariableDeclaration","scope":1045,"src":"3391:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1030,"name":"address","nodeType":"ElementaryTypeName","src":"3391:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1033,"mutability":"mutable","name":"operator","nameLocation":"3416:8:10","nodeType":"VariableDeclaration","scope":1045,"src":"3408:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1032,"name":"address","nodeType":"ElementaryTypeName","src":"3408:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3390:35:10"},"returnParameters":{"id":1037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1036,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1045,"src":"3455:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1035,"name":"bool","nodeType":"ElementaryTypeName","src":"3455:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3454:6:10"},"scope":1739,"src":"3365:157:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1845],"body":{"id":1088,"nodeType":"Block","src":"3702:238:10","statements":[{"assignments":[1060],"declarations":[{"constant":false,"id":1060,"mutability":"mutable","name":"sender","nameLocation":"3720:6:10","nodeType":"VariableDeclaration","scope":1088,"src":"3712:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1059,"name":"address","nodeType":"ElementaryTypeName","src":"3712:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1063,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1061,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"3729:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3729:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3712:29:10"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1064,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"3755:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1065,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"3763:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3755:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3773:31:10","subExpression":{"arguments":[{"id":1068,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"3791:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1069,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"3797:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1067,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"3774:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3774:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3755:49:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1079,"nodeType":"IfStatement","src":"3751:129:10","trueBody":{"id":1078,"nodeType":"Block","src":"3806:74:10","statements":[{"errorCall":{"arguments":[{"id":1074,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"3856:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1075,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"3864:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1073,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"3827:28:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$","typeString":"function (address,address) pure returns (error)"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3827:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1077,"nodeType":"RevertStatement","src":"3820:49:10"}]}},{"expression":{"arguments":[{"id":1081,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"3907:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1082,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"3913:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1083,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"3917:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1084,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"3921:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1085,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"3928:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1080,"name":"_safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"3889:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3889:44:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1087,"nodeType":"ExpressionStatement","src":"3889:44:10"}]},"documentation":{"id":1046,"nodeType":"StructuredDocumentation","src":"3528:56:10","text":" @dev See {IERC1155-safeTransferFrom}."},"functionSelector":"f242432a","id":1089,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3598:16:10","nodeType":"FunctionDefinition","parameters":{"id":1057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1048,"mutability":"mutable","name":"from","nameLocation":"3623:4:10","nodeType":"VariableDeclaration","scope":1089,"src":"3615:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1047,"name":"address","nodeType":"ElementaryTypeName","src":"3615:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1050,"mutability":"mutable","name":"to","nameLocation":"3637:2:10","nodeType":"VariableDeclaration","scope":1089,"src":"3629:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1049,"name":"address","nodeType":"ElementaryTypeName","src":"3629:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1052,"mutability":"mutable","name":"id","nameLocation":"3649:2:10","nodeType":"VariableDeclaration","scope":1089,"src":"3641:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1051,"name":"uint256","nodeType":"ElementaryTypeName","src":"3641:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1054,"mutability":"mutable","name":"value","nameLocation":"3661:5:10","nodeType":"VariableDeclaration","scope":1089,"src":"3653:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1053,"name":"uint256","nodeType":"ElementaryTypeName","src":"3653:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1056,"mutability":"mutable","name":"data","nameLocation":"3681:4:10","nodeType":"VariableDeclaration","scope":1089,"src":"3668:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1055,"name":"bytes","nodeType":"ElementaryTypeName","src":"3668:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3614:72:10"},"returnParameters":{"id":1058,"nodeType":"ParameterList","parameters":[],"src":"3702:0:10"},"scope":1739,"src":"3589:351:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1861],"body":{"id":1134,"nodeType":"Block","src":"4196:245:10","statements":[{"assignments":[1106],"declarations":[{"constant":false,"id":1106,"mutability":"mutable","name":"sender","nameLocation":"4214:6:10","nodeType":"VariableDeclaration","scope":1134,"src":"4206:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1105,"name":"address","nodeType":"ElementaryTypeName","src":"4206:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1109,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1107,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"4223:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4223:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4206:29:10"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1110,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"4249:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1111,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"4257:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4249:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4267:31:10","subExpression":{"arguments":[{"id":1114,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"4285:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1115,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"4291:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1113,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"4268:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4268:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4249:49:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1125,"nodeType":"IfStatement","src":"4245:129:10","trueBody":{"id":1124,"nodeType":"Block","src":"4300:74:10","statements":[{"errorCall":{"arguments":[{"id":1120,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"4350:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1121,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"4358:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1119,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"4321:28:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$","typeString":"function (address,address) pure returns (error)"}},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4321:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1123,"nodeType":"RevertStatement","src":"4314:49:10"}]}},{"expression":{"arguments":[{"id":1127,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"4406:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1128,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"4412:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1129,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"4416:3:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1130,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"4421:6:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1131,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"4429:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1126,"name":"_safeBatchTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"4383:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4383:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1133,"nodeType":"ExpressionStatement","src":"4383:51:10"}]},"documentation":{"id":1090,"nodeType":"StructuredDocumentation","src":"3946:61:10","text":" @dev See {IERC1155-safeBatchTransferFrom}."},"functionSelector":"2eb2c2d6","id":1135,"implemented":true,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4021:21:10","nodeType":"FunctionDefinition","parameters":{"id":1103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1092,"mutability":"mutable","name":"from","nameLocation":"4060:4:10","nodeType":"VariableDeclaration","scope":1135,"src":"4052:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1091,"name":"address","nodeType":"ElementaryTypeName","src":"4052:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1094,"mutability":"mutable","name":"to","nameLocation":"4082:2:10","nodeType":"VariableDeclaration","scope":1135,"src":"4074:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1093,"name":"address","nodeType":"ElementaryTypeName","src":"4074:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1097,"mutability":"mutable","name":"ids","nameLocation":"4111:3:10","nodeType":"VariableDeclaration","scope":1135,"src":"4094:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1095,"name":"uint256","nodeType":"ElementaryTypeName","src":"4094:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1096,"nodeType":"ArrayTypeName","src":"4094:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1100,"mutability":"mutable","name":"values","nameLocation":"4141:6:10","nodeType":"VariableDeclaration","scope":1135,"src":"4124:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1098,"name":"uint256","nodeType":"ElementaryTypeName","src":"4124:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1099,"nodeType":"ArrayTypeName","src":"4124:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1102,"mutability":"mutable","name":"data","nameLocation":"4170:4:10","nodeType":"VariableDeclaration","scope":1135,"src":"4157:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1101,"name":"bytes","nodeType":"ElementaryTypeName","src":"4157:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4042:138:10"},"returnParameters":{"id":1104,"nodeType":"ParameterList","parameters":[],"src":"4196:0:10"},"scope":1739,"src":"4012:429:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1287,"nodeType":"Block","src":"5249:1174:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1149,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"5263:3:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5267:6:10","memberName":"length","nodeType":"MemberAccess","src":"5263:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1151,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"5277:6:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5284:6:10","memberName":"length","nodeType":"MemberAccess","src":"5277:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5263:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1162,"nodeType":"IfStatement","src":"5259:117:10","trueBody":{"id":1161,"nodeType":"Block","src":"5292:84:10","statements":[{"errorCall":{"arguments":[{"expression":{"id":1155,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"5339:3:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5343:6:10","memberName":"length","nodeType":"MemberAccess","src":"5339:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1157,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"5351:6:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5358:6:10","memberName":"length","nodeType":"MemberAccess","src":"5351:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1154,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"5313:25:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5313:52:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1160,"nodeType":"RevertStatement","src":"5306:59:10"}]}},{"assignments":[1164],"declarations":[{"constant":false,"id":1164,"mutability":"mutable","name":"operator","nameLocation":"5394:8:10","nodeType":"VariableDeclaration","scope":1287,"src":"5386:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1163,"name":"address","nodeType":"ElementaryTypeName","src":"5386:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1167,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1165,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"5405:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5405:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5386:31:10"},{"body":{"id":1248,"nodeType":"Block","src":"5469:650:10","statements":[{"assignments":[1180],"declarations":[{"constant":false,"id":1180,"mutability":"mutable","name":"id","nameLocation":"5491:2:10","nodeType":"VariableDeclaration","scope":1248,"src":"5483:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1179,"name":"uint256","nodeType":"ElementaryTypeName","src":"5483:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1185,"initialValue":{"arguments":[{"id":1183,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"5519:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1181,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"5496:3:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5500:18:10","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3537,"src":"5496:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5496:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5483:38:10"},{"assignments":[1187],"declarations":[{"constant":false,"id":1187,"mutability":"mutable","name":"value","nameLocation":"5543:5:10","nodeType":"VariableDeclaration","scope":1248,"src":"5535:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1186,"name":"uint256","nodeType":"ElementaryTypeName","src":"5535:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1192,"initialValue":{"arguments":[{"id":1190,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"5577:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1188,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"5551:6:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5558:18:10","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3537,"src":"5551:25:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5551:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5535:44:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1193,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"5598:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5614:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5606:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1194,"name":"address","nodeType":"ElementaryTypeName","src":"5606:7:10","typeDescriptions":{}}},"id":1197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5606:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5598:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1231,"nodeType":"IfStatement","src":"5594:420:10","trueBody":{"id":1230,"nodeType":"Block","src":"5618:396:10","statements":[{"assignments":[1200],"declarations":[{"constant":false,"id":1200,"mutability":"mutable","name":"fromBalance","nameLocation":"5644:11:10","nodeType":"VariableDeclaration","scope":1230,"src":"5636:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1199,"name":"uint256","nodeType":"ElementaryTypeName","src":"5636:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1206,"initialValue":{"baseExpression":{"baseExpression":{"id":1201,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"5658:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1203,"indexExpression":{"id":1202,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"5668:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5658:13:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1205,"indexExpression":{"id":1204,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"5672:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5658:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5636:41:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1207,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"5699:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"5713:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5699:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1218,"nodeType":"IfStatement","src":"5695:129:10","trueBody":{"id":1217,"nodeType":"Block","src":"5720:104:10","statements":[{"errorCall":{"arguments":[{"id":1211,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"5776:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1212,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"5782:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"5795:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1214,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"5802:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1210,"name":"ERC1155InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"5749:26:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256,uint256) pure returns (error)"}},"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5749:56:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1216,"nodeType":"RevertStatement","src":"5742:63:10"}]}},{"id":1229,"nodeType":"UncheckedBlock","src":"5841:159:10","statements":[{"expression":{"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1219,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"5940:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1222,"indexExpression":{"id":1220,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"5950:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5940:13:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1223,"indexExpression":{"id":1221,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"5954:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5940:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1224,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"5962:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"5976:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5962:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5940:41:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1228,"nodeType":"ExpressionStatement","src":"5940:41:10"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1232,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"6032:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6046:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6038:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1233,"name":"address","nodeType":"ElementaryTypeName","src":"6038:7:10","typeDescriptions":{}}},"id":1236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6038:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6032:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1247,"nodeType":"IfStatement","src":"6028:81:10","trueBody":{"id":1246,"nodeType":"Block","src":"6050:59:10","statements":[{"expression":{"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1238,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"6068:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1241,"indexExpression":{"id":1239,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"6078:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6068:13:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1242,"indexExpression":{"id":1240,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"6082:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6068:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"6089:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6068:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1245,"nodeType":"ExpressionStatement","src":"6068:26:10"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1172,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"5448:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1173,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"5452:3:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5456:6:10","memberName":"length","nodeType":"MemberAccess","src":"5452:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5448:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1249,"initializationExpression":{"assignments":[1169],"declarations":[{"constant":false,"id":1169,"mutability":"mutable","name":"i","nameLocation":"5441:1:10","nodeType":"VariableDeclaration","scope":1249,"src":"5433:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1168,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1171,"initialValue":{"hexValue":"30","id":1170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5445:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5433:13:10"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5464:3:10","subExpression":{"id":1176,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"5466:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1178,"nodeType":"ExpressionStatement","src":"5464:3:10"},"nodeType":"ForStatement","src":"5428:691:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1250,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"6133:3:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6137:6:10","memberName":"length","nodeType":"MemberAccess","src":"6133:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6147:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6133:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1285,"nodeType":"Block","src":"6341:76:10","statements":[{"eventCall":{"arguments":[{"id":1278,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"6374:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1279,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"6384:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1280,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"6390:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1281,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"6394:3:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1282,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"6399:6:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1277,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"6360:13:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6360:46:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1284,"nodeType":"EmitStatement","src":"6355:51:10"}]},"id":1286,"nodeType":"IfStatement","src":"6129:288:10","trueBody":{"id":1276,"nodeType":"Block","src":"6150:185:10","statements":[{"assignments":[1255],"declarations":[{"constant":false,"id":1255,"mutability":"mutable","name":"id","nameLocation":"6172:2:10","nodeType":"VariableDeclaration","scope":1276,"src":"6164:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1254,"name":"uint256","nodeType":"ElementaryTypeName","src":"6164:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1260,"initialValue":{"arguments":[{"hexValue":"30","id":1258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6200:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1256,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"6177:3:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6181:18:10","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3537,"src":"6177:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6177:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6164:38:10"},{"assignments":[1262],"declarations":[{"constant":false,"id":1262,"mutability":"mutable","name":"value","nameLocation":"6224:5:10","nodeType":"VariableDeclaration","scope":1276,"src":"6216:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1261,"name":"uint256","nodeType":"ElementaryTypeName","src":"6216:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1267,"initialValue":{"arguments":[{"hexValue":"30","id":1265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6258:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1263,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"6232:6:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6239:18:10","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3537,"src":"6232:25:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6232:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6216:44:10"},{"eventCall":{"arguments":[{"id":1269,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"6294:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1270,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"6304:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1271,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"6310:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1272,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"6314:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"6318:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1268,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"6279:14:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6279:45:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1275,"nodeType":"EmitStatement","src":"6274:50:10"}]}}]},"documentation":{"id":1136,"nodeType":"StructuredDocumentation","src":"4447:690:10","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."},"id":1288,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5151:7:10","nodeType":"FunctionDefinition","parameters":{"id":1147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1138,"mutability":"mutable","name":"from","nameLocation":"5167:4:10","nodeType":"VariableDeclaration","scope":1288,"src":"5159:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1137,"name":"address","nodeType":"ElementaryTypeName","src":"5159:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1140,"mutability":"mutable","name":"to","nameLocation":"5181:2:10","nodeType":"VariableDeclaration","scope":1288,"src":"5173:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1139,"name":"address","nodeType":"ElementaryTypeName","src":"5173:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1143,"mutability":"mutable","name":"ids","nameLocation":"5202:3:10","nodeType":"VariableDeclaration","scope":1288,"src":"5185:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1141,"name":"uint256","nodeType":"ElementaryTypeName","src":"5185:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1142,"nodeType":"ArrayTypeName","src":"5185:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1146,"mutability":"mutable","name":"values","nameLocation":"5224:6:10","nodeType":"VariableDeclaration","scope":1288,"src":"5207:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1144,"name":"uint256","nodeType":"ElementaryTypeName","src":"5207:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1145,"nodeType":"ArrayTypeName","src":"5207:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5158:73:10"},"returnParameters":{"id":1148,"nodeType":"ParameterList","parameters":[],"src":"5249:0:10"},"scope":1739,"src":"5142:1281:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1367,"nodeType":"Block","src":"7193:509:10","statements":[{"expression":{"arguments":[{"id":1305,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"7211:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1306,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"7217:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1307,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"7221:3:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1308,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"7226:6:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1304,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"7203:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7203:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1310,"nodeType":"ExpressionStatement","src":"7203:30:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1311,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"7247:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7261:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7253:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1312,"name":"address","nodeType":"ElementaryTypeName","src":"7253:7:10","typeDescriptions":{}}},"id":1315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7253:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7247:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1366,"nodeType":"IfStatement","src":"7243:453:10","trueBody":{"id":1365,"nodeType":"Block","src":"7265:431:10","statements":[{"assignments":[1318],"declarations":[{"constant":false,"id":1318,"mutability":"mutable","name":"operator","nameLocation":"7287:8:10","nodeType":"VariableDeclaration","scope":1365,"src":"7279:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1317,"name":"address","nodeType":"ElementaryTypeName","src":"7279:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1321,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1319,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"7298:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7298:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7279:31:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1322,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"7328:3:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7332:6:10","memberName":"length","nodeType":"MemberAccess","src":"7328:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7342:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7328:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1363,"nodeType":"Block","src":"7574:112:10","statements":[{"expression":{"arguments":[{"id":1355,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"7633:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1356,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"7643:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1357,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"7649:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1358,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"7653:3:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1359,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"7658:6:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1360,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"7666:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1352,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"7592:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$2074_$","typeString":"type(library ERC1155Utils)"}},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7605:27:10","memberName":"checkOnERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":2073,"src":"7592:40:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7592:79:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1362,"nodeType":"ExpressionStatement","src":"7592:79:10"}]},"id":1364,"nodeType":"IfStatement","src":"7324:362:10","trueBody":{"id":1351,"nodeType":"Block","src":"7345:223:10","statements":[{"assignments":[1327],"declarations":[{"constant":false,"id":1327,"mutability":"mutable","name":"id","nameLocation":"7371:2:10","nodeType":"VariableDeclaration","scope":1351,"src":"7363:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1326,"name":"uint256","nodeType":"ElementaryTypeName","src":"7363:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1332,"initialValue":{"arguments":[{"hexValue":"30","id":1330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7399:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1328,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"7376:3:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7380:18:10","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3537,"src":"7376:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7376:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7363:38:10"},{"assignments":[1334],"declarations":[{"constant":false,"id":1334,"mutability":"mutable","name":"value","nameLocation":"7427:5:10","nodeType":"VariableDeclaration","scope":1351,"src":"7419:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1333,"name":"uint256","nodeType":"ElementaryTypeName","src":"7419:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1339,"initialValue":{"arguments":[{"hexValue":"30","id":1337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7461:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1335,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"7435:6:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7442:18:10","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3537,"src":"7435:25:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7435:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7419:44:10"},{"expression":{"arguments":[{"id":1343,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"7517:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1344,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"7527:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1345,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"7533:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1346,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"7537:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"7541:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1348,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"7548:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1340,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"7481:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$2074_$","typeString":"type(library ERC1155Utils)"}},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7494:22:10","memberName":"checkOnERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1999,"src":"7481:35:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7481:72:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1350,"nodeType":"ExpressionStatement","src":"7481:72:10"}]}}]}}]},"documentation":{"id":1289,"nodeType":"StructuredDocumentation","src":"6429:568:10","text":" @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."},"id":1368,"implemented":true,"kind":"function","modifiers":[],"name":"_updateWithAcceptanceCheck","nameLocation":"7011:26:10","nodeType":"FunctionDefinition","parameters":{"id":1302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1291,"mutability":"mutable","name":"from","nameLocation":"7055:4:10","nodeType":"VariableDeclaration","scope":1368,"src":"7047:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1290,"name":"address","nodeType":"ElementaryTypeName","src":"7047:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1293,"mutability":"mutable","name":"to","nameLocation":"7077:2:10","nodeType":"VariableDeclaration","scope":1368,"src":"7069:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1292,"name":"address","nodeType":"ElementaryTypeName","src":"7069:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1296,"mutability":"mutable","name":"ids","nameLocation":"7106:3:10","nodeType":"VariableDeclaration","scope":1368,"src":"7089:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1294,"name":"uint256","nodeType":"ElementaryTypeName","src":"7089:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1295,"nodeType":"ArrayTypeName","src":"7089:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1299,"mutability":"mutable","name":"values","nameLocation":"7136:6:10","nodeType":"VariableDeclaration","scope":1368,"src":"7119:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1297,"name":"uint256","nodeType":"ElementaryTypeName","src":"7119:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1298,"nodeType":"ArrayTypeName","src":"7119:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1301,"mutability":"mutable","name":"data","nameLocation":"7165:4:10","nodeType":"VariableDeclaration","scope":1368,"src":"7152:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1300,"name":"bytes","nodeType":"ElementaryTypeName","src":"7152:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7037:138:10"},"returnParameters":{"id":1303,"nodeType":"ParameterList","parameters":[],"src":"7193:0:10"},"scope":1739,"src":"7002:700:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1433,"nodeType":"Block","src":"8267:355:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1382,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"8281:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8295:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8287:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1383,"name":"address","nodeType":"ElementaryTypeName","src":"8287:7:10","typeDescriptions":{}}},"id":1386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8287:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8281:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1396,"nodeType":"IfStatement","src":"8277:88:10","trueBody":{"id":1395,"nodeType":"Block","src":"8299:66:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8351:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8343:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1389,"name":"address","nodeType":"ElementaryTypeName","src":"8343:7:10","typeDescriptions":{}}},"id":1392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8343:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1388,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"8320:22:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8320:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1394,"nodeType":"RevertStatement","src":"8313:41:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1397,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"8378:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8394:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8386:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1398,"name":"address","nodeType":"ElementaryTypeName","src":"8386:7:10","typeDescriptions":{}}},"id":1401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8386:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8378:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1411,"nodeType":"IfStatement","src":"8374:88:10","trueBody":{"id":1410,"nodeType":"Block","src":"8398:64:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8448:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8440:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1404,"name":"address","nodeType":"ElementaryTypeName","src":"8440:7:10","typeDescriptions":{}}},"id":1407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8440:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1403,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"8419:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8419:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1409,"nodeType":"RevertStatement","src":"8412:39:10"}]}},{"assignments":[1416,1419],"declarations":[{"constant":false,"id":1416,"mutability":"mutable","name":"ids","nameLocation":"8489:3:10","nodeType":"VariableDeclaration","scope":1433,"src":"8472:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1414,"name":"uint256","nodeType":"ElementaryTypeName","src":"8472:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1415,"nodeType":"ArrayTypeName","src":"8472:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1419,"mutability":"mutable","name":"values","nameLocation":"8511:6:10","nodeType":"VariableDeclaration","scope":1433,"src":"8494:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1417,"name":"uint256","nodeType":"ElementaryTypeName","src":"8494:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1418,"nodeType":"ArrayTypeName","src":"8494:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1424,"initialValue":{"arguments":[{"id":1421,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1375,"src":"8540:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"8544:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1420,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"8521:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8521:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"8471:79:10"},{"expression":{"arguments":[{"id":1426,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"8587:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1427,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"8593:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1428,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"8597:3:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1429,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"8602:6:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1430,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"8610:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1425,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"8560:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1432,"nodeType":"ExpressionStatement","src":"8560:55:10"}]},"documentation":{"id":1369,"nodeType":"StructuredDocumentation","src":"7708:446:10","text":" @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":1434,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransferFrom","nameLocation":"8168:17:10","nodeType":"FunctionDefinition","parameters":{"id":1380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1371,"mutability":"mutable","name":"from","nameLocation":"8194:4:10","nodeType":"VariableDeclaration","scope":1434,"src":"8186:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1370,"name":"address","nodeType":"ElementaryTypeName","src":"8186:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1373,"mutability":"mutable","name":"to","nameLocation":"8208:2:10","nodeType":"VariableDeclaration","scope":1434,"src":"8200:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1372,"name":"address","nodeType":"ElementaryTypeName","src":"8200:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1375,"mutability":"mutable","name":"id","nameLocation":"8220:2:10","nodeType":"VariableDeclaration","scope":1434,"src":"8212:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1374,"name":"uint256","nodeType":"ElementaryTypeName","src":"8212:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1377,"mutability":"mutable","name":"value","nameLocation":"8232:5:10","nodeType":"VariableDeclaration","scope":1434,"src":"8224:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1376,"name":"uint256","nodeType":"ElementaryTypeName","src":"8224:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1379,"mutability":"mutable","name":"data","nameLocation":"8252:4:10","nodeType":"VariableDeclaration","scope":1434,"src":"8239:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1378,"name":"bytes","nodeType":"ElementaryTypeName","src":"8239:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8185:72:10"},"returnParameters":{"id":1381,"nodeType":"ParameterList","parameters":[],"src":"8267:0:10"},"scope":1739,"src":"8159:463:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1488,"nodeType":"Block","src":"9202:266:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1450,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"9216:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9230:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9222:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1451,"name":"address","nodeType":"ElementaryTypeName","src":"9222:7:10","typeDescriptions":{}}},"id":1454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9216:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1464,"nodeType":"IfStatement","src":"9212:88:10","trueBody":{"id":1463,"nodeType":"Block","src":"9234:66:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9286:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9278:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1457,"name":"address","nodeType":"ElementaryTypeName","src":"9278:7:10","typeDescriptions":{}}},"id":1460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9278:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1456,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"9255:22:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9255:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1462,"nodeType":"RevertStatement","src":"9248:41:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1465,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"9313:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9329:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9321:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1466,"name":"address","nodeType":"ElementaryTypeName","src":"9321:7:10","typeDescriptions":{}}},"id":1469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9321:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9313:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1479,"nodeType":"IfStatement","src":"9309:88:10","trueBody":{"id":1478,"nodeType":"Block","src":"9333:64:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9383:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9375:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1472,"name":"address","nodeType":"ElementaryTypeName","src":"9375:7:10","typeDescriptions":{}}},"id":1475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9375:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1471,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"9354:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9354:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1477,"nodeType":"RevertStatement","src":"9347:39:10"}]}},{"expression":{"arguments":[{"id":1481,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"9433:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1482,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"9439:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1483,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"9443:3:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1484,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"9448:6:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1485,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"9456:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1480,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"9406:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9406:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1487,"nodeType":"ExpressionStatement","src":"9406:55:10"}]},"documentation":{"id":1435,"nodeType":"StructuredDocumentation","src":"8628:390:10","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."},"id":1489,"implemented":true,"kind":"function","modifiers":[],"name":"_safeBatchTransferFrom","nameLocation":"9032:22:10","nodeType":"FunctionDefinition","parameters":{"id":1448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1437,"mutability":"mutable","name":"from","nameLocation":"9072:4:10","nodeType":"VariableDeclaration","scope":1489,"src":"9064:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1436,"name":"address","nodeType":"ElementaryTypeName","src":"9064:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1439,"mutability":"mutable","name":"to","nameLocation":"9094:2:10","nodeType":"VariableDeclaration","scope":1489,"src":"9086:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1438,"name":"address","nodeType":"ElementaryTypeName","src":"9086:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1442,"mutability":"mutable","name":"ids","nameLocation":"9123:3:10","nodeType":"VariableDeclaration","scope":1489,"src":"9106:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1440,"name":"uint256","nodeType":"ElementaryTypeName","src":"9106:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1441,"nodeType":"ArrayTypeName","src":"9106:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1445,"mutability":"mutable","name":"values","nameLocation":"9153:6:10","nodeType":"VariableDeclaration","scope":1489,"src":"9136:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1443,"name":"uint256","nodeType":"ElementaryTypeName","src":"9136:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1444,"nodeType":"ArrayTypeName","src":"9136:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1447,"mutability":"mutable","name":"data","nameLocation":"9182:4:10","nodeType":"VariableDeclaration","scope":1489,"src":"9169:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1446,"name":"bytes","nodeType":"ElementaryTypeName","src":"9169:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9054:138:10"},"returnParameters":{"id":1449,"nodeType":"ParameterList","parameters":[],"src":"9202:0:10"},"scope":1739,"src":"9023:445:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1499,"nodeType":"Block","src":"10346:30:10","statements":[{"expression":{"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1495,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"10356:4:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1496,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"10363:6:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"10356:13:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1498,"nodeType":"ExpressionStatement","src":"10356:13:10"}]},"documentation":{"id":1490,"nodeType":"StructuredDocumentation","src":"9474:811:10","text":" @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."},"id":1500,"implemented":true,"kind":"function","modifiers":[],"name":"_setURI","nameLocation":"10299:7:10","nodeType":"FunctionDefinition","parameters":{"id":1493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1492,"mutability":"mutable","name":"newuri","nameLocation":"10321:6:10","nodeType":"VariableDeclaration","scope":1500,"src":"10307:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1491,"name":"string","nodeType":"ElementaryTypeName","src":"10307:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10306:22:10"},"returnParameters":{"id":1494,"nodeType":"ParameterList","parameters":[],"src":"10346:0:10"},"scope":1739,"src":"10290:86:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1551,"nodeType":"Block","src":"10836:264:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1512,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"10850:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10864:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10856:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1513,"name":"address","nodeType":"ElementaryTypeName","src":"10856:7:10","typeDescriptions":{}}},"id":1516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10856:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10850:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1526,"nodeType":"IfStatement","src":"10846:88:10","trueBody":{"id":1525,"nodeType":"Block","src":"10868:66:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10920:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10912:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1519,"name":"address","nodeType":"ElementaryTypeName","src":"10912:7:10","typeDescriptions":{}}},"id":1522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10912:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1518,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"10889:22:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10889:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1524,"nodeType":"RevertStatement","src":"10882:41:10"}]}},{"assignments":[1531,1534],"declarations":[{"constant":false,"id":1531,"mutability":"mutable","name":"ids","nameLocation":"10961:3:10","nodeType":"VariableDeclaration","scope":1551,"src":"10944:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1529,"name":"uint256","nodeType":"ElementaryTypeName","src":"10944:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1530,"nodeType":"ArrayTypeName","src":"10944:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1534,"mutability":"mutable","name":"values","nameLocation":"10983:6:10","nodeType":"VariableDeclaration","scope":1551,"src":"10966:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1532,"name":"uint256","nodeType":"ElementaryTypeName","src":"10966:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1533,"nodeType":"ArrayTypeName","src":"10966:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1539,"initialValue":{"arguments":[{"id":1536,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"11012:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"11016:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1535,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"10993:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10993:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"10943:79:10"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11067:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11059:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1541,"name":"address","nodeType":"ElementaryTypeName","src":"11059:7:10","typeDescriptions":{}}},"id":1544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11059:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1545,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"11071:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1546,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"11075:3:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1547,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1534,"src":"11080:6:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1548,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"11088:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1540,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"11032:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11032:61:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1550,"nodeType":"ExpressionStatement","src":"11032:61:10"}]},"documentation":{"id":1501,"nodeType":"StructuredDocumentation","src":"10382:367:10","text":" @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":1552,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"10763:5:10","nodeType":"FunctionDefinition","parameters":{"id":1510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1503,"mutability":"mutable","name":"to","nameLocation":"10777:2:10","nodeType":"VariableDeclaration","scope":1552,"src":"10769:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1502,"name":"address","nodeType":"ElementaryTypeName","src":"10769:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1505,"mutability":"mutable","name":"id","nameLocation":"10789:2:10","nodeType":"VariableDeclaration","scope":1552,"src":"10781:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1504,"name":"uint256","nodeType":"ElementaryTypeName","src":"10781:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1507,"mutability":"mutable","name":"value","nameLocation":"10801:5:10","nodeType":"VariableDeclaration","scope":1552,"src":"10793:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1506,"name":"uint256","nodeType":"ElementaryTypeName","src":"10793:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1509,"mutability":"mutable","name":"data","nameLocation":"10821:4:10","nodeType":"VariableDeclaration","scope":1552,"src":"10808:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1508,"name":"bytes","nodeType":"ElementaryTypeName","src":"10808:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10768:58:10"},"returnParameters":{"id":1511,"nodeType":"ParameterList","parameters":[],"src":"10836:0:10"},"scope":1739,"src":"10754:346:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1592,"nodeType":"Block","src":"11638:175:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1566,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"11652:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11666:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11658:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1567,"name":"address","nodeType":"ElementaryTypeName","src":"11658:7:10","typeDescriptions":{}}},"id":1570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11658:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11652:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1580,"nodeType":"IfStatement","src":"11648:88:10","trueBody":{"id":1579,"nodeType":"Block","src":"11670:66:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11722:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11714:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1573,"name":"address","nodeType":"ElementaryTypeName","src":"11714:7:10","typeDescriptions":{}}},"id":1576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11714:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1572,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"11691:22:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11691:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1578,"nodeType":"RevertStatement","src":"11684:41:10"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11780:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11772:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1582,"name":"address","nodeType":"ElementaryTypeName","src":"11772:7:10","typeDescriptions":{}}},"id":1585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11772:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1586,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"11784:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1587,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"11788:3:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1588,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"11793:6:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1589,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"11801:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1581,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"11745:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11745:61:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1591,"nodeType":"ExpressionStatement","src":"11745:61:10"}]},"documentation":{"id":1553,"nodeType":"StructuredDocumentation","src":"11106:420:10","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":1593,"implemented":true,"kind":"function","modifiers":[],"name":"_mintBatch","nameLocation":"11540:10:10","nodeType":"FunctionDefinition","parameters":{"id":1564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1555,"mutability":"mutable","name":"to","nameLocation":"11559:2:10","nodeType":"VariableDeclaration","scope":1593,"src":"11551:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1554,"name":"address","nodeType":"ElementaryTypeName","src":"11551:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1558,"mutability":"mutable","name":"ids","nameLocation":"11580:3:10","nodeType":"VariableDeclaration","scope":1593,"src":"11563:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1556,"name":"uint256","nodeType":"ElementaryTypeName","src":"11563:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1557,"nodeType":"ArrayTypeName","src":"11563:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1561,"mutability":"mutable","name":"values","nameLocation":"11602:6:10","nodeType":"VariableDeclaration","scope":1593,"src":"11585:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1559,"name":"uint256","nodeType":"ElementaryTypeName","src":"11585:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1560,"nodeType":"ArrayTypeName","src":"11585:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1563,"mutability":"mutable","name":"data","nameLocation":"11623:4:10","nodeType":"VariableDeclaration","scope":1593,"src":"11610:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1562,"name":"bytes","nodeType":"ElementaryTypeName","src":"11610:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11550:78:10"},"returnParameters":{"id":1565,"nodeType":"ParameterList","parameters":[],"src":"11638:0:10"},"scope":1739,"src":"11531:282:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1642,"nodeType":"Block","src":"12172:264:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1603,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"12186:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12202:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12194:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1604,"name":"address","nodeType":"ElementaryTypeName","src":"12194:7:10","typeDescriptions":{}}},"id":1607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12194:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12186:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1617,"nodeType":"IfStatement","src":"12182:88:10","trueBody":{"id":1616,"nodeType":"Block","src":"12206:64:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12256:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12248:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1610,"name":"address","nodeType":"ElementaryTypeName","src":"12248:7:10","typeDescriptions":{}}},"id":1613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12248:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1609,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"12227:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12227:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1615,"nodeType":"RevertStatement","src":"12220:39:10"}]}},{"assignments":[1622,1625],"declarations":[{"constant":false,"id":1622,"mutability":"mutable","name":"ids","nameLocation":"12297:3:10","nodeType":"VariableDeclaration","scope":1642,"src":"12280:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1620,"name":"uint256","nodeType":"ElementaryTypeName","src":"12280:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1621,"nodeType":"ArrayTypeName","src":"12280:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1625,"mutability":"mutable","name":"values","nameLocation":"12319:6:10","nodeType":"VariableDeclaration","scope":1642,"src":"12302:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1623,"name":"uint256","nodeType":"ElementaryTypeName","src":"12302:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1624,"nodeType":"ArrayTypeName","src":"12302:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1630,"initialValue":{"arguments":[{"id":1627,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"12348:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"12352:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1626,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"12329:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12329:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"12279:79:10"},{"expression":{"arguments":[{"id":1632,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"12395:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12409:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12401:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1633,"name":"address","nodeType":"ElementaryTypeName","src":"12401:7:10","typeDescriptions":{}}},"id":1636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12401:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1637,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"12413:3:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1638,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"12418:6:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12426:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1631,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"12368:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12368:61:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1641,"nodeType":"ExpressionStatement","src":"12368:61:10"}]},"documentation":{"id":1594,"nodeType":"StructuredDocumentation","src":"11819:283:10","text":" @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."},"id":1643,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"12116:5:10","nodeType":"FunctionDefinition","parameters":{"id":1601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1596,"mutability":"mutable","name":"from","nameLocation":"12130:4:10","nodeType":"VariableDeclaration","scope":1643,"src":"12122:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1595,"name":"address","nodeType":"ElementaryTypeName","src":"12122:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1598,"mutability":"mutable","name":"id","nameLocation":"12144:2:10","nodeType":"VariableDeclaration","scope":1643,"src":"12136:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1597,"name":"uint256","nodeType":"ElementaryTypeName","src":"12136:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1600,"mutability":"mutable","name":"value","nameLocation":"12156:5:10","nodeType":"VariableDeclaration","scope":1643,"src":"12148:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1599,"name":"uint256","nodeType":"ElementaryTypeName","src":"12148:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12121:41:10"},"returnParameters":{"id":1602,"nodeType":"ParameterList","parameters":[],"src":"12172:0:10"},"scope":1739,"src":"12107:329:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1681,"nodeType":"Block","src":"12882:175:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1655,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"12896:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12912:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12904:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1656,"name":"address","nodeType":"ElementaryTypeName","src":"12904:7:10","typeDescriptions":{}}},"id":1659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12904:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12896:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1669,"nodeType":"IfStatement","src":"12892:88:10","trueBody":{"id":1668,"nodeType":"Block","src":"12916:64:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12966:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12958:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1662,"name":"address","nodeType":"ElementaryTypeName","src":"12958:7:10","typeDescriptions":{}}},"id":1665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12958:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1661,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"12937:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12937:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1667,"nodeType":"RevertStatement","src":"12930:39:10"}]}},{"expression":{"arguments":[{"id":1671,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"13016:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13030:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13022:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1672,"name":"address","nodeType":"ElementaryTypeName","src":"13022:7:10","typeDescriptions":{}}},"id":1675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13022:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1676,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"13034:3:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1677,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"13039:6:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13047:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1670,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"12989:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:61:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1680,"nodeType":"ExpressionStatement","src":"12989:61:10"}]},"documentation":{"id":1644,"nodeType":"StructuredDocumentation","src":"12442:345:10","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."},"id":1682,"implemented":true,"kind":"function","modifiers":[],"name":"_burnBatch","nameLocation":"12801:10:10","nodeType":"FunctionDefinition","parameters":{"id":1653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1646,"mutability":"mutable","name":"from","nameLocation":"12820:4:10","nodeType":"VariableDeclaration","scope":1682,"src":"12812:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1645,"name":"address","nodeType":"ElementaryTypeName","src":"12812:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1649,"mutability":"mutable","name":"ids","nameLocation":"12843:3:10","nodeType":"VariableDeclaration","scope":1682,"src":"12826:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1647,"name":"uint256","nodeType":"ElementaryTypeName","src":"12826:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1648,"nodeType":"ArrayTypeName","src":"12826:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1652,"mutability":"mutable","name":"values","nameLocation":"12865:6:10","nodeType":"VariableDeclaration","scope":1682,"src":"12848:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1650,"name":"uint256","nodeType":"ElementaryTypeName","src":"12848:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1651,"nodeType":"ArrayTypeName","src":"12848:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12811:61:10"},"returnParameters":{"id":1654,"nodeType":"ParameterList","parameters":[],"src":"12882:0:10"},"scope":1739,"src":"12792:265:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1721,"nodeType":"Block","src":"13369:222:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1692,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"13383:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13403:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13395:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1693,"name":"address","nodeType":"ElementaryTypeName","src":"13395:7:10","typeDescriptions":{}}},"id":1696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13395:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13383:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1706,"nodeType":"IfStatement","src":"13379:94:10","trueBody":{"id":1705,"nodeType":"Block","src":"13407:66:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13459:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13451:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1699,"name":"address","nodeType":"ElementaryTypeName","src":"13451:7:10","typeDescriptions":{}}},"id":1702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13451:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1698,"name":"ERC1155InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"13428:22:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13428:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1704,"nodeType":"RevertStatement","src":"13421:41:10"}]}},{"expression":{"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1707,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"13482:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1710,"indexExpression":{"id":1708,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"13501:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13482:25:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1711,"indexExpression":{"id":1709,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"13508:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13482:35:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1712,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"13520:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13482:46:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1714,"nodeType":"ExpressionStatement","src":"13482:46:10"},{"eventCall":{"arguments":[{"id":1716,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"13558:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1717,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"13565:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1718,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"13575:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1715,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"13543:14:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13543:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1720,"nodeType":"EmitStatement","src":"13538:46:10"}]},"documentation":{"id":1683,"nodeType":"StructuredDocumentation","src":"13063:208:10","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"id":1722,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"13285:18:10","nodeType":"FunctionDefinition","parameters":{"id":1690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1685,"mutability":"mutable","name":"owner","nameLocation":"13312:5:10","nodeType":"VariableDeclaration","scope":1722,"src":"13304:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1684,"name":"address","nodeType":"ElementaryTypeName","src":"13304:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1687,"mutability":"mutable","name":"operator","nameLocation":"13327:8:10","nodeType":"VariableDeclaration","scope":1722,"src":"13319:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1686,"name":"address","nodeType":"ElementaryTypeName","src":"13319:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1689,"mutability":"mutable","name":"approved","nameLocation":"13342:8:10","nodeType":"VariableDeclaration","scope":1722,"src":"13337:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1688,"name":"bool","nodeType":"ElementaryTypeName","src":"13337:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13303:48:10"},"returnParameters":{"id":1691,"nodeType":"ParameterList","parameters":[],"src":"13369:0:10"},"scope":1739,"src":"13276:315:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1737,"nodeType":"Block","src":"13865:664:10","statements":[{"AST":{"nativeSrc":"13900:623:10","nodeType":"YulBlock","src":"13900:623:10","statements":[{"nativeSrc":"13958:21:10","nodeType":"YulAssignment","src":"13958:21:10","value":{"arguments":[{"kind":"number","nativeSrc":"13974:4:10","nodeType":"YulLiteral","src":"13974:4:10","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"13968:5:10","nodeType":"YulIdentifier","src":"13968:5:10"},"nativeSrc":"13968:11:10","nodeType":"YulFunctionCall","src":"13968:11:10"},"variableNames":[{"name":"array1","nativeSrc":"13958:6:10","nodeType":"YulIdentifier","src":"13958:6:10"}]},{"expression":{"arguments":[{"name":"array1","nativeSrc":"14036:6:10","nodeType":"YulIdentifier","src":"14036:6:10"},{"kind":"number","nativeSrc":"14044:1:10","nodeType":"YulLiteral","src":"14044:1:10","type":"","value":"1"}],"functionName":{"name":"mstore","nativeSrc":"14029:6:10","nodeType":"YulIdentifier","src":"14029:6:10"},"nativeSrc":"14029:17:10","nodeType":"YulFunctionCall","src":"14029:17:10"},"nativeSrc":"14029:17:10","nodeType":"YulExpressionStatement","src":"14029:17:10"},{"expression":{"arguments":[{"arguments":[{"name":"array1","nativeSrc":"14167:6:10","nodeType":"YulIdentifier","src":"14167:6:10"},{"kind":"number","nativeSrc":"14175:4:10","nodeType":"YulLiteral","src":"14175:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14163:3:10","nodeType":"YulIdentifier","src":"14163:3:10"},"nativeSrc":"14163:17:10","nodeType":"YulFunctionCall","src":"14163:17:10"},{"name":"element1","nativeSrc":"14182:8:10","nodeType":"YulIdentifier","src":"14182:8:10"}],"functionName":{"name":"mstore","nativeSrc":"14156:6:10","nodeType":"YulIdentifier","src":"14156:6:10"},"nativeSrc":"14156:35:10","nodeType":"YulFunctionCall","src":"14156:35:10"},"nativeSrc":"14156:35:10","nodeType":"YulExpressionStatement","src":"14156:35:10"},{"nativeSrc":"14282:27:10","nodeType":"YulAssignment","src":"14282:27:10","value":{"arguments":[{"name":"array1","nativeSrc":"14296:6:10","nodeType":"YulIdentifier","src":"14296:6:10"},{"kind":"number","nativeSrc":"14304:4:10","nodeType":"YulLiteral","src":"14304:4:10","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"14292:3:10","nodeType":"YulIdentifier","src":"14292:3:10"},"nativeSrc":"14292:17:10","nodeType":"YulFunctionCall","src":"14292:17:10"},"variableNames":[{"name":"array2","nativeSrc":"14282:6:10","nodeType":"YulIdentifier","src":"14282:6:10"}]},{"expression":{"arguments":[{"name":"array2","nativeSrc":"14329:6:10","nodeType":"YulIdentifier","src":"14329:6:10"},{"kind":"number","nativeSrc":"14337:1:10","nodeType":"YulLiteral","src":"14337:1:10","type":"","value":"1"}],"functionName":{"name":"mstore","nativeSrc":"14322:6:10","nodeType":"YulIdentifier","src":"14322:6:10"},"nativeSrc":"14322:17:10","nodeType":"YulFunctionCall","src":"14322:17:10"},"nativeSrc":"14322:17:10","nodeType":"YulExpressionStatement","src":"14322:17:10"},{"expression":{"arguments":[{"arguments":[{"name":"array2","nativeSrc":"14363:6:10","nodeType":"YulIdentifier","src":"14363:6:10"},{"kind":"number","nativeSrc":"14371:4:10","nodeType":"YulLiteral","src":"14371:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14359:3:10","nodeType":"YulIdentifier","src":"14359:3:10"},"nativeSrc":"14359:17:10","nodeType":"YulFunctionCall","src":"14359:17:10"},{"name":"element2","nativeSrc":"14378:8:10","nodeType":"YulIdentifier","src":"14378:8:10"}],"functionName":{"name":"mstore","nativeSrc":"14352:6:10","nodeType":"YulIdentifier","src":"14352:6:10"},"nativeSrc":"14352:35:10","nodeType":"YulFunctionCall","src":"14352:35:10"},"nativeSrc":"14352:35:10","nodeType":"YulExpressionStatement","src":"14352:35:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14489:4:10","nodeType":"YulLiteral","src":"14489:4:10","type":"","value":"0x40"},{"arguments":[{"name":"array2","nativeSrc":"14499:6:10","nodeType":"YulIdentifier","src":"14499:6:10"},{"kind":"number","nativeSrc":"14507:4:10","nodeType":"YulLiteral","src":"14507:4:10","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"14495:3:10","nodeType":"YulIdentifier","src":"14495:3:10"},"nativeSrc":"14495:17:10","nodeType":"YulFunctionCall","src":"14495:17:10"}],"functionName":{"name":"mstore","nativeSrc":"14482:6:10","nodeType":"YulIdentifier","src":"14482:6:10"},"nativeSrc":"14482:31:10","nodeType":"YulFunctionCall","src":"14482:31:10"},"nativeSrc":"14482:31:10","nodeType":"YulExpressionStatement","src":"14482:31:10"}]},"evmVersion":"paris","externalReferences":[{"declaration":1731,"isOffset":false,"isSlot":false,"src":"13958:6:10","valueSize":1},{"declaration":1731,"isOffset":false,"isSlot":false,"src":"14036:6:10","valueSize":1},{"declaration":1731,"isOffset":false,"isSlot":false,"src":"14167:6:10","valueSize":1},{"declaration":1731,"isOffset":false,"isSlot":false,"src":"14296:6:10","valueSize":1},{"declaration":1734,"isOffset":false,"isSlot":false,"src":"14282:6:10","valueSize":1},{"declaration":1734,"isOffset":false,"isSlot":false,"src":"14329:6:10","valueSize":1},{"declaration":1734,"isOffset":false,"isSlot":false,"src":"14363:6:10","valueSize":1},{"declaration":1734,"isOffset":false,"isSlot":false,"src":"14499:6:10","valueSize":1},{"declaration":1725,"isOffset":false,"isSlot":false,"src":"14182:8:10","valueSize":1},{"declaration":1727,"isOffset":false,"isSlot":false,"src":"14378:8:10","valueSize":1}],"flags":["memory-safe"],"id":1736,"nodeType":"InlineAssembly","src":"13875:648:10"}]},"documentation":{"id":1723,"nodeType":"StructuredDocumentation","src":"13597:105:10","text":" @dev Creates an array in memory with only one value for each of the elements provided."},"id":1738,"implemented":true,"kind":"function","modifiers":[],"name":"_asSingletonArrays","nameLocation":"13716:18:10","nodeType":"FunctionDefinition","parameters":{"id":1728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1725,"mutability":"mutable","name":"element1","nameLocation":"13752:8:10","nodeType":"VariableDeclaration","scope":1738,"src":"13744:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1724,"name":"uint256","nodeType":"ElementaryTypeName","src":"13744:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1727,"mutability":"mutable","name":"element2","nameLocation":"13778:8:10","nodeType":"VariableDeclaration","scope":1738,"src":"13770:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1726,"name":"uint256","nodeType":"ElementaryTypeName","src":"13770:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13734:58:10"},"returnParameters":{"id":1735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1731,"mutability":"mutable","name":"array1","nameLocation":"13832:6:10","nodeType":"VariableDeclaration","scope":1738,"src":"13815:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1729,"name":"uint256","nodeType":"ElementaryTypeName","src":"13815:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1730,"nodeType":"ArrayTypeName","src":"13815:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1734,"mutability":"mutable","name":"array2","nameLocation":"13857:6:10","nodeType":"VariableDeclaration","scope":1738,"src":"13840:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1732,"name":"uint256","nodeType":"ElementaryTypeName","src":"13840:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1733,"nodeType":"ArrayTypeName","src":"13840:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"13814:50:10"},"scope":1739,"src":"13707:822:10","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1740,"src":"725:13806:10","usedErrors":[787,792,797,804,809,814,821],"usedEvents":[1759,1774,1783,1790]}],"src":"109:14423:10"},"id":10},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","exportedSymbols":{"IERC1155":[1862],"IERC165":[4481]},"id":1863,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1741,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"110:24:11"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1743,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1863,"sourceUnit":4482,"src":"136:62:11","symbolAliases":[{"foreign":{"id":1742,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"144:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1745,"name":"IERC165","nameLocations":["359:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":4481,"src":"359:7:11"},"id":1746,"nodeType":"InheritanceSpecifier","src":"359:7:11"}],"canonicalName":"IERC1155","contractDependencies":[],"contractKind":"interface","documentation":{"id":1744,"nodeType":"StructuredDocumentation","src":"200:136:11","text":" @dev Required interface of an ERC-1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[ERC]."},"fullyImplemented":false,"id":1862,"linearizedBaseContracts":[1862,4481],"name":"IERC1155","nameLocation":"347:8:11","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1747,"nodeType":"StructuredDocumentation","src":"373:125:11","text":" @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."},"eventSelector":"c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62","id":1759,"name":"TransferSingle","nameLocation":"509:14:11","nodeType":"EventDefinition","parameters":{"id":1758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1749,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"540:8:11","nodeType":"VariableDeclaration","scope":1759,"src":"524:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1748,"name":"address","nodeType":"ElementaryTypeName","src":"524:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1751,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"566:4:11","nodeType":"VariableDeclaration","scope":1759,"src":"550:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1750,"name":"address","nodeType":"ElementaryTypeName","src":"550:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1753,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"588:2:11","nodeType":"VariableDeclaration","scope":1759,"src":"572:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1752,"name":"address","nodeType":"ElementaryTypeName","src":"572:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1755,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"600:2:11","nodeType":"VariableDeclaration","scope":1759,"src":"592:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1754,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1757,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"612:5:11","nodeType":"VariableDeclaration","scope":1759,"src":"604:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1756,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"523:95:11"},"src":"503:116:11"},{"anonymous":false,"documentation":{"id":1760,"nodeType":"StructuredDocumentation","src":"625:144:11","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"eventSelector":"4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb","id":1774,"name":"TransferBatch","nameLocation":"780:13:11","nodeType":"EventDefinition","parameters":{"id":1773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1762,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"819:8:11","nodeType":"VariableDeclaration","scope":1774,"src":"803:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1761,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1764,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"853:4:11","nodeType":"VariableDeclaration","scope":1774,"src":"837:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1763,"name":"address","nodeType":"ElementaryTypeName","src":"837:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1766,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"883:2:11","nodeType":"VariableDeclaration","scope":1774,"src":"867:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1765,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1769,"indexed":false,"mutability":"mutable","name":"ids","nameLocation":"905:3:11","nodeType":"VariableDeclaration","scope":1774,"src":"895:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1767,"name":"uint256","nodeType":"ElementaryTypeName","src":"895:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1768,"nodeType":"ArrayTypeName","src":"895:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1772,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"928:6:11","nodeType":"VariableDeclaration","scope":1774,"src":"918:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1770,"name":"uint256","nodeType":"ElementaryTypeName","src":"918:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1771,"nodeType":"ArrayTypeName","src":"918:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"793:147:11"},"src":"774:167:11"},{"anonymous":false,"documentation":{"id":1775,"nodeType":"StructuredDocumentation","src":"947:147:11","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1783,"name":"ApprovalForAll","nameLocation":"1105:14:11","nodeType":"EventDefinition","parameters":{"id":1782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1777,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1136:7:11","nodeType":"VariableDeclaration","scope":1783,"src":"1120:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1776,"name":"address","nodeType":"ElementaryTypeName","src":"1120:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1779,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1161:8:11","nodeType":"VariableDeclaration","scope":1783,"src":"1145:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1778,"name":"address","nodeType":"ElementaryTypeName","src":"1145:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1781,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1176:8:11","nodeType":"VariableDeclaration","scope":1783,"src":"1171:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1780,"name":"bool","nodeType":"ElementaryTypeName","src":"1171:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1119:66:11"},"src":"1099:87:11"},{"anonymous":false,"documentation":{"id":1784,"nodeType":"StructuredDocumentation","src":"1192:343:11","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"eventSelector":"6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b","id":1790,"name":"URI","nameLocation":"1546:3:11","nodeType":"EventDefinition","parameters":{"id":1789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1786,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1557:5:11","nodeType":"VariableDeclaration","scope":1790,"src":"1550:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1785,"name":"string","nodeType":"ElementaryTypeName","src":"1550:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1788,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1580:2:11","nodeType":"VariableDeclaration","scope":1790,"src":"1564:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1787,"name":"uint256","nodeType":"ElementaryTypeName","src":"1564:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:34:11"},"src":"1540:44:11"},{"documentation":{"id":1791,"nodeType":"StructuredDocumentation","src":"1590:90:11","text":" @dev Returns the value of tokens of token type `id` owned by `account`."},"functionSelector":"00fdd58e","id":1800,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1694:9:11","nodeType":"FunctionDefinition","parameters":{"id":1796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1793,"mutability":"mutable","name":"account","nameLocation":"1712:7:11","nodeType":"VariableDeclaration","scope":1800,"src":"1704:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1792,"name":"address","nodeType":"ElementaryTypeName","src":"1704:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1795,"mutability":"mutable","name":"id","nameLocation":"1729:2:11","nodeType":"VariableDeclaration","scope":1800,"src":"1721:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1794,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1703:29:11"},"returnParameters":{"id":1799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1798,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1800,"src":"1756:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1797,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1755:9:11"},"scope":1862,"src":"1685:80:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1801,"nodeType":"StructuredDocumentation","src":"1771:188:11","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":1813,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"1973:14:11","nodeType":"FunctionDefinition","parameters":{"id":1808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1804,"mutability":"mutable","name":"accounts","nameLocation":"2016:8:11","nodeType":"VariableDeclaration","scope":1813,"src":"1997:27:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1802,"name":"address","nodeType":"ElementaryTypeName","src":"1997:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1803,"nodeType":"ArrayTypeName","src":"1997:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1807,"mutability":"mutable","name":"ids","nameLocation":"2053:3:11","nodeType":"VariableDeclaration","scope":1813,"src":"2034:22:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1805,"name":"uint256","nodeType":"ElementaryTypeName","src":"2034:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1806,"nodeType":"ArrayTypeName","src":"2034:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1987:75:11"},"returnParameters":{"id":1812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1813,"src":"2086:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1809,"name":"uint256","nodeType":"ElementaryTypeName","src":"2086:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1810,"nodeType":"ArrayTypeName","src":"2086:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2085:18:11"},"scope":1862,"src":"1964:140:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1814,"nodeType":"StructuredDocumentation","src":"2110:254:11","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"functionSelector":"a22cb465","id":1821,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2378:17:11","nodeType":"FunctionDefinition","parameters":{"id":1819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1816,"mutability":"mutable","name":"operator","nameLocation":"2404:8:11","nodeType":"VariableDeclaration","scope":1821,"src":"2396:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1815,"name":"address","nodeType":"ElementaryTypeName","src":"2396:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1818,"mutability":"mutable","name":"approved","nameLocation":"2419:8:11","nodeType":"VariableDeclaration","scope":1821,"src":"2414:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1817,"name":"bool","nodeType":"ElementaryTypeName","src":"2414:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2395:33:11"},"returnParameters":{"id":1820,"nodeType":"ParameterList","parameters":[],"src":"2437:0:11"},"scope":1862,"src":"2369:69:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1822,"nodeType":"StructuredDocumentation","src":"2444:135:11","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":1831,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"2593:16:11","nodeType":"FunctionDefinition","parameters":{"id":1827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1824,"mutability":"mutable","name":"account","nameLocation":"2618:7:11","nodeType":"VariableDeclaration","scope":1831,"src":"2610:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1823,"name":"address","nodeType":"ElementaryTypeName","src":"2610:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1826,"mutability":"mutable","name":"operator","nameLocation":"2635:8:11","nodeType":"VariableDeclaration","scope":1831,"src":"2627:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1825,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2609:35:11"},"returnParameters":{"id":1830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1831,"src":"2668:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1828,"name":"bool","nodeType":"ElementaryTypeName","src":"2668:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2667:6:11"},"scope":1862,"src":"2584:90:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1832,"nodeType":"StructuredDocumentation","src":"2680:910:11","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","id":1845,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3604:16:11","nodeType":"FunctionDefinition","parameters":{"id":1843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1834,"mutability":"mutable","name":"from","nameLocation":"3629:4:11","nodeType":"VariableDeclaration","scope":1845,"src":"3621:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1833,"name":"address","nodeType":"ElementaryTypeName","src":"3621:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1836,"mutability":"mutable","name":"to","nameLocation":"3643:2:11","nodeType":"VariableDeclaration","scope":1845,"src":"3635:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1835,"name":"address","nodeType":"ElementaryTypeName","src":"3635:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1838,"mutability":"mutable","name":"id","nameLocation":"3655:2:11","nodeType":"VariableDeclaration","scope":1845,"src":"3647:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1837,"name":"uint256","nodeType":"ElementaryTypeName","src":"3647:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1840,"mutability":"mutable","name":"value","nameLocation":"3667:5:11","nodeType":"VariableDeclaration","scope":1845,"src":"3659:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1839,"name":"uint256","nodeType":"ElementaryTypeName","src":"3659:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1842,"mutability":"mutable","name":"data","nameLocation":"3689:4:11","nodeType":"VariableDeclaration","scope":1845,"src":"3674:19:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1841,"name":"bytes","nodeType":"ElementaryTypeName","src":"3674:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3620:74:11"},"returnParameters":{"id":1844,"nodeType":"ParameterList","parameters":[],"src":"3703:0:11"},"scope":1862,"src":"3595:109:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1846,"nodeType":"StructuredDocumentation","src":"3710:814:11","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","id":1861,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4538:21:11","nodeType":"FunctionDefinition","parameters":{"id":1859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1848,"mutability":"mutable","name":"from","nameLocation":"4577:4:11","nodeType":"VariableDeclaration","scope":1861,"src":"4569:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1847,"name":"address","nodeType":"ElementaryTypeName","src":"4569:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1850,"mutability":"mutable","name":"to","nameLocation":"4599:2:11","nodeType":"VariableDeclaration","scope":1861,"src":"4591:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1849,"name":"address","nodeType":"ElementaryTypeName","src":"4591:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1853,"mutability":"mutable","name":"ids","nameLocation":"4630:3:11","nodeType":"VariableDeclaration","scope":1861,"src":"4611:22:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1851,"name":"uint256","nodeType":"ElementaryTypeName","src":"4611:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1852,"nodeType":"ArrayTypeName","src":"4611:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1856,"mutability":"mutable","name":"values","nameLocation":"4662:6:11","nodeType":"VariableDeclaration","scope":1861,"src":"4643:25:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1854,"name":"uint256","nodeType":"ElementaryTypeName","src":"4643:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1855,"nodeType":"ArrayTypeName","src":"4643:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1858,"mutability":"mutable","name":"data","nameLocation":"4693:4:11","nodeType":"VariableDeclaration","scope":1861,"src":"4678:19:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1857,"name":"bytes","nodeType":"ElementaryTypeName","src":"4678:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4559:144:11"},"returnParameters":{"id":1860,"nodeType":"ParameterList","parameters":[],"src":"4712:0:11"},"scope":1862,"src":"4529:184:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1863,"src":"337:4378:11","usedErrors":[],"usedEvents":[1759,1774,1783,1790]}],"src":"110:4606:11"},"id":11},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[1904],"IERC165":[4481]},"id":1905,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1864,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1866,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1905,"sourceUnit":4482,"src":"144:62:12","symbolAliases":[{"foreign":{"id":1865,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"152:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1868,"name":"IERC165","nameLocations":["357:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":4481,"src":"357:7:12"},"id":1869,"nodeType":"InheritanceSpecifier","src":"357:7:12"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1867,"nodeType":"StructuredDocumentation","src":"208:118:12","text":" @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."},"fullyImplemented":false,"id":1904,"linearizedBaseContracts":[1904,4481],"name":"IERC1155Receiver","nameLocation":"337:16:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1870,"nodeType":"StructuredDocumentation","src":"371:827:12","text":" @dev Handles the receipt of a single ERC-1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":1885,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1212:17:12","nodeType":"FunctionDefinition","parameters":{"id":1881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1872,"mutability":"mutable","name":"operator","nameLocation":"1247:8:12","nodeType":"VariableDeclaration","scope":1885,"src":"1239:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1871,"name":"address","nodeType":"ElementaryTypeName","src":"1239:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1874,"mutability":"mutable","name":"from","nameLocation":"1273:4:12","nodeType":"VariableDeclaration","scope":1885,"src":"1265:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1873,"name":"address","nodeType":"ElementaryTypeName","src":"1265:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1876,"mutability":"mutable","name":"id","nameLocation":"1295:2:12","nodeType":"VariableDeclaration","scope":1885,"src":"1287:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1875,"name":"uint256","nodeType":"ElementaryTypeName","src":"1287:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1878,"mutability":"mutable","name":"value","nameLocation":"1315:5:12","nodeType":"VariableDeclaration","scope":1885,"src":"1307:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1877,"name":"uint256","nodeType":"ElementaryTypeName","src":"1307:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1880,"mutability":"mutable","name":"data","nameLocation":"1345:4:12","nodeType":"VariableDeclaration","scope":1885,"src":"1330:19:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1879,"name":"bytes","nodeType":"ElementaryTypeName","src":"1330:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1229:126:12"},"returnParameters":{"id":1884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1885,"src":"1374:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1882,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1374:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1373:8:12"},"scope":1904,"src":"1203:179:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1886,"nodeType":"StructuredDocumentation","src":"1388:995:12","text":" @dev Handles the receipt of a multiple ERC-1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":1903,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2397:22:12","nodeType":"FunctionDefinition","parameters":{"id":1899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1888,"mutability":"mutable","name":"operator","nameLocation":"2437:8:12","nodeType":"VariableDeclaration","scope":1903,"src":"2429:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1887,"name":"address","nodeType":"ElementaryTypeName","src":"2429:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1890,"mutability":"mutable","name":"from","nameLocation":"2463:4:12","nodeType":"VariableDeclaration","scope":1903,"src":"2455:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1889,"name":"address","nodeType":"ElementaryTypeName","src":"2455:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1893,"mutability":"mutable","name":"ids","nameLocation":"2496:3:12","nodeType":"VariableDeclaration","scope":1903,"src":"2477:22:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1891,"name":"uint256","nodeType":"ElementaryTypeName","src":"2477:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1892,"nodeType":"ArrayTypeName","src":"2477:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1896,"mutability":"mutable","name":"values","nameLocation":"2528:6:12","nodeType":"VariableDeclaration","scope":1903,"src":"2509:25:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1894,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1895,"nodeType":"ArrayTypeName","src":"2509:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1898,"mutability":"mutable","name":"data","nameLocation":"2559:4:12","nodeType":"VariableDeclaration","scope":1903,"src":"2544:19:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1897,"name":"bytes","nodeType":"ElementaryTypeName","src":"2544:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2419:150:12"},"returnParameters":{"id":1902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1901,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1903,"src":"2588:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1900,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2588:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2587:8:12"},"scope":1904,"src":"2388:208:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1905,"src":"327:2271:12","usedErrors":[],"usedEvents":[]}],"src":"118:2481:12"},"id":12},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","exportedSymbols":{"IERC1155":[1862],"IERC1155MetadataURI":[1920]},"id":1921,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1906,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"132:24:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"../IERC1155.sol","id":1908,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1921,"sourceUnit":1863,"src":"158:41:13","symbolAliases":[{"foreign":{"id":1907,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"166:8:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1910,"name":"IERC1155","nameLocations":["399:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":1862,"src":"399:8:13"},"id":1911,"nodeType":"InheritanceSpecifier","src":"399:8:13"}],"canonicalName":"IERC1155MetadataURI","contractDependencies":[],"contractKind":"interface","documentation":{"id":1909,"nodeType":"StructuredDocumentation","src":"201:164:13","text":" @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC]."},"fullyImplemented":false,"id":1920,"linearizedBaseContracts":[1920,1862,4481],"name":"IERC1155MetadataURI","nameLocation":"376:19:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1912,"nodeType":"StructuredDocumentation","src":"414:192:13","text":" @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."},"functionSelector":"0e89341c","id":1919,"implemented":false,"kind":"function","modifiers":[],"name":"uri","nameLocation":"620:3:13","nodeType":"FunctionDefinition","parameters":{"id":1915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1914,"mutability":"mutable","name":"id","nameLocation":"632:2:13","nodeType":"VariableDeclaration","scope":1919,"src":"624:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1913,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"623:12:13"},"returnParameters":{"id":1918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1919,"src":"659:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1916,"name":"string","nodeType":"ElementaryTypeName","src":"659:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"658:15:13"},"scope":1920,"src":"611:63:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1921,"src":"366:310:13","usedErrors":[],"usedEvents":[1759,1774,1783,1790]}],"src":"132:545:13"},"id":13},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","exportedSymbols":{"ERC1155Utils":[2074],"IERC1155Errors":[822],"IERC1155Receiver":[1904]},"id":2075,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1922,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"120:24:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"../IERC1155Receiver.sol","id":1924,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2075,"sourceUnit":1905,"src":"146:57:14","symbolAliases":[{"foreign":{"id":1923,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"154:16:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":1926,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2075,"sourceUnit":823,"src":"204:70:14","symbolAliases":[{"foreign":{"id":1925,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"212:14:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1155Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1927,"nodeType":"StructuredDocumentation","src":"276:162:14","text":" @dev Library that provide common ERC-1155 utility functions.\n See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n _Available since v5.1._"},"fullyImplemented":true,"id":2074,"linearizedBaseContracts":[2074],"name":"ERC1155Utils","nameLocation":"447:12:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":1998,"nodeType":"Block","src":"1183:774:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1943,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"1197:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1200:4:14","memberName":"code","nodeType":"MemberAccess","src":"1197:7:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1205:6:14","memberName":"length","nodeType":"MemberAccess","src":"1197:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1214:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1197:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1997,"nodeType":"IfStatement","src":"1193:758:14","trueBody":{"id":1996,"nodeType":"Block","src":"1217:734:14","statements":[{"clauses":[{"block":{"id":1974,"nodeType":"Block","src":"1333:221:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1961,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"1355:8:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1962,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"1367:16:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1904_$","typeString":"type(contract IERC1155Receiver)"}},"id":1963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1384:17:14","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1885,"src":"1367:34:14","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"}},"id":1964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1402:8:14","memberName":"selector","nodeType":"MemberAccess","src":"1367:43:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1355:55:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1973,"nodeType":"IfStatement","src":"1351:189:14","trueBody":{"id":1972,"nodeType":"Block","src":"1412:128:14","statements":[{"errorCall":{"arguments":[{"id":1969,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"1518:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1966,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"1480:14:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$822_$","typeString":"type(contract IERC1155Errors)"}},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1495:22:14","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":797,"src":"1480:37:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1480:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1971,"nodeType":"RevertStatement","src":"1473:48:14"}]}}]},"errorName":"","id":1975,"nodeType":"TryCatchClause","parameters":{"id":1960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1959,"mutability":"mutable","name":"response","nameLocation":"1323:8:14","nodeType":"VariableDeclaration","scope":1975,"src":"1316:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1958,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1316:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1315:17:14"},"src":"1307:247:14"},{"block":{"id":1993,"nodeType":"Block","src":"1583:358:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1979,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"1605:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1612:6:14","memberName":"length","nodeType":"MemberAccess","src":"1605:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1622:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1605:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1991,"nodeType":"Block","src":"1776:151:14","statements":[{"AST":{"nativeSrc":"1823:86:14","nodeType":"YulBlock","src":"1823:86:14","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1860:2:14","nodeType":"YulLiteral","src":"1860:2:14","type":"","value":"32"},{"name":"reason","nativeSrc":"1864:6:14","nodeType":"YulIdentifier","src":"1864:6:14"}],"functionName":{"name":"add","nativeSrc":"1856:3:14","nodeType":"YulIdentifier","src":"1856:3:14"},"nativeSrc":"1856:15:14","nodeType":"YulFunctionCall","src":"1856:15:14"},{"arguments":[{"name":"reason","nativeSrc":"1879:6:14","nodeType":"YulIdentifier","src":"1879:6:14"}],"functionName":{"name":"mload","nativeSrc":"1873:5:14","nodeType":"YulIdentifier","src":"1873:5:14"},"nativeSrc":"1873:13:14","nodeType":"YulFunctionCall","src":"1873:13:14"}],"functionName":{"name":"revert","nativeSrc":"1849:6:14","nodeType":"YulIdentifier","src":"1849:6:14"},"nativeSrc":"1849:38:14","nodeType":"YulFunctionCall","src":"1849:38:14"},"nativeSrc":"1849:38:14","nodeType":"YulExpressionStatement","src":"1849:38:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":1977,"isOffset":false,"isSlot":false,"src":"1864:6:14","valueSize":1},{"declaration":1977,"isOffset":false,"isSlot":false,"src":"1879:6:14","valueSize":1}],"flags":["memory-safe"],"id":1990,"nodeType":"InlineAssembly","src":"1798:111:14"}]},"id":1992,"nodeType":"IfStatement","src":"1601:326:14","trueBody":{"id":1989,"nodeType":"Block","src":"1625:145:14","statements":[{"errorCall":{"arguments":[{"id":1986,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"1748:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1983,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"1710:14:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$822_$","typeString":"type(contract IERC1155Errors)"}},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1725:22:14","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":797,"src":"1710:37:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1710:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1988,"nodeType":"RevertStatement","src":"1703:48:14"}]}}]},"errorName":"","id":1994,"nodeType":"TryCatchClause","parameters":{"id":1978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1977,"mutability":"mutable","name":"reason","nameLocation":"1575:6:14","nodeType":"VariableDeclaration","scope":1994,"src":"1562:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1976,"name":"bytes","nodeType":"ElementaryTypeName","src":"1562:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1561:21:14"},"src":"1555:386:14"}],"externalCall":{"arguments":[{"id":1952,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"1274:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1953,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"1284:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1954,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"1290:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"1294:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1956,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"1301:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1949,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"1252:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1948,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"1235:16:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1904_$","typeString":"type(contract IERC1155Receiver)"}},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1235:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1904","typeString":"contract IERC1155Receiver"}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1256:17:14","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1885,"src":"1235:38:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1235:71:14","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1995,"nodeType":"TryStatement","src":"1231:710:14"}]}}]},"documentation":{"id":1928,"nodeType":"StructuredDocumentation","src":"466:527:14","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC1155-onERC1155Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":1999,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155Received","nameLocation":"1007:22:14","nodeType":"FunctionDefinition","parameters":{"id":1941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1930,"mutability":"mutable","name":"operator","nameLocation":"1047:8:14","nodeType":"VariableDeclaration","scope":1999,"src":"1039:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1929,"name":"address","nodeType":"ElementaryTypeName","src":"1039:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1932,"mutability":"mutable","name":"from","nameLocation":"1073:4:14","nodeType":"VariableDeclaration","scope":1999,"src":"1065:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1931,"name":"address","nodeType":"ElementaryTypeName","src":"1065:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1934,"mutability":"mutable","name":"to","nameLocation":"1095:2:14","nodeType":"VariableDeclaration","scope":1999,"src":"1087:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1933,"name":"address","nodeType":"ElementaryTypeName","src":"1087:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1936,"mutability":"mutable","name":"id","nameLocation":"1115:2:14","nodeType":"VariableDeclaration","scope":1999,"src":"1107:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1935,"name":"uint256","nodeType":"ElementaryTypeName","src":"1107:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1938,"mutability":"mutable","name":"value","nameLocation":"1135:5:14","nodeType":"VariableDeclaration","scope":1999,"src":"1127:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1937,"name":"uint256","nodeType":"ElementaryTypeName","src":"1127:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1940,"mutability":"mutable","name":"data","nameLocation":"1163:4:14","nodeType":"VariableDeclaration","scope":1999,"src":"1150:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1939,"name":"bytes","nodeType":"ElementaryTypeName","src":"1150:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1029:144:14"},"returnParameters":{"id":1942,"nodeType":"ParameterList","parameters":[],"src":"1183:0:14"},"scope":2074,"src":"998:959:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2072,"nodeType":"Block","src":"2715:816:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2017,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"2729:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2732:4:14","memberName":"code","nodeType":"MemberAccess","src":"2729:7:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2737:6:14","memberName":"length","nodeType":"MemberAccess","src":"2729:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2746:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2729:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2071,"nodeType":"IfStatement","src":"2725:800:14","trueBody":{"id":2070,"nodeType":"Block","src":"2749:776:14","statements":[{"clauses":[{"block":{"id":2048,"nodeType":"Block","src":"2902:226:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2035,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"2924:8:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":2036,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"2936:16:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1904_$","typeString":"type(contract IERC1155Receiver)"}},"id":2037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2953:22:14","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1903,"src":"2936:39:14","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"}},"id":2038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2976:8:14","memberName":"selector","nodeType":"MemberAccess","src":"2936:48:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2924:60:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2047,"nodeType":"IfStatement","src":"2920:194:14","trueBody":{"id":2046,"nodeType":"Block","src":"2986:128:14","statements":[{"errorCall":{"arguments":[{"id":2043,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"3092:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2040,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"3054:14:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$822_$","typeString":"type(contract IERC1155Errors)"}},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3069:22:14","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":797,"src":"3054:37:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3054:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2045,"nodeType":"RevertStatement","src":"3047:48:14"}]}}]},"errorName":"","id":2049,"nodeType":"TryCatchClause","parameters":{"id":2034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2033,"mutability":"mutable","name":"response","nameLocation":"2879:8:14","nodeType":"VariableDeclaration","scope":2049,"src":"2872:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2032,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2872:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2854:47:14"},"src":"2846:282:14"},{"block":{"id":2067,"nodeType":"Block","src":"3157:358:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2053,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"3179:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3186:6:14","memberName":"length","nodeType":"MemberAccess","src":"3179:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3196:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3179:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2065,"nodeType":"Block","src":"3350:151:14","statements":[{"AST":{"nativeSrc":"3397:86:14","nodeType":"YulBlock","src":"3397:86:14","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3434:2:14","nodeType":"YulLiteral","src":"3434:2:14","type":"","value":"32"},{"name":"reason","nativeSrc":"3438:6:14","nodeType":"YulIdentifier","src":"3438:6:14"}],"functionName":{"name":"add","nativeSrc":"3430:3:14","nodeType":"YulIdentifier","src":"3430:3:14"},"nativeSrc":"3430:15:14","nodeType":"YulFunctionCall","src":"3430:15:14"},{"arguments":[{"name":"reason","nativeSrc":"3453:6:14","nodeType":"YulIdentifier","src":"3453:6:14"}],"functionName":{"name":"mload","nativeSrc":"3447:5:14","nodeType":"YulIdentifier","src":"3447:5:14"},"nativeSrc":"3447:13:14","nodeType":"YulFunctionCall","src":"3447:13:14"}],"functionName":{"name":"revert","nativeSrc":"3423:6:14","nodeType":"YulIdentifier","src":"3423:6:14"},"nativeSrc":"3423:38:14","nodeType":"YulFunctionCall","src":"3423:38:14"},"nativeSrc":"3423:38:14","nodeType":"YulExpressionStatement","src":"3423:38:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":2051,"isOffset":false,"isSlot":false,"src":"3438:6:14","valueSize":1},{"declaration":2051,"isOffset":false,"isSlot":false,"src":"3453:6:14","valueSize":1}],"flags":["memory-safe"],"id":2064,"nodeType":"InlineAssembly","src":"3372:111:14"}]},"id":2066,"nodeType":"IfStatement","src":"3175:326:14","trueBody":{"id":2063,"nodeType":"Block","src":"3199:145:14","statements":[{"errorCall":{"arguments":[{"id":2060,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"3322:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2057,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"3284:14:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$822_$","typeString":"type(contract IERC1155Errors)"}},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3299:22:14","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":797,"src":"3284:37:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2062,"nodeType":"RevertStatement","src":"3277:48:14"}]}}]},"errorName":"","id":2068,"nodeType":"TryCatchClause","parameters":{"id":2052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2051,"mutability":"mutable","name":"reason","nameLocation":"3149:6:14","nodeType":"VariableDeclaration","scope":2068,"src":"3136:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2050,"name":"bytes","nodeType":"ElementaryTypeName","src":"3136:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3135:21:14"},"src":"3129:386:14"}],"externalCall":{"arguments":[{"id":2026,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"2811:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2027,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"2821:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2028,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"2827:3:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2029,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"2832:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2030,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"2840:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2023,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"2784:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2022,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"2767:16:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1904_$","typeString":"type(contract IERC1155Receiver)"}},"id":2024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2767:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1904","typeString":"contract IERC1155Receiver"}},"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2788:22:14","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1903,"src":"2767:43:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2767:78:14","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2069,"nodeType":"TryStatement","src":"2763:752:14"}]}}]},"documentation":{"id":2000,"nodeType":"StructuredDocumentation","src":"1963:537:14","text":" @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155-onERC1155BatchReceived}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":2073,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155BatchReceived","nameLocation":"2514:27:14","nodeType":"FunctionDefinition","parameters":{"id":2015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2002,"mutability":"mutable","name":"operator","nameLocation":"2559:8:14","nodeType":"VariableDeclaration","scope":2073,"src":"2551:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2001,"name":"address","nodeType":"ElementaryTypeName","src":"2551:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2004,"mutability":"mutable","name":"from","nameLocation":"2585:4:14","nodeType":"VariableDeclaration","scope":2073,"src":"2577:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2003,"name":"address","nodeType":"ElementaryTypeName","src":"2577:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2006,"mutability":"mutable","name":"to","nameLocation":"2607:2:14","nodeType":"VariableDeclaration","scope":2073,"src":"2599:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2005,"name":"address","nodeType":"ElementaryTypeName","src":"2599:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2009,"mutability":"mutable","name":"ids","nameLocation":"2636:3:14","nodeType":"VariableDeclaration","scope":2073,"src":"2619:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2007,"name":"uint256","nodeType":"ElementaryTypeName","src":"2619:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2008,"nodeType":"ArrayTypeName","src":"2619:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2012,"mutability":"mutable","name":"values","nameLocation":"2666:6:14","nodeType":"VariableDeclaration","scope":2073,"src":"2649:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2010,"name":"uint256","nodeType":"ElementaryTypeName","src":"2649:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2011,"nodeType":"ArrayTypeName","src":"2649:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2014,"mutability":"mutable","name":"data","nameLocation":"2695:4:14","nodeType":"VariableDeclaration","scope":2073,"src":"2682:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2013,"name":"bytes","nodeType":"ElementaryTypeName","src":"2682:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2541:164:14"},"returnParameters":{"id":2016,"nodeType":"ParameterList","parameters":[],"src":"2715:0:14"},"scope":2074,"src":"2505:1026:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2075,"src":"439:3094:14","usedErrors":[],"usedEvents":[]}],"src":"120:3414:14"},"id":14},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[3633],"ERC20":[2589],"IERC20":[2667],"IERC20Errors":[727],"IERC20Metadata":[2693]},"id":2590,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2076,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":2078,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2590,"sourceUnit":2668,"src":"131:36:15","symbolAliases":[{"foreign":{"id":2077,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"139:6:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":2080,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2590,"sourceUnit":2694,"src":"168:63:15","symbolAliases":[{"foreign":{"id":2079,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"176:14:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":2082,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2590,"sourceUnit":3634,"src":"232:48:15","symbolAliases":[{"foreign":{"id":2081,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"240:7:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":2084,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2590,"sourceUnit":823,"src":"281:65:15","symbolAliases":[{"foreign":{"id":2083,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"289:12:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2086,"name":"Context","nameLocations":["1133:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":3633,"src":"1133:7:15"},"id":2087,"nodeType":"InheritanceSpecifier","src":"1133:7:15"},{"baseName":{"id":2088,"name":"IERC20","nameLocations":["1142:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"1142:6:15"},"id":2089,"nodeType":"InheritanceSpecifier","src":"1142:6:15"},{"baseName":{"id":2090,"name":"IERC20Metadata","nameLocations":["1150:14:15"],"nodeType":"IdentifierPath","referencedDeclaration":2693,"src":"1150:14:15"},"id":2091,"nodeType":"InheritanceSpecifier","src":"1150:14:15"},{"baseName":{"id":2092,"name":"IERC20Errors","nameLocations":["1166:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":727,"src":"1166:12:15"},"id":2093,"nodeType":"InheritanceSpecifier","src":"1166:12:15"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":2085,"nodeType":"StructuredDocumentation","src":"348:757:15","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":2589,"linearizedBaseContracts":[2589,727,2693,2667,3633],"name":"ERC20","nameLocation":"1124:5:15","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2097,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:15","nodeType":"VariableDeclaration","scope":2589,"src":"1185:53:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2096,"keyName":"account","keyNameLocation":"1201:7:15","keyType":{"id":2094,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2095,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":2103,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:15","nodeType":"VariableDeclaration","scope":2589,"src":"1245:83:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":2102,"keyName":"account","keyNameLocation":"1261:7:15","keyType":{"id":2098,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2101,"keyName":"spender","keyNameLocation":"1288:7:15","keyType":{"id":2099,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2100,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":2105,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:15","nodeType":"VariableDeclaration","scope":2589,"src":"1335:28:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2104,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2107,"mutability":"mutable","name":"_name","nameLocation":"1385:5:15","nodeType":"VariableDeclaration","scope":2589,"src":"1370:20:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2106,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2109,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:15","nodeType":"VariableDeclaration","scope":2589,"src":"1396:22:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2108,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":2125,"nodeType":"Block","src":"1657:57:15","statements":[{"expression":{"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2117,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"1667:5:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2118,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"1675:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1667:13:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2120,"nodeType":"ExpressionStatement","src":"1667:13:15"},{"expression":{"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2121,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"1690:7:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2122,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"1700:7:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1690:17:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2124,"nodeType":"ExpressionStatement","src":"1690:17:15"}]},"documentation":{"id":2110,"nodeType":"StructuredDocumentation","src":"1425:171:15","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":2126,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2112,"mutability":"mutable","name":"name_","nameLocation":"1627:5:15","nodeType":"VariableDeclaration","scope":2126,"src":"1613:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2111,"name":"string","nodeType":"ElementaryTypeName","src":"1613:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2114,"mutability":"mutable","name":"symbol_","nameLocation":"1648:7:15","nodeType":"VariableDeclaration","scope":2126,"src":"1634:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2113,"name":"string","nodeType":"ElementaryTypeName","src":"1634:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1612:44:15"},"returnParameters":{"id":2116,"nodeType":"ParameterList","parameters":[],"src":"1657:0:15"},"scope":2589,"src":"1601:113:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2680],"body":{"id":2134,"nodeType":"Block","src":"1839:29:15","statements":[{"expression":{"id":2132,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"1856:5:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2131,"id":2133,"nodeType":"Return","src":"1849:12:15"}]},"documentation":{"id":2127,"nodeType":"StructuredDocumentation","src":"1720:54:15","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2135,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1788:4:15","nodeType":"FunctionDefinition","parameters":{"id":2128,"nodeType":"ParameterList","parameters":[],"src":"1792:2:15"},"returnParameters":{"id":2131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2135,"src":"1824:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2129,"name":"string","nodeType":"ElementaryTypeName","src":"1824:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1823:15:15"},"scope":2589,"src":"1779:89:15","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2686],"body":{"id":2143,"nodeType":"Block","src":"2043:31:15","statements":[{"expression":{"id":2141,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"2060:7:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2140,"id":2142,"nodeType":"Return","src":"2053:14:15"}]},"documentation":{"id":2136,"nodeType":"StructuredDocumentation","src":"1874:102:15","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":2144,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1990:6:15","nodeType":"FunctionDefinition","parameters":{"id":2137,"nodeType":"ParameterList","parameters":[],"src":"1996:2:15"},"returnParameters":{"id":2140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2144,"src":"2028:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2138,"name":"string","nodeType":"ElementaryTypeName","src":"2028:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2027:15:15"},"scope":2589,"src":"1981:93:15","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2692],"body":{"id":2152,"nodeType":"Block","src":"2763:26:15","statements":[{"expression":{"hexValue":"3138","id":2150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:2:15","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":2149,"id":2151,"nodeType":"Return","src":"2773:9:15"}]},"documentation":{"id":2145,"nodeType":"StructuredDocumentation","src":"2080:622:15","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":2153,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2716:8:15","nodeType":"FunctionDefinition","parameters":{"id":2146,"nodeType":"ParameterList","parameters":[],"src":"2724:2:15"},"returnParameters":{"id":2149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2153,"src":"2756:5:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2147,"name":"uint8","nodeType":"ElementaryTypeName","src":"2756:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2755:7:15"},"scope":2589,"src":"2707:82:15","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2616],"body":{"id":2161,"nodeType":"Block","src":"2910:36:15","statements":[{"expression":{"id":2159,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"2927:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2158,"id":2160,"nodeType":"Return","src":"2920:19:15"}]},"documentation":{"id":2154,"nodeType":"StructuredDocumentation","src":"2795:49:15","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":2162,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2858:11:15","nodeType":"FunctionDefinition","parameters":{"id":2155,"nodeType":"ParameterList","parameters":[],"src":"2869:2:15"},"returnParameters":{"id":2158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2162,"src":"2901:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2156,"name":"uint256","nodeType":"ElementaryTypeName","src":"2901:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2900:9:15"},"scope":2589,"src":"2849:97:15","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2624],"body":{"id":2174,"nodeType":"Block","src":"3078:42:15","statements":[{"expression":{"baseExpression":{"id":2170,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"3095:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2172,"indexExpression":{"id":2171,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"3105:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3095:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2169,"id":2173,"nodeType":"Return","src":"3088:25:15"}]},"documentation":{"id":2163,"nodeType":"StructuredDocumentation","src":"2952:47:15","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":2175,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3013:9:15","nodeType":"FunctionDefinition","parameters":{"id":2166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2165,"mutability":"mutable","name":"account","nameLocation":"3031:7:15","nodeType":"VariableDeclaration","scope":2175,"src":"3023:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2164,"name":"address","nodeType":"ElementaryTypeName","src":"3023:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3022:17:15"},"returnParameters":{"id":2169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2175,"src":"3069:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2167,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3068:9:15"},"scope":2589,"src":"3004:116:15","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2634],"body":{"id":2198,"nodeType":"Block","src":"3390:103:15","statements":[{"assignments":[2186],"declarations":[{"constant":false,"id":2186,"mutability":"mutable","name":"owner","nameLocation":"3408:5:15","nodeType":"VariableDeclaration","scope":2198,"src":"3400:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2185,"name":"address","nodeType":"ElementaryTypeName","src":"3400:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2189,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2187,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"3416:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3400:28:15"},{"expression":{"arguments":[{"id":2191,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"3448:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2192,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"3455:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2193,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"3459:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2190,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"3438:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3438:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2195,"nodeType":"ExpressionStatement","src":"3438:27:15"},{"expression":{"hexValue":"74727565","id":2196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3482:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2184,"id":2197,"nodeType":"Return","src":"3475:11:15"}]},"documentation":{"id":2176,"nodeType":"StructuredDocumentation","src":"3126:184:15","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":2199,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3324:8:15","nodeType":"FunctionDefinition","parameters":{"id":2181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2178,"mutability":"mutable","name":"to","nameLocation":"3341:2:15","nodeType":"VariableDeclaration","scope":2199,"src":"3333:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2177,"name":"address","nodeType":"ElementaryTypeName","src":"3333:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2180,"mutability":"mutable","name":"value","nameLocation":"3353:5:15","nodeType":"VariableDeclaration","scope":2199,"src":"3345:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2179,"name":"uint256","nodeType":"ElementaryTypeName","src":"3345:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3332:27:15"},"returnParameters":{"id":2184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2199,"src":"3384:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2182,"name":"bool","nodeType":"ElementaryTypeName","src":"3384:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3383:6:15"},"scope":2589,"src":"3315:178:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2644],"body":{"id":2215,"nodeType":"Block","src":"3640:51:15","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":2209,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"3657:11:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2211,"indexExpression":{"id":2210,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"3669:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:18:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2213,"indexExpression":{"id":2212,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"3676:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2208,"id":2214,"nodeType":"Return","src":"3650:34:15"}]},"documentation":{"id":2200,"nodeType":"StructuredDocumentation","src":"3499:47:15","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":2216,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3560:9:15","nodeType":"FunctionDefinition","parameters":{"id":2205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2202,"mutability":"mutable","name":"owner","nameLocation":"3578:5:15","nodeType":"VariableDeclaration","scope":2216,"src":"3570:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2201,"name":"address","nodeType":"ElementaryTypeName","src":"3570:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2204,"mutability":"mutable","name":"spender","nameLocation":"3593:7:15","nodeType":"VariableDeclaration","scope":2216,"src":"3585:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2203,"name":"address","nodeType":"ElementaryTypeName","src":"3585:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3569:32:15"},"returnParameters":{"id":2208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2216,"src":"3631:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2206,"name":"uint256","nodeType":"ElementaryTypeName","src":"3631:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3630:9:15"},"scope":2589,"src":"3551:140:15","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2654],"body":{"id":2239,"nodeType":"Block","src":"4077:107:15","statements":[{"assignments":[2227],"declarations":[{"constant":false,"id":2227,"mutability":"mutable","name":"owner","nameLocation":"4095:5:15","nodeType":"VariableDeclaration","scope":2239,"src":"4087:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2226,"name":"address","nodeType":"ElementaryTypeName","src":"4087:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2230,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2228,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"4103:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4103:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4087:28:15"},{"expression":{"arguments":[{"id":2232,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"4134:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2233,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"4141:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"4150:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2231,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2480,2540],"referencedDeclaration":2480,"src":"4125:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4125:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2236,"nodeType":"ExpressionStatement","src":"4125:31:15"},{"expression":{"hexValue":"74727565","id":2237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4173:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2225,"id":2238,"nodeType":"Return","src":"4166:11:15"}]},"documentation":{"id":2217,"nodeType":"StructuredDocumentation","src":"3697:296:15","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":2240,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4007:7:15","nodeType":"FunctionDefinition","parameters":{"id":2222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2219,"mutability":"mutable","name":"spender","nameLocation":"4023:7:15","nodeType":"VariableDeclaration","scope":2240,"src":"4015:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2218,"name":"address","nodeType":"ElementaryTypeName","src":"4015:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2221,"mutability":"mutable","name":"value","nameLocation":"4040:5:15","nodeType":"VariableDeclaration","scope":2240,"src":"4032:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2220,"name":"uint256","nodeType":"ElementaryTypeName","src":"4032:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4014:32:15"},"returnParameters":{"id":2225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2224,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2240,"src":"4071:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2223,"name":"bool","nodeType":"ElementaryTypeName","src":"4071:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4070:6:15"},"scope":2589,"src":"3998:186:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2666],"body":{"id":2271,"nodeType":"Block","src":"4869:151:15","statements":[{"assignments":[2253],"declarations":[{"constant":false,"id":2253,"mutability":"mutable","name":"spender","nameLocation":"4887:7:15","nodeType":"VariableDeclaration","scope":2271,"src":"4879:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2252,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2256,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2254,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"4897:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4897:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4879:30:15"},{"expression":{"arguments":[{"id":2258,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"4935:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2259,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"4941:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"4950:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2257,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"4919:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4919:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2262,"nodeType":"ExpressionStatement","src":"4919:37:15"},{"expression":{"arguments":[{"id":2264,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"4976:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2265,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"4982:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"4986:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2263,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"4966:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4966:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2268,"nodeType":"ExpressionStatement","src":"4966:26:15"},{"expression":{"hexValue":"74727565","id":2269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5009:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2251,"id":2270,"nodeType":"Return","src":"5002:11:15"}]},"documentation":{"id":2241,"nodeType":"StructuredDocumentation","src":"4190:581:15","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":2272,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4785:12:15","nodeType":"FunctionDefinition","parameters":{"id":2248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2243,"mutability":"mutable","name":"from","nameLocation":"4806:4:15","nodeType":"VariableDeclaration","scope":2272,"src":"4798:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2242,"name":"address","nodeType":"ElementaryTypeName","src":"4798:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2245,"mutability":"mutable","name":"to","nameLocation":"4820:2:15","nodeType":"VariableDeclaration","scope":2272,"src":"4812:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2244,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2247,"mutability":"mutable","name":"value","nameLocation":"4832:5:15","nodeType":"VariableDeclaration","scope":2272,"src":"4824:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2246,"name":"uint256","nodeType":"ElementaryTypeName","src":"4824:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4797:41:15"},"returnParameters":{"id":2251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2272,"src":"4863:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2249,"name":"bool","nodeType":"ElementaryTypeName","src":"4863:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4862:6:15"},"scope":2589,"src":"4776:244:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2318,"nodeType":"Block","src":"5462:231:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2282,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"5476:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5492:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5484:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2283,"name":"address","nodeType":"ElementaryTypeName","src":"5484:7:15","typeDescriptions":{}}},"id":2286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5476:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2296,"nodeType":"IfStatement","src":"5472:86:15","trueBody":{"id":2295,"nodeType":"Block","src":"5496:62:15","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5544:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5536:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2289,"name":"address","nodeType":"ElementaryTypeName","src":"5536:7:15","typeDescriptions":{}}},"id":2292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5536:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2288,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"5517:18:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2294,"nodeType":"RevertStatement","src":"5510:37:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2297,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"5571:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5585:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5577:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2298,"name":"address","nodeType":"ElementaryTypeName","src":"5577:7:15","typeDescriptions":{}}},"id":2301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5577:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5571:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2311,"nodeType":"IfStatement","src":"5567:86:15","trueBody":{"id":2310,"nodeType":"Block","src":"5589:64:15","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5639:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5631:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2304,"name":"address","nodeType":"ElementaryTypeName","src":"5631:7:15","typeDescriptions":{}}},"id":2307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5631:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2303,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"5610:20:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5610:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2309,"nodeType":"RevertStatement","src":"5603:39:15"}]}},{"expression":{"arguments":[{"id":2313,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"5670:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2314,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"5676:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"5680:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2312,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"5662:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5662:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2317,"nodeType":"ExpressionStatement","src":"5662:24:15"}]},"documentation":{"id":2273,"nodeType":"StructuredDocumentation","src":"5026:362:15","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":2319,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5402:9:15","nodeType":"FunctionDefinition","parameters":{"id":2280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2275,"mutability":"mutable","name":"from","nameLocation":"5420:4:15","nodeType":"VariableDeclaration","scope":2319,"src":"5412:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2274,"name":"address","nodeType":"ElementaryTypeName","src":"5412:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2277,"mutability":"mutable","name":"to","nameLocation":"5434:2:15","nodeType":"VariableDeclaration","scope":2319,"src":"5426:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2276,"name":"address","nodeType":"ElementaryTypeName","src":"5426:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2279,"mutability":"mutable","name":"value","nameLocation":"5446:5:15","nodeType":"VariableDeclaration","scope":2319,"src":"5438:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2278,"name":"uint256","nodeType":"ElementaryTypeName","src":"5438:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5411:41:15"},"returnParameters":{"id":2281,"nodeType":"ParameterList","parameters":[],"src":"5462:0:15"},"scope":2589,"src":"5393:300:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2395,"nodeType":"Block","src":"6083:1032:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2329,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"6097:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6113:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6105:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2330,"name":"address","nodeType":"ElementaryTypeName","src":"6105:7:15","typeDescriptions":{}}},"id":2333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6105:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6097:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2366,"nodeType":"Block","src":"6271:362:15","statements":[{"assignments":[2341],"declarations":[{"constant":false,"id":2341,"mutability":"mutable","name":"fromBalance","nameLocation":"6293:11:15","nodeType":"VariableDeclaration","scope":2366,"src":"6285:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2340,"name":"uint256","nodeType":"ElementaryTypeName","src":"6285:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2345,"initialValue":{"baseExpression":{"id":2342,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"6307:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2344,"indexExpression":{"id":2343,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"6317:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6307:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6285:37:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2346,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"6340:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"6354:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6340:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2356,"nodeType":"IfStatement","src":"6336:115:15","trueBody":{"id":2355,"nodeType":"Block","src":"6361:90:15","statements":[{"errorCall":{"arguments":[{"id":2350,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"6411:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2351,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"6417:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"6430:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2349,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"6386:24:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6386:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2354,"nodeType":"RevertStatement","src":"6379:57:15"}]}},{"id":2365,"nodeType":"UncheckedBlock","src":"6464:159:15","statements":[{"expression":{"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2357,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"6571:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2359,"indexExpression":{"id":2358,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"6581:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6571:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2360,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"6589:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"6603:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6589:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6571:37:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2364,"nodeType":"ExpressionStatement","src":"6571:37:15"}]}]},"id":2367,"nodeType":"IfStatement","src":"6093:540:15","trueBody":{"id":2339,"nodeType":"Block","src":"6117:148:15","statements":[{"expression":{"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2335,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"6233:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"6249:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6233:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2338,"nodeType":"ExpressionStatement","src":"6233:21:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2368,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"6647:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6661:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6653:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2369,"name":"address","nodeType":"ElementaryTypeName","src":"6653:7:15","typeDescriptions":{}}},"id":2372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6653:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6647:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2387,"nodeType":"Block","src":"6862:206:15","statements":[{"id":2386,"nodeType":"UncheckedBlock","src":"6876:182:15","statements":[{"expression":{"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2380,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"7021:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2382,"indexExpression":{"id":2381,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"7031:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7021:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"7038:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7021:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2385,"nodeType":"ExpressionStatement","src":"7021:22:15"}]}]},"id":2388,"nodeType":"IfStatement","src":"6643:425:15","trueBody":{"id":2379,"nodeType":"Block","src":"6665:191:15","statements":[{"id":2378,"nodeType":"UncheckedBlock","src":"6679:167:15","statements":[{"expression":{"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2374,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"6810:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"6826:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6810:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2377,"nodeType":"ExpressionStatement","src":"6810:21:15"}]}]}},{"eventCall":{"arguments":[{"id":2390,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"7092:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2391,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"7098:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"7102:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2389,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"7083:8:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7083:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2394,"nodeType":"EmitStatement","src":"7078:30:15"}]},"documentation":{"id":2320,"nodeType":"StructuredDocumentation","src":"5699:304:15","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":2396,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6017:7:15","nodeType":"FunctionDefinition","parameters":{"id":2327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2322,"mutability":"mutable","name":"from","nameLocation":"6033:4:15","nodeType":"VariableDeclaration","scope":2396,"src":"6025:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2321,"name":"address","nodeType":"ElementaryTypeName","src":"6025:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2324,"mutability":"mutable","name":"to","nameLocation":"6047:2:15","nodeType":"VariableDeclaration","scope":2396,"src":"6039:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2323,"name":"address","nodeType":"ElementaryTypeName","src":"6039:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2326,"mutability":"mutable","name":"value","nameLocation":"6059:5:15","nodeType":"VariableDeclaration","scope":2396,"src":"6051:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2325,"name":"uint256","nodeType":"ElementaryTypeName","src":"6051:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6024:41:15"},"returnParameters":{"id":2328,"nodeType":"ParameterList","parameters":[],"src":"6083:0:15"},"scope":2589,"src":"6008:1107:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2428,"nodeType":"Block","src":"7514:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2404,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"7528:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7547:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7539:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2405,"name":"address","nodeType":"ElementaryTypeName","src":"7539:7:15","typeDescriptions":{}}},"id":2408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7539:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7528:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2418,"nodeType":"IfStatement","src":"7524:91:15","trueBody":{"id":2417,"nodeType":"Block","src":"7551:64:15","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7601:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7593:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2411,"name":"address","nodeType":"ElementaryTypeName","src":"7593:7:15","typeDescriptions":{}}},"id":2414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7593:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2410,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"7572:20:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7572:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2416,"nodeType":"RevertStatement","src":"7565:39:15"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7640:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7632:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2420,"name":"address","nodeType":"ElementaryTypeName","src":"7632:7:15","typeDescriptions":{}}},"id":2423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7632:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2424,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"7644:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"7653:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2419,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"7624:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7624:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2427,"nodeType":"ExpressionStatement","src":"7624:35:15"}]},"documentation":{"id":2397,"nodeType":"StructuredDocumentation","src":"7121:332:15","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":2429,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7467:5:15","nodeType":"FunctionDefinition","parameters":{"id":2402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2399,"mutability":"mutable","name":"account","nameLocation":"7481:7:15","nodeType":"VariableDeclaration","scope":2429,"src":"7473:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2398,"name":"address","nodeType":"ElementaryTypeName","src":"7473:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2401,"mutability":"mutable","name":"value","nameLocation":"7498:5:15","nodeType":"VariableDeclaration","scope":2429,"src":"7490:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2400,"name":"uint256","nodeType":"ElementaryTypeName","src":"7490:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7472:32:15"},"returnParameters":{"id":2403,"nodeType":"ParameterList","parameters":[],"src":"7514:0:15"},"scope":2589,"src":"7458:208:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2461,"nodeType":"Block","src":"8040:150:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2437,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"8054:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8073:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8065:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2438,"name":"address","nodeType":"ElementaryTypeName","src":"8065:7:15","typeDescriptions":{}}},"id":2441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8065:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8054:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2451,"nodeType":"IfStatement","src":"8050:89:15","trueBody":{"id":2450,"nodeType":"Block","src":"8077:62:15","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8125:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8117:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2444,"name":"address","nodeType":"ElementaryTypeName","src":"8117:7:15","typeDescriptions":{}}},"id":2447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8117:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2443,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"8098:18:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2449,"nodeType":"RevertStatement","src":"8091:37:15"}]}},{"expression":{"arguments":[{"id":2453,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"8156:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8173:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8165:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2454,"name":"address","nodeType":"ElementaryTypeName","src":"8165:7:15","typeDescriptions":{}}},"id":2457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8165:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"8177:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2452,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"8148:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8148:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2460,"nodeType":"ExpressionStatement","src":"8148:35:15"}]},"documentation":{"id":2430,"nodeType":"StructuredDocumentation","src":"7672:307:15","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":2462,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7993:5:15","nodeType":"FunctionDefinition","parameters":{"id":2435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2432,"mutability":"mutable","name":"account","nameLocation":"8007:7:15","nodeType":"VariableDeclaration","scope":2462,"src":"7999:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2431,"name":"address","nodeType":"ElementaryTypeName","src":"7999:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2434,"mutability":"mutable","name":"value","nameLocation":"8024:5:15","nodeType":"VariableDeclaration","scope":2462,"src":"8016:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2433,"name":"uint256","nodeType":"ElementaryTypeName","src":"8016:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7998:32:15"},"returnParameters":{"id":2436,"nodeType":"ParameterList","parameters":[],"src":"8040:0:15"},"scope":2589,"src":"7984:206:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2479,"nodeType":"Block","src":"8800:54:15","statements":[{"expression":{"arguments":[{"id":2473,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"8819:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2474,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"8826:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"8835:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":2476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8842:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2472,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2480,2540],"referencedDeclaration":2540,"src":"8810:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8810:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2478,"nodeType":"ExpressionStatement","src":"8810:37:15"}]},"documentation":{"id":2463,"nodeType":"StructuredDocumentation","src":"8196:525:15","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":2480,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8735:8:15","nodeType":"FunctionDefinition","parameters":{"id":2470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2465,"mutability":"mutable","name":"owner","nameLocation":"8752:5:15","nodeType":"VariableDeclaration","scope":2480,"src":"8744:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2464,"name":"address","nodeType":"ElementaryTypeName","src":"8744:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2467,"mutability":"mutable","name":"spender","nameLocation":"8767:7:15","nodeType":"VariableDeclaration","scope":2480,"src":"8759:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2466,"name":"address","nodeType":"ElementaryTypeName","src":"8759:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2469,"mutability":"mutable","name":"value","nameLocation":"8784:5:15","nodeType":"VariableDeclaration","scope":2480,"src":"8776:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2468,"name":"uint256","nodeType":"ElementaryTypeName","src":"8776:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8743:47:15"},"returnParameters":{"id":2471,"nodeType":"ParameterList","parameters":[],"src":"8800:0:15"},"scope":2589,"src":"8726:128:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2539,"nodeType":"Block","src":"9799:334:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2492,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"9813:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9830:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9822:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2493,"name":"address","nodeType":"ElementaryTypeName","src":"9822:7:15","typeDescriptions":{}}},"id":2496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9813:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2506,"nodeType":"IfStatement","src":"9809:89:15","trueBody":{"id":2505,"nodeType":"Block","src":"9834:64:15","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9884:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9876:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2499,"name":"address","nodeType":"ElementaryTypeName","src":"9876:7:15","typeDescriptions":{}}},"id":2502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9876:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2498,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"9855:20:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9855:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2504,"nodeType":"RevertStatement","src":"9848:39:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2507,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"9911:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9930:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9922:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2508,"name":"address","nodeType":"ElementaryTypeName","src":"9922:7:15","typeDescriptions":{}}},"id":2511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9922:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9911:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2521,"nodeType":"IfStatement","src":"9907:90:15","trueBody":{"id":2520,"nodeType":"Block","src":"9934:63:15","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9983:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9975:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2514,"name":"address","nodeType":"ElementaryTypeName","src":"9975:7:15","typeDescriptions":{}}},"id":2517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9975:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2513,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"9955:19:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9955:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2519,"nodeType":"RevertStatement","src":"9948:38:15"}]}},{"expression":{"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2522,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"10006:11:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2525,"indexExpression":{"id":2523,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"10018:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10006:18:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2526,"indexExpression":{"id":2524,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"10025:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10006:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"10036:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10006:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2529,"nodeType":"ExpressionStatement","src":"10006:35:15"},{"condition":{"id":2530,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"10055:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2538,"nodeType":"IfStatement","src":"10051:76:15","trueBody":{"id":2537,"nodeType":"Block","src":"10066:61:15","statements":[{"eventCall":{"arguments":[{"id":2532,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"10094:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2533,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"10101:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"10110:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2531,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"10085:8:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10085:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2536,"nodeType":"EmitStatement","src":"10080:36:15"}]}}]},"documentation":{"id":2481,"nodeType":"StructuredDocumentation","src":"8860:836:15","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":2540,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9710:8:15","nodeType":"FunctionDefinition","parameters":{"id":2490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2483,"mutability":"mutable","name":"owner","nameLocation":"9727:5:15","nodeType":"VariableDeclaration","scope":2540,"src":"9719:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2482,"name":"address","nodeType":"ElementaryTypeName","src":"9719:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2485,"mutability":"mutable","name":"spender","nameLocation":"9742:7:15","nodeType":"VariableDeclaration","scope":2540,"src":"9734:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2484,"name":"address","nodeType":"ElementaryTypeName","src":"9734:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2487,"mutability":"mutable","name":"value","nameLocation":"9759:5:15","nodeType":"VariableDeclaration","scope":2540,"src":"9751:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2486,"name":"uint256","nodeType":"ElementaryTypeName","src":"9751:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2489,"mutability":"mutable","name":"emitEvent","nameLocation":"9771:9:15","nodeType":"VariableDeclaration","scope":2540,"src":"9766:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2488,"name":"bool","nodeType":"ElementaryTypeName","src":"9766:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9718:63:15"},"returnParameters":{"id":2491,"nodeType":"ParameterList","parameters":[],"src":"9799:0:15"},"scope":2589,"src":"9701:432:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2587,"nodeType":"Block","src":"10504:388:15","statements":[{"assignments":[2551],"declarations":[{"constant":false,"id":2551,"mutability":"mutable","name":"currentAllowance","nameLocation":"10522:16:15","nodeType":"VariableDeclaration","scope":2587,"src":"10514:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2550,"name":"uint256","nodeType":"ElementaryTypeName","src":"10514:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2556,"initialValue":{"arguments":[{"id":2553,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"10551:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2554,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"10558:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2552,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"10541:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10541:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10514:52:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2557,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"10580:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":2560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10605:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2559,"name":"uint256","nodeType":"ElementaryTypeName","src":"10605:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2558,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10600:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10600:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10614:3:15","memberName":"max","nodeType":"MemberAccess","src":"10600:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10580:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2586,"nodeType":"IfStatement","src":"10576:310:15","trueBody":{"id":2585,"nodeType":"Block","src":"10619:267:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2564,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"10637:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"10656:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10637:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2574,"nodeType":"IfStatement","src":"10633:130:15","trueBody":{"id":2573,"nodeType":"Block","src":"10663:100:15","statements":[{"errorCall":{"arguments":[{"id":2568,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"10715:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2569,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"10724:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"10742:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2567,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"10688:26:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10688:60:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2572,"nodeType":"RevertStatement","src":"10681:67:15"}]}},{"id":2584,"nodeType":"UncheckedBlock","src":"10776:100:15","statements":[{"expression":{"arguments":[{"id":2576,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"10813:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2577,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"10820:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2578,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"10829:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"10848:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10829:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":2581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10855:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2575,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2480,2540],"referencedDeclaration":2540,"src":"10804:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10804:57:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2583,"nodeType":"ExpressionStatement","src":"10804:57:15"}]}]}}]},"documentation":{"id":2541,"nodeType":"StructuredDocumentation","src":"10139:271:15","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":2588,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10424:15:15","nodeType":"FunctionDefinition","parameters":{"id":2548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2543,"mutability":"mutable","name":"owner","nameLocation":"10448:5:15","nodeType":"VariableDeclaration","scope":2588,"src":"10440:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2542,"name":"address","nodeType":"ElementaryTypeName","src":"10440:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2545,"mutability":"mutable","name":"spender","nameLocation":"10463:7:15","nodeType":"VariableDeclaration","scope":2588,"src":"10455:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2544,"name":"address","nodeType":"ElementaryTypeName","src":"10455:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2547,"mutability":"mutable","name":"value","nameLocation":"10480:5:15","nodeType":"VariableDeclaration","scope":2588,"src":"10472:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2546,"name":"uint256","nodeType":"ElementaryTypeName","src":"10472:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10439:47:15"},"returnParameters":{"id":2549,"nodeType":"ParameterList","parameters":[],"src":"10504:0:15"},"scope":2589,"src":"10415:477:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2590,"src":"1106:9788:15","usedErrors":[697,702,707,716,721,726],"usedEvents":[2601,2610]}],"src":"105:10790:15"},"id":15},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[2667]},"id":2668,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2591,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":2592,"nodeType":"StructuredDocumentation","src":"132:71:16","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":2667,"linearizedBaseContracts":[2667],"name":"IERC20","nameLocation":"214:6:16","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2593,"nodeType":"StructuredDocumentation","src":"227:158:16","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2601,"name":"Transfer","nameLocation":"396:8:16","nodeType":"EventDefinition","parameters":{"id":2600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2595,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:16","nodeType":"VariableDeclaration","scope":2601,"src":"405:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2594,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2597,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:16","nodeType":"VariableDeclaration","scope":2601,"src":"427:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2596,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2599,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:16","nodeType":"VariableDeclaration","scope":2601,"src":"447:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2598,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:16"},"src":"390:72:16"},{"anonymous":false,"documentation":{"id":2602,"nodeType":"StructuredDocumentation","src":"468:148:16","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2610,"name":"Approval","nameLocation":"627:8:16","nodeType":"EventDefinition","parameters":{"id":2609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2604,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:16","nodeType":"VariableDeclaration","scope":2610,"src":"636:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2603,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2606,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:16","nodeType":"VariableDeclaration","scope":2610,"src":"659:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2605,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2608,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:16","nodeType":"VariableDeclaration","scope":2610,"src":"684:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2607,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:16"},"src":"621:78:16"},{"documentation":{"id":2611,"nodeType":"StructuredDocumentation","src":"705:65:16","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":2616,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:16","nodeType":"FunctionDefinition","parameters":{"id":2612,"nodeType":"ParameterList","parameters":[],"src":"795:2:16"},"returnParameters":{"id":2615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2616,"src":"821:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2613,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:16"},"scope":2667,"src":"775:55:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2617,"nodeType":"StructuredDocumentation","src":"836:71:16","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":2624,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:16","nodeType":"FunctionDefinition","parameters":{"id":2620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2619,"mutability":"mutable","name":"account","nameLocation":"939:7:16","nodeType":"VariableDeclaration","scope":2624,"src":"931:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2618,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:16"},"returnParameters":{"id":2623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2624,"src":"971:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2621,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:16"},"scope":2667,"src":"912:68:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2625,"nodeType":"StructuredDocumentation","src":"986:213:16","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":2634,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:16","nodeType":"FunctionDefinition","parameters":{"id":2630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2627,"mutability":"mutable","name":"to","nameLocation":"1230:2:16","nodeType":"VariableDeclaration","scope":2634,"src":"1222:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2626,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2629,"mutability":"mutable","name":"value","nameLocation":"1242:5:16","nodeType":"VariableDeclaration","scope":2634,"src":"1234:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2628,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:16"},"returnParameters":{"id":2633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2632,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2634,"src":"1267:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2631,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:16"},"scope":2667,"src":"1204:69:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2635,"nodeType":"StructuredDocumentation","src":"1279:264:16","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":2644,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:16","nodeType":"FunctionDefinition","parameters":{"id":2640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2637,"mutability":"mutable","name":"owner","nameLocation":"1575:5:16","nodeType":"VariableDeclaration","scope":2644,"src":"1567:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2636,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2639,"mutability":"mutable","name":"spender","nameLocation":"1590:7:16","nodeType":"VariableDeclaration","scope":2644,"src":"1582:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2638,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:16"},"returnParameters":{"id":2643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2642,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2644,"src":"1622:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2641,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:16"},"scope":2667,"src":"1548:83:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2645,"nodeType":"StructuredDocumentation","src":"1637:667:16","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2654,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:16","nodeType":"FunctionDefinition","parameters":{"id":2650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2647,"mutability":"mutable","name":"spender","nameLocation":"2334:7:16","nodeType":"VariableDeclaration","scope":2654,"src":"2326:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2646,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2649,"mutability":"mutable","name":"value","nameLocation":"2351:5:16","nodeType":"VariableDeclaration","scope":2654,"src":"2343:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2648,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:16"},"returnParameters":{"id":2653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2654,"src":"2376:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2651,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:16"},"scope":2667,"src":"2309:73:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2655,"nodeType":"StructuredDocumentation","src":"2388:297:16","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2666,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:16","nodeType":"FunctionDefinition","parameters":{"id":2662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2657,"mutability":"mutable","name":"from","nameLocation":"2720:4:16","nodeType":"VariableDeclaration","scope":2666,"src":"2712:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2656,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2659,"mutability":"mutable","name":"to","nameLocation":"2734:2:16","nodeType":"VariableDeclaration","scope":2666,"src":"2726:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2658,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2661,"mutability":"mutable","name":"value","nameLocation":"2746:5:16","nodeType":"VariableDeclaration","scope":2666,"src":"2738:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2660,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:16"},"returnParameters":{"id":2665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2666,"src":"2771:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2663,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:16"},"scope":2667,"src":"2690:87:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2668,"src":"204:2575:16","usedErrors":[],"usedEvents":[2601,2610]}],"src":"106:2674:16"},"id":16},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[2667],"IERC20Metadata":[2693]},"id":2694,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2669,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:17"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":2671,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2694,"sourceUnit":2668,"src":"151:37:17","symbolAliases":[{"foreign":{"id":2670,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"159:6:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2673,"name":"IERC20","nameLocations":["306:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"306:6:17"},"id":2674,"nodeType":"InheritanceSpecifier","src":"306:6:17"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2672,"nodeType":"StructuredDocumentation","src":"190:87:17","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":2693,"linearizedBaseContracts":[2693,2667],"name":"IERC20Metadata","nameLocation":"288:14:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2675,"nodeType":"StructuredDocumentation","src":"319:54:17","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2680,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:17","nodeType":"FunctionDefinition","parameters":{"id":2676,"nodeType":"ParameterList","parameters":[],"src":"391:2:17"},"returnParameters":{"id":2679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2678,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2680,"src":"417:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2677,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:17"},"scope":2693,"src":"378:54:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2681,"nodeType":"StructuredDocumentation","src":"438:56:17","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":2686,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:17","nodeType":"FunctionDefinition","parameters":{"id":2682,"nodeType":"ParameterList","parameters":[],"src":"514:2:17"},"returnParameters":{"id":2685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2686,"src":"540:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2683,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:17"},"scope":2693,"src":"499:56:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2687,"nodeType":"StructuredDocumentation","src":"561:65:17","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":2692,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:17","nodeType":"FunctionDefinition","parameters":{"id":2688,"nodeType":"ParameterList","parameters":[],"src":"648:2:17"},"returnParameters":{"id":2691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2690,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2692,"src":"674:5:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2689,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:17"},"scope":2693,"src":"631:50:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2694,"src":"278:405:17","usedErrors":[],"usedEvents":[2601,2610]}],"src":"125:559:17"},"id":17},"@openzeppelin/contracts/utils/Arrays.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","exportedSymbols":{"Arrays":[3571],"Comparators":[3603],"Math":[6087],"SlotDerivation":[4001],"StorageSlot":[4125]},"id":3572,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2695,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"183:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","file":"./Comparators.sol","id":2697,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3572,"sourceUnit":3604,"src":"209:46:18","symbolAliases":[{"foreign":{"id":2696,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"217:11:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","file":"./SlotDerivation.sol","id":2699,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3572,"sourceUnit":4002,"src":"256:52:18","symbolAliases":[{"foreign":{"id":2698,"name":"SlotDerivation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"264:14:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":2701,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3572,"sourceUnit":4126,"src":"309:46:18","symbolAliases":[{"foreign":{"id":2700,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4125,"src":"317:11:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2703,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3572,"sourceUnit":6088,"src":"356:37:18","symbolAliases":[{"foreign":{"id":2702,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"364:4:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Arrays","contractDependencies":[],"contractKind":"library","documentation":{"id":2704,"nodeType":"StructuredDocumentation","src":"395:63:18","text":" @dev Collection of functions related to array types."},"fullyImplemented":true,"id":3571,"linearizedBaseContracts":[3571],"name":"Arrays","nameLocation":"467:6:18","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2707,"libraryName":{"id":2705,"name":"SlotDerivation","nameLocations":["486:14:18"],"nodeType":"IdentifierPath","referencedDeclaration":4001,"src":"486:14:18"},"nodeType":"UsingForDirective","src":"480:33:18","typeName":{"id":2706,"name":"bytes32","nodeType":"ElementaryTypeName","src":"505:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":2710,"libraryName":{"id":2708,"name":"StorageSlot","nameLocations":["524:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":4125,"src":"524:11:18"},"nodeType":"UsingForDirective","src":"518:30:18","typeName":{"id":2709,"name":"bytes32","nodeType":"ElementaryTypeName","src":"540:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":2742,"nodeType":"Block","src":"1628:83:18","statements":[{"expression":{"arguments":[{"arguments":[{"id":2732,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"1656:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2731,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"1649:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1649:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2735,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"1669:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2734,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"1664:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2737,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"1677:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2730,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"1638:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1638:44:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2739,"nodeType":"ExpressionStatement","src":"1638:44:18"},{"expression":{"id":2740,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"1699:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2729,"id":2741,"nodeType":"Return","src":"1692:12:18"}]},"documentation":{"id":2711,"nodeType":"StructuredDocumentation","src":"554:915:18","text":" @dev Sort an array of uint256 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":2743,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1483:4:18","nodeType":"FunctionDefinition","parameters":{"id":2725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2714,"mutability":"mutable","name":"array","nameLocation":"1514:5:18","nodeType":"VariableDeclaration","scope":2743,"src":"1497:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2712,"name":"uint256","nodeType":"ElementaryTypeName","src":"1497:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2713,"nodeType":"ArrayTypeName","src":"1497:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2724,"mutability":"mutable","name":"comp","nameLocation":"1576:4:18","nodeType":"VariableDeclaration","scope":2743,"src":"1529:51:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":2723,"nodeType":"FunctionTypeName","parameterTypes":{"id":2719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2716,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2723,"src":"1538:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2715,"name":"uint256","nodeType":"ElementaryTypeName","src":"1538:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2718,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2723,"src":"1547:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2717,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1537:18:18"},"returnParameterTypes":{"id":2722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2721,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2723,"src":"1570:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2720,"name":"bool","nodeType":"ElementaryTypeName","src":"1570:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1569:6:18"},"src":"1529:51:18","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"1487:99:18"},"returnParameters":{"id":2729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2728,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2743,"src":"1610:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2726,"name":"uint256","nodeType":"ElementaryTypeName","src":"1610:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2727,"nodeType":"ArrayTypeName","src":"1610:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1609:18:18"},"scope":3571,"src":"1474:237:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2761,"nodeType":"Block","src":"1894:66:18","statements":[{"expression":{"arguments":[{"id":2754,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"1909:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":2755,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"1916:11:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$3603_$","typeString":"type(library Comparators)"}},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1928:2:18","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":3588,"src":"1916:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2753,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2743,2762,2794,2815,2847,2868],"referencedDeclaration":2743,"src":"1904:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1904:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2758,"nodeType":"ExpressionStatement","src":"1904:27:18"},{"expression":{"id":2759,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"1948:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2752,"id":2760,"nodeType":"Return","src":"1941:12:18"}]},"documentation":{"id":2744,"nodeType":"StructuredDocumentation","src":"1717:93:18","text":" @dev Variant of {sort} that sorts an array of uint256 in increasing order."},"id":2762,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1824:4:18","nodeType":"FunctionDefinition","parameters":{"id":2748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2747,"mutability":"mutable","name":"array","nameLocation":"1846:5:18","nodeType":"VariableDeclaration","scope":2762,"src":"1829:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2745,"name":"uint256","nodeType":"ElementaryTypeName","src":"1829:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2746,"nodeType":"ArrayTypeName","src":"1829:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1828:24:18"},"returnParameters":{"id":2752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2751,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2762,"src":"1876:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2749,"name":"uint256","nodeType":"ElementaryTypeName","src":"1876:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2750,"nodeType":"ArrayTypeName","src":"1876:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1875:18:18"},"scope":3571,"src":"1815:145:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2793,"nodeType":"Block","src":"3040:97:18","statements":[{"expression":{"arguments":[{"arguments":[{"id":2784,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2766,"src":"3075:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":2783,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3019,3031],"referencedDeclaration":3019,"src":"3055:19:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3055:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":2787,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"3102:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}],"id":2786,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[3057,3083],"referencedDeclaration":3057,"src":"3083:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (address,address) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2782,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2743,2762,2794,2815,2847,2868],"referencedDeclaration":2743,"src":"3050:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3050:58:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2790,"nodeType":"ExpressionStatement","src":"3050:58:18"},{"expression":{"id":2791,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2766,"src":"3125:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2781,"id":2792,"nodeType":"Return","src":"3118:12:18"}]},"documentation":{"id":2763,"nodeType":"StructuredDocumentation","src":"1966:915:18","text":" @dev Sort an array of address (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":2794,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"2895:4:18","nodeType":"FunctionDefinition","parameters":{"id":2777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2766,"mutability":"mutable","name":"array","nameLocation":"2926:5:18","nodeType":"VariableDeclaration","scope":2794,"src":"2909:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2764,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2765,"nodeType":"ArrayTypeName","src":"2909:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2776,"mutability":"mutable","name":"comp","nameLocation":"2988:4:18","nodeType":"VariableDeclaration","scope":2794,"src":"2941:51:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":2775,"nodeType":"FunctionTypeName","parameterTypes":{"id":2771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2768,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2775,"src":"2950:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2767,"name":"address","nodeType":"ElementaryTypeName","src":"2950:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2775,"src":"2959:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2769,"name":"address","nodeType":"ElementaryTypeName","src":"2959:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2949:18:18"},"returnParameterTypes":{"id":2774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2775,"src":"2982:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2772,"name":"bool","nodeType":"ElementaryTypeName","src":"2982:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2981:6:18"},"src":"2941:51:18","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"2899:99:18"},"returnParameters":{"id":2781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2780,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2794,"src":"3022:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2778,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2779,"nodeType":"ArrayTypeName","src":"3022:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3021:18:18"},"scope":3571,"src":"2886:251:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2814,"nodeType":"Block","src":"3320:87:18","statements":[{"expression":{"arguments":[{"arguments":[{"id":2806,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"3355:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":2805,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3019,3031],"referencedDeclaration":3019,"src":"3335:19:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3335:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":2808,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"3363:11:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$3603_$","typeString":"type(library Comparators)"}},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3375:2:18","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":3588,"src":"3363:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2804,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2743,2762,2794,2815,2847,2868],"referencedDeclaration":2743,"src":"3330:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3330:48:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2811,"nodeType":"ExpressionStatement","src":"3330:48:18"},{"expression":{"id":2812,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"3395:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2803,"id":2813,"nodeType":"Return","src":"3388:12:18"}]},"documentation":{"id":2795,"nodeType":"StructuredDocumentation","src":"3143:93:18","text":" @dev Variant of {sort} that sorts an array of address in increasing order."},"id":2815,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"3250:4:18","nodeType":"FunctionDefinition","parameters":{"id":2799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2798,"mutability":"mutable","name":"array","nameLocation":"3272:5:18","nodeType":"VariableDeclaration","scope":2815,"src":"3255:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2796,"name":"address","nodeType":"ElementaryTypeName","src":"3255:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2797,"nodeType":"ArrayTypeName","src":"3255:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3254:24:18"},"returnParameters":{"id":2803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2815,"src":"3302:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2800,"name":"address","nodeType":"ElementaryTypeName","src":"3302:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2801,"nodeType":"ArrayTypeName","src":"3302:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3301:18:18"},"scope":3571,"src":"3241:166:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2846,"nodeType":"Block","src":"4487:97:18","statements":[{"expression":{"arguments":[{"arguments":[{"id":2837,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"4522:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":2836,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3019,3031],"referencedDeclaration":3031,"src":"4502:19:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4502:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":2840,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"4549:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}],"id":2839,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[3057,3083],"referencedDeclaration":3083,"src":"4530:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (bytes32,bytes32) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4530:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2835,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2743,2762,2794,2815,2847,2868],"referencedDeclaration":2743,"src":"4497:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4497:58:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2843,"nodeType":"ExpressionStatement","src":"4497:58:18"},{"expression":{"id":2844,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"4572:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":2834,"id":2845,"nodeType":"Return","src":"4565:12:18"}]},"documentation":{"id":2816,"nodeType":"StructuredDocumentation","src":"3413:915:18","text":" @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":2847,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4342:4:18","nodeType":"FunctionDefinition","parameters":{"id":2830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2819,"mutability":"mutable","name":"array","nameLocation":"4373:5:18","nodeType":"VariableDeclaration","scope":2847,"src":"4356:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2817,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4356:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2818,"nodeType":"ArrayTypeName","src":"4356:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2829,"mutability":"mutable","name":"comp","nameLocation":"4435:4:18","nodeType":"VariableDeclaration","scope":2847,"src":"4388:51:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":2828,"nodeType":"FunctionTypeName","parameterTypes":{"id":2824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2828,"src":"4397:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2820,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4397:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2828,"src":"4406:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2822,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4406:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4396:18:18"},"returnParameterTypes":{"id":2827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2828,"src":"4429:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2825,"name":"bool","nodeType":"ElementaryTypeName","src":"4429:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4428:6:18"},"src":"4388:51:18","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"4346:99:18"},"returnParameters":{"id":2834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2833,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2847,"src":"4469:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2831,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2832,"nodeType":"ArrayTypeName","src":"4469:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4468:18:18"},"scope":3571,"src":"4333:251:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2867,"nodeType":"Block","src":"4767:87:18","statements":[{"expression":{"arguments":[{"arguments":[{"id":2859,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2851,"src":"4802:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":2858,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3019,3031],"referencedDeclaration":3031,"src":"4782:19:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":2861,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"4810:11:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$3603_$","typeString":"type(library Comparators)"}},"id":2862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:2:18","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":3588,"src":"4810:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2857,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2743,2762,2794,2815,2847,2868],"referencedDeclaration":2743,"src":"4777:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4777:48:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2864,"nodeType":"ExpressionStatement","src":"4777:48:18"},{"expression":{"id":2865,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2851,"src":"4842:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":2856,"id":2866,"nodeType":"Return","src":"4835:12:18"}]},"documentation":{"id":2848,"nodeType":"StructuredDocumentation","src":"4590:93:18","text":" @dev Variant of {sort} that sorts an array of bytes32 in increasing order."},"id":2868,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4697:4:18","nodeType":"FunctionDefinition","parameters":{"id":2852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2851,"mutability":"mutable","name":"array","nameLocation":"4719:5:18","nodeType":"VariableDeclaration","scope":2868,"src":"4702:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2849,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4702:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2850,"nodeType":"ArrayTypeName","src":"4702:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4701:24:18"},"returnParameters":{"id":2856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2868,"src":"4749:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2853,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4749:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2854,"nodeType":"ArrayTypeName","src":"4749:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4748:18:18"},"scope":3571,"src":"4688:166:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2955,"nodeType":"Block","src":"5470:889:18","statements":[{"id":2954,"nodeType":"UncheckedBlock","src":"5480:873:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2886,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"5508:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2887,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"5514:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5508:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30783430","id":2889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5522:4:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"src":"5508:18:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2892,"nodeType":"IfStatement","src":"5504:31:18","trueBody":{"functionReturnParameters":2885,"id":2891,"nodeType":"Return","src":"5528:7:18"}},{"assignments":[2894],"declarations":[{"constant":false,"id":2894,"mutability":"mutable","name":"pivot","nameLocation":"5599:5:18","nodeType":"VariableDeclaration","scope":2954,"src":"5591:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2893,"name":"uint256","nodeType":"ElementaryTypeName","src":"5591:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2898,"initialValue":{"arguments":[{"id":2896,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"5614:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2895,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"5607:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5607:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5591:29:18"},{"assignments":[2900],"declarations":[{"constant":false,"id":2900,"mutability":"mutable","name":"pos","nameLocation":"5715:3:18","nodeType":"VariableDeclaration","scope":2954,"src":"5707:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2899,"name":"uint256","nodeType":"ElementaryTypeName","src":"5707:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2902,"initialValue":{"id":2901,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"5721:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5707:19:18"},{"body":{"id":2933,"nodeType":"Block","src":"5795:331:18","statements":[{"condition":{"arguments":[{"arguments":[{"id":2918,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"5829:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2917,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"5822:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5822:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2920,"name":"pivot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"5834:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2916,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"5817:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5817:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2932,"nodeType":"IfStatement","src":"5813:299:18","trueBody":{"id":2931,"nodeType":"Block","src":"5842:270:18","statements":[{"expression":{"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2922,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"6046:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":2923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6053:4:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6046:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2925,"nodeType":"ExpressionStatement","src":"6046:11:18"},{"expression":{"arguments":[{"id":2927,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"6085:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2928,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"6090:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2926,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"6079:5:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6079:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2930,"nodeType":"ExpressionStatement","src":"6079:14:18"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2909,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"5773:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2910,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"5778:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5773:8:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2934,"initializationExpression":{"assignments":[2904],"declarations":[{"constant":false,"id":2904,"mutability":"mutable","name":"it","nameLocation":"5754:2:18","nodeType":"VariableDeclaration","scope":2934,"src":"5746:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2903,"name":"uint256","nodeType":"ElementaryTypeName","src":"5746:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2908,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2905,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"5759:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":2906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5767:4:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5759:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5746:25:18"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2912,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"5783:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":2913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5789:4:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5783:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2915,"nodeType":"ExpressionStatement","src":"5783:10:18"},"nodeType":"ForStatement","src":"5741:385:18"},{"expression":{"arguments":[{"id":2936,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"6146:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2937,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"6153:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2935,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"6140:5:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2939,"nodeType":"ExpressionStatement","src":"6140:17:18"},{"expression":{"arguments":[{"id":2941,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"6207:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2942,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"6214:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2943,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"6219:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2940,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"6196:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2945,"nodeType":"ExpressionStatement","src":"6196:28:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2947,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"6284:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":2948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6290:4:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6284:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2950,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"6296:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2951,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"6301:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2946,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"6273:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":2952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6273:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2953,"nodeType":"ExpressionStatement","src":"6273:33:18"}]}]},"documentation":{"id":2869,"nodeType":"StructuredDocumentation","src":"4860:491:18","text":" @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n at end (exclusive). Sorting follows the `comp` comparator.\n Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n be used only if the limits are within a memory array."},"id":2956,"implemented":true,"kind":"function","modifiers":[],"name":"_quickSort","nameLocation":"5365:10:18","nodeType":"FunctionDefinition","parameters":{"id":2884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2871,"mutability":"mutable","name":"begin","nameLocation":"5384:5:18","nodeType":"VariableDeclaration","scope":2956,"src":"5376:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2870,"name":"uint256","nodeType":"ElementaryTypeName","src":"5376:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2873,"mutability":"mutable","name":"end","nameLocation":"5399:3:18","nodeType":"VariableDeclaration","scope":2956,"src":"5391:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2872,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2883,"mutability":"mutable","name":"comp","nameLocation":"5451:4:18","nodeType":"VariableDeclaration","scope":2956,"src":"5404:51:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":2882,"nodeType":"FunctionTypeName","parameterTypes":{"id":2878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2875,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2882,"src":"5413:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2874,"name":"uint256","nodeType":"ElementaryTypeName","src":"5413:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2882,"src":"5422:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2876,"name":"uint256","nodeType":"ElementaryTypeName","src":"5422:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5412:18:18"},"returnParameterTypes":{"id":2881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2882,"src":"5445:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2879,"name":"bool","nodeType":"ElementaryTypeName","src":"5445:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5444:6:18"},"src":"5404:51:18","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"5375:81:18"},"returnParameters":{"id":2885,"nodeType":"ParameterList","parameters":[],"src":"5470:0:18"},"scope":3571,"src":"5356:1003:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2966,"nodeType":"Block","src":"6532:88:18","statements":[{"AST":{"nativeSrc":"6567:47:18","nodeType":"YulBlock","src":"6567:47:18","statements":[{"nativeSrc":"6581:23:18","nodeType":"YulAssignment","src":"6581:23:18","value":{"arguments":[{"name":"array","nativeSrc":"6592:5:18","nodeType":"YulIdentifier","src":"6592:5:18"},{"kind":"number","nativeSrc":"6599:4:18","nodeType":"YulLiteral","src":"6599:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6588:3:18","nodeType":"YulIdentifier","src":"6588:3:18"},"nativeSrc":"6588:16:18","nodeType":"YulFunctionCall","src":"6588:16:18"},"variableNames":[{"name":"ptr","nativeSrc":"6581:3:18","nodeType":"YulIdentifier","src":"6581:3:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2960,"isOffset":false,"isSlot":false,"src":"6592:5:18","valueSize":1},{"declaration":2963,"isOffset":false,"isSlot":false,"src":"6581:3:18","valueSize":1}],"flags":["memory-safe"],"id":2965,"nodeType":"InlineAssembly","src":"6542:72:18"}]},"documentation":{"id":2957,"nodeType":"StructuredDocumentation","src":"6365:87:18","text":" @dev Pointer to the memory location of the first element of `array`."},"id":2967,"implemented":true,"kind":"function","modifiers":[],"name":"_begin","nameLocation":"6466:6:18","nodeType":"FunctionDefinition","parameters":{"id":2961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2960,"mutability":"mutable","name":"array","nameLocation":"6490:5:18","nodeType":"VariableDeclaration","scope":2967,"src":"6473:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2958,"name":"uint256","nodeType":"ElementaryTypeName","src":"6473:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2959,"nodeType":"ArrayTypeName","src":"6473:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6472:24:18"},"returnParameters":{"id":2964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2963,"mutability":"mutable","name":"ptr","nameLocation":"6527:3:18","nodeType":"VariableDeclaration","scope":2967,"src":"6519:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2962,"name":"uint256","nodeType":"ElementaryTypeName","src":"6519:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6518:13:18"},"scope":3571,"src":"6457:163:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2986,"nodeType":"Block","src":"6892:93:18","statements":[{"id":2985,"nodeType":"UncheckedBlock","src":"6902:77:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2977,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"6940:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2976,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"6933:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6933:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2979,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"6949:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6955:6:18","memberName":"length","nodeType":"MemberAccess","src":"6949:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783230","id":2981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6964:4:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6949:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6933:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2975,"id":2984,"nodeType":"Return","src":"6926:42:18"}]}]},"documentation":{"id":2968,"nodeType":"StructuredDocumentation","src":"6626:188:18","text":" @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n that comes just after the last element of the array."},"id":2987,"implemented":true,"kind":"function","modifiers":[],"name":"_end","nameLocation":"6828:4:18","nodeType":"FunctionDefinition","parameters":{"id":2972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2971,"mutability":"mutable","name":"array","nameLocation":"6850:5:18","nodeType":"VariableDeclaration","scope":2987,"src":"6833:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2969,"name":"uint256","nodeType":"ElementaryTypeName","src":"6833:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2970,"nodeType":"ArrayTypeName","src":"6833:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6832:24:18"},"returnParameters":{"id":2975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2974,"mutability":"mutable","name":"ptr","nameLocation":"6887:3:18","nodeType":"VariableDeclaration","scope":2987,"src":"6879:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2973,"name":"uint256","nodeType":"ElementaryTypeName","src":"6879:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6878:13:18"},"scope":3571,"src":"6819:166:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2996,"nodeType":"Block","src":"7136:68:18","statements":[{"AST":{"nativeSrc":"7155:43:18","nodeType":"YulBlock","src":"7155:43:18","statements":[{"nativeSrc":"7169:19:18","nodeType":"YulAssignment","src":"7169:19:18","value":{"arguments":[{"name":"ptr","nativeSrc":"7184:3:18","nodeType":"YulIdentifier","src":"7184:3:18"}],"functionName":{"name":"mload","nativeSrc":"7178:5:18","nodeType":"YulIdentifier","src":"7178:5:18"},"nativeSrc":"7178:10:18","nodeType":"YulFunctionCall","src":"7178:10:18"},"variableNames":[{"name":"value","nativeSrc":"7169:5:18","nodeType":"YulIdentifier","src":"7169:5:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2990,"isOffset":false,"isSlot":false,"src":"7184:3:18","valueSize":1},{"declaration":2993,"isOffset":false,"isSlot":false,"src":"7169:5:18","valueSize":1}],"id":2995,"nodeType":"InlineAssembly","src":"7146:52:18"}]},"documentation":{"id":2988,"nodeType":"StructuredDocumentation","src":"6991:74:18","text":" @dev Load memory word (as a uint256) at location `ptr`."},"id":2997,"implemented":true,"kind":"function","modifiers":[],"name":"_mload","nameLocation":"7079:6:18","nodeType":"FunctionDefinition","parameters":{"id":2991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2990,"mutability":"mutable","name":"ptr","nameLocation":"7094:3:18","nodeType":"VariableDeclaration","scope":2997,"src":"7086:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2989,"name":"uint256","nodeType":"ElementaryTypeName","src":"7086:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7085:13:18"},"returnParameters":{"id":2994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2993,"mutability":"mutable","name":"value","nameLocation":"7129:5:18","nodeType":"VariableDeclaration","scope":2997,"src":"7121:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2992,"name":"uint256","nodeType":"ElementaryTypeName","src":"7121:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7120:15:18"},"scope":3571,"src":"7070:134:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3006,"nodeType":"Block","src":"7348:178:18","statements":[{"AST":{"nativeSrc":"7367:153:18","nodeType":"YulBlock","src":"7367:153:18","statements":[{"nativeSrc":"7381:25:18","nodeType":"YulVariableDeclaration","src":"7381:25:18","value":{"arguments":[{"name":"ptr1","nativeSrc":"7401:4:18","nodeType":"YulIdentifier","src":"7401:4:18"}],"functionName":{"name":"mload","nativeSrc":"7395:5:18","nodeType":"YulIdentifier","src":"7395:5:18"},"nativeSrc":"7395:11:18","nodeType":"YulFunctionCall","src":"7395:11:18"},"variables":[{"name":"value1","nativeSrc":"7385:6:18","nodeType":"YulTypedName","src":"7385:6:18","type":""}]},{"nativeSrc":"7419:25:18","nodeType":"YulVariableDeclaration","src":"7419:25:18","value":{"arguments":[{"name":"ptr2","nativeSrc":"7439:4:18","nodeType":"YulIdentifier","src":"7439:4:18"}],"functionName":{"name":"mload","nativeSrc":"7433:5:18","nodeType":"YulIdentifier","src":"7433:5:18"},"nativeSrc":"7433:11:18","nodeType":"YulFunctionCall","src":"7433:11:18"},"variables":[{"name":"value2","nativeSrc":"7423:6:18","nodeType":"YulTypedName","src":"7423:6:18","type":""}]},{"expression":{"arguments":[{"name":"ptr1","nativeSrc":"7464:4:18","nodeType":"YulIdentifier","src":"7464:4:18"},{"name":"value2","nativeSrc":"7470:6:18","nodeType":"YulIdentifier","src":"7470:6:18"}],"functionName":{"name":"mstore","nativeSrc":"7457:6:18","nodeType":"YulIdentifier","src":"7457:6:18"},"nativeSrc":"7457:20:18","nodeType":"YulFunctionCall","src":"7457:20:18"},"nativeSrc":"7457:20:18","nodeType":"YulExpressionStatement","src":"7457:20:18"},{"expression":{"arguments":[{"name":"ptr2","nativeSrc":"7497:4:18","nodeType":"YulIdentifier","src":"7497:4:18"},{"name":"value1","nativeSrc":"7503:6:18","nodeType":"YulIdentifier","src":"7503:6:18"}],"functionName":{"name":"mstore","nativeSrc":"7490:6:18","nodeType":"YulIdentifier","src":"7490:6:18"},"nativeSrc":"7490:20:18","nodeType":"YulFunctionCall","src":"7490:20:18"},"nativeSrc":"7490:20:18","nodeType":"YulExpressionStatement","src":"7490:20:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":3000,"isOffset":false,"isSlot":false,"src":"7401:4:18","valueSize":1},{"declaration":3000,"isOffset":false,"isSlot":false,"src":"7464:4:18","valueSize":1},{"declaration":3002,"isOffset":false,"isSlot":false,"src":"7439:4:18","valueSize":1},{"declaration":3002,"isOffset":false,"isSlot":false,"src":"7497:4:18","valueSize":1}],"id":3005,"nodeType":"InlineAssembly","src":"7358:162:18"}]},"documentation":{"id":2998,"nodeType":"StructuredDocumentation","src":"7210:77:18","text":" @dev Swaps the elements memory location `ptr1` and `ptr2`."},"id":3007,"implemented":true,"kind":"function","modifiers":[],"name":"_swap","nameLocation":"7301:5:18","nodeType":"FunctionDefinition","parameters":{"id":3003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3000,"mutability":"mutable","name":"ptr1","nameLocation":"7315:4:18","nodeType":"VariableDeclaration","scope":3007,"src":"7307:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2999,"name":"uint256","nodeType":"ElementaryTypeName","src":"7307:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3002,"mutability":"mutable","name":"ptr2","nameLocation":"7329:4:18","nodeType":"VariableDeclaration","scope":3007,"src":"7321:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3001,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7306:28:18"},"returnParameters":{"id":3004,"nodeType":"ParameterList","parameters":[],"src":"7348:0:18"},"scope":3571,"src":"7292:234:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3018,"nodeType":"Block","src":"7713:64:18","statements":[{"AST":{"nativeSrc":"7732:39:18","nodeType":"YulBlock","src":"7732:39:18","statements":[{"nativeSrc":"7746:15:18","nodeType":"YulAssignment","src":"7746:15:18","value":{"name":"input","nativeSrc":"7756:5:18","nodeType":"YulIdentifier","src":"7756:5:18"},"variableNames":[{"name":"output","nativeSrc":"7746:6:18","nodeType":"YulIdentifier","src":"7746:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3011,"isOffset":false,"isSlot":false,"src":"7756:5:18","valueSize":1},{"declaration":3015,"isOffset":false,"isSlot":false,"src":"7746:6:18","valueSize":1}],"id":3017,"nodeType":"InlineAssembly","src":"7723:48:18"}]},"documentation":{"id":3008,"nodeType":"StructuredDocumentation","src":"7532:76:18","text":"@dev Helper: low level cast address memory array to uint256 memory array"},"id":3019,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7622:19:18","nodeType":"FunctionDefinition","parameters":{"id":3012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3011,"mutability":"mutable","name":"input","nameLocation":"7659:5:18","nodeType":"VariableDeclaration","scope":3019,"src":"7642:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3009,"name":"address","nodeType":"ElementaryTypeName","src":"7642:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3010,"nodeType":"ArrayTypeName","src":"7642:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"7641:24:18"},"returnParameters":{"id":3016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3015,"mutability":"mutable","name":"output","nameLocation":"7705:6:18","nodeType":"VariableDeclaration","scope":3019,"src":"7688:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3013,"name":"uint256","nodeType":"ElementaryTypeName","src":"7688:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3014,"nodeType":"ArrayTypeName","src":"7688:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7687:25:18"},"scope":3571,"src":"7613:164:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3030,"nodeType":"Block","src":"7964:64:18","statements":[{"AST":{"nativeSrc":"7983:39:18","nodeType":"YulBlock","src":"7983:39:18","statements":[{"nativeSrc":"7997:15:18","nodeType":"YulAssignment","src":"7997:15:18","value":{"name":"input","nativeSrc":"8007:5:18","nodeType":"YulIdentifier","src":"8007:5:18"},"variableNames":[{"name":"output","nativeSrc":"7997:6:18","nodeType":"YulIdentifier","src":"7997:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3023,"isOffset":false,"isSlot":false,"src":"8007:5:18","valueSize":1},{"declaration":3027,"isOffset":false,"isSlot":false,"src":"7997:6:18","valueSize":1}],"id":3029,"nodeType":"InlineAssembly","src":"7974:48:18"}]},"documentation":{"id":3020,"nodeType":"StructuredDocumentation","src":"7783:76:18","text":"@dev Helper: low level cast bytes32 memory array to uint256 memory array"},"id":3031,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7873:19:18","nodeType":"FunctionDefinition","parameters":{"id":3024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3023,"mutability":"mutable","name":"input","nameLocation":"7910:5:18","nodeType":"VariableDeclaration","scope":3031,"src":"7893:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3021,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7893:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3022,"nodeType":"ArrayTypeName","src":"7893:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7892:24:18"},"returnParameters":{"id":3028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3027,"mutability":"mutable","name":"output","nameLocation":"7956:6:18","nodeType":"VariableDeclaration","scope":3031,"src":"7939:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3025,"name":"uint256","nodeType":"ElementaryTypeName","src":"7939:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3026,"nodeType":"ArrayTypeName","src":"7939:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7938:25:18"},"scope":3571,"src":"7864:164:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3056,"nodeType":"Block","src":"8290:64:18","statements":[{"AST":{"nativeSrc":"8309:39:18","nodeType":"YulBlock","src":"8309:39:18","statements":[{"nativeSrc":"8323:15:18","nodeType":"YulAssignment","src":"8323:15:18","value":{"name":"input","nativeSrc":"8333:5:18","nodeType":"YulIdentifier","src":"8333:5:18"},"variableNames":[{"name":"output","nativeSrc":"8323:6:18","nodeType":"YulIdentifier","src":"8323:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3042,"isOffset":false,"isSlot":false,"src":"8333:5:18","valueSize":1},{"declaration":3053,"isOffset":false,"isSlot":false,"src":"8323:6:18","valueSize":1}],"id":3055,"nodeType":"InlineAssembly","src":"8300:48:18"}]},"documentation":{"id":3032,"nodeType":"StructuredDocumentation","src":"8034:78:18","text":"@dev Helper: low level cast address comp function to uint256 comp function"},"id":3057,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8126:18:18","nodeType":"FunctionDefinition","parameters":{"id":3043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3042,"mutability":"mutable","name":"input","nameLocation":"8201:5:18","nodeType":"VariableDeclaration","scope":3057,"src":"8154:52:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":3041,"nodeType":"FunctionTypeName","parameterTypes":{"id":3037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3041,"src":"8163:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3033,"name":"address","nodeType":"ElementaryTypeName","src":"8163:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3036,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3041,"src":"8172:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3035,"name":"address","nodeType":"ElementaryTypeName","src":"8172:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8162:18:18"},"returnParameterTypes":{"id":3040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3039,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3041,"src":"8195:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3038,"name":"bool","nodeType":"ElementaryTypeName","src":"8195:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8194:6:18"},"src":"8154:52:18","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8144:68:18"},"returnParameters":{"id":3054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3053,"mutability":"mutable","name":"output","nameLocation":"8282:6:18","nodeType":"VariableDeclaration","scope":3057,"src":"8235:53:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3052,"nodeType":"FunctionTypeName","parameterTypes":{"id":3048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3045,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3052,"src":"8244:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3044,"name":"uint256","nodeType":"ElementaryTypeName","src":"8244:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3052,"src":"8253:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3046,"name":"uint256","nodeType":"ElementaryTypeName","src":"8253:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8243:18:18"},"returnParameterTypes":{"id":3051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3050,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3052,"src":"8276:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3049,"name":"bool","nodeType":"ElementaryTypeName","src":"8276:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8275:6:18"},"src":"8235:53:18","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8234:55:18"},"scope":3571,"src":"8117:237:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3082,"nodeType":"Block","src":"8616:64:18","statements":[{"AST":{"nativeSrc":"8635:39:18","nodeType":"YulBlock","src":"8635:39:18","statements":[{"nativeSrc":"8649:15:18","nodeType":"YulAssignment","src":"8649:15:18","value":{"name":"input","nativeSrc":"8659:5:18","nodeType":"YulIdentifier","src":"8659:5:18"},"variableNames":[{"name":"output","nativeSrc":"8649:6:18","nodeType":"YulIdentifier","src":"8649:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3068,"isOffset":false,"isSlot":false,"src":"8659:5:18","valueSize":1},{"declaration":3079,"isOffset":false,"isSlot":false,"src":"8649:6:18","valueSize":1}],"id":3081,"nodeType":"InlineAssembly","src":"8626:48:18"}]},"documentation":{"id":3058,"nodeType":"StructuredDocumentation","src":"8360:78:18","text":"@dev Helper: low level cast bytes32 comp function to uint256 comp function"},"id":3083,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8452:18:18","nodeType":"FunctionDefinition","parameters":{"id":3069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3068,"mutability":"mutable","name":"input","nameLocation":"8527:5:18","nodeType":"VariableDeclaration","scope":3083,"src":"8480:52:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":3067,"nodeType":"FunctionTypeName","parameterTypes":{"id":3063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3060,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3067,"src":"8489:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3059,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8489:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3062,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3067,"src":"8498:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3061,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8498:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8488:18:18"},"returnParameterTypes":{"id":3066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3065,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3067,"src":"8521:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3064,"name":"bool","nodeType":"ElementaryTypeName","src":"8521:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8520:6:18"},"src":"8480:52:18","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8470:68:18"},"returnParameters":{"id":3080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3079,"mutability":"mutable","name":"output","nameLocation":"8608:6:18","nodeType":"VariableDeclaration","scope":3083,"src":"8561:53:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3078,"nodeType":"FunctionTypeName","parameterTypes":{"id":3074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3071,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3078,"src":"8570:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3070,"name":"uint256","nodeType":"ElementaryTypeName","src":"8570:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3078,"src":"8579:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3072,"name":"uint256","nodeType":"ElementaryTypeName","src":"8579:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8569:18:18"},"returnParameterTypes":{"id":3077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3076,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3078,"src":"8602:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3075,"name":"bool","nodeType":"ElementaryTypeName","src":"8602:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8601:6:18"},"src":"8561:53:18","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8560:55:18"},"scope":3571,"src":"8443:237:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3165,"nodeType":"Block","src":"9405:834:18","statements":[{"assignments":[3095],"declarations":[{"constant":false,"id":3095,"mutability":"mutable","name":"low","nameLocation":"9423:3:18","nodeType":"VariableDeclaration","scope":3165,"src":"9415:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3094,"name":"uint256","nodeType":"ElementaryTypeName","src":"9415:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3097,"initialValue":{"hexValue":"30","id":3096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9429:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9415:15:18"},{"assignments":[3099],"declarations":[{"constant":false,"id":3099,"mutability":"mutable","name":"high","nameLocation":"9448:4:18","nodeType":"VariableDeclaration","scope":3165,"src":"9440:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3098,"name":"uint256","nodeType":"ElementaryTypeName","src":"9440:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3102,"initialValue":{"expression":{"id":3100,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"9455:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9461:6:18","memberName":"length","nodeType":"MemberAccess","src":"9455:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9440:27:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3103,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"9482:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9490:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9482:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3109,"nodeType":"IfStatement","src":"9478:48:18","trueBody":{"id":3108,"nodeType":"Block","src":"9493:33:18","statements":[{"expression":{"hexValue":"30","id":3106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9514:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3093,"id":3107,"nodeType":"Return","src":"9507:8:18"}]}},{"body":{"id":3141,"nodeType":"Block","src":"9555:423:18","statements":[{"assignments":[3114],"declarations":[{"constant":false,"id":3114,"mutability":"mutable","name":"mid","nameLocation":"9577:3:18","nodeType":"VariableDeclaration","scope":3141,"src":"9569:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3113,"name":"uint256","nodeType":"ElementaryTypeName","src":"9569:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3120,"initialValue":{"arguments":[{"id":3117,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"9596:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3118,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"9601:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3115,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"9583:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6087_$","typeString":"type(library Math)"}},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9588:7:18","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4739,"src":"9583:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9583:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9569:37:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3122,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"9844:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":3123,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"9851:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3121,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3446,3472,3498],"referencedDeclaration":3498,"src":"9831:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4016_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9831:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4016_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9856:5:18","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4015,"src":"9831:30:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3126,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3089,"src":"9864:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9831:40:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3139,"nodeType":"Block","src":"9922:46:18","statements":[{"expression":{"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3133,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"9940:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3134,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"9946:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9952:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9940:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3138,"nodeType":"ExpressionStatement","src":"9940:13:18"}]},"id":3140,"nodeType":"IfStatement","src":"9827:141:18","trueBody":{"id":3132,"nodeType":"Block","src":"9873:43:18","statements":[{"expression":{"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3128,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"9891:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3129,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"9898:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9891:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3131,"nodeType":"ExpressionStatement","src":"9891:10:18"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3110,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"9543:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3111,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"9549:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9543:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3142,"nodeType":"WhileStatement","src":"9536:442:18"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3143,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"10095:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10101:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10095:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3147,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"10119:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3148,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"10126:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10126:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3146,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3446,3472,3498],"referencedDeclaration":3498,"src":"10106:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4016_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4016_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3152,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10135:5:18","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4015,"src":"10106:34:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3153,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3089,"src":"10144:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10106:45:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10095:56:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3163,"nodeType":"Block","src":"10198:35:18","statements":[{"expression":{"id":3161,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"10219:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3093,"id":3162,"nodeType":"Return","src":"10212:10:18"}]},"id":3164,"nodeType":"IfStatement","src":"10091:142:18","trueBody":{"id":3160,"nodeType":"Block","src":"10153:39:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3156,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"10174:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10180:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10174:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3093,"id":3159,"nodeType":"Return","src":"10167:14:18"}]}}]},"documentation":{"id":3084,"nodeType":"StructuredDocumentation","src":"8686:616:18","text":" @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n NOTE: The `array` is expected to be sorted in ascending order, and to\n contain no repeated elements.\n IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n support for repeated elements in the array. The {lowerBound} function should\n be used instead."},"id":3166,"implemented":true,"kind":"function","modifiers":[],"name":"findUpperBound","nameLocation":"9316:14:18","nodeType":"FunctionDefinition","parameters":{"id":3090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3087,"mutability":"mutable","name":"array","nameLocation":"9349:5:18","nodeType":"VariableDeclaration","scope":3166,"src":"9331:23:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3085,"name":"uint256","nodeType":"ElementaryTypeName","src":"9331:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3086,"nodeType":"ArrayTypeName","src":"9331:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3089,"mutability":"mutable","name":"element","nameLocation":"9364:7:18","nodeType":"VariableDeclaration","scope":3166,"src":"9356:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3088,"name":"uint256","nodeType":"ElementaryTypeName","src":"9356:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9330:42:18"},"returnParameters":{"id":3093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3166,"src":"9396:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3091,"name":"uint256","nodeType":"ElementaryTypeName","src":"9396:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9395:9:18"},"scope":3571,"src":"9307:932:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3229,"nodeType":"Block","src":"10756:709:18","statements":[{"assignments":[3178],"declarations":[{"constant":false,"id":3178,"mutability":"mutable","name":"low","nameLocation":"10774:3:18","nodeType":"VariableDeclaration","scope":3229,"src":"10766:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3177,"name":"uint256","nodeType":"ElementaryTypeName","src":"10766:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3180,"initialValue":{"hexValue":"30","id":3179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10780:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10766:15:18"},{"assignments":[3182],"declarations":[{"constant":false,"id":3182,"mutability":"mutable","name":"high","nameLocation":"10799:4:18","nodeType":"VariableDeclaration","scope":3229,"src":"10791:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3181,"name":"uint256","nodeType":"ElementaryTypeName","src":"10791:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3185,"initialValue":{"expression":{"id":3183,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3170,"src":"10806:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10812:6:18","memberName":"length","nodeType":"MemberAccess","src":"10806:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10791:27:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3186,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"10833:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10833:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3192,"nodeType":"IfStatement","src":"10829:48:18","trueBody":{"id":3191,"nodeType":"Block","src":"10844:33:18","statements":[{"expression":{"hexValue":"30","id":3189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10865:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3176,"id":3190,"nodeType":"Return","src":"10858:8:18"}]}},{"body":{"id":3225,"nodeType":"Block","src":"10906:532:18","statements":[{"assignments":[3197],"declarations":[{"constant":false,"id":3197,"mutability":"mutable","name":"mid","nameLocation":"10928:3:18","nodeType":"VariableDeclaration","scope":3225,"src":"10920:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3196,"name":"uint256","nodeType":"ElementaryTypeName","src":"10920:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3203,"initialValue":{"arguments":[{"id":3200,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"10947:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3201,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"10952:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3198,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"10934:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6087_$","typeString":"type(library Math)"}},"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10939:7:18","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4739,"src":"10934:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10934:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10920:37:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3205,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3170,"src":"11195:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":3206,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"11202:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3204,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3446,3472,3498],"referencedDeclaration":3498,"src":"11182:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4016_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11182:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4016_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3208,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11207:5:18","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4015,"src":"11182:30:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3209,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3172,"src":"11215:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11182:40:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3223,"nodeType":"Block","src":"11385:43:18","statements":[{"expression":{"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3219,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"11403:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3220,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"11410:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11403:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3222,"nodeType":"ExpressionStatement","src":"11403:10:18"}]},"id":3224,"nodeType":"IfStatement","src":"11178:250:18","trueBody":{"id":3218,"nodeType":"Block","src":"11224:155:18","statements":[{"id":3217,"nodeType":"UncheckedBlock","src":"11301:64:18","statements":[{"expression":{"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3211,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"11333:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3212,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"11339:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11345:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11339:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11333:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3216,"nodeType":"ExpressionStatement","src":"11333:13:18"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3193,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"10894:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3194,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"10900:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10894:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3226,"nodeType":"WhileStatement","src":"10887:551:18"},{"expression":{"id":3227,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"11455:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3176,"id":3228,"nodeType":"Return","src":"11448:10:18"}]},"documentation":{"id":3167,"nodeType":"StructuredDocumentation","src":"10245:412:18","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value greater or equal than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound]."},"id":3230,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBound","nameLocation":"10671:10:18","nodeType":"FunctionDefinition","parameters":{"id":3173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3170,"mutability":"mutable","name":"array","nameLocation":"10700:5:18","nodeType":"VariableDeclaration","scope":3230,"src":"10682:23:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3168,"name":"uint256","nodeType":"ElementaryTypeName","src":"10682:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3169,"nodeType":"ArrayTypeName","src":"10682:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3172,"mutability":"mutable","name":"element","nameLocation":"10715:7:18","nodeType":"VariableDeclaration","scope":3230,"src":"10707:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3171,"name":"uint256","nodeType":"ElementaryTypeName","src":"10707:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10681:42:18"},"returnParameters":{"id":3176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3230,"src":"10747:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3174,"name":"uint256","nodeType":"ElementaryTypeName","src":"10747:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10746:9:18"},"scope":3571,"src":"10662:803:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3293,"nodeType":"Block","src":"11982:709:18","statements":[{"assignments":[3242],"declarations":[{"constant":false,"id":3242,"mutability":"mutable","name":"low","nameLocation":"12000:3:18","nodeType":"VariableDeclaration","scope":3293,"src":"11992:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3241,"name":"uint256","nodeType":"ElementaryTypeName","src":"11992:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3244,"initialValue":{"hexValue":"30","id":3243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12006:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11992:15:18"},{"assignments":[3246],"declarations":[{"constant":false,"id":3246,"mutability":"mutable","name":"high","nameLocation":"12025:4:18","nodeType":"VariableDeclaration","scope":3293,"src":"12017:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3245,"name":"uint256","nodeType":"ElementaryTypeName","src":"12017:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3249,"initialValue":{"expression":{"id":3247,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"12032:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12038:6:18","memberName":"length","nodeType":"MemberAccess","src":"12032:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12017:27:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3250,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"12059:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12059:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3256,"nodeType":"IfStatement","src":"12055:48:18","trueBody":{"id":3255,"nodeType":"Block","src":"12070:33:18","statements":[{"expression":{"hexValue":"30","id":3253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12091:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3240,"id":3254,"nodeType":"Return","src":"12084:8:18"}]}},{"body":{"id":3289,"nodeType":"Block","src":"12132:532:18","statements":[{"assignments":[3261],"declarations":[{"constant":false,"id":3261,"mutability":"mutable","name":"mid","nameLocation":"12154:3:18","nodeType":"VariableDeclaration","scope":3289,"src":"12146:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3260,"name":"uint256","nodeType":"ElementaryTypeName","src":"12146:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3267,"initialValue":{"arguments":[{"id":3264,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"12173:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3265,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"12178:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3262,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"12160:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6087_$","typeString":"type(library Math)"}},"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12165:7:18","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4739,"src":"12160:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12160:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12146:37:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3269,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"12421:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":3270,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"12428:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3268,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3446,3472,3498],"referencedDeclaration":3498,"src":"12408:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4016_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12408:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4016_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3272,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12433:5:18","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4015,"src":"12408:30:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3273,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"12441:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12408:40:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3287,"nodeType":"Block","src":"12499:155:18","statements":[{"id":3286,"nodeType":"UncheckedBlock","src":"12576:64:18","statements":[{"expression":{"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3280,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"12608:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3281,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"12614:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12614:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12608:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3285,"nodeType":"ExpressionStatement","src":"12608:13:18"}]}]},"id":3288,"nodeType":"IfStatement","src":"12404:250:18","trueBody":{"id":3279,"nodeType":"Block","src":"12450:43:18","statements":[{"expression":{"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3275,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"12468:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3276,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"12475:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12468:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3278,"nodeType":"ExpressionStatement","src":"12468:10:18"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3257,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"12120:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3258,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"12126:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12120:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3290,"nodeType":"WhileStatement","src":"12113:551:18"},{"expression":{"id":3291,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"12681:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3240,"id":3292,"nodeType":"Return","src":"12674:10:18"}]},"documentation":{"id":3231,"nodeType":"StructuredDocumentation","src":"11471:412:18","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value strictly greater than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound]."},"id":3294,"implemented":true,"kind":"function","modifiers":[],"name":"upperBound","nameLocation":"11897:10:18","nodeType":"FunctionDefinition","parameters":{"id":3237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3234,"mutability":"mutable","name":"array","nameLocation":"11926:5:18","nodeType":"VariableDeclaration","scope":3294,"src":"11908:23:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3232,"name":"uint256","nodeType":"ElementaryTypeName","src":"11908:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3233,"nodeType":"ArrayTypeName","src":"11908:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3236,"mutability":"mutable","name":"element","nameLocation":"11941:7:18","nodeType":"VariableDeclaration","scope":3294,"src":"11933:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3235,"name":"uint256","nodeType":"ElementaryTypeName","src":"11933:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11907:42:18"},"returnParameters":{"id":3240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3294,"src":"11973:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3238,"name":"uint256","nodeType":"ElementaryTypeName","src":"11973:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11972:9:18"},"scope":3571,"src":"11888:803:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3356,"nodeType":"Block","src":"12875:709:18","statements":[{"assignments":[3306],"declarations":[{"constant":false,"id":3306,"mutability":"mutable","name":"low","nameLocation":"12893:3:18","nodeType":"VariableDeclaration","scope":3356,"src":"12885:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3305,"name":"uint256","nodeType":"ElementaryTypeName","src":"12885:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3308,"initialValue":{"hexValue":"30","id":3307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12899:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12885:15:18"},{"assignments":[3310],"declarations":[{"constant":false,"id":3310,"mutability":"mutable","name":"high","nameLocation":"12918:4:18","nodeType":"VariableDeclaration","scope":3356,"src":"12910:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3309,"name":"uint256","nodeType":"ElementaryTypeName","src":"12910:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3313,"initialValue":{"expression":{"id":3311,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"12925:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12931:6:18","memberName":"length","nodeType":"MemberAccess","src":"12925:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12910:27:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3314,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"12952:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12960:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12952:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3320,"nodeType":"IfStatement","src":"12948:48:18","trueBody":{"id":3319,"nodeType":"Block","src":"12963:33:18","statements":[{"expression":{"hexValue":"30","id":3317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12984:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3304,"id":3318,"nodeType":"Return","src":"12977:8:18"}]}},{"body":{"id":3352,"nodeType":"Block","src":"13025:532:18","statements":[{"assignments":[3325],"declarations":[{"constant":false,"id":3325,"mutability":"mutable","name":"mid","nameLocation":"13047:3:18","nodeType":"VariableDeclaration","scope":3352,"src":"13039:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3324,"name":"uint256","nodeType":"ElementaryTypeName","src":"13039:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3331,"initialValue":{"arguments":[{"id":3328,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"13066:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3329,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"13071:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3326,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"13053:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6087_$","typeString":"type(library Math)"}},"id":3327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13058:7:18","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4739,"src":"13053:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13053:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13039:37:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3333,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"13320:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3334,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"13327:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3332,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[3511,3524,3537],"referencedDeclaration":3537,"src":"13301:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13301:30:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3336,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"13334:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13301:40:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3350,"nodeType":"Block","src":"13504:43:18","statements":[{"expression":{"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3346,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"13522:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3347,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"13529:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13522:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3349,"nodeType":"ExpressionStatement","src":"13522:10:18"}]},"id":3351,"nodeType":"IfStatement","src":"13297:250:18","trueBody":{"id":3345,"nodeType":"Block","src":"13343:155:18","statements":[{"id":3344,"nodeType":"UncheckedBlock","src":"13420:64:18","statements":[{"expression":{"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3338,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"13452:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3339,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"13458:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13464:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13458:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13452:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3343,"nodeType":"ExpressionStatement","src":"13452:13:18"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3321,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"13013:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3322,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"13019:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13013:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3353,"nodeType":"WhileStatement","src":"13006:551:18"},{"expression":{"id":3354,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"13574:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3304,"id":3355,"nodeType":"Return","src":"13567:10:18"}]},"documentation":{"id":3295,"nodeType":"StructuredDocumentation","src":"12697:74:18","text":" @dev Same as {lowerBound}, but with an array in memory."},"id":3357,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBoundMemory","nameLocation":"12785:16:18","nodeType":"FunctionDefinition","parameters":{"id":3301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3298,"mutability":"mutable","name":"array","nameLocation":"12819:5:18","nodeType":"VariableDeclaration","scope":3357,"src":"12802:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3296,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3297,"nodeType":"ArrayTypeName","src":"12802:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3300,"mutability":"mutable","name":"element","nameLocation":"12834:7:18","nodeType":"VariableDeclaration","scope":3357,"src":"12826:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3299,"name":"uint256","nodeType":"ElementaryTypeName","src":"12826:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12801:41:18"},"returnParameters":{"id":3304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3357,"src":"12866:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3302,"name":"uint256","nodeType":"ElementaryTypeName","src":"12866:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12865:9:18"},"scope":3571,"src":"12776:808:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3419,"nodeType":"Block","src":"13768:709:18","statements":[{"assignments":[3369],"declarations":[{"constant":false,"id":3369,"mutability":"mutable","name":"low","nameLocation":"13786:3:18","nodeType":"VariableDeclaration","scope":3419,"src":"13778:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3368,"name":"uint256","nodeType":"ElementaryTypeName","src":"13778:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3371,"initialValue":{"hexValue":"30","id":3370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13792:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13778:15:18"},{"assignments":[3373],"declarations":[{"constant":false,"id":3373,"mutability":"mutable","name":"high","nameLocation":"13811:4:18","nodeType":"VariableDeclaration","scope":3419,"src":"13803:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3372,"name":"uint256","nodeType":"ElementaryTypeName","src":"13803:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3376,"initialValue":{"expression":{"id":3374,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3361,"src":"13818:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13824:6:18","memberName":"length","nodeType":"MemberAccess","src":"13818:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13803:27:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3377,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"13845:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13853:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13845:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3383,"nodeType":"IfStatement","src":"13841:48:18","trueBody":{"id":3382,"nodeType":"Block","src":"13856:33:18","statements":[{"expression":{"hexValue":"30","id":3380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13877:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3367,"id":3381,"nodeType":"Return","src":"13870:8:18"}]}},{"body":{"id":3415,"nodeType":"Block","src":"13918:532:18","statements":[{"assignments":[3388],"declarations":[{"constant":false,"id":3388,"mutability":"mutable","name":"mid","nameLocation":"13940:3:18","nodeType":"VariableDeclaration","scope":3415,"src":"13932:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3387,"name":"uint256","nodeType":"ElementaryTypeName","src":"13932:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3394,"initialValue":{"arguments":[{"id":3391,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"13959:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3392,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"13964:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3389,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"13946:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6087_$","typeString":"type(library Math)"}},"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13951:7:18","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4739,"src":"13946:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13946:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13932:37:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3396,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3361,"src":"14213:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3397,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"14220:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3395,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[3511,3524,3537],"referencedDeclaration":3537,"src":"14194:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14194:30:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3399,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3363,"src":"14227:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14194:40:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3413,"nodeType":"Block","src":"14285:155:18","statements":[{"id":3412,"nodeType":"UncheckedBlock","src":"14362:64:18","statements":[{"expression":{"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3406,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"14394:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3407,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"14400:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14406:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14400:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14394:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3411,"nodeType":"ExpressionStatement","src":"14394:13:18"}]}]},"id":3414,"nodeType":"IfStatement","src":"14190:250:18","trueBody":{"id":3405,"nodeType":"Block","src":"14236:43:18","statements":[{"expression":{"id":3403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3401,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"14254:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3402,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"14261:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14254:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3404,"nodeType":"ExpressionStatement","src":"14254:10:18"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3384,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"13906:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3385,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"13912:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13906:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3416,"nodeType":"WhileStatement","src":"13899:551:18"},{"expression":{"id":3417,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"14467:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3367,"id":3418,"nodeType":"Return","src":"14460:10:18"}]},"documentation":{"id":3358,"nodeType":"StructuredDocumentation","src":"13590:74:18","text":" @dev Same as {upperBound}, but with an array in memory."},"id":3420,"implemented":true,"kind":"function","modifiers":[],"name":"upperBoundMemory","nameLocation":"13678:16:18","nodeType":"FunctionDefinition","parameters":{"id":3364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3361,"mutability":"mutable","name":"array","nameLocation":"13712:5:18","nodeType":"VariableDeclaration","scope":3420,"src":"13695:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3359,"name":"uint256","nodeType":"ElementaryTypeName","src":"13695:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3360,"nodeType":"ArrayTypeName","src":"13695:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3363,"mutability":"mutable","name":"element","nameLocation":"13727:7:18","nodeType":"VariableDeclaration","scope":3420,"src":"13719:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3362,"name":"uint256","nodeType":"ElementaryTypeName","src":"13719:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13694:41:18"},"returnParameters":{"id":3367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3366,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3420,"src":"13759:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3365,"name":"uint256","nodeType":"ElementaryTypeName","src":"13759:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13758:9:18"},"scope":3571,"src":"13669:808:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3445,"nodeType":"Block","src":"14793:167:18","statements":[{"assignments":[3433],"declarations":[{"constant":false,"id":3433,"mutability":"mutable","name":"slot","nameLocation":"14811:4:18","nodeType":"VariableDeclaration","scope":3445,"src":"14803:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3432,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14803:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3434,"nodeType":"VariableDeclarationStatement","src":"14803:12:18"},{"AST":{"nativeSrc":"14850:40:18","nodeType":"YulBlock","src":"14850:40:18","statements":[{"nativeSrc":"14864:16:18","nodeType":"YulAssignment","src":"14864:16:18","value":{"name":"arr.slot","nativeSrc":"14872:8:18","nodeType":"YulIdentifier","src":"14872:8:18"},"variableNames":[{"name":"slot","nativeSrc":"14864:4:18","nodeType":"YulIdentifier","src":"14864:4:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3424,"isOffset":false,"isSlot":true,"src":"14872:8:18","suffix":"slot","valueSize":1},{"declaration":3433,"isOffset":false,"isSlot":false,"src":"14864:4:18","valueSize":1}],"flags":["memory-safe"],"id":3435,"nodeType":"InlineAssembly","src":"14825:65:18"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3440,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"14932:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3436,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"14906:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14911:11:18","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3916,"src":"14906:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":3438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14925:6:18","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3906,"src":"14906:25:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:30:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14937:14:18","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":4036,"src":"14906:45:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$4007_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:47:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4007_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"functionReturnParameters":3431,"id":3444,"nodeType":"Return","src":"14899:54:18"}]},"documentation":{"id":3421,"nodeType":"StructuredDocumentation","src":"14483:191:18","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3446,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"14688:12:18","nodeType":"FunctionDefinition","parameters":{"id":3427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3424,"mutability":"mutable","name":"arr","nameLocation":"14719:3:18","nodeType":"VariableDeclaration","scope":3446,"src":"14701:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3422,"name":"address","nodeType":"ElementaryTypeName","src":"14701:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3423,"nodeType":"ArrayTypeName","src":"14701:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3426,"mutability":"mutable","name":"pos","nameLocation":"14732:3:18","nodeType":"VariableDeclaration","scope":3446,"src":"14724:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3425,"name":"uint256","nodeType":"ElementaryTypeName","src":"14724:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14700:36:18"},"returnParameters":{"id":3431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3446,"src":"14760:31:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4007_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":3429,"nodeType":"UserDefinedTypeName","pathNode":{"id":3428,"name":"StorageSlot.AddressSlot","nameLocations":["14760:11:18","14772:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":4007,"src":"14760:23:18"},"referencedDeclaration":4007,"src":"14760:23:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4007_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"14759:33:18"},"scope":3571,"src":"14679:281:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3471,"nodeType":"Block","src":"15276:167:18","statements":[{"assignments":[3459],"declarations":[{"constant":false,"id":3459,"mutability":"mutable","name":"slot","nameLocation":"15294:4:18","nodeType":"VariableDeclaration","scope":3471,"src":"15286:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3458,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15286:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3460,"nodeType":"VariableDeclarationStatement","src":"15286:12:18"},{"AST":{"nativeSrc":"15333:40:18","nodeType":"YulBlock","src":"15333:40:18","statements":[{"nativeSrc":"15347:16:18","nodeType":"YulAssignment","src":"15347:16:18","value":{"name":"arr.slot","nativeSrc":"15355:8:18","nodeType":"YulIdentifier","src":"15355:8:18"},"variableNames":[{"name":"slot","nativeSrc":"15347:4:18","nodeType":"YulIdentifier","src":"15347:4:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3450,"isOffset":false,"isSlot":true,"src":"15355:8:18","suffix":"slot","valueSize":1},{"declaration":3459,"isOffset":false,"isSlot":false,"src":"15347:4:18","valueSize":1}],"flags":["memory-safe"],"id":3461,"nodeType":"InlineAssembly","src":"15308:65:18"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3466,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"15415:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3462,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"15389:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15394:11:18","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3916,"src":"15389:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15408:6:18","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3906,"src":"15389:25:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:30:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15420:14:18","memberName":"getBytes32Slot","nodeType":"MemberAccess","referencedDeclaration":4058,"src":"15389:45:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$4013_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"}},"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:47:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4013_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot storage pointer"}},"functionReturnParameters":3457,"id":3470,"nodeType":"Return","src":"15382:54:18"}]},"documentation":{"id":3447,"nodeType":"StructuredDocumentation","src":"14966:191:18","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3472,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15171:12:18","nodeType":"FunctionDefinition","parameters":{"id":3453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3450,"mutability":"mutable","name":"arr","nameLocation":"15202:3:18","nodeType":"VariableDeclaration","scope":3472,"src":"15184:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3448,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15184:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3449,"nodeType":"ArrayTypeName","src":"15184:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3452,"mutability":"mutable","name":"pos","nameLocation":"15215:3:18","nodeType":"VariableDeclaration","scope":3472,"src":"15207:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3451,"name":"uint256","nodeType":"ElementaryTypeName","src":"15207:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15183:36:18"},"returnParameters":{"id":3457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3456,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3472,"src":"15243:31:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4013_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":3455,"nodeType":"UserDefinedTypeName","pathNode":{"id":3454,"name":"StorageSlot.Bytes32Slot","nameLocations":["15243:11:18","15255:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":4013,"src":"15243:23:18"},"referencedDeclaration":4013,"src":"15243:23:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4013_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"15242:33:18"},"scope":3571,"src":"15162:281:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3497,"nodeType":"Block","src":"15759:167:18","statements":[{"assignments":[3485],"declarations":[{"constant":false,"id":3485,"mutability":"mutable","name":"slot","nameLocation":"15777:4:18","nodeType":"VariableDeclaration","scope":3497,"src":"15769:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3484,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15769:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3486,"nodeType":"VariableDeclarationStatement","src":"15769:12:18"},{"AST":{"nativeSrc":"15816:40:18","nodeType":"YulBlock","src":"15816:40:18","statements":[{"nativeSrc":"15830:16:18","nodeType":"YulAssignment","src":"15830:16:18","value":{"name":"arr.slot","nativeSrc":"15838:8:18","nodeType":"YulIdentifier","src":"15838:8:18"},"variableNames":[{"name":"slot","nativeSrc":"15830:4:18","nodeType":"YulIdentifier","src":"15830:4:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3476,"isOffset":false,"isSlot":true,"src":"15838:8:18","suffix":"slot","valueSize":1},{"declaration":3485,"isOffset":false,"isSlot":false,"src":"15830:4:18","valueSize":1}],"flags":["memory-safe"],"id":3487,"nodeType":"InlineAssembly","src":"15791:65:18"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3492,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"15898:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3488,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"15872:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15877:11:18","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3916,"src":"15872:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15891:6:18","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3906,"src":"15872:25:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":3493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:30:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15903:14:18","memberName":"getUint256Slot","nodeType":"MemberAccess","referencedDeclaration":4069,"src":"15872:45:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$4016_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:47:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4016_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"functionReturnParameters":3483,"id":3496,"nodeType":"Return","src":"15865:54:18"}]},"documentation":{"id":3473,"nodeType":"StructuredDocumentation","src":"15449:191:18","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3498,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15654:12:18","nodeType":"FunctionDefinition","parameters":{"id":3479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3476,"mutability":"mutable","name":"arr","nameLocation":"15685:3:18","nodeType":"VariableDeclaration","scope":3498,"src":"15667:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3474,"name":"uint256","nodeType":"ElementaryTypeName","src":"15667:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3475,"nodeType":"ArrayTypeName","src":"15667:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3478,"mutability":"mutable","name":"pos","nameLocation":"15698:3:18","nodeType":"VariableDeclaration","scope":3498,"src":"15690:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3477,"name":"uint256","nodeType":"ElementaryTypeName","src":"15690:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15666:36:18"},"returnParameters":{"id":3483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3498,"src":"15726:31:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4016_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":3481,"nodeType":"UserDefinedTypeName","pathNode":{"id":3480,"name":"StorageSlot.Uint256Slot","nameLocations":["15726:11:18","15738:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":4016,"src":"15726:23:18"},"referencedDeclaration":4016,"src":"15726:23:18","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4016_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"15725:33:18"},"scope":3571,"src":"15645:281:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3510,"nodeType":"Block","src":"16227:98:18","statements":[{"AST":{"nativeSrc":"16246:73:18","nodeType":"YulBlock","src":"16246:73:18","statements":[{"nativeSrc":"16260:49:18","nodeType":"YulAssignment","src":"16260:49:18","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"16281:3:18","nodeType":"YulIdentifier","src":"16281:3:18"},{"kind":"number","nativeSrc":"16286:4:18","nodeType":"YulLiteral","src":"16286:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16277:3:18","nodeType":"YulIdentifier","src":"16277:3:18"},"nativeSrc":"16277:14:18","nodeType":"YulFunctionCall","src":"16277:14:18"},{"arguments":[{"name":"pos","nativeSrc":"16297:3:18","nodeType":"YulIdentifier","src":"16297:3:18"},{"kind":"number","nativeSrc":"16302:4:18","nodeType":"YulLiteral","src":"16302:4:18","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"16293:3:18","nodeType":"YulIdentifier","src":"16293:3:18"},"nativeSrc":"16293:14:18","nodeType":"YulFunctionCall","src":"16293:14:18"}],"functionName":{"name":"add","nativeSrc":"16273:3:18","nodeType":"YulIdentifier","src":"16273:3:18"},"nativeSrc":"16273:35:18","nodeType":"YulFunctionCall","src":"16273:35:18"}],"functionName":{"name":"mload","nativeSrc":"16267:5:18","nodeType":"YulIdentifier","src":"16267:5:18"},"nativeSrc":"16267:42:18","nodeType":"YulFunctionCall","src":"16267:42:18"},"variableNames":[{"name":"res","nativeSrc":"16260:3:18","nodeType":"YulIdentifier","src":"16260:3:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3502,"isOffset":false,"isSlot":false,"src":"16281:3:18","valueSize":1},{"declaration":3504,"isOffset":false,"isSlot":false,"src":"16297:3:18","valueSize":1},{"declaration":3507,"isOffset":false,"isSlot":false,"src":"16260:3:18","valueSize":1}],"id":3509,"nodeType":"InlineAssembly","src":"16237:82:18"}]},"documentation":{"id":3499,"nodeType":"StructuredDocumentation","src":"15932:191:18","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3511,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16137:18:18","nodeType":"FunctionDefinition","parameters":{"id":3505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3502,"mutability":"mutable","name":"arr","nameLocation":"16173:3:18","nodeType":"VariableDeclaration","scope":3511,"src":"16156:20:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3500,"name":"address","nodeType":"ElementaryTypeName","src":"16156:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3501,"nodeType":"ArrayTypeName","src":"16156:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3504,"mutability":"mutable","name":"pos","nameLocation":"16186:3:18","nodeType":"VariableDeclaration","scope":3511,"src":"16178:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3503,"name":"uint256","nodeType":"ElementaryTypeName","src":"16178:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16155:35:18"},"returnParameters":{"id":3508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3507,"mutability":"mutable","name":"res","nameLocation":"16222:3:18","nodeType":"VariableDeclaration","scope":3511,"src":"16214:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3506,"name":"address","nodeType":"ElementaryTypeName","src":"16214:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16213:13:18"},"scope":3571,"src":"16128:197:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3523,"nodeType":"Block","src":"16626:98:18","statements":[{"AST":{"nativeSrc":"16645:73:18","nodeType":"YulBlock","src":"16645:73:18","statements":[{"nativeSrc":"16659:49:18","nodeType":"YulAssignment","src":"16659:49:18","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"16680:3:18","nodeType":"YulIdentifier","src":"16680:3:18"},{"kind":"number","nativeSrc":"16685:4:18","nodeType":"YulLiteral","src":"16685:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16676:3:18","nodeType":"YulIdentifier","src":"16676:3:18"},"nativeSrc":"16676:14:18","nodeType":"YulFunctionCall","src":"16676:14:18"},{"arguments":[{"name":"pos","nativeSrc":"16696:3:18","nodeType":"YulIdentifier","src":"16696:3:18"},{"kind":"number","nativeSrc":"16701:4:18","nodeType":"YulLiteral","src":"16701:4:18","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"16692:3:18","nodeType":"YulIdentifier","src":"16692:3:18"},"nativeSrc":"16692:14:18","nodeType":"YulFunctionCall","src":"16692:14:18"}],"functionName":{"name":"add","nativeSrc":"16672:3:18","nodeType":"YulIdentifier","src":"16672:3:18"},"nativeSrc":"16672:35:18","nodeType":"YulFunctionCall","src":"16672:35:18"}],"functionName":{"name":"mload","nativeSrc":"16666:5:18","nodeType":"YulIdentifier","src":"16666:5:18"},"nativeSrc":"16666:42:18","nodeType":"YulFunctionCall","src":"16666:42:18"},"variableNames":[{"name":"res","nativeSrc":"16659:3:18","nodeType":"YulIdentifier","src":"16659:3:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3515,"isOffset":false,"isSlot":false,"src":"16680:3:18","valueSize":1},{"declaration":3517,"isOffset":false,"isSlot":false,"src":"16696:3:18","valueSize":1},{"declaration":3520,"isOffset":false,"isSlot":false,"src":"16659:3:18","valueSize":1}],"id":3522,"nodeType":"InlineAssembly","src":"16636:82:18"}]},"documentation":{"id":3512,"nodeType":"StructuredDocumentation","src":"16331:191:18","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3524,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16536:18:18","nodeType":"FunctionDefinition","parameters":{"id":3518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3515,"mutability":"mutable","name":"arr","nameLocation":"16572:3:18","nodeType":"VariableDeclaration","scope":3524,"src":"16555:20:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16555:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3514,"nodeType":"ArrayTypeName","src":"16555:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3517,"mutability":"mutable","name":"pos","nameLocation":"16585:3:18","nodeType":"VariableDeclaration","scope":3524,"src":"16577:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3516,"name":"uint256","nodeType":"ElementaryTypeName","src":"16577:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16554:35:18"},"returnParameters":{"id":3521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3520,"mutability":"mutable","name":"res","nameLocation":"16621:3:18","nodeType":"VariableDeclaration","scope":3524,"src":"16613:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3519,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16613:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16612:13:18"},"scope":3571,"src":"16527:197:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3536,"nodeType":"Block","src":"17025:98:18","statements":[{"AST":{"nativeSrc":"17044:73:18","nodeType":"YulBlock","src":"17044:73:18","statements":[{"nativeSrc":"17058:49:18","nodeType":"YulAssignment","src":"17058:49:18","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"17079:3:18","nodeType":"YulIdentifier","src":"17079:3:18"},{"kind":"number","nativeSrc":"17084:4:18","nodeType":"YulLiteral","src":"17084:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17075:3:18","nodeType":"YulIdentifier","src":"17075:3:18"},"nativeSrc":"17075:14:18","nodeType":"YulFunctionCall","src":"17075:14:18"},{"arguments":[{"name":"pos","nativeSrc":"17095:3:18","nodeType":"YulIdentifier","src":"17095:3:18"},{"kind":"number","nativeSrc":"17100:4:18","nodeType":"YulLiteral","src":"17100:4:18","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"17091:3:18","nodeType":"YulIdentifier","src":"17091:3:18"},"nativeSrc":"17091:14:18","nodeType":"YulFunctionCall","src":"17091:14:18"}],"functionName":{"name":"add","nativeSrc":"17071:3:18","nodeType":"YulIdentifier","src":"17071:3:18"},"nativeSrc":"17071:35:18","nodeType":"YulFunctionCall","src":"17071:35:18"}],"functionName":{"name":"mload","nativeSrc":"17065:5:18","nodeType":"YulIdentifier","src":"17065:5:18"},"nativeSrc":"17065:42:18","nodeType":"YulFunctionCall","src":"17065:42:18"},"variableNames":[{"name":"res","nativeSrc":"17058:3:18","nodeType":"YulIdentifier","src":"17058:3:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3528,"isOffset":false,"isSlot":false,"src":"17079:3:18","valueSize":1},{"declaration":3530,"isOffset":false,"isSlot":false,"src":"17095:3:18","valueSize":1},{"declaration":3533,"isOffset":false,"isSlot":false,"src":"17058:3:18","valueSize":1}],"id":3535,"nodeType":"InlineAssembly","src":"17035:82:18"}]},"documentation":{"id":3525,"nodeType":"StructuredDocumentation","src":"16730:191:18","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3537,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16935:18:18","nodeType":"FunctionDefinition","parameters":{"id":3531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3528,"mutability":"mutable","name":"arr","nameLocation":"16971:3:18","nodeType":"VariableDeclaration","scope":3537,"src":"16954:20:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3526,"name":"uint256","nodeType":"ElementaryTypeName","src":"16954:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3527,"nodeType":"ArrayTypeName","src":"16954:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3530,"mutability":"mutable","name":"pos","nameLocation":"16984:3:18","nodeType":"VariableDeclaration","scope":3537,"src":"16976:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3529,"name":"uint256","nodeType":"ElementaryTypeName","src":"16976:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16953:35:18"},"returnParameters":{"id":3534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3533,"mutability":"mutable","name":"res","nameLocation":"17020:3:18","nodeType":"VariableDeclaration","scope":3537,"src":"17012:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3532,"name":"uint256","nodeType":"ElementaryTypeName","src":"17012:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17011:13:18"},"scope":3571,"src":"16926:197:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3547,"nodeType":"Block","src":"17440:88:18","statements":[{"AST":{"nativeSrc":"17475:47:18","nodeType":"YulBlock","src":"17475:47:18","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"17496:10:18","nodeType":"YulIdentifier","src":"17496:10:18"},{"name":"len","nativeSrc":"17508:3:18","nodeType":"YulIdentifier","src":"17508:3:18"}],"functionName":{"name":"sstore","nativeSrc":"17489:6:18","nodeType":"YulIdentifier","src":"17489:6:18"},"nativeSrc":"17489:23:18","nodeType":"YulFunctionCall","src":"17489:23:18"},"nativeSrc":"17489:23:18","nodeType":"YulExpressionStatement","src":"17489:23:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":3541,"isOffset":false,"isSlot":true,"src":"17496:10:18","suffix":"slot","valueSize":1},{"declaration":3543,"isOffset":false,"isSlot":false,"src":"17508:3:18","valueSize":1}],"flags":["memory-safe"],"id":3546,"nodeType":"InlineAssembly","src":"17450:72:18"}]},"documentation":{"id":3538,"nodeType":"StructuredDocumentation","src":"17129:234:18","text":" @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":3548,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"17377:15:18","nodeType":"FunctionDefinition","parameters":{"id":3544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3541,"mutability":"mutable","name":"array","nameLocation":"17411:5:18","nodeType":"VariableDeclaration","scope":3548,"src":"17393:23:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3539,"name":"address","nodeType":"ElementaryTypeName","src":"17393:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3540,"nodeType":"ArrayTypeName","src":"17393:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3543,"mutability":"mutable","name":"len","nameLocation":"17426:3:18","nodeType":"VariableDeclaration","scope":3548,"src":"17418:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3542,"name":"uint256","nodeType":"ElementaryTypeName","src":"17418:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17392:38:18"},"returnParameters":{"id":3545,"nodeType":"ParameterList","parameters":[],"src":"17440:0:18"},"scope":3571,"src":"17368:160:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3558,"nodeType":"Block","src":"17845:88:18","statements":[{"AST":{"nativeSrc":"17880:47:18","nodeType":"YulBlock","src":"17880:47:18","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"17901:10:18","nodeType":"YulIdentifier","src":"17901:10:18"},{"name":"len","nativeSrc":"17913:3:18","nodeType":"YulIdentifier","src":"17913:3:18"}],"functionName":{"name":"sstore","nativeSrc":"17894:6:18","nodeType":"YulIdentifier","src":"17894:6:18"},"nativeSrc":"17894:23:18","nodeType":"YulFunctionCall","src":"17894:23:18"},"nativeSrc":"17894:23:18","nodeType":"YulExpressionStatement","src":"17894:23:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":3552,"isOffset":false,"isSlot":true,"src":"17901:10:18","suffix":"slot","valueSize":1},{"declaration":3554,"isOffset":false,"isSlot":false,"src":"17913:3:18","valueSize":1}],"flags":["memory-safe"],"id":3557,"nodeType":"InlineAssembly","src":"17855:72:18"}]},"documentation":{"id":3549,"nodeType":"StructuredDocumentation","src":"17534:234:18","text":" @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":3559,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"17782:15:18","nodeType":"FunctionDefinition","parameters":{"id":3555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3552,"mutability":"mutable","name":"array","nameLocation":"17816:5:18","nodeType":"VariableDeclaration","scope":3559,"src":"17798:23:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3550,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17798:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3551,"nodeType":"ArrayTypeName","src":"17798:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3554,"mutability":"mutable","name":"len","nameLocation":"17831:3:18","nodeType":"VariableDeclaration","scope":3559,"src":"17823:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3553,"name":"uint256","nodeType":"ElementaryTypeName","src":"17823:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17797:38:18"},"returnParameters":{"id":3556,"nodeType":"ParameterList","parameters":[],"src":"17845:0:18"},"scope":3571,"src":"17773:160:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3569,"nodeType":"Block","src":"18250:88:18","statements":[{"AST":{"nativeSrc":"18285:47:18","nodeType":"YulBlock","src":"18285:47:18","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"18306:10:18","nodeType":"YulIdentifier","src":"18306:10:18"},{"name":"len","nativeSrc":"18318:3:18","nodeType":"YulIdentifier","src":"18318:3:18"}],"functionName":{"name":"sstore","nativeSrc":"18299:6:18","nodeType":"YulIdentifier","src":"18299:6:18"},"nativeSrc":"18299:23:18","nodeType":"YulFunctionCall","src":"18299:23:18"},"nativeSrc":"18299:23:18","nodeType":"YulExpressionStatement","src":"18299:23:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":3563,"isOffset":false,"isSlot":true,"src":"18306:10:18","suffix":"slot","valueSize":1},{"declaration":3565,"isOffset":false,"isSlot":false,"src":"18318:3:18","valueSize":1}],"flags":["memory-safe"],"id":3568,"nodeType":"InlineAssembly","src":"18260:72:18"}]},"documentation":{"id":3560,"nodeType":"StructuredDocumentation","src":"17939:234:18","text":" @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":3570,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"18187:15:18","nodeType":"FunctionDefinition","parameters":{"id":3566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3563,"mutability":"mutable","name":"array","nameLocation":"18221:5:18","nodeType":"VariableDeclaration","scope":3570,"src":"18203:23:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3561,"name":"uint256","nodeType":"ElementaryTypeName","src":"18203:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3562,"nodeType":"ArrayTypeName","src":"18203:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3565,"mutability":"mutable","name":"len","nameLocation":"18236:3:18","nodeType":"VariableDeclaration","scope":3570,"src":"18228:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3564,"name":"uint256","nodeType":"ElementaryTypeName","src":"18228:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18202:38:18"},"returnParameters":{"id":3567,"nodeType":"ParameterList","parameters":[],"src":"18250:0:18"},"scope":3571,"src":"18178:160:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":3572,"src":"459:17881:18","usedErrors":[],"usedEvents":[]}],"src":"183:18158:18"},"id":18},"@openzeppelin/contracts/utils/Comparators.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","exportedSymbols":{"Comparators":[3603]},"id":3604,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3573,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"Comparators","contractDependencies":[],"contractKind":"library","documentation":{"id":3574,"nodeType":"StructuredDocumentation","src":"131:92:19","text":" @dev Provides a set of functions to compare values.\n _Available since v5.1._"},"fullyImplemented":true,"id":3603,"linearizedBaseContracts":[3603],"name":"Comparators","nameLocation":"232:11:19","nodeType":"ContractDefinition","nodes":[{"body":{"id":3587,"nodeType":"Block","src":"313:29:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3583,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"330:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3584,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"334:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"330:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3582,"id":3586,"nodeType":"Return","src":"323:12:19"}]},"id":3588,"implemented":true,"kind":"function","modifiers":[],"name":"lt","nameLocation":"259:2:19","nodeType":"FunctionDefinition","parameters":{"id":3579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3576,"mutability":"mutable","name":"a","nameLocation":"270:1:19","nodeType":"VariableDeclaration","scope":3588,"src":"262:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3575,"name":"uint256","nodeType":"ElementaryTypeName","src":"262:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3578,"mutability":"mutable","name":"b","nameLocation":"281:1:19","nodeType":"VariableDeclaration","scope":3588,"src":"273:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3577,"name":"uint256","nodeType":"ElementaryTypeName","src":"273:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"261:22:19"},"returnParameters":{"id":3582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3581,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3588,"src":"307:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3580,"name":"bool","nodeType":"ElementaryTypeName","src":"307:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"306:6:19"},"scope":3603,"src":"250:92:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3601,"nodeType":"Block","src":"411:29:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3597,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"428:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3598,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3592,"src":"432:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"428:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3596,"id":3600,"nodeType":"Return","src":"421:12:19"}]},"id":3602,"implemented":true,"kind":"function","modifiers":[],"name":"gt","nameLocation":"357:2:19","nodeType":"FunctionDefinition","parameters":{"id":3593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3590,"mutability":"mutable","name":"a","nameLocation":"368:1:19","nodeType":"VariableDeclaration","scope":3602,"src":"360:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3589,"name":"uint256","nodeType":"ElementaryTypeName","src":"360:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3592,"mutability":"mutable","name":"b","nameLocation":"379:1:19","nodeType":"VariableDeclaration","scope":3602,"src":"371:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3591,"name":"uint256","nodeType":"ElementaryTypeName","src":"371:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"359:22:19"},"returnParameters":{"id":3596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3602,"src":"405:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3594,"name":"bool","nodeType":"ElementaryTypeName","src":"405:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"404:6:19"},"scope":3603,"src":"348:92:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3604,"src":"224:218:19","usedErrors":[],"usedEvents":[]}],"src":"105:338:19"},"id":19},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[3633]},"id":3634,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3605,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:20"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":3606,"nodeType":"StructuredDocumentation","src":"127:496:20","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":3633,"linearizedBaseContracts":[3633],"name":"Context","nameLocation":"642:7:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":3614,"nodeType":"Block","src":"718:34:20","statements":[{"expression":{"expression":{"id":3611,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:20","memberName":"sender","nodeType":"MemberAccess","src":"735:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3610,"id":3613,"nodeType":"Return","src":"728:17:20"}]},"id":3615,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:20","nodeType":"FunctionDefinition","parameters":{"id":3607,"nodeType":"ParameterList","parameters":[],"src":"675:2:20"},"returnParameters":{"id":3610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3615,"src":"709:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3608,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:20"},"scope":3633,"src":"656:96:20","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3623,"nodeType":"Block","src":"825:32:20","statements":[{"expression":{"expression":{"id":3620,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:20","memberName":"data","nodeType":"MemberAccess","src":"842:8:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":3619,"id":3622,"nodeType":"Return","src":"835:15:20"}]},"id":3624,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:20","nodeType":"FunctionDefinition","parameters":{"id":3616,"nodeType":"ParameterList","parameters":[],"src":"775:2:20"},"returnParameters":{"id":3619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3624,"src":"809:14:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3617,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:20"},"scope":3633,"src":"758:99:20","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3631,"nodeType":"Block","src":"935:25:20","statements":[{"expression":{"hexValue":"30","id":3629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3628,"id":3630,"nodeType":"Return","src":"945:8:20"}]},"id":3632,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:20","nodeType":"FunctionDefinition","parameters":{"id":3625,"nodeType":"ParameterList","parameters":[],"src":"892:2:20"},"returnParameters":{"id":3628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3632,"src":"926:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3626,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:20"},"scope":3633,"src":"863:97:20","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":3634,"src":"624:338:20","usedErrors":[],"usedEvents":[]}],"src":"101:862:20"},"id":20},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[3685]},"id":3686,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3635,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":3636,"nodeType":"StructuredDocumentation","src":"125:489:21","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":3685,"linearizedBaseContracts":[3685],"name":"Panic","nameLocation":"665:5:21","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":3637,"nodeType":"StructuredDocumentation","src":"677:36:21","text":"@dev generic / unspecified error"},"id":3640,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:21","nodeType":"VariableDeclaration","scope":3685,"src":"718:40:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3638,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":3639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":3641,"nodeType":"StructuredDocumentation","src":"764:37:21","text":"@dev used by the assert() builtin"},"id":3644,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:21","nodeType":"VariableDeclaration","scope":3685,"src":"806:39:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3642,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":3643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":3645,"nodeType":"StructuredDocumentation","src":"851:41:21","text":"@dev arithmetic underflow or overflow"},"id":3648,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:21","nodeType":"VariableDeclaration","scope":3685,"src":"897:47:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3646,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":3647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:21","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":3649,"nodeType":"StructuredDocumentation","src":"950:35:21","text":"@dev division or modulo by zero"},"id":3652,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:21","nodeType":"VariableDeclaration","scope":3685,"src":"990:49:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3650,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":3651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:21","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":3653,"nodeType":"StructuredDocumentation","src":"1045:30:21","text":"@dev enum conversion error"},"id":3656,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:21","nodeType":"VariableDeclaration","scope":3685,"src":"1080:54:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3654,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":3655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:21","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":3657,"nodeType":"StructuredDocumentation","src":"1140:36:21","text":"@dev invalid encoding in storage"},"id":3660,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:21","nodeType":"VariableDeclaration","scope":3685,"src":"1181:55:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3658,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":3659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:21","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":3661,"nodeType":"StructuredDocumentation","src":"1242:24:21","text":"@dev empty array pop"},"id":3664,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:21","nodeType":"VariableDeclaration","scope":3685,"src":"1271:48:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3662,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":3663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:21","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":3665,"nodeType":"StructuredDocumentation","src":"1325:35:21","text":"@dev array out of bounds access"},"id":3668,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:21","nodeType":"VariableDeclaration","scope":3685,"src":"1365:52:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3666,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":3667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:21","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":3669,"nodeType":"StructuredDocumentation","src":"1423:65:21","text":"@dev resource error (too large allocation or too large array)"},"id":3672,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:21","nodeType":"VariableDeclaration","scope":3685,"src":"1493:47:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3670,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":3671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:21","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":3673,"nodeType":"StructuredDocumentation","src":"1546:42:21","text":"@dev calling invalid internal function"},"id":3676,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:21","nodeType":"VariableDeclaration","scope":3685,"src":"1593:58:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3674,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":3675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:21","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":3683,"nodeType":"Block","src":"1819:151:21","statements":[{"AST":{"nativeSrc":"1854:110:21","nodeType":"YulBlock","src":"1854:110:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:21","nodeType":"YulLiteral","src":"1875:4:21","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:21","nodeType":"YulLiteral","src":"1881:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:21","nodeType":"YulIdentifier","src":"1868:6:21"},"nativeSrc":"1868:24:21","nodeType":"YulFunctionCall","src":"1868:24:21"},"nativeSrc":"1868:24:21","nodeType":"YulExpressionStatement","src":"1868:24:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:21","nodeType":"YulLiteral","src":"1912:4:21","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:21","nodeType":"YulIdentifier","src":"1918:4:21"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:21","nodeType":"YulIdentifier","src":"1905:6:21"},"nativeSrc":"1905:18:21","nodeType":"YulFunctionCall","src":"1905:18:21"},"nativeSrc":"1905:18:21","nodeType":"YulExpressionStatement","src":"1905:18:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:21","nodeType":"YulLiteral","src":"1943:4:21","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:21","nodeType":"YulLiteral","src":"1949:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:21","nodeType":"YulIdentifier","src":"1936:6:21"},"nativeSrc":"1936:18:21","nodeType":"YulFunctionCall","src":"1936:18:21"},"nativeSrc":"1936:18:21","nodeType":"YulExpressionStatement","src":"1936:18:21"}]},"evmVersion":"paris","externalReferences":[{"declaration":3679,"isOffset":false,"isSlot":false,"src":"1918:4:21","valueSize":1}],"flags":["memory-safe"],"id":3682,"nodeType":"InlineAssembly","src":"1829:135:21"}]},"documentation":{"id":3677,"nodeType":"StructuredDocumentation","src":"1658:113:21","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":3684,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:21","nodeType":"FunctionDefinition","parameters":{"id":3680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3679,"mutability":"mutable","name":"code","nameLocation":"1799:4:21","nodeType":"VariableDeclaration","scope":3684,"src":"1791:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3678,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:21"},"returnParameters":{"id":3681,"nodeType":"ParameterList","parameters":[],"src":"1819:0:21"},"scope":3685,"src":"1776:194:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3686,"src":"657:1315:21","usedErrors":[],"usedEvents":[]}],"src":"99:1874:21"},"id":21},"@openzeppelin/contracts/utils/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","exportedSymbols":{"Context":[3633],"Pausable":[3802]},"id":3803,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3687,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:22"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3689,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3803,"sourceUnit":3634,"src":"128:45:22","symbolAliases":[{"foreign":{"id":3688,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"136:7:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3691,"name":"Context","nameLocations":["645:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":3633,"src":"645:7:22"},"id":3692,"nodeType":"InheritanceSpecifier","src":"645:7:22"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3690,"nodeType":"StructuredDocumentation","src":"175:439:22","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":3802,"linearizedBaseContracts":[3802,3633],"name":"Pausable","nameLocation":"633:8:22","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":3694,"mutability":"mutable","name":"_paused","nameLocation":"672:7:22","nodeType":"VariableDeclaration","scope":3802,"src":"659:20:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3693,"name":"bool","nodeType":"ElementaryTypeName","src":"659:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":3695,"nodeType":"StructuredDocumentation","src":"686:73:22","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":3699,"name":"Paused","nameLocation":"770:6:22","nodeType":"EventDefinition","parameters":{"id":3698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3697,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"785:7:22","nodeType":"VariableDeclaration","scope":3699,"src":"777:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3696,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"776:17:22"},"src":"764:30:22"},{"anonymous":false,"documentation":{"id":3700,"nodeType":"StructuredDocumentation","src":"800:70:22","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":3704,"name":"Unpaused","nameLocation":"881:8:22","nodeType":"EventDefinition","parameters":{"id":3703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3702,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"898:7:22","nodeType":"VariableDeclaration","scope":3704,"src":"890:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3701,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"889:17:22"},"src":"875:32:22"},{"documentation":{"id":3705,"nodeType":"StructuredDocumentation","src":"913:76:22","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":3707,"name":"EnforcedPause","nameLocation":"1000:13:22","nodeType":"ErrorDefinition","parameters":{"id":3706,"nodeType":"ParameterList","parameters":[],"src":"1013:2:22"},"src":"994:22:22"},{"documentation":{"id":3708,"nodeType":"StructuredDocumentation","src":"1022:80:22","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":3710,"name":"ExpectedPause","nameLocation":"1113:13:22","nodeType":"ErrorDefinition","parameters":{"id":3709,"nodeType":"ParameterList","parameters":[],"src":"1126:2:22"},"src":"1107:22:22"},{"body":{"id":3718,"nodeType":"Block","src":"1221:32:22","statements":[{"expression":{"id":3716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3714,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"1231:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1241:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1231:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3717,"nodeType":"ExpressionStatement","src":"1231:15:22"}]},"documentation":{"id":3711,"nodeType":"StructuredDocumentation","src":"1135:67:22","text":" @dev Initializes the contract in unpaused state."},"id":3719,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3712,"nodeType":"ParameterList","parameters":[],"src":"1218:2:22"},"returnParameters":{"id":3713,"nodeType":"ParameterList","parameters":[],"src":"1221:0:22"},"scope":3802,"src":"1207:46:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3726,"nodeType":"Block","src":"1464:47:22","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3722,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"1474:17:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1474:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3724,"nodeType":"ExpressionStatement","src":"1474:19:22"},{"id":3725,"nodeType":"PlaceholderStatement","src":"1503:1:22"}]},"documentation":{"id":3720,"nodeType":"StructuredDocumentation","src":"1259:175:22","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":3727,"name":"whenNotPaused","nameLocation":"1448:13:22","nodeType":"ModifierDefinition","parameters":{"id":3721,"nodeType":"ParameterList","parameters":[],"src":"1461:2:22"},"src":"1439:72:22","virtual":false,"visibility":"internal"},{"body":{"id":3734,"nodeType":"Block","src":"1711:44:22","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3730,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"1721:14:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1721:16:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3732,"nodeType":"ExpressionStatement","src":"1721:16:22"},{"id":3733,"nodeType":"PlaceholderStatement","src":"1747:1:22"}]},"documentation":{"id":3728,"nodeType":"StructuredDocumentation","src":"1517:167:22","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":3735,"name":"whenPaused","nameLocation":"1698:10:22","nodeType":"ModifierDefinition","parameters":{"id":3729,"nodeType":"ParameterList","parameters":[],"src":"1708:2:22"},"src":"1689:66:22","virtual":false,"visibility":"internal"},{"body":{"id":3743,"nodeType":"Block","src":"1903:31:22","statements":[{"expression":{"id":3741,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"1920:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3740,"id":3742,"nodeType":"Return","src":"1913:14:22"}]},"documentation":{"id":3736,"nodeType":"StructuredDocumentation","src":"1761:84:22","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":3744,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1859:6:22","nodeType":"FunctionDefinition","parameters":{"id":3737,"nodeType":"ParameterList","parameters":[],"src":"1865:2:22"},"returnParameters":{"id":3740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3739,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3744,"src":"1897:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3738,"name":"bool","nodeType":"ElementaryTypeName","src":"1897:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1896:6:22"},"scope":3802,"src":"1850:84:22","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3755,"nodeType":"Block","src":"2053:77:22","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":3748,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"2067:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2067:8:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3754,"nodeType":"IfStatement","src":"2063:61:22","trueBody":{"id":3753,"nodeType":"Block","src":"2077:47:22","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3750,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3707,"src":"2098:13:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2098:15:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3752,"nodeType":"RevertStatement","src":"2091:22:22"}]}}]},"documentation":{"id":3745,"nodeType":"StructuredDocumentation","src":"1940:57:22","text":" @dev Throws if the contract is paused."},"id":3756,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2011:17:22","nodeType":"FunctionDefinition","parameters":{"id":3746,"nodeType":"ParameterList","parameters":[],"src":"2028:2:22"},"returnParameters":{"id":3747,"nodeType":"ParameterList","parameters":[],"src":"2053:0:22"},"scope":3802,"src":"2002:128:22","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3768,"nodeType":"Block","src":"2250:78:22","statements":[{"condition":{"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2264:9:22","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3760,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"2265:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2265:8:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3767,"nodeType":"IfStatement","src":"2260:62:22","trueBody":{"id":3766,"nodeType":"Block","src":"2275:47:22","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3763,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"2296:13:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:15:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3765,"nodeType":"RevertStatement","src":"2289:22:22"}]}}]},"documentation":{"id":3757,"nodeType":"StructuredDocumentation","src":"2136:61:22","text":" @dev Throws if the contract is not paused."},"id":3769,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2211:14:22","nodeType":"FunctionDefinition","parameters":{"id":3758,"nodeType":"ParameterList","parameters":[],"src":"2225:2:22"},"returnParameters":{"id":3759,"nodeType":"ParameterList","parameters":[],"src":"2250:0:22"},"scope":3802,"src":"2202:126:22","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3784,"nodeType":"Block","src":"2512:66:22","statements":[{"expression":{"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3775,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"2522:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2532:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2522:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3778,"nodeType":"ExpressionStatement","src":"2522:14:22"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3780,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"2558:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2558:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3779,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3699,"src":"2551:6:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2551:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3783,"nodeType":"EmitStatement","src":"2546:25:22"}]},"documentation":{"id":3770,"nodeType":"StructuredDocumentation","src":"2334:124:22","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":3785,"implemented":true,"kind":"function","modifiers":[{"id":3773,"kind":"modifierInvocation","modifierName":{"id":3772,"name":"whenNotPaused","nameLocations":["2498:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":3727,"src":"2498:13:22"},"nodeType":"ModifierInvocation","src":"2498:13:22"}],"name":"_pause","nameLocation":"2472:6:22","nodeType":"FunctionDefinition","parameters":{"id":3771,"nodeType":"ParameterList","parameters":[],"src":"2478:2:22"},"returnParameters":{"id":3774,"nodeType":"ParameterList","parameters":[],"src":"2512:0:22"},"scope":3802,"src":"2463:115:22","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3800,"nodeType":"Block","src":"2758:69:22","statements":[{"expression":{"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3791,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"2768:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2778:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2768:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3794,"nodeType":"ExpressionStatement","src":"2768:15:22"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3796,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"2807:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2807:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3795,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"2798:8:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2798:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3799,"nodeType":"EmitStatement","src":"2793:27:22"}]},"documentation":{"id":3786,"nodeType":"StructuredDocumentation","src":"2584:121:22","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":3801,"implemented":true,"kind":"function","modifiers":[{"id":3789,"kind":"modifierInvocation","modifierName":{"id":3788,"name":"whenPaused","nameLocations":["2747:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":3735,"src":"2747:10:22"},"nodeType":"ModifierInvocation","src":"2747:10:22"}],"name":"_unpause","nameLocation":"2719:8:22","nodeType":"FunctionDefinition","parameters":{"id":3787,"nodeType":"ParameterList","parameters":[],"src":"2727:2:22"},"returnParameters":{"id":3790,"nodeType":"ParameterList","parameters":[],"src":"2758:0:22"},"scope":3802,"src":"2710:117:22","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3803,"src":"615:2214:22","usedErrors":[3707,3710],"usedEvents":[3699,3704]}],"src":"102:2728:22"},"id":22},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[3871]},"id":3872,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3804,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:23"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":3805,"nodeType":"StructuredDocumentation","src":"135:894:23","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":3871,"linearizedBaseContracts":[3871],"name":"ReentrancyGuard","nameLocation":"1048:15:23","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3808,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:23","nodeType":"VariableDeclaration","scope":3871,"src":"1818:40:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3806,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":3807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":3811,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:23","nodeType":"VariableDeclaration","scope":3871,"src":"1864:36:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3809,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":3810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":3813,"mutability":"mutable","name":"_status","nameLocation":"1923:7:23","nodeType":"VariableDeclaration","scope":3871,"src":"1907:23:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3812,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":3814,"nodeType":"StructuredDocumentation","src":"1937:52:23","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":3816,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:23","nodeType":"ErrorDefinition","parameters":{"id":3815,"nodeType":"ParameterList","parameters":[],"src":"2028:2:23"},"src":"1994:37:23"},{"body":{"id":3823,"nodeType":"Block","src":"2051:38:23","statements":[{"expression":{"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3819,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"2061:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3820,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"2071:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3822,"nodeType":"ExpressionStatement","src":"2061:21:23"}]},"id":3824,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3817,"nodeType":"ParameterList","parameters":[],"src":"2048:2:23"},"returnParameters":{"id":3818,"nodeType":"ParameterList","parameters":[],"src":"2051:0:23"},"scope":3871,"src":"2037:52:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3834,"nodeType":"Block","src":"2490:79:23","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3827,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"2500:19:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3829,"nodeType":"ExpressionStatement","src":"2500:21:23"},{"id":3830,"nodeType":"PlaceholderStatement","src":"2531:1:23"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3831,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3859,"src":"2542:18:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3833,"nodeType":"ExpressionStatement","src":"2542:20:23"}]},"documentation":{"id":3825,"nodeType":"StructuredDocumentation","src":"2095:366:23","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":3835,"name":"nonReentrant","nameLocation":"2475:12:23","nodeType":"ModifierDefinition","parameters":{"id":3826,"nodeType":"ParameterList","parameters":[],"src":"2487:2:23"},"src":"2466:103:23","virtual":false,"visibility":"internal"},{"body":{"id":3850,"nodeType":"Block","src":"2614:268:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3838,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"2702:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3839,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3811,"src":"2713:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3845,"nodeType":"IfStatement","src":"2698:86:23","trueBody":{"id":3844,"nodeType":"Block","src":"2722:62:23","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3841,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"2743:28:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3843,"nodeType":"RevertStatement","src":"2736:37:23"}]}},{"expression":{"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3846,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"2858:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3847,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3811,"src":"2868:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3849,"nodeType":"ExpressionStatement","src":"2858:17:23"}]},"id":3851,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:23","nodeType":"FunctionDefinition","parameters":{"id":3836,"nodeType":"ParameterList","parameters":[],"src":"2603:2:23"},"returnParameters":{"id":3837,"nodeType":"ParameterList","parameters":[],"src":"2614:0:23"},"scope":3871,"src":"2575:307:23","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3858,"nodeType":"Block","src":"2926:170:23","statements":[{"expression":{"id":3856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3854,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"3068:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3855,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"3078:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3857,"nodeType":"ExpressionStatement","src":"3068:21:23"}]},"id":3859,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:23","nodeType":"FunctionDefinition","parameters":{"id":3852,"nodeType":"ParameterList","parameters":[],"src":"2915:2:23"},"returnParameters":{"id":3853,"nodeType":"ParameterList","parameters":[],"src":"2926:0:23"},"scope":3871,"src":"2888:208:23","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3869,"nodeType":"Block","src":"3339:42:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3865,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"3356:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3866,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3811,"src":"3367:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3864,"id":3868,"nodeType":"Return","src":"3349:25:23"}]},"documentation":{"id":3860,"nodeType":"StructuredDocumentation","src":"3102:168:23","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":3870,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:23","nodeType":"FunctionDefinition","parameters":{"id":3861,"nodeType":"ParameterList","parameters":[],"src":"3307:2:23"},"returnParameters":{"id":3864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3863,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3870,"src":"3333:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3862,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:23"},"scope":3871,"src":"3275:106:23","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3872,"src":"1030:2353:23","usedErrors":[3816],"usedEvents":[]}],"src":"109:3275:23"},"id":23},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","exportedSymbols":{"SlotDerivation":[4001]},"id":4002,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3873,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"199:24:24"},{"abstract":false,"baseContracts":[],"canonicalName":"SlotDerivation","contractDependencies":[],"contractKind":"library","documentation":{"id":3874,"nodeType":"StructuredDocumentation","src":"225:1372:24","text":" @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n the solidity language / compiler.\n See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n Example usage:\n ```solidity\n contract Example {\n     // Add the library methods\n     using StorageSlot for bytes32;\n     using SlotDerivation for bytes32;\n     // Declare a namespace\n     string private constant _NAMESPACE = \"<namespace>\" // eg. OpenZeppelin.Slot\n     function setValueInNamespace(uint256 key, address newValue) internal {\n         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n     }\n     function getValueInNamespace(uint256 key) internal view returns (address) {\n         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n     }\n }\n ```\n TIP: Consider using this library along with {StorageSlot}.\n NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n upgrade safety will ignore the slots accessed through this library.\n _Available since v5.1._"},"fullyImplemented":true,"id":4001,"linearizedBaseContracts":[4001],"name":"SlotDerivation","nameLocation":"1606:14:24","nodeType":"ContractDefinition","nodes":[{"body":{"id":3883,"nodeType":"Block","src":"1789:194:24","statements":[{"AST":{"nativeSrc":"1824:153:24","nodeType":"YulBlock","src":"1824:153:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1845:4:24","nodeType":"YulLiteral","src":"1845:4:24","type":"","value":"0x00"},{"arguments":[{"arguments":[{"arguments":[{"name":"namespace","nativeSrc":"1869:9:24","nodeType":"YulIdentifier","src":"1869:9:24"},{"kind":"number","nativeSrc":"1880:4:24","nodeType":"YulLiteral","src":"1880:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1865:3:24","nodeType":"YulIdentifier","src":"1865:3:24"},"nativeSrc":"1865:20:24","nodeType":"YulFunctionCall","src":"1865:20:24"},{"arguments":[{"name":"namespace","nativeSrc":"1893:9:24","nodeType":"YulIdentifier","src":"1893:9:24"}],"functionName":{"name":"mload","nativeSrc":"1887:5:24","nodeType":"YulIdentifier","src":"1887:5:24"},"nativeSrc":"1887:16:24","nodeType":"YulFunctionCall","src":"1887:16:24"}],"functionName":{"name":"keccak256","nativeSrc":"1855:9:24","nodeType":"YulIdentifier","src":"1855:9:24"},"nativeSrc":"1855:49:24","nodeType":"YulFunctionCall","src":"1855:49:24"},{"kind":"number","nativeSrc":"1906:1:24","nodeType":"YulLiteral","src":"1906:1:24","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1851:3:24","nodeType":"YulIdentifier","src":"1851:3:24"},"nativeSrc":"1851:57:24","nodeType":"YulFunctionCall","src":"1851:57:24"}],"functionName":{"name":"mstore","nativeSrc":"1838:6:24","nodeType":"YulIdentifier","src":"1838:6:24"},"nativeSrc":"1838:71:24","nodeType":"YulFunctionCall","src":"1838:71:24"},"nativeSrc":"1838:71:24","nodeType":"YulExpressionStatement","src":"1838:71:24"},{"nativeSrc":"1922:45:24","nodeType":"YulAssignment","src":"1922:45:24","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1944:4:24","nodeType":"YulLiteral","src":"1944:4:24","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1950:4:24","nodeType":"YulLiteral","src":"1950:4:24","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"1934:9:24","nodeType":"YulIdentifier","src":"1934:9:24"},"nativeSrc":"1934:21:24","nodeType":"YulFunctionCall","src":"1934:21:24"},{"arguments":[{"kind":"number","nativeSrc":"1961:4:24","nodeType":"YulLiteral","src":"1961:4:24","type":"","value":"0xff"}],"functionName":{"name":"not","nativeSrc":"1957:3:24","nodeType":"YulIdentifier","src":"1957:3:24"},"nativeSrc":"1957:9:24","nodeType":"YulFunctionCall","src":"1957:9:24"}],"functionName":{"name":"and","nativeSrc":"1930:3:24","nodeType":"YulIdentifier","src":"1930:3:24"},"nativeSrc":"1930:37:24","nodeType":"YulFunctionCall","src":"1930:37:24"},"variableNames":[{"name":"slot","nativeSrc":"1922:4:24","nodeType":"YulIdentifier","src":"1922:4:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3877,"isOffset":false,"isSlot":false,"src":"1869:9:24","valueSize":1},{"declaration":3877,"isOffset":false,"isSlot":false,"src":"1893:9:24","valueSize":1},{"declaration":3880,"isOffset":false,"isSlot":false,"src":"1922:4:24","valueSize":1}],"flags":["memory-safe"],"id":3882,"nodeType":"InlineAssembly","src":"1799:178:24"}]},"documentation":{"id":3875,"nodeType":"StructuredDocumentation","src":"1627:74:24","text":" @dev Derive an ERC-7201 slot from a string (namespace)."},"id":3884,"implemented":true,"kind":"function","modifiers":[],"name":"erc7201Slot","nameLocation":"1715:11:24","nodeType":"FunctionDefinition","parameters":{"id":3878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3877,"mutability":"mutable","name":"namespace","nameLocation":"1741:9:24","nodeType":"VariableDeclaration","scope":3884,"src":"1727:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3876,"name":"string","nodeType":"ElementaryTypeName","src":"1727:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1726:25:24"},"returnParameters":{"id":3881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3880,"mutability":"mutable","name":"slot","nameLocation":"1783:4:24","nodeType":"VariableDeclaration","scope":3884,"src":"1775:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3879,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1775:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1774:14:24"},"scope":4001,"src":"1706:277:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3905,"nodeType":"Block","src":"2175:86:24","statements":[{"id":3904,"nodeType":"UncheckedBlock","src":"2185:70:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3898,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"2232:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2224:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3896,"name":"uint256","nodeType":"ElementaryTypeName","src":"2224:7:24","typeDescriptions":{}}},"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2224:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3900,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"2240:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2224:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2216:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3894,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2216:7:24","typeDescriptions":{}}},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2216:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3893,"id":3903,"nodeType":"Return","src":"2209:35:24"}]}]},"documentation":{"id":3885,"nodeType":"StructuredDocumentation","src":"1989:99:24","text":" @dev Add an offset to a slot to get the n-th element of a structure or an array."},"id":3906,"implemented":true,"kind":"function","modifiers":[],"name":"offset","nameLocation":"2102:6:24","nodeType":"FunctionDefinition","parameters":{"id":3890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3887,"mutability":"mutable","name":"slot","nameLocation":"2117:4:24","nodeType":"VariableDeclaration","scope":3906,"src":"2109:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3886,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2109:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3889,"mutability":"mutable","name":"pos","nameLocation":"2131:3:24","nodeType":"VariableDeclaration","scope":3906,"src":"2123:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3888,"name":"uint256","nodeType":"ElementaryTypeName","src":"2123:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2108:27:24"},"returnParameters":{"id":3893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3892,"mutability":"mutable","name":"result","nameLocation":"2167:6:24","nodeType":"VariableDeclaration","scope":3906,"src":"2159:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3891,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2159:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2158:16:24"},"scope":4001,"src":"2093:168:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3915,"nodeType":"Block","src":"2464:127:24","statements":[{"AST":{"nativeSrc":"2499:86:24","nodeType":"YulBlock","src":"2499:86:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2520:4:24","nodeType":"YulLiteral","src":"2520:4:24","type":"","value":"0x00"},{"name":"slot","nativeSrc":"2526:4:24","nodeType":"YulIdentifier","src":"2526:4:24"}],"functionName":{"name":"mstore","nativeSrc":"2513:6:24","nodeType":"YulIdentifier","src":"2513:6:24"},"nativeSrc":"2513:18:24","nodeType":"YulFunctionCall","src":"2513:18:24"},"nativeSrc":"2513:18:24","nodeType":"YulExpressionStatement","src":"2513:18:24"},{"nativeSrc":"2544:31:24","nodeType":"YulAssignment","src":"2544:31:24","value":{"arguments":[{"kind":"number","nativeSrc":"2564:4:24","nodeType":"YulLiteral","src":"2564:4:24","type":"","value":"0x00"},{"kind":"number","nativeSrc":"2570:4:24","nodeType":"YulLiteral","src":"2570:4:24","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2554:9:24","nodeType":"YulIdentifier","src":"2554:9:24"},"nativeSrc":"2554:21:24","nodeType":"YulFunctionCall","src":"2554:21:24"},"variableNames":[{"name":"result","nativeSrc":"2544:6:24","nodeType":"YulIdentifier","src":"2544:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3912,"isOffset":false,"isSlot":false,"src":"2544:6:24","valueSize":1},{"declaration":3909,"isOffset":false,"isSlot":false,"src":"2526:4:24","valueSize":1}],"flags":["memory-safe"],"id":3914,"nodeType":"InlineAssembly","src":"2474:111:24"}]},"documentation":{"id":3907,"nodeType":"StructuredDocumentation","src":"2267:118:24","text":" @dev Derive the location of the first element in an array from the slot where the length is stored."},"id":3916,"implemented":true,"kind":"function","modifiers":[],"name":"deriveArray","nameLocation":"2399:11:24","nodeType":"FunctionDefinition","parameters":{"id":3910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3909,"mutability":"mutable","name":"slot","nameLocation":"2419:4:24","nodeType":"VariableDeclaration","scope":3916,"src":"2411:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3908,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2411:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2410:14:24"},"returnParameters":{"id":3913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3912,"mutability":"mutable","name":"result","nameLocation":"2456:6:24","nodeType":"VariableDeclaration","scope":3916,"src":"2448:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3911,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2448:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2447:16:24"},"scope":4001,"src":"2390:201:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3927,"nodeType":"Block","src":"2769:179:24","statements":[{"AST":{"nativeSrc":"2804:138:24","nodeType":"YulBlock","src":"2804:138:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2825:4:24","nodeType":"YulLiteral","src":"2825:4:24","type":"","value":"0x00"},{"arguments":[{"name":"key","nativeSrc":"2835:3:24","nodeType":"YulIdentifier","src":"2835:3:24"},{"arguments":[{"kind":"number","nativeSrc":"2844:2:24","nodeType":"YulLiteral","src":"2844:2:24","type":"","value":"96"},{"arguments":[{"kind":"number","nativeSrc":"2852:1:24","nodeType":"YulLiteral","src":"2852:1:24","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2848:3:24","nodeType":"YulIdentifier","src":"2848:3:24"},"nativeSrc":"2848:6:24","nodeType":"YulFunctionCall","src":"2848:6:24"}],"functionName":{"name":"shr","nativeSrc":"2840:3:24","nodeType":"YulIdentifier","src":"2840:3:24"},"nativeSrc":"2840:15:24","nodeType":"YulFunctionCall","src":"2840:15:24"}],"functionName":{"name":"and","nativeSrc":"2831:3:24","nodeType":"YulIdentifier","src":"2831:3:24"},"nativeSrc":"2831:25:24","nodeType":"YulFunctionCall","src":"2831:25:24"}],"functionName":{"name":"mstore","nativeSrc":"2818:6:24","nodeType":"YulIdentifier","src":"2818:6:24"},"nativeSrc":"2818:39:24","nodeType":"YulFunctionCall","src":"2818:39:24"},"nativeSrc":"2818:39:24","nodeType":"YulExpressionStatement","src":"2818:39:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2877:4:24","nodeType":"YulLiteral","src":"2877:4:24","type":"","value":"0x20"},{"name":"slot","nativeSrc":"2883:4:24","nodeType":"YulIdentifier","src":"2883:4:24"}],"functionName":{"name":"mstore","nativeSrc":"2870:6:24","nodeType":"YulIdentifier","src":"2870:6:24"},"nativeSrc":"2870:18:24","nodeType":"YulFunctionCall","src":"2870:18:24"},"nativeSrc":"2870:18:24","nodeType":"YulExpressionStatement","src":"2870:18:24"},{"nativeSrc":"2901:31:24","nodeType":"YulAssignment","src":"2901:31:24","value":{"arguments":[{"kind":"number","nativeSrc":"2921:4:24","nodeType":"YulLiteral","src":"2921:4:24","type":"","value":"0x00"},{"kind":"number","nativeSrc":"2927:4:24","nodeType":"YulLiteral","src":"2927:4:24","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"2911:9:24","nodeType":"YulIdentifier","src":"2911:9:24"},"nativeSrc":"2911:21:24","nodeType":"YulFunctionCall","src":"2911:21:24"},"variableNames":[{"name":"result","nativeSrc":"2901:6:24","nodeType":"YulIdentifier","src":"2901:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3921,"isOffset":false,"isSlot":false,"src":"2835:3:24","valueSize":1},{"declaration":3924,"isOffset":false,"isSlot":false,"src":"2901:6:24","valueSize":1},{"declaration":3919,"isOffset":false,"isSlot":false,"src":"2883:4:24","valueSize":1}],"flags":["memory-safe"],"id":3926,"nodeType":"InlineAssembly","src":"2779:163:24"}]},"documentation":{"id":3917,"nodeType":"StructuredDocumentation","src":"2597:78:24","text":" @dev Derive the location of a mapping element from the key."},"id":3928,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"2689:13:24","nodeType":"FunctionDefinition","parameters":{"id":3922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3919,"mutability":"mutable","name":"slot","nameLocation":"2711:4:24","nodeType":"VariableDeclaration","scope":3928,"src":"2703:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3918,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3921,"mutability":"mutable","name":"key","nameLocation":"2725:3:24","nodeType":"VariableDeclaration","scope":3928,"src":"2717:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3920,"name":"address","nodeType":"ElementaryTypeName","src":"2717:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2702:27:24"},"returnParameters":{"id":3925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3924,"mutability":"mutable","name":"result","nameLocation":"2761:6:24","nodeType":"VariableDeclaration","scope":3928,"src":"2753:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3923,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2753:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2752:16:24"},"scope":4001,"src":"2680:268:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3939,"nodeType":"Block","src":"3123:173:24","statements":[{"AST":{"nativeSrc":"3158:132:24","nodeType":"YulBlock","src":"3158:132:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3179:4:24","nodeType":"YulLiteral","src":"3179:4:24","type":"","value":"0x00"},{"arguments":[{"arguments":[{"name":"key","nativeSrc":"3199:3:24","nodeType":"YulIdentifier","src":"3199:3:24"}],"functionName":{"name":"iszero","nativeSrc":"3192:6:24","nodeType":"YulIdentifier","src":"3192:6:24"},"nativeSrc":"3192:11:24","nodeType":"YulFunctionCall","src":"3192:11:24"}],"functionName":{"name":"iszero","nativeSrc":"3185:6:24","nodeType":"YulIdentifier","src":"3185:6:24"},"nativeSrc":"3185:19:24","nodeType":"YulFunctionCall","src":"3185:19:24"}],"functionName":{"name":"mstore","nativeSrc":"3172:6:24","nodeType":"YulIdentifier","src":"3172:6:24"},"nativeSrc":"3172:33:24","nodeType":"YulFunctionCall","src":"3172:33:24"},"nativeSrc":"3172:33:24","nodeType":"YulExpressionStatement","src":"3172:33:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3225:4:24","nodeType":"YulLiteral","src":"3225:4:24","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3231:4:24","nodeType":"YulIdentifier","src":"3231:4:24"}],"functionName":{"name":"mstore","nativeSrc":"3218:6:24","nodeType":"YulIdentifier","src":"3218:6:24"},"nativeSrc":"3218:18:24","nodeType":"YulFunctionCall","src":"3218:18:24"},"nativeSrc":"3218:18:24","nodeType":"YulExpressionStatement","src":"3218:18:24"},{"nativeSrc":"3249:31:24","nodeType":"YulAssignment","src":"3249:31:24","value":{"arguments":[{"kind":"number","nativeSrc":"3269:4:24","nodeType":"YulLiteral","src":"3269:4:24","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3275:4:24","nodeType":"YulLiteral","src":"3275:4:24","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3259:9:24","nodeType":"YulIdentifier","src":"3259:9:24"},"nativeSrc":"3259:21:24","nodeType":"YulFunctionCall","src":"3259:21:24"},"variableNames":[{"name":"result","nativeSrc":"3249:6:24","nodeType":"YulIdentifier","src":"3249:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3933,"isOffset":false,"isSlot":false,"src":"3199:3:24","valueSize":1},{"declaration":3936,"isOffset":false,"isSlot":false,"src":"3249:6:24","valueSize":1},{"declaration":3931,"isOffset":false,"isSlot":false,"src":"3231:4:24","valueSize":1}],"flags":["memory-safe"],"id":3938,"nodeType":"InlineAssembly","src":"3133:157:24"}]},"documentation":{"id":3929,"nodeType":"StructuredDocumentation","src":"2954:78:24","text":" @dev Derive the location of a mapping element from the key."},"id":3940,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3046:13:24","nodeType":"FunctionDefinition","parameters":{"id":3934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3931,"mutability":"mutable","name":"slot","nameLocation":"3068:4:24","nodeType":"VariableDeclaration","scope":3940,"src":"3060:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3930,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3060:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3933,"mutability":"mutable","name":"key","nameLocation":"3079:3:24","nodeType":"VariableDeclaration","scope":3940,"src":"3074:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3932,"name":"bool","nodeType":"ElementaryTypeName","src":"3074:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3059:24:24"},"returnParameters":{"id":3937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3936,"mutability":"mutable","name":"result","nameLocation":"3115:6:24","nodeType":"VariableDeclaration","scope":3940,"src":"3107:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3935,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3107:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3106:16:24"},"scope":4001,"src":"3037:259:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3951,"nodeType":"Block","src":"3474:157:24","statements":[{"AST":{"nativeSrc":"3509:116:24","nodeType":"YulBlock","src":"3509:116:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3530:4:24","nodeType":"YulLiteral","src":"3530:4:24","type":"","value":"0x00"},{"name":"key","nativeSrc":"3536:3:24","nodeType":"YulIdentifier","src":"3536:3:24"}],"functionName":{"name":"mstore","nativeSrc":"3523:6:24","nodeType":"YulIdentifier","src":"3523:6:24"},"nativeSrc":"3523:17:24","nodeType":"YulFunctionCall","src":"3523:17:24"},"nativeSrc":"3523:17:24","nodeType":"YulExpressionStatement","src":"3523:17:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3560:4:24","nodeType":"YulLiteral","src":"3560:4:24","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3566:4:24","nodeType":"YulIdentifier","src":"3566:4:24"}],"functionName":{"name":"mstore","nativeSrc":"3553:6:24","nodeType":"YulIdentifier","src":"3553:6:24"},"nativeSrc":"3553:18:24","nodeType":"YulFunctionCall","src":"3553:18:24"},"nativeSrc":"3553:18:24","nodeType":"YulExpressionStatement","src":"3553:18:24"},{"nativeSrc":"3584:31:24","nodeType":"YulAssignment","src":"3584:31:24","value":{"arguments":[{"kind":"number","nativeSrc":"3604:4:24","nodeType":"YulLiteral","src":"3604:4:24","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3610:4:24","nodeType":"YulLiteral","src":"3610:4:24","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3594:9:24","nodeType":"YulIdentifier","src":"3594:9:24"},"nativeSrc":"3594:21:24","nodeType":"YulFunctionCall","src":"3594:21:24"},"variableNames":[{"name":"result","nativeSrc":"3584:6:24","nodeType":"YulIdentifier","src":"3584:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3945,"isOffset":false,"isSlot":false,"src":"3536:3:24","valueSize":1},{"declaration":3948,"isOffset":false,"isSlot":false,"src":"3584:6:24","valueSize":1},{"declaration":3943,"isOffset":false,"isSlot":false,"src":"3566:4:24","valueSize":1}],"flags":["memory-safe"],"id":3950,"nodeType":"InlineAssembly","src":"3484:141:24"}]},"documentation":{"id":3941,"nodeType":"StructuredDocumentation","src":"3302:78:24","text":" @dev Derive the location of a mapping element from the key."},"id":3952,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3394:13:24","nodeType":"FunctionDefinition","parameters":{"id":3946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3943,"mutability":"mutable","name":"slot","nameLocation":"3416:4:24","nodeType":"VariableDeclaration","scope":3952,"src":"3408:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3942,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3408:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3945,"mutability":"mutable","name":"key","nameLocation":"3430:3:24","nodeType":"VariableDeclaration","scope":3952,"src":"3422:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3944,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3422:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3407:27:24"},"returnParameters":{"id":3949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3948,"mutability":"mutable","name":"result","nameLocation":"3466:6:24","nodeType":"VariableDeclaration","scope":3952,"src":"3458:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3947,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3458:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3457:16:24"},"scope":4001,"src":"3385:246:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3963,"nodeType":"Block","src":"3809:157:24","statements":[{"AST":{"nativeSrc":"3844:116:24","nodeType":"YulBlock","src":"3844:116:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3865:4:24","nodeType":"YulLiteral","src":"3865:4:24","type":"","value":"0x00"},{"name":"key","nativeSrc":"3871:3:24","nodeType":"YulIdentifier","src":"3871:3:24"}],"functionName":{"name":"mstore","nativeSrc":"3858:6:24","nodeType":"YulIdentifier","src":"3858:6:24"},"nativeSrc":"3858:17:24","nodeType":"YulFunctionCall","src":"3858:17:24"},"nativeSrc":"3858:17:24","nodeType":"YulExpressionStatement","src":"3858:17:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3895:4:24","nodeType":"YulLiteral","src":"3895:4:24","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3901:4:24","nodeType":"YulIdentifier","src":"3901:4:24"}],"functionName":{"name":"mstore","nativeSrc":"3888:6:24","nodeType":"YulIdentifier","src":"3888:6:24"},"nativeSrc":"3888:18:24","nodeType":"YulFunctionCall","src":"3888:18:24"},"nativeSrc":"3888:18:24","nodeType":"YulExpressionStatement","src":"3888:18:24"},{"nativeSrc":"3919:31:24","nodeType":"YulAssignment","src":"3919:31:24","value":{"arguments":[{"kind":"number","nativeSrc":"3939:4:24","nodeType":"YulLiteral","src":"3939:4:24","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3945:4:24","nodeType":"YulLiteral","src":"3945:4:24","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3929:9:24","nodeType":"YulIdentifier","src":"3929:9:24"},"nativeSrc":"3929:21:24","nodeType":"YulFunctionCall","src":"3929:21:24"},"variableNames":[{"name":"result","nativeSrc":"3919:6:24","nodeType":"YulIdentifier","src":"3919:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3957,"isOffset":false,"isSlot":false,"src":"3871:3:24","valueSize":1},{"declaration":3960,"isOffset":false,"isSlot":false,"src":"3919:6:24","valueSize":1},{"declaration":3955,"isOffset":false,"isSlot":false,"src":"3901:4:24","valueSize":1}],"flags":["memory-safe"],"id":3962,"nodeType":"InlineAssembly","src":"3819:141:24"}]},"documentation":{"id":3953,"nodeType":"StructuredDocumentation","src":"3637:78:24","text":" @dev Derive the location of a mapping element from the key."},"id":3964,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3729:13:24","nodeType":"FunctionDefinition","parameters":{"id":3958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3955,"mutability":"mutable","name":"slot","nameLocation":"3751:4:24","nodeType":"VariableDeclaration","scope":3964,"src":"3743:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3954,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3743:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3957,"mutability":"mutable","name":"key","nameLocation":"3765:3:24","nodeType":"VariableDeclaration","scope":3964,"src":"3757:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3956,"name":"uint256","nodeType":"ElementaryTypeName","src":"3757:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3742:27:24"},"returnParameters":{"id":3961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3960,"mutability":"mutable","name":"result","nameLocation":"3801:6:24","nodeType":"VariableDeclaration","scope":3964,"src":"3793:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3959,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3793:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3792:16:24"},"scope":4001,"src":"3720:246:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3975,"nodeType":"Block","src":"4143:157:24","statements":[{"AST":{"nativeSrc":"4178:116:24","nodeType":"YulBlock","src":"4178:116:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4199:4:24","nodeType":"YulLiteral","src":"4199:4:24","type":"","value":"0x00"},{"name":"key","nativeSrc":"4205:3:24","nodeType":"YulIdentifier","src":"4205:3:24"}],"functionName":{"name":"mstore","nativeSrc":"4192:6:24","nodeType":"YulIdentifier","src":"4192:6:24"},"nativeSrc":"4192:17:24","nodeType":"YulFunctionCall","src":"4192:17:24"},"nativeSrc":"4192:17:24","nodeType":"YulExpressionStatement","src":"4192:17:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4229:4:24","nodeType":"YulLiteral","src":"4229:4:24","type":"","value":"0x20"},{"name":"slot","nativeSrc":"4235:4:24","nodeType":"YulIdentifier","src":"4235:4:24"}],"functionName":{"name":"mstore","nativeSrc":"4222:6:24","nodeType":"YulIdentifier","src":"4222:6:24"},"nativeSrc":"4222:18:24","nodeType":"YulFunctionCall","src":"4222:18:24"},"nativeSrc":"4222:18:24","nodeType":"YulExpressionStatement","src":"4222:18:24"},{"nativeSrc":"4253:31:24","nodeType":"YulAssignment","src":"4253:31:24","value":{"arguments":[{"kind":"number","nativeSrc":"4273:4:24","nodeType":"YulLiteral","src":"4273:4:24","type":"","value":"0x00"},{"kind":"number","nativeSrc":"4279:4:24","nodeType":"YulLiteral","src":"4279:4:24","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"4263:9:24","nodeType":"YulIdentifier","src":"4263:9:24"},"nativeSrc":"4263:21:24","nodeType":"YulFunctionCall","src":"4263:21:24"},"variableNames":[{"name":"result","nativeSrc":"4253:6:24","nodeType":"YulIdentifier","src":"4253:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3969,"isOffset":false,"isSlot":false,"src":"4205:3:24","valueSize":1},{"declaration":3972,"isOffset":false,"isSlot":false,"src":"4253:6:24","valueSize":1},{"declaration":3967,"isOffset":false,"isSlot":false,"src":"4235:4:24","valueSize":1}],"flags":["memory-safe"],"id":3974,"nodeType":"InlineAssembly","src":"4153:141:24"}]},"documentation":{"id":3965,"nodeType":"StructuredDocumentation","src":"3972:78:24","text":" @dev Derive the location of a mapping element from the key."},"id":3976,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4064:13:24","nodeType":"FunctionDefinition","parameters":{"id":3970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3967,"mutability":"mutable","name":"slot","nameLocation":"4086:4:24","nodeType":"VariableDeclaration","scope":3976,"src":"4078:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3966,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4078:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3969,"mutability":"mutable","name":"key","nameLocation":"4099:3:24","nodeType":"VariableDeclaration","scope":3976,"src":"4092:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3968,"name":"int256","nodeType":"ElementaryTypeName","src":"4092:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4077:26:24"},"returnParameters":{"id":3973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3972,"mutability":"mutable","name":"result","nameLocation":"4135:6:24","nodeType":"VariableDeclaration","scope":3976,"src":"4127:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3971,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4127:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4126:16:24"},"scope":4001,"src":"4055:245:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3987,"nodeType":"Block","src":"4484:326:24","statements":[{"AST":{"nativeSrc":"4519:285:24","nodeType":"YulBlock","src":"4519:285:24","statements":[{"nativeSrc":"4533:24:24","nodeType":"YulVariableDeclaration","src":"4533:24:24","value":{"arguments":[{"name":"key","nativeSrc":"4553:3:24","nodeType":"YulIdentifier","src":"4553:3:24"}],"functionName":{"name":"mload","nativeSrc":"4547:5:24","nodeType":"YulIdentifier","src":"4547:5:24"},"nativeSrc":"4547:10:24","nodeType":"YulFunctionCall","src":"4547:10:24"},"variables":[{"name":"length","nativeSrc":"4537:6:24","nodeType":"YulTypedName","src":"4537:6:24","type":""}]},{"nativeSrc":"4570:27:24","nodeType":"YulVariableDeclaration","src":"4570:27:24","value":{"arguments":[{"name":"key","nativeSrc":"4587:3:24","nodeType":"YulIdentifier","src":"4587:3:24"},{"kind":"number","nativeSrc":"4592:4:24","nodeType":"YulLiteral","src":"4592:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4583:3:24","nodeType":"YulIdentifier","src":"4583:3:24"},"nativeSrc":"4583:14:24","nodeType":"YulFunctionCall","src":"4583:14:24"},"variables":[{"name":"begin","nativeSrc":"4574:5:24","nodeType":"YulTypedName","src":"4574:5:24","type":""}]},{"nativeSrc":"4610:29:24","nodeType":"YulVariableDeclaration","src":"4610:29:24","value":{"arguments":[{"name":"begin","nativeSrc":"4625:5:24","nodeType":"YulIdentifier","src":"4625:5:24"},{"name":"length","nativeSrc":"4632:6:24","nodeType":"YulIdentifier","src":"4632:6:24"}],"functionName":{"name":"add","nativeSrc":"4621:3:24","nodeType":"YulIdentifier","src":"4621:3:24"},"nativeSrc":"4621:18:24","nodeType":"YulFunctionCall","src":"4621:18:24"},"variables":[{"name":"end","nativeSrc":"4614:3:24","nodeType":"YulTypedName","src":"4614:3:24","type":""}]},{"nativeSrc":"4652:23:24","nodeType":"YulVariableDeclaration","src":"4652:23:24","value":{"arguments":[{"name":"end","nativeSrc":"4671:3:24","nodeType":"YulIdentifier","src":"4671:3:24"}],"functionName":{"name":"mload","nativeSrc":"4665:5:24","nodeType":"YulIdentifier","src":"4665:5:24"},"nativeSrc":"4665:10:24","nodeType":"YulFunctionCall","src":"4665:10:24"},"variables":[{"name":"cache","nativeSrc":"4656:5:24","nodeType":"YulTypedName","src":"4656:5:24","type":""}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"4695:3:24","nodeType":"YulIdentifier","src":"4695:3:24"},{"name":"slot","nativeSrc":"4700:4:24","nodeType":"YulIdentifier","src":"4700:4:24"}],"functionName":{"name":"mstore","nativeSrc":"4688:6:24","nodeType":"YulIdentifier","src":"4688:6:24"},"nativeSrc":"4688:17:24","nodeType":"YulFunctionCall","src":"4688:17:24"},"nativeSrc":"4688:17:24","nodeType":"YulExpressionStatement","src":"4688:17:24"},{"nativeSrc":"4718:45:24","nodeType":"YulAssignment","src":"4718:45:24","value":{"arguments":[{"name":"begin","nativeSrc":"4738:5:24","nodeType":"YulIdentifier","src":"4738:5:24"},{"arguments":[{"name":"length","nativeSrc":"4749:6:24","nodeType":"YulIdentifier","src":"4749:6:24"},{"kind":"number","nativeSrc":"4757:4:24","nodeType":"YulLiteral","src":"4757:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4745:3:24","nodeType":"YulIdentifier","src":"4745:3:24"},"nativeSrc":"4745:17:24","nodeType":"YulFunctionCall","src":"4745:17:24"}],"functionName":{"name":"keccak256","nativeSrc":"4728:9:24","nodeType":"YulIdentifier","src":"4728:9:24"},"nativeSrc":"4728:35:24","nodeType":"YulFunctionCall","src":"4728:35:24"},"variableNames":[{"name":"result","nativeSrc":"4718:6:24","nodeType":"YulIdentifier","src":"4718:6:24"}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"4783:3:24","nodeType":"YulIdentifier","src":"4783:3:24"},{"name":"cache","nativeSrc":"4788:5:24","nodeType":"YulIdentifier","src":"4788:5:24"}],"functionName":{"name":"mstore","nativeSrc":"4776:6:24","nodeType":"YulIdentifier","src":"4776:6:24"},"nativeSrc":"4776:18:24","nodeType":"YulFunctionCall","src":"4776:18:24"},"nativeSrc":"4776:18:24","nodeType":"YulExpressionStatement","src":"4776:18:24"}]},"evmVersion":"paris","externalReferences":[{"declaration":3981,"isOffset":false,"isSlot":false,"src":"4553:3:24","valueSize":1},{"declaration":3981,"isOffset":false,"isSlot":false,"src":"4587:3:24","valueSize":1},{"declaration":3984,"isOffset":false,"isSlot":false,"src":"4718:6:24","valueSize":1},{"declaration":3979,"isOffset":false,"isSlot":false,"src":"4700:4:24","valueSize":1}],"flags":["memory-safe"],"id":3986,"nodeType":"InlineAssembly","src":"4494:310:24"}]},"documentation":{"id":3977,"nodeType":"StructuredDocumentation","src":"4306:78:24","text":" @dev Derive the location of a mapping element from the key."},"id":3988,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4398:13:24","nodeType":"FunctionDefinition","parameters":{"id":3982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3979,"mutability":"mutable","name":"slot","nameLocation":"4420:4:24","nodeType":"VariableDeclaration","scope":3988,"src":"4412:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3978,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4412:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3981,"mutability":"mutable","name":"key","nameLocation":"4440:3:24","nodeType":"VariableDeclaration","scope":3988,"src":"4426:17:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3980,"name":"string","nodeType":"ElementaryTypeName","src":"4426:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4411:33:24"},"returnParameters":{"id":3985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3984,"mutability":"mutable","name":"result","nameLocation":"4476:6:24","nodeType":"VariableDeclaration","scope":3988,"src":"4468:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3983,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4468:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4467:16:24"},"scope":4001,"src":"4389:421:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3999,"nodeType":"Block","src":"4993:326:24","statements":[{"AST":{"nativeSrc":"5028:285:24","nodeType":"YulBlock","src":"5028:285:24","statements":[{"nativeSrc":"5042:24:24","nodeType":"YulVariableDeclaration","src":"5042:24:24","value":{"arguments":[{"name":"key","nativeSrc":"5062:3:24","nodeType":"YulIdentifier","src":"5062:3:24"}],"functionName":{"name":"mload","nativeSrc":"5056:5:24","nodeType":"YulIdentifier","src":"5056:5:24"},"nativeSrc":"5056:10:24","nodeType":"YulFunctionCall","src":"5056:10:24"},"variables":[{"name":"length","nativeSrc":"5046:6:24","nodeType":"YulTypedName","src":"5046:6:24","type":""}]},{"nativeSrc":"5079:27:24","nodeType":"YulVariableDeclaration","src":"5079:27:24","value":{"arguments":[{"name":"key","nativeSrc":"5096:3:24","nodeType":"YulIdentifier","src":"5096:3:24"},{"kind":"number","nativeSrc":"5101:4:24","nodeType":"YulLiteral","src":"5101:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5092:3:24","nodeType":"YulIdentifier","src":"5092:3:24"},"nativeSrc":"5092:14:24","nodeType":"YulFunctionCall","src":"5092:14:24"},"variables":[{"name":"begin","nativeSrc":"5083:5:24","nodeType":"YulTypedName","src":"5083:5:24","type":""}]},{"nativeSrc":"5119:29:24","nodeType":"YulVariableDeclaration","src":"5119:29:24","value":{"arguments":[{"name":"begin","nativeSrc":"5134:5:24","nodeType":"YulIdentifier","src":"5134:5:24"},{"name":"length","nativeSrc":"5141:6:24","nodeType":"YulIdentifier","src":"5141:6:24"}],"functionName":{"name":"add","nativeSrc":"5130:3:24","nodeType":"YulIdentifier","src":"5130:3:24"},"nativeSrc":"5130:18:24","nodeType":"YulFunctionCall","src":"5130:18:24"},"variables":[{"name":"end","nativeSrc":"5123:3:24","nodeType":"YulTypedName","src":"5123:3:24","type":""}]},{"nativeSrc":"5161:23:24","nodeType":"YulVariableDeclaration","src":"5161:23:24","value":{"arguments":[{"name":"end","nativeSrc":"5180:3:24","nodeType":"YulIdentifier","src":"5180:3:24"}],"functionName":{"name":"mload","nativeSrc":"5174:5:24","nodeType":"YulIdentifier","src":"5174:5:24"},"nativeSrc":"5174:10:24","nodeType":"YulFunctionCall","src":"5174:10:24"},"variables":[{"name":"cache","nativeSrc":"5165:5:24","nodeType":"YulTypedName","src":"5165:5:24","type":""}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"5204:3:24","nodeType":"YulIdentifier","src":"5204:3:24"},{"name":"slot","nativeSrc":"5209:4:24","nodeType":"YulIdentifier","src":"5209:4:24"}],"functionName":{"name":"mstore","nativeSrc":"5197:6:24","nodeType":"YulIdentifier","src":"5197:6:24"},"nativeSrc":"5197:17:24","nodeType":"YulFunctionCall","src":"5197:17:24"},"nativeSrc":"5197:17:24","nodeType":"YulExpressionStatement","src":"5197:17:24"},{"nativeSrc":"5227:45:24","nodeType":"YulAssignment","src":"5227:45:24","value":{"arguments":[{"name":"begin","nativeSrc":"5247:5:24","nodeType":"YulIdentifier","src":"5247:5:24"},{"arguments":[{"name":"length","nativeSrc":"5258:6:24","nodeType":"YulIdentifier","src":"5258:6:24"},{"kind":"number","nativeSrc":"5266:4:24","nodeType":"YulLiteral","src":"5266:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5254:3:24","nodeType":"YulIdentifier","src":"5254:3:24"},"nativeSrc":"5254:17:24","nodeType":"YulFunctionCall","src":"5254:17:24"}],"functionName":{"name":"keccak256","nativeSrc":"5237:9:24","nodeType":"YulIdentifier","src":"5237:9:24"},"nativeSrc":"5237:35:24","nodeType":"YulFunctionCall","src":"5237:35:24"},"variableNames":[{"name":"result","nativeSrc":"5227:6:24","nodeType":"YulIdentifier","src":"5227:6:24"}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"5292:3:24","nodeType":"YulIdentifier","src":"5292:3:24"},{"name":"cache","nativeSrc":"5297:5:24","nodeType":"YulIdentifier","src":"5297:5:24"}],"functionName":{"name":"mstore","nativeSrc":"5285:6:24","nodeType":"YulIdentifier","src":"5285:6:24"},"nativeSrc":"5285:18:24","nodeType":"YulFunctionCall","src":"5285:18:24"},"nativeSrc":"5285:18:24","nodeType":"YulExpressionStatement","src":"5285:18:24"}]},"evmVersion":"paris","externalReferences":[{"declaration":3993,"isOffset":false,"isSlot":false,"src":"5062:3:24","valueSize":1},{"declaration":3993,"isOffset":false,"isSlot":false,"src":"5096:3:24","valueSize":1},{"declaration":3996,"isOffset":false,"isSlot":false,"src":"5227:6:24","valueSize":1},{"declaration":3991,"isOffset":false,"isSlot":false,"src":"5209:4:24","valueSize":1}],"flags":["memory-safe"],"id":3998,"nodeType":"InlineAssembly","src":"5003:310:24"}]},"documentation":{"id":3989,"nodeType":"StructuredDocumentation","src":"4816:78:24","text":" @dev Derive the location of a mapping element from the key."},"id":4000,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4908:13:24","nodeType":"FunctionDefinition","parameters":{"id":3994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3991,"mutability":"mutable","name":"slot","nameLocation":"4930:4:24","nodeType":"VariableDeclaration","scope":4000,"src":"4922:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3990,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4922:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3993,"mutability":"mutable","name":"key","nameLocation":"4949:3:24","nodeType":"VariableDeclaration","scope":4000,"src":"4936:16:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3992,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4921:32:24"},"returnParameters":{"id":3997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3996,"mutability":"mutable","name":"result","nameLocation":"4985:6:24","nodeType":"VariableDeclaration","scope":4000,"src":"4977:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3995,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4977:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4976:16:24"},"scope":4001,"src":"4899:420:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4002,"src":"1598:3723:24","usedErrors":[],"usedEvents":[]}],"src":"199:5123:24"},"id":24},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[4125]},"id":4126,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4003,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:25"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":4004,"nodeType":"StructuredDocumentation","src":"219:1187:25","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":4125,"linearizedBaseContracts":[4125],"name":"StorageSlot","nameLocation":"1415:11:25","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":4007,"members":[{"constant":false,"id":4006,"mutability":"mutable","name":"value","nameLocation":"1470:5:25","nodeType":"VariableDeclaration","scope":4007,"src":"1462:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4005,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:25","nodeType":"StructDefinition","scope":4125,"src":"1433:49:25","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":4010,"members":[{"constant":false,"id":4009,"mutability":"mutable","name":"value","nameLocation":"1522:5:25","nodeType":"VariableDeclaration","scope":4010,"src":"1517:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4008,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:25","nodeType":"StructDefinition","scope":4125,"src":"1488:46:25","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":4013,"members":[{"constant":false,"id":4012,"mutability":"mutable","name":"value","nameLocation":"1577:5:25","nodeType":"VariableDeclaration","scope":4013,"src":"1569:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4011,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:25","nodeType":"StructDefinition","scope":4125,"src":"1540:49:25","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":4016,"members":[{"constant":false,"id":4015,"mutability":"mutable","name":"value","nameLocation":"1632:5:25","nodeType":"VariableDeclaration","scope":4016,"src":"1624:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4014,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:25","nodeType":"StructDefinition","scope":4125,"src":"1595:49:25","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":4019,"members":[{"constant":false,"id":4018,"mutability":"mutable","name":"value","nameLocation":"1685:5:25","nodeType":"VariableDeclaration","scope":4019,"src":"1678:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4017,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:25","nodeType":"StructDefinition","scope":4125,"src":"1650:47:25","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":4022,"members":[{"constant":false,"id":4021,"mutability":"mutable","name":"value","nameLocation":"1738:5:25","nodeType":"VariableDeclaration","scope":4022,"src":"1731:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4020,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:25","nodeType":"StructDefinition","scope":4125,"src":"1703:47:25","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":4025,"members":[{"constant":false,"id":4024,"mutability":"mutable","name":"value","nameLocation":"1789:5:25","nodeType":"VariableDeclaration","scope":4025,"src":"1783:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4023,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:25","nodeType":"StructDefinition","scope":4125,"src":"1756:45:25","visibility":"public"},{"body":{"id":4035,"nodeType":"Block","src":"1983:79:25","statements":[{"AST":{"nativeSrc":"2018:38:25","nodeType":"YulBlock","src":"2018:38:25","statements":[{"nativeSrc":"2032:14:25","nodeType":"YulAssignment","src":"2032:14:25","value":{"name":"slot","nativeSrc":"2042:4:25","nodeType":"YulIdentifier","src":"2042:4:25"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:25","nodeType":"YulIdentifier","src":"2032:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4032,"isOffset":false,"isSlot":true,"src":"2032:6:25","suffix":"slot","valueSize":1},{"declaration":4028,"isOffset":false,"isSlot":false,"src":"2042:4:25","valueSize":1}],"flags":["memory-safe"],"id":4034,"nodeType":"InlineAssembly","src":"1993:63:25"}]},"documentation":{"id":4026,"nodeType":"StructuredDocumentation","src":"1807:87:25","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":4036,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:25","nodeType":"FunctionDefinition","parameters":{"id":4029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4028,"mutability":"mutable","name":"slot","nameLocation":"1931:4:25","nodeType":"VariableDeclaration","scope":4036,"src":"1923:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4027,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:25"},"returnParameters":{"id":4033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4032,"mutability":"mutable","name":"r","nameLocation":"1980:1:25","nodeType":"VariableDeclaration","scope":4036,"src":"1960:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4007_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":4031,"nodeType":"UserDefinedTypeName","pathNode":{"id":4030,"name":"AddressSlot","nameLocations":["1960:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":4007,"src":"1960:11:25"},"referencedDeclaration":4007,"src":"1960:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4007_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:25"},"scope":4125,"src":"1899:163:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4046,"nodeType":"Block","src":"2243:79:25","statements":[{"AST":{"nativeSrc":"2278:38:25","nodeType":"YulBlock","src":"2278:38:25","statements":[{"nativeSrc":"2292:14:25","nodeType":"YulAssignment","src":"2292:14:25","value":{"name":"slot","nativeSrc":"2302:4:25","nodeType":"YulIdentifier","src":"2302:4:25"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:25","nodeType":"YulIdentifier","src":"2292:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4043,"isOffset":false,"isSlot":true,"src":"2292:6:25","suffix":"slot","valueSize":1},{"declaration":4039,"isOffset":false,"isSlot":false,"src":"2302:4:25","valueSize":1}],"flags":["memory-safe"],"id":4045,"nodeType":"InlineAssembly","src":"2253:63:25"}]},"documentation":{"id":4037,"nodeType":"StructuredDocumentation","src":"2068:86:25","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":4047,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:25","nodeType":"FunctionDefinition","parameters":{"id":4040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4039,"mutability":"mutable","name":"slot","nameLocation":"2191:4:25","nodeType":"VariableDeclaration","scope":4047,"src":"2183:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4038,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:25"},"returnParameters":{"id":4044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4043,"mutability":"mutable","name":"r","nameLocation":"2240:1:25","nodeType":"VariableDeclaration","scope":4047,"src":"2220:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$4010_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":4042,"nodeType":"UserDefinedTypeName","pathNode":{"id":4041,"name":"BooleanSlot","nameLocations":["2220:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":4010,"src":"2220:11:25"},"referencedDeclaration":4010,"src":"2220:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$4010_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:25"},"scope":4125,"src":"2159:163:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4057,"nodeType":"Block","src":"2503:79:25","statements":[{"AST":{"nativeSrc":"2538:38:25","nodeType":"YulBlock","src":"2538:38:25","statements":[{"nativeSrc":"2552:14:25","nodeType":"YulAssignment","src":"2552:14:25","value":{"name":"slot","nativeSrc":"2562:4:25","nodeType":"YulIdentifier","src":"2562:4:25"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:25","nodeType":"YulIdentifier","src":"2552:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4054,"isOffset":false,"isSlot":true,"src":"2552:6:25","suffix":"slot","valueSize":1},{"declaration":4050,"isOffset":false,"isSlot":false,"src":"2562:4:25","valueSize":1}],"flags":["memory-safe"],"id":4056,"nodeType":"InlineAssembly","src":"2513:63:25"}]},"documentation":{"id":4048,"nodeType":"StructuredDocumentation","src":"2328:86:25","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":4058,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:25","nodeType":"FunctionDefinition","parameters":{"id":4051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4050,"mutability":"mutable","name":"slot","nameLocation":"2451:4:25","nodeType":"VariableDeclaration","scope":4058,"src":"2443:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4049,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:25"},"returnParameters":{"id":4055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4054,"mutability":"mutable","name":"r","nameLocation":"2500:1:25","nodeType":"VariableDeclaration","scope":4058,"src":"2480:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4013_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":4053,"nodeType":"UserDefinedTypeName","pathNode":{"id":4052,"name":"Bytes32Slot","nameLocations":["2480:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":4013,"src":"2480:11:25"},"referencedDeclaration":4013,"src":"2480:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4013_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:25"},"scope":4125,"src":"2419:163:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4068,"nodeType":"Block","src":"2763:79:25","statements":[{"AST":{"nativeSrc":"2798:38:25","nodeType":"YulBlock","src":"2798:38:25","statements":[{"nativeSrc":"2812:14:25","nodeType":"YulAssignment","src":"2812:14:25","value":{"name":"slot","nativeSrc":"2822:4:25","nodeType":"YulIdentifier","src":"2822:4:25"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:25","nodeType":"YulIdentifier","src":"2812:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4065,"isOffset":false,"isSlot":true,"src":"2812:6:25","suffix":"slot","valueSize":1},{"declaration":4061,"isOffset":false,"isSlot":false,"src":"2822:4:25","valueSize":1}],"flags":["memory-safe"],"id":4067,"nodeType":"InlineAssembly","src":"2773:63:25"}]},"documentation":{"id":4059,"nodeType":"StructuredDocumentation","src":"2588:86:25","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":4069,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:25","nodeType":"FunctionDefinition","parameters":{"id":4062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4061,"mutability":"mutable","name":"slot","nameLocation":"2711:4:25","nodeType":"VariableDeclaration","scope":4069,"src":"2703:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4060,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:25"},"returnParameters":{"id":4066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4065,"mutability":"mutable","name":"r","nameLocation":"2760:1:25","nodeType":"VariableDeclaration","scope":4069,"src":"2740:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4016_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":4064,"nodeType":"UserDefinedTypeName","pathNode":{"id":4063,"name":"Uint256Slot","nameLocations":["2740:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":4016,"src":"2740:11:25"},"referencedDeclaration":4016,"src":"2740:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4016_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:25"},"scope":4125,"src":"2679:163:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4079,"nodeType":"Block","src":"3020:79:25","statements":[{"AST":{"nativeSrc":"3055:38:25","nodeType":"YulBlock","src":"3055:38:25","statements":[{"nativeSrc":"3069:14:25","nodeType":"YulAssignment","src":"3069:14:25","value":{"name":"slot","nativeSrc":"3079:4:25","nodeType":"YulIdentifier","src":"3079:4:25"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:25","nodeType":"YulIdentifier","src":"3069:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4076,"isOffset":false,"isSlot":true,"src":"3069:6:25","suffix":"slot","valueSize":1},{"declaration":4072,"isOffset":false,"isSlot":false,"src":"3079:4:25","valueSize":1}],"flags":["memory-safe"],"id":4078,"nodeType":"InlineAssembly","src":"3030:63:25"}]},"documentation":{"id":4070,"nodeType":"StructuredDocumentation","src":"2848:85:25","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":4080,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:25","nodeType":"FunctionDefinition","parameters":{"id":4073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4072,"mutability":"mutable","name":"slot","nameLocation":"2969:4:25","nodeType":"VariableDeclaration","scope":4080,"src":"2961:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4071,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:25"},"returnParameters":{"id":4077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4076,"mutability":"mutable","name":"r","nameLocation":"3017:1:25","nodeType":"VariableDeclaration","scope":4080,"src":"2998:20:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$4019_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":4075,"nodeType":"UserDefinedTypeName","pathNode":{"id":4074,"name":"Int256Slot","nameLocations":["2998:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":4019,"src":"2998:10:25"},"referencedDeclaration":4019,"src":"2998:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$4019_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:25"},"scope":4125,"src":"2938:161:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4090,"nodeType":"Block","src":"3277:79:25","statements":[{"AST":{"nativeSrc":"3312:38:25","nodeType":"YulBlock","src":"3312:38:25","statements":[{"nativeSrc":"3326:14:25","nodeType":"YulAssignment","src":"3326:14:25","value":{"name":"slot","nativeSrc":"3336:4:25","nodeType":"YulIdentifier","src":"3336:4:25"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:25","nodeType":"YulIdentifier","src":"3326:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4087,"isOffset":false,"isSlot":true,"src":"3326:6:25","suffix":"slot","valueSize":1},{"declaration":4083,"isOffset":false,"isSlot":false,"src":"3336:4:25","valueSize":1}],"flags":["memory-safe"],"id":4089,"nodeType":"InlineAssembly","src":"3287:63:25"}]},"documentation":{"id":4081,"nodeType":"StructuredDocumentation","src":"3105:85:25","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":4091,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:25","nodeType":"FunctionDefinition","parameters":{"id":4084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4083,"mutability":"mutable","name":"slot","nameLocation":"3226:4:25","nodeType":"VariableDeclaration","scope":4091,"src":"3218:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4082,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:25"},"returnParameters":{"id":4088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4087,"mutability":"mutable","name":"r","nameLocation":"3274:1:25","nodeType":"VariableDeclaration","scope":4091,"src":"3255:20:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4022_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":4086,"nodeType":"UserDefinedTypeName","pathNode":{"id":4085,"name":"StringSlot","nameLocations":["3255:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":4022,"src":"3255:10:25"},"referencedDeclaration":4022,"src":"3255:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4022_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:25"},"scope":4125,"src":"3195:161:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4101,"nodeType":"Block","src":"3558:85:25","statements":[{"AST":{"nativeSrc":"3593:44:25","nodeType":"YulBlock","src":"3593:44:25","statements":[{"nativeSrc":"3607:20:25","nodeType":"YulAssignment","src":"3607:20:25","value":{"name":"store.slot","nativeSrc":"3617:10:25","nodeType":"YulIdentifier","src":"3617:10:25"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:25","nodeType":"YulIdentifier","src":"3607:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4098,"isOffset":false,"isSlot":true,"src":"3607:6:25","suffix":"slot","valueSize":1},{"declaration":4094,"isOffset":false,"isSlot":true,"src":"3617:10:25","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":4100,"nodeType":"InlineAssembly","src":"3568:69:25"}]},"documentation":{"id":4092,"nodeType":"StructuredDocumentation","src":"3362:101:25","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":4102,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:25","nodeType":"FunctionDefinition","parameters":{"id":4095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4094,"mutability":"mutable","name":"store","nameLocation":"3506:5:25","nodeType":"VariableDeclaration","scope":4102,"src":"3491:20:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4093,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:25"},"returnParameters":{"id":4099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4098,"mutability":"mutable","name":"r","nameLocation":"3555:1:25","nodeType":"VariableDeclaration","scope":4102,"src":"3536:20:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4022_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":4097,"nodeType":"UserDefinedTypeName","pathNode":{"id":4096,"name":"StringSlot","nameLocations":["3536:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":4022,"src":"3536:10:25"},"referencedDeclaration":4022,"src":"3536:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4022_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:25"},"scope":4125,"src":"3468:175:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4112,"nodeType":"Block","src":"3818:79:25","statements":[{"AST":{"nativeSrc":"3853:38:25","nodeType":"YulBlock","src":"3853:38:25","statements":[{"nativeSrc":"3867:14:25","nodeType":"YulAssignment","src":"3867:14:25","value":{"name":"slot","nativeSrc":"3877:4:25","nodeType":"YulIdentifier","src":"3877:4:25"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:25","nodeType":"YulIdentifier","src":"3867:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4109,"isOffset":false,"isSlot":true,"src":"3867:6:25","suffix":"slot","valueSize":1},{"declaration":4105,"isOffset":false,"isSlot":false,"src":"3877:4:25","valueSize":1}],"flags":["memory-safe"],"id":4111,"nodeType":"InlineAssembly","src":"3828:63:25"}]},"documentation":{"id":4103,"nodeType":"StructuredDocumentation","src":"3649:84:25","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":4113,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:25","nodeType":"FunctionDefinition","parameters":{"id":4106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4105,"mutability":"mutable","name":"slot","nameLocation":"3768:4:25","nodeType":"VariableDeclaration","scope":4113,"src":"3760:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4104,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:25"},"returnParameters":{"id":4110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4109,"mutability":"mutable","name":"r","nameLocation":"3815:1:25","nodeType":"VariableDeclaration","scope":4113,"src":"3797:19:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4025_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":4108,"nodeType":"UserDefinedTypeName","pathNode":{"id":4107,"name":"BytesSlot","nameLocations":["3797:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":4025,"src":"3797:9:25"},"referencedDeclaration":4025,"src":"3797:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4025_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:25"},"scope":4125,"src":"3738:159:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4123,"nodeType":"Block","src":"4094:85:25","statements":[{"AST":{"nativeSrc":"4129:44:25","nodeType":"YulBlock","src":"4129:44:25","statements":[{"nativeSrc":"4143:20:25","nodeType":"YulAssignment","src":"4143:20:25","value":{"name":"store.slot","nativeSrc":"4153:10:25","nodeType":"YulIdentifier","src":"4153:10:25"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:25","nodeType":"YulIdentifier","src":"4143:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4120,"isOffset":false,"isSlot":true,"src":"4143:6:25","suffix":"slot","valueSize":1},{"declaration":4116,"isOffset":false,"isSlot":true,"src":"4153:10:25","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":4122,"nodeType":"InlineAssembly","src":"4104:69:25"}]},"documentation":{"id":4114,"nodeType":"StructuredDocumentation","src":"3903:99:25","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":4124,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:25","nodeType":"FunctionDefinition","parameters":{"id":4117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4116,"mutability":"mutable","name":"store","nameLocation":"4043:5:25","nodeType":"VariableDeclaration","scope":4124,"src":"4029:19:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4115,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:25"},"returnParameters":{"id":4121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4120,"mutability":"mutable","name":"r","nameLocation":"4091:1:25","nodeType":"VariableDeclaration","scope":4124,"src":"4073:19:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4025_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":4119,"nodeType":"UserDefinedTypeName","pathNode":{"id":4118,"name":"BytesSlot","nameLocations":["4073:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":4025,"src":"4073:9:25"},"referencedDeclaration":4025,"src":"4073:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4025_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:25"},"scope":4125,"src":"4007:172:25","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4126,"src":"1407:2774:25","usedErrors":[],"usedEvents":[]}],"src":"193:3989:25"},"id":25},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[6087],"SignedMath":[7996],"Strings":[4445]},"id":4446,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4127,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:26"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":4129,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4446,"sourceUnit":6088,"src":"127:37:26","symbolAliases":[{"foreign":{"id":4128,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"135:4:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":4131,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4446,"sourceUnit":7997,"src":"165:49:26","symbolAliases":[{"foreign":{"id":4130,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7996,"src":"173:10:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":4132,"nodeType":"StructuredDocumentation","src":"216:34:26","text":" @dev String operations."},"fullyImplemented":true,"id":4445,"linearizedBaseContracts":[4445],"name":"Strings","nameLocation":"259:7:26","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":4135,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:26","nodeType":"VariableDeclaration","scope":4445,"src":"273:56:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":4133,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:26","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":4134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":4138,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:26","nodeType":"VariableDeclaration","scope":4445,"src":"335:42:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4136,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":4137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:26","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":4139,"nodeType":"StructuredDocumentation","src":"384:81:26","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":4145,"name":"StringsInsufficientHexLength","nameLocation":"476:28:26","nodeType":"ErrorDefinition","parameters":{"id":4144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4141,"mutability":"mutable","name":"value","nameLocation":"513:5:26","nodeType":"VariableDeclaration","scope":4145,"src":"505:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4140,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4143,"mutability":"mutable","name":"length","nameLocation":"528:6:26","nodeType":"VariableDeclaration","scope":4145,"src":"520:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4142,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:26"},"src":"470:66:26"},{"body":{"id":4192,"nodeType":"Block","src":"708:561:26","statements":[{"id":4191,"nodeType":"UncheckedBlock","src":"718:545:26","statements":[{"assignments":[4154],"declarations":[{"constant":false,"id":4154,"mutability":"mutable","name":"length","nameLocation":"750:6:26","nodeType":"VariableDeclaration","scope":4191,"src":"742:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4153,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4161,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"770:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4155,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"759:4:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6087_$","typeString":"type(library Math)"}},"id":4156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:26","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5859,"src":"759:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:26"},{"assignments":[4163],"declarations":[{"constant":false,"id":4163,"mutability":"mutable","name":"buffer","nameLocation":"808:6:26","nodeType":"VariableDeclaration","scope":4191,"src":"794:20:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4162,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":4168,"initialValue":{"arguments":[{"id":4166,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4154,"src":"828:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:26","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":4164,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":4167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:26"},{"assignments":[4170],"declarations":[{"constant":false,"id":4170,"mutability":"mutable","name":"ptr","nameLocation":"857:3:26","nodeType":"VariableDeclaration","scope":4191,"src":"849:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4169,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4171,"nodeType":"VariableDeclarationStatement","src":"849:11:26"},{"AST":{"nativeSrc":"899:67:26","nodeType":"YulBlock","src":"899:67:26","statements":[{"nativeSrc":"917:35:26","nodeType":"YulAssignment","src":"917:35:26","value":{"arguments":[{"name":"buffer","nativeSrc":"928:6:26","nodeType":"YulIdentifier","src":"928:6:26"},{"arguments":[{"kind":"number","nativeSrc":"940:2:26","nodeType":"YulLiteral","src":"940:2:26","type":"","value":"32"},{"name":"length","nativeSrc":"944:6:26","nodeType":"YulIdentifier","src":"944:6:26"}],"functionName":{"name":"add","nativeSrc":"936:3:26","nodeType":"YulIdentifier","src":"936:3:26"},"nativeSrc":"936:15:26","nodeType":"YulFunctionCall","src":"936:15:26"}],"functionName":{"name":"add","nativeSrc":"924:3:26","nodeType":"YulIdentifier","src":"924:3:26"},"nativeSrc":"924:28:26","nodeType":"YulFunctionCall","src":"924:28:26"},"variableNames":[{"name":"ptr","nativeSrc":"917:3:26","nodeType":"YulIdentifier","src":"917:3:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4163,"isOffset":false,"isSlot":false,"src":"928:6:26","valueSize":1},{"declaration":4154,"isOffset":false,"isSlot":false,"src":"944:6:26","valueSize":1},{"declaration":4170,"isOffset":false,"isSlot":false,"src":"917:3:26","valueSize":1}],"flags":["memory-safe"],"id":4172,"nodeType":"InlineAssembly","src":"874:92:26"},{"body":{"id":4187,"nodeType":"Block","src":"992:234:26","statements":[{"expression":{"id":4175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1010:5:26","subExpression":{"id":4174,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"1010:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4176,"nodeType":"ExpressionStatement","src":"1010:5:26"},{"AST":{"nativeSrc":"1058:86:26","nodeType":"YulBlock","src":"1058:86:26","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1088:3:26","nodeType":"YulIdentifier","src":"1088:3:26"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1102:5:26","nodeType":"YulIdentifier","src":"1102:5:26"},{"kind":"number","nativeSrc":"1109:2:26","nodeType":"YulLiteral","src":"1109:2:26","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1098:3:26","nodeType":"YulIdentifier","src":"1098:3:26"},"nativeSrc":"1098:14:26","nodeType":"YulFunctionCall","src":"1098:14:26"},{"name":"HEX_DIGITS","nativeSrc":"1114:10:26","nodeType":"YulIdentifier","src":"1114:10:26"}],"functionName":{"name":"byte","nativeSrc":"1093:4:26","nodeType":"YulIdentifier","src":"1093:4:26"},"nativeSrc":"1093:32:26","nodeType":"YulFunctionCall","src":"1093:32:26"}],"functionName":{"name":"mstore8","nativeSrc":"1080:7:26","nodeType":"YulIdentifier","src":"1080:7:26"},"nativeSrc":"1080:46:26","nodeType":"YulFunctionCall","src":"1080:46:26"},"nativeSrc":"1080:46:26","nodeType":"YulExpressionStatement","src":"1080:46:26"}]},"evmVersion":"paris","externalReferences":[{"declaration":4135,"isOffset":false,"isSlot":false,"src":"1114:10:26","valueSize":1},{"declaration":4170,"isOffset":false,"isSlot":false,"src":"1088:3:26","valueSize":1},{"declaration":4148,"isOffset":false,"isSlot":false,"src":"1102:5:26","valueSize":1}],"flags":["memory-safe"],"id":4177,"nodeType":"InlineAssembly","src":"1033:111:26"},{"expression":{"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"1161:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":4179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1170:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1161:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4181,"nodeType":"ExpressionStatement","src":"1161:11:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"1194:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1203:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1194:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4186,"nodeType":"IfStatement","src":"1190:21:26","trueBody":{"id":4185,"nodeType":"Break","src":"1206:5:26"}}]},"condition":{"hexValue":"74727565","id":4173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"986:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":4188,"nodeType":"WhileStatement","src":"979:247:26"},{"expression":{"id":4189,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"1246:6:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4152,"id":4190,"nodeType":"Return","src":"1239:13:26"}]}]},"documentation":{"id":4146,"nodeType":"StructuredDocumentation","src":"542:90:26","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":4193,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:26","nodeType":"FunctionDefinition","parameters":{"id":4149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4148,"mutability":"mutable","name":"value","nameLocation":"663:5:26","nodeType":"VariableDeclaration","scope":4193,"src":"655:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4147,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:26"},"returnParameters":{"id":4152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4151,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4193,"src":"693:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4150,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:26"},"scope":4445,"src":"637:632:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4218,"nodeType":"Block","src":"1445:92:26","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4196,"src":"1476:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1484:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1476:9:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":4208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1494:2:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":4209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1476:20:26","trueExpression":{"hexValue":"2d","id":4207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1488:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":4213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4196,"src":"1522:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":4211,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7996,"src":"1507:10:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7996_$","typeString":"type(library SignedMath)"}},"id":4212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1518:3:26","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7995,"src":"1507:14:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1507:21:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4210,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4193,"src":"1498:8:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1498:31:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1462:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4201,"name":"string","nodeType":"ElementaryTypeName","src":"1462:6:26","typeDescriptions":{}}},"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:6:26","memberName":"concat","nodeType":"MemberAccess","src":"1462:13:26","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":4216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1462:68:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4200,"id":4217,"nodeType":"Return","src":"1455:75:26"}]},"documentation":{"id":4194,"nodeType":"StructuredDocumentation","src":"1275:89:26","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":4219,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1378:14:26","nodeType":"FunctionDefinition","parameters":{"id":4197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4196,"mutability":"mutable","name":"value","nameLocation":"1400:5:26","nodeType":"VariableDeclaration","scope":4219,"src":"1393:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4195,"name":"int256","nodeType":"ElementaryTypeName","src":"1393:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1392:14:26"},"returnParameters":{"id":4200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4219,"src":"1430:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4198,"name":"string","nodeType":"ElementaryTypeName","src":"1430:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1429:15:26"},"scope":4445,"src":"1369:168:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4238,"nodeType":"Block","src":"1716:100:26","statements":[{"id":4237,"nodeType":"UncheckedBlock","src":"1726:84:26","statements":[{"expression":{"arguments":[{"id":4228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4222,"src":"1769:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4222,"src":"1788:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4229,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"1776:4:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6087_$","typeString":"type(library Math)"}},"id":4230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1781:6:26","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":6030,"src":"1776:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1776:18:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1797:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1776:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4227,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4239,4322,4342],"referencedDeclaration":4322,"src":"1757:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4226,"id":4236,"nodeType":"Return","src":"1750:49:26"}]}]},"documentation":{"id":4220,"nodeType":"StructuredDocumentation","src":"1543:94:26","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":4239,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1651:11:26","nodeType":"FunctionDefinition","parameters":{"id":4223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4222,"mutability":"mutable","name":"value","nameLocation":"1671:5:26","nodeType":"VariableDeclaration","scope":4239,"src":"1663:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4221,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1662:15:26"},"returnParameters":{"id":4226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4239,"src":"1701:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4224,"name":"string","nodeType":"ElementaryTypeName","src":"1701:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1700:15:26"},"scope":4445,"src":"1642:174:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4321,"nodeType":"Block","src":"2029:435:26","statements":[{"assignments":[4250],"declarations":[{"constant":false,"id":4250,"mutability":"mutable","name":"localValue","nameLocation":"2047:10:26","nodeType":"VariableDeclaration","scope":4321,"src":"2039:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4249,"name":"uint256","nodeType":"ElementaryTypeName","src":"2039:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4252,"initialValue":{"id":4251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4242,"src":"2060:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2039:26:26"},{"assignments":[4254],"declarations":[{"constant":false,"id":4254,"mutability":"mutable","name":"buffer","nameLocation":"2088:6:26","nodeType":"VariableDeclaration","scope":4321,"src":"2075:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4253,"name":"bytes","nodeType":"ElementaryTypeName","src":"2075:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4263,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2107:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4258,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"2111:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2107:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":4260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2120:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2107:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2097:9:26","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4255,"name":"bytes","nodeType":"ElementaryTypeName","src":"2101:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2097:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2075:47:26"},{"expression":{"id":4268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4264,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"2132:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4266,"indexExpression":{"hexValue":"30","id":4265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2139:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2132:9:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2144:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2132:15:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4269,"nodeType":"ExpressionStatement","src":"2132:15:26"},{"expression":{"id":4274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4270,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"2157:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4272,"indexExpression":{"hexValue":"31","id":4271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2164:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2157:9:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":4273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2169:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2157:15:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4275,"nodeType":"ExpressionStatement","src":"2157:15:26"},{"body":{"id":4304,"nodeType":"Block","src":"2227:95:26","statements":[{"expression":{"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4290,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"2241:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4292,"indexExpression":{"id":4291,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4277,"src":"2248:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2241:9:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4293,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"2253:10:26","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":4297,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4294,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"2264:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":4295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2277:3:26","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2264:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2253:28:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2241:40:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4299,"nodeType":"ExpressionStatement","src":"2241:40:26"},{"expression":{"id":4302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4300,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"2295:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2310:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2295:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4303,"nodeType":"ExpressionStatement","src":"2295:16:26"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4284,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4277,"src":"2215:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2219:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2215:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4305,"initializationExpression":{"assignments":[4277],"declarations":[{"constant":false,"id":4277,"mutability":"mutable","name":"i","nameLocation":"2195:1:26","nodeType":"VariableDeclaration","scope":4305,"src":"2187:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4276,"name":"uint256","nodeType":"ElementaryTypeName","src":"2187:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4283,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2199:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4279,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"2203:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2199:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2212:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2199:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2187:26:26"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":4288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2222:3:26","subExpression":{"id":4287,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4277,"src":"2224:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4289,"nodeType":"ExpressionStatement","src":"2222:3:26"},"nodeType":"ForStatement","src":"2182:140:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4306,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"2335:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2335:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4315,"nodeType":"IfStatement","src":"2331:96:26","trueBody":{"id":4314,"nodeType":"Block","src":"2352:75:26","statements":[{"errorCall":{"arguments":[{"id":4310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4242,"src":"2402:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4311,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"2409:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4309,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"2373:28:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":4312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2373:43:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4313,"nodeType":"RevertStatement","src":"2366:50:26"}]}},{"expression":{"arguments":[{"id":4318,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"2450:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2443:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4316,"name":"string","nodeType":"ElementaryTypeName","src":"2443:6:26","typeDescriptions":{}}},"id":4319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2443:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4248,"id":4320,"nodeType":"Return","src":"2436:21:26"}]},"documentation":{"id":4240,"nodeType":"StructuredDocumentation","src":"1822:112:26","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":4322,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1948:11:26","nodeType":"FunctionDefinition","parameters":{"id":4245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4242,"mutability":"mutable","name":"value","nameLocation":"1968:5:26","nodeType":"VariableDeclaration","scope":4322,"src":"1960:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4241,"name":"uint256","nodeType":"ElementaryTypeName","src":"1960:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4244,"mutability":"mutable","name":"length","nameLocation":"1983:6:26","nodeType":"VariableDeclaration","scope":4322,"src":"1975:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4243,"name":"uint256","nodeType":"ElementaryTypeName","src":"1975:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1959:31:26"},"returnParameters":{"id":4248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4322,"src":"2014:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4246,"name":"string","nodeType":"ElementaryTypeName","src":"2014:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2013:15:26"},"scope":4445,"src":"1939:525:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4341,"nodeType":"Block","src":"2696:75:26","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":4335,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4325,"src":"2741:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2733:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4333,"name":"uint160","nodeType":"ElementaryTypeName","src":"2733:7:26","typeDescriptions":{}}},"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2733:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2725:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4331,"name":"uint256","nodeType":"ElementaryTypeName","src":"2725:7:26","typeDescriptions":{}}},"id":4337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2725:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4338,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"2749:14:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4330,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4239,4322,4342],"referencedDeclaration":4322,"src":"2713:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:51:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4329,"id":4340,"nodeType":"Return","src":"2706:58:26"}]},"documentation":{"id":4323,"nodeType":"StructuredDocumentation","src":"2470:148:26","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":4342,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2632:11:26","nodeType":"FunctionDefinition","parameters":{"id":4326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4325,"mutability":"mutable","name":"addr","nameLocation":"2652:4:26","nodeType":"VariableDeclaration","scope":4342,"src":"2644:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4324,"name":"address","nodeType":"ElementaryTypeName","src":"2644:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2643:14:26"},"returnParameters":{"id":4329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4328,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4342,"src":"2681:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4327,"name":"string","nodeType":"ElementaryTypeName","src":"2681:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2680:15:26"},"scope":4445,"src":"2623:148:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4406,"nodeType":"Block","src":"3028:642:26","statements":[{"assignments":[4351],"declarations":[{"constant":false,"id":4351,"mutability":"mutable","name":"buffer","nameLocation":"3051:6:26","nodeType":"VariableDeclaration","scope":4406,"src":"3038:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4350,"name":"bytes","nodeType":"ElementaryTypeName","src":"3038:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4358,"initialValue":{"arguments":[{"arguments":[{"id":4355,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"3078:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4354,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4239,4322,4342],"referencedDeclaration":4342,"src":"3066:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":4356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3066:17:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3060:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4352,"name":"bytes","nodeType":"ElementaryTypeName","src":"3060:5:26","typeDescriptions":{}}},"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3060:24:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3038:46:26"},{"assignments":[4360],"declarations":[{"constant":false,"id":4360,"mutability":"mutable","name":"hashValue","nameLocation":"3177:9:26","nodeType":"VariableDeclaration","scope":4406,"src":"3169:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4359,"name":"uint256","nodeType":"ElementaryTypeName","src":"3169:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4361,"nodeType":"VariableDeclarationStatement","src":"3169:17:26"},{"AST":{"nativeSrc":"3221:78:26","nodeType":"YulBlock","src":"3221:78:26","statements":[{"nativeSrc":"3235:54:26","nodeType":"YulAssignment","src":"3235:54:26","value":{"arguments":[{"kind":"number","nativeSrc":"3252:2:26","nodeType":"YulLiteral","src":"3252:2:26","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3270:6:26","nodeType":"YulIdentifier","src":"3270:6:26"},{"kind":"number","nativeSrc":"3278:4:26","nodeType":"YulLiteral","src":"3278:4:26","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3266:3:26","nodeType":"YulIdentifier","src":"3266:3:26"},"nativeSrc":"3266:17:26","nodeType":"YulFunctionCall","src":"3266:17:26"},{"kind":"number","nativeSrc":"3285:2:26","nodeType":"YulLiteral","src":"3285:2:26","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3256:9:26","nodeType":"YulIdentifier","src":"3256:9:26"},"nativeSrc":"3256:32:26","nodeType":"YulFunctionCall","src":"3256:32:26"}],"functionName":{"name":"shr","nativeSrc":"3248:3:26","nodeType":"YulIdentifier","src":"3248:3:26"},"nativeSrc":"3248:41:26","nodeType":"YulFunctionCall","src":"3248:41:26"},"variableNames":[{"name":"hashValue","nativeSrc":"3235:9:26","nodeType":"YulIdentifier","src":"3235:9:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4351,"isOffset":false,"isSlot":false,"src":"3270:6:26","valueSize":1},{"declaration":4360,"isOffset":false,"isSlot":false,"src":"3235:9:26","valueSize":1}],"flags":["memory-safe"],"id":4362,"nodeType":"InlineAssembly","src":"3196:103:26"},{"body":{"id":4399,"nodeType":"Block","src":"3342:291:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4373,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"3448:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":4374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3460:3:26","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3448:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":4376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3466:1:26","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3448:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":4380,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"3477:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4382,"indexExpression":{"id":4381,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4364,"src":"3484:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3477:9:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3471:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4378,"name":"uint8","nodeType":"ElementaryTypeName","src":"3471:5:26","typeDescriptions":{}}},"id":4383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3471:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":4384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3490:2:26","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3471:21:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3448:44:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4394,"nodeType":"IfStatement","src":"3444:150:26","trueBody":{"id":4393,"nodeType":"Block","src":"3494:100:26","statements":[{"expression":{"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4387,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"3562:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4389,"indexExpression":{"id":4388,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4364,"src":"3569:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3562:9:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":4390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3575:4:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"3562:17:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4392,"nodeType":"ExpressionStatement","src":"3562:17:26"}]}},{"expression":{"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4395,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"3607:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3621:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3607:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4398,"nodeType":"ExpressionStatement","src":"3607:15:26"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4367,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4364,"src":"3330:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3334:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3330:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4400,"initializationExpression":{"assignments":[4364],"declarations":[{"constant":false,"id":4364,"mutability":"mutable","name":"i","nameLocation":"3322:1:26","nodeType":"VariableDeclaration","scope":4400,"src":"3314:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4363,"name":"uint256","nodeType":"ElementaryTypeName","src":"3314:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4366,"initialValue":{"hexValue":"3431","id":4365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3326:2:26","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3314:14:26"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3337:3:26","subExpression":{"id":4370,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4364,"src":"3339:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4372,"nodeType":"ExpressionStatement","src":"3337:3:26"},"nodeType":"ForStatement","src":"3309:324:26"},{"expression":{"arguments":[{"id":4403,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"3656:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3649:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4401,"name":"string","nodeType":"ElementaryTypeName","src":"3649:6:26","typeDescriptions":{}}},"id":4404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3649:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4349,"id":4405,"nodeType":"Return","src":"3642:21:26"}]},"documentation":{"id":4343,"nodeType":"StructuredDocumentation","src":"2777:165:26","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":4407,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"2956:19:26","nodeType":"FunctionDefinition","parameters":{"id":4346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4345,"mutability":"mutable","name":"addr","nameLocation":"2984:4:26","nodeType":"VariableDeclaration","scope":4407,"src":"2976:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4344,"name":"address","nodeType":"ElementaryTypeName","src":"2976:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2975:14:26"},"returnParameters":{"id":4349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4407,"src":"3013:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4347,"name":"string","nodeType":"ElementaryTypeName","src":"3013:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3012:15:26"},"scope":4445,"src":"2947:723:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4443,"nodeType":"Block","src":"3825:104:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4419,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4410,"src":"3848:1:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3842:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4417,"name":"bytes","nodeType":"ElementaryTypeName","src":"3842:5:26","typeDescriptions":{}}},"id":4420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3842:8:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3851:6:26","memberName":"length","nodeType":"MemberAccess","src":"3842:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4424,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"3867:1:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3861:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4422,"name":"bytes","nodeType":"ElementaryTypeName","src":"3861:5:26","typeDescriptions":{}}},"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:8:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:6:26","memberName":"length","nodeType":"MemberAccess","src":"3861:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3842:34:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4431,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4410,"src":"3896:1:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3890:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4429,"name":"bytes","nodeType":"ElementaryTypeName","src":"3890:5:26","typeDescriptions":{}}},"id":4432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3890:8:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4428,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3880:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3880:19:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":4437,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"3919:1:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3913:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4435,"name":"bytes","nodeType":"ElementaryTypeName","src":"3913:5:26","typeDescriptions":{}}},"id":4438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3913:8:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4434,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3903:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:19:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3880:42:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3842:80:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4416,"id":4442,"nodeType":"Return","src":"3835:87:26"}]},"documentation":{"id":4408,"nodeType":"StructuredDocumentation","src":"3676:66:26","text":" @dev Returns true if the two strings are equal."},"id":4444,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"3756:5:26","nodeType":"FunctionDefinition","parameters":{"id":4413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4410,"mutability":"mutable","name":"a","nameLocation":"3776:1:26","nodeType":"VariableDeclaration","scope":4444,"src":"3762:15:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4409,"name":"string","nodeType":"ElementaryTypeName","src":"3762:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4412,"mutability":"mutable","name":"b","nameLocation":"3793:1:26","nodeType":"VariableDeclaration","scope":4444,"src":"3779:15:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4411,"name":"string","nodeType":"ElementaryTypeName","src":"3779:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3761:34:26"},"returnParameters":{"id":4416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4444,"src":"3819:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4414,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:26"},"scope":4445,"src":"3747:182:26","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4446,"src":"251:3680:26","usedErrors":[4145],"usedEvents":[]}],"src":"101:3831:26"},"id":26},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[4469],"IERC165":[4481]},"id":4470,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4447,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:27"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":4449,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4470,"sourceUnit":4482,"src":"140:38:27","symbolAliases":[{"foreign":{"id":4448,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"148:7:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4451,"name":"IERC165","nameLocations":["688:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":4481,"src":"688:7:27"},"id":4452,"nodeType":"InheritanceSpecifier","src":"688:7:27"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":4450,"nodeType":"StructuredDocumentation","src":"180:479:27","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":4469,"linearizedBaseContracts":[4469,4481],"name":"ERC165","nameLocation":"678:6:27","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[4480],"body":{"id":4467,"nodeType":"Block","src":"845:64:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4460,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"862:11:27","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4462,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"882:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4481_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$4481_$","typeString":"type(contract IERC165)"}],"id":4461,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"877:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$4481","typeString":"type(contract IERC165)"}},"id":4464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:27","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:27","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4459,"id":4466,"nodeType":"Return","src":"855:47:27"}]},"documentation":{"id":4453,"nodeType":"StructuredDocumentation","src":"702:56:27","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":4468,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:27","nodeType":"FunctionDefinition","parameters":{"id":4456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4455,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:27","nodeType":"VariableDeclaration","scope":4468,"src":"790:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4454,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:27","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:27"},"returnParameters":{"id":4459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4468,"src":"839:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4457,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:27"},"scope":4469,"src":"763:146:27","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":4470,"src":"660:251:27","usedErrors":[],"usedEvents":[]}],"src":"114:798:27"},"id":27},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[4481]},"id":4482,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4471,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:28"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":4472,"nodeType":"StructuredDocumentation","src":"141:280:28","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":4481,"linearizedBaseContracts":[4481],"name":"IERC165","nameLocation":"432:7:28","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4473,"nodeType":"StructuredDocumentation","src":"446:340:28","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":4480,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:28","nodeType":"FunctionDefinition","parameters":{"id":4476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4475,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:28","nodeType":"VariableDeclaration","scope":4480,"src":"818:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4474,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:28","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:28"},"returnParameters":{"id":4479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4480,"src":"861:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4477,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:28"},"scope":4481,"src":"791:76:28","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4482,"src":"422:447:28","usedErrors":[],"usedEvents":[]}],"src":"115:755:28"},"id":28},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[6087],"Panic":[3685],"SafeCast":[7852]},"id":6088,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4483,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:29"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":4485,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6088,"sourceUnit":3686,"src":"129:35:29","symbolAliases":[{"foreign":{"id":4484,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"137:5:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":4487,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6088,"sourceUnit":7853,"src":"165:40:29","symbolAliases":[{"foreign":{"id":4486,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7852,"src":"173:8:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4488,"nodeType":"StructuredDocumentation","src":"207:73:29","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6087,"linearizedBaseContracts":[6087],"name":"Math","nameLocation":"289:4:29","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":4493,"members":[{"id":4489,"name":"Floor","nameLocation":"324:5:29","nodeType":"EnumValue","src":"324:5:29"},{"id":4490,"name":"Ceil","nameLocation":"367:4:29","nodeType":"EnumValue","src":"367:4:29"},{"id":4491,"name":"Trunc","nameLocation":"409:5:29","nodeType":"EnumValue","src":"409:5:29"},{"id":4492,"name":"Expand","nameLocation":"439:6:29","nodeType":"EnumValue","src":"439:6:29"}],"name":"Rounding","nameLocation":"305:8:29","nodeType":"EnumDefinition","src":"300:169:29"},{"body":{"id":4524,"nodeType":"Block","src":"677:140:29","statements":[{"id":4523,"nodeType":"UncheckedBlock","src":"687:124:29","statements":[{"assignments":[4506],"declarations":[{"constant":false,"id":4506,"mutability":"mutable","name":"c","nameLocation":"719:1:29","nodeType":"VariableDeclaration","scope":4523,"src":"711:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4505,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4510,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4507,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"723:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4508,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"727:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4511,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4506,"src":"746:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4512,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"750:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4518,"nodeType":"IfStatement","src":"742:28:29","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4516,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4504,"id":4517,"nodeType":"Return","src":"753:17:29"}},{"expression":{"components":[{"hexValue":"74727565","id":4519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4520,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4506,"src":"798:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4521,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4504,"id":4522,"nodeType":"Return","src":"784:16:29"}]}]},"documentation":{"id":4494,"nodeType":"StructuredDocumentation","src":"475:106:29","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":4525,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:29","nodeType":"FunctionDefinition","parameters":{"id":4499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4496,"mutability":"mutable","name":"a","nameLocation":"610:1:29","nodeType":"VariableDeclaration","scope":4525,"src":"602:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4495,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4498,"mutability":"mutable","name":"b","nameLocation":"621:1:29","nodeType":"VariableDeclaration","scope":4525,"src":"613:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4497,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:29"},"returnParameters":{"id":4504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4501,"mutability":"mutable","name":"success","nameLocation":"652:7:29","nodeType":"VariableDeclaration","scope":4525,"src":"647:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4500,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4503,"mutability":"mutable","name":"result","nameLocation":"669:6:29","nodeType":"VariableDeclaration","scope":4525,"src":"661:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4502,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:29"},"scope":6087,"src":"586:231:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4552,"nodeType":"Block","src":"1028:113:29","statements":[{"id":4551,"nodeType":"UncheckedBlock","src":"1038:97:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4537,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"1066:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4538,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"1070:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4544,"nodeType":"IfStatement","src":"1062:28:29","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4542,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4536,"id":4543,"nodeType":"Return","src":"1073:17:29"}},{"expression":{"components":[{"hexValue":"74727565","id":4545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4546,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"1118:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4547,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"1122:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4549,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4536,"id":4550,"nodeType":"Return","src":"1104:20:29"}]}]},"documentation":{"id":4526,"nodeType":"StructuredDocumentation","src":"823:109:29","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":4553,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:29","nodeType":"FunctionDefinition","parameters":{"id":4531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4528,"mutability":"mutable","name":"a","nameLocation":"961:1:29","nodeType":"VariableDeclaration","scope":4553,"src":"953:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4527,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4530,"mutability":"mutable","name":"b","nameLocation":"972:1:29","nodeType":"VariableDeclaration","scope":4553,"src":"964:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4529,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:29"},"returnParameters":{"id":4536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4533,"mutability":"mutable","name":"success","nameLocation":"1003:7:29","nodeType":"VariableDeclaration","scope":4553,"src":"998:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4532,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4535,"mutability":"mutable","name":"result","nameLocation":"1020:6:29","nodeType":"VariableDeclaration","scope":4553,"src":"1012:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4534,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:29"},"scope":6087,"src":"937:204:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4594,"nodeType":"Block","src":"1355:417:29","statements":[{"id":4593,"nodeType":"UncheckedBlock","src":"1365:401:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4565,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"1623:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4572,"nodeType":"IfStatement","src":"1619:28:29","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":4568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":4569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4570,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4564,"id":4571,"nodeType":"Return","src":"1631:16:29"}},{"assignments":[4574],"declarations":[{"constant":false,"id":4574,"mutability":"mutable","name":"c","nameLocation":"1669:1:29","nodeType":"VariableDeclaration","scope":4593,"src":"1661:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4573,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4578,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4575,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"1673:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4576,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"1677:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4579,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"1696:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4580,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"1700:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4582,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"1705:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4588,"nodeType":"IfStatement","src":"1692:33:29","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4586,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4564,"id":4587,"nodeType":"Return","src":"1708:17:29"}},{"expression":{"components":[{"hexValue":"74727565","id":4589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4590,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"1753:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4591,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4564,"id":4592,"nodeType":"Return","src":"1739:16:29"}]}]},"documentation":{"id":4554,"nodeType":"StructuredDocumentation","src":"1147:112:29","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":4595,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:29","nodeType":"FunctionDefinition","parameters":{"id":4559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4556,"mutability":"mutable","name":"a","nameLocation":"1288:1:29","nodeType":"VariableDeclaration","scope":4595,"src":"1280:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4555,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4558,"mutability":"mutable","name":"b","nameLocation":"1299:1:29","nodeType":"VariableDeclaration","scope":4595,"src":"1291:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4557,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:29"},"returnParameters":{"id":4564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4561,"mutability":"mutable","name":"success","nameLocation":"1330:7:29","nodeType":"VariableDeclaration","scope":4595,"src":"1325:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4560,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4563,"mutability":"mutable","name":"result","nameLocation":"1347:6:29","nodeType":"VariableDeclaration","scope":4595,"src":"1339:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4562,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:29"},"scope":6087,"src":"1264:508:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4622,"nodeType":"Block","src":"1987:114:29","statements":[{"id":4621,"nodeType":"UncheckedBlock","src":"1997:98:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4607,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"2025:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4614,"nodeType":"IfStatement","src":"2021:29:29","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4612,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4606,"id":4613,"nodeType":"Return","src":"2033:17:29"}},{"expression":{"components":[{"hexValue":"74727565","id":4615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4616,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"2078:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4617,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"2082:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4619,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4606,"id":4620,"nodeType":"Return","src":"2064:20:29"}]}]},"documentation":{"id":4596,"nodeType":"StructuredDocumentation","src":"1778:113:29","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":4623,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:29","nodeType":"FunctionDefinition","parameters":{"id":4601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4598,"mutability":"mutable","name":"a","nameLocation":"1920:1:29","nodeType":"VariableDeclaration","scope":4623,"src":"1912:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4597,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4600,"mutability":"mutable","name":"b","nameLocation":"1931:1:29","nodeType":"VariableDeclaration","scope":4623,"src":"1923:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4599,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:29"},"returnParameters":{"id":4606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4603,"mutability":"mutable","name":"success","nameLocation":"1962:7:29","nodeType":"VariableDeclaration","scope":4623,"src":"1957:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4602,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4605,"mutability":"mutable","name":"result","nameLocation":"1979:6:29","nodeType":"VariableDeclaration","scope":4623,"src":"1971:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4604,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:29"},"scope":6087,"src":"1896:205:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4650,"nodeType":"Block","src":"2326:114:29","statements":[{"id":4649,"nodeType":"UncheckedBlock","src":"2336:98:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4635,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"2364:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4642,"nodeType":"IfStatement","src":"2360:29:29","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4640,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4634,"id":4641,"nodeType":"Return","src":"2372:17:29"}},{"expression":{"components":[{"hexValue":"74727565","id":4643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4644,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4626,"src":"2417:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4645,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"2421:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4647,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4634,"id":4648,"nodeType":"Return","src":"2403:20:29"}]}]},"documentation":{"id":4624,"nodeType":"StructuredDocumentation","src":"2107:123:29","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":4651,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:29","nodeType":"FunctionDefinition","parameters":{"id":4629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4626,"mutability":"mutable","name":"a","nameLocation":"2259:1:29","nodeType":"VariableDeclaration","scope":4651,"src":"2251:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4625,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4628,"mutability":"mutable","name":"b","nameLocation":"2270:1:29","nodeType":"VariableDeclaration","scope":4651,"src":"2262:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4627,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:29"},"returnParameters":{"id":4634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4631,"mutability":"mutable","name":"success","nameLocation":"2301:7:29","nodeType":"VariableDeclaration","scope":4651,"src":"2296:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4630,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4633,"mutability":"mutable","name":"result","nameLocation":"2318:6:29","nodeType":"VariableDeclaration","scope":4651,"src":"2310:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4632,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:29"},"scope":6087,"src":"2235:205:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4677,"nodeType":"Block","src":"2912:207:29","statements":[{"id":4676,"nodeType":"UncheckedBlock","src":"2922:191:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4663,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"3060:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4664,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4656,"src":"3066:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4665,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"3070:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4667,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4670,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"3091:9:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4668,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7852,"src":"3075:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7852_$","typeString":"type(library SafeCast)"}},"id":4669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7851,"src":"3075:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4673,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4662,"id":4675,"nodeType":"Return","src":"3053:49:29"}]}]},"documentation":{"id":4652,"nodeType":"StructuredDocumentation","src":"2446:374:29","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":4678,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:29","nodeType":"FunctionDefinition","parameters":{"id":4659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4654,"mutability":"mutable","name":"condition","nameLocation":"2847:9:29","nodeType":"VariableDeclaration","scope":4678,"src":"2842:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4653,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4656,"mutability":"mutable","name":"a","nameLocation":"2866:1:29","nodeType":"VariableDeclaration","scope":4678,"src":"2858:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4655,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4658,"mutability":"mutable","name":"b","nameLocation":"2877:1:29","nodeType":"VariableDeclaration","scope":4678,"src":"2869:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4657,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:29"},"returnParameters":{"id":4662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4678,"src":"2903:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4660,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:29"},"scope":6087,"src":"2825:294:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4696,"nodeType":"Block","src":"3256:44:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4689,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4681,"src":"3281:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4690,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"3285:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4692,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4681,"src":"3288:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4693,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"3291:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4688,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4678,"src":"3273:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4687,"id":4695,"nodeType":"Return","src":"3266:27:29"}]},"documentation":{"id":4679,"nodeType":"StructuredDocumentation","src":"3125:59:29","text":" @dev Returns the largest of two numbers."},"id":4697,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:29","nodeType":"FunctionDefinition","parameters":{"id":4684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4681,"mutability":"mutable","name":"a","nameLocation":"3210:1:29","nodeType":"VariableDeclaration","scope":4697,"src":"3202:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4680,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4683,"mutability":"mutable","name":"b","nameLocation":"3221:1:29","nodeType":"VariableDeclaration","scope":4697,"src":"3213:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4682,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:29"},"returnParameters":{"id":4687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4686,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4697,"src":"3247:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4685,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:29"},"scope":6087,"src":"3189:111:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4715,"nodeType":"Block","src":"3438:44:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4708,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"3463:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4709,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4702,"src":"3467:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4711,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"3470:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4712,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4702,"src":"3473:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4707,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4678,"src":"3455:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4706,"id":4714,"nodeType":"Return","src":"3448:27:29"}]},"documentation":{"id":4698,"nodeType":"StructuredDocumentation","src":"3306:60:29","text":" @dev Returns the smallest of two numbers."},"id":4716,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:29","nodeType":"FunctionDefinition","parameters":{"id":4703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4700,"mutability":"mutable","name":"a","nameLocation":"3392:1:29","nodeType":"VariableDeclaration","scope":4716,"src":"3384:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4699,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4702,"mutability":"mutable","name":"b","nameLocation":"3403:1:29","nodeType":"VariableDeclaration","scope":4716,"src":"3395:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4701,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:29"},"returnParameters":{"id":4706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4705,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4716,"src":"3429:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4704,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:29"},"scope":6087,"src":"3371:111:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4738,"nodeType":"Block","src":"3666:82:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4726,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"3721:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4727,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"3725:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4729,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4730,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"3731:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4731,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"3735:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4733,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4725,"id":4737,"nodeType":"Return","src":"3713:28:29"}]},"documentation":{"id":4717,"nodeType":"StructuredDocumentation","src":"3488:102:29","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4739,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:29","nodeType":"FunctionDefinition","parameters":{"id":4722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4719,"mutability":"mutable","name":"a","nameLocation":"3620:1:29","nodeType":"VariableDeclaration","scope":4739,"src":"3612:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4718,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4721,"mutability":"mutable","name":"b","nameLocation":"3631:1:29","nodeType":"VariableDeclaration","scope":4739,"src":"3623:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4720,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:29"},"returnParameters":{"id":4725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4739,"src":"3657:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4723,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:29"},"scope":6087,"src":"3595:153:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4779,"nodeType":"Block","src":"4040:633:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4749,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"4054:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4760,"nodeType":"IfStatement","src":"4050:150:29","trueBody":{"id":4759,"nodeType":"Block","src":"4062:138:29","statements":[{"expression":{"arguments":[{"expression":{"id":4755,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"4166:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3685_$","typeString":"type(library Panic)"}},"id":4756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:29","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3652,"src":"4166:22:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4752,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"4154:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3685_$","typeString":"type(library Panic)"}},"id":4754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:29","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3684,"src":"4154:11:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4758,"nodeType":"ExpressionStatement","src":"4154:35:29"}]}},{"id":4778,"nodeType":"UncheckedBlock","src":"4583:84:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4763,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4742,"src":"4630:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4761,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7852,"src":"4614:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7852_$","typeString":"type(library SafeCast)"}},"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7851,"src":"4614:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4767,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4742,"src":"4641:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4770,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4771,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"4650:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4775,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4748,"id":4777,"nodeType":"Return","src":"4607:49:29"}]}]},"documentation":{"id":4740,"nodeType":"StructuredDocumentation","src":"3754:210:29","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":4780,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:29","nodeType":"FunctionDefinition","parameters":{"id":4745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4742,"mutability":"mutable","name":"a","nameLocation":"3994:1:29","nodeType":"VariableDeclaration","scope":4780,"src":"3986:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4741,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4744,"mutability":"mutable","name":"b","nameLocation":"4005:1:29","nodeType":"VariableDeclaration","scope":4780,"src":"3997:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4743,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:29"},"returnParameters":{"id":4748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4780,"src":"4031:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4746,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:29"},"scope":6087,"src":"3969:704:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4916,"nodeType":"Block","src":"5094:4128:29","statements":[{"id":4915,"nodeType":"UncheckedBlock","src":"5104:4112:29","statements":[{"assignments":[4793],"declarations":[{"constant":false,"id":4793,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:29","nodeType":"VariableDeclaration","scope":4915,"src":"5433:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4792,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4797,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4794,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"5449:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4795,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"5453:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:29"},{"assignments":[4799],"declarations":[{"constant":false,"id":4799,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:29","nodeType":"VariableDeclaration","scope":4915,"src":"5513:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4798,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4800,"nodeType":"VariableDeclarationStatement","src":"5513:13:29"},{"AST":{"nativeSrc":"5593:122:29","nodeType":"YulBlock","src":"5593:122:29","statements":[{"nativeSrc":"5611:30:29","nodeType":"YulVariableDeclaration","src":"5611:30:29","value":{"arguments":[{"name":"x","nativeSrc":"5628:1:29","nodeType":"YulIdentifier","src":"5628:1:29"},{"name":"y","nativeSrc":"5631:1:29","nodeType":"YulIdentifier","src":"5631:1:29"},{"arguments":[{"kind":"number","nativeSrc":"5638:1:29","nodeType":"YulLiteral","src":"5638:1:29","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"5634:3:29","nodeType":"YulIdentifier","src":"5634:3:29"},"nativeSrc":"5634:6:29","nodeType":"YulFunctionCall","src":"5634:6:29"}],"functionName":{"name":"mulmod","nativeSrc":"5621:6:29","nodeType":"YulIdentifier","src":"5621:6:29"},"nativeSrc":"5621:20:29","nodeType":"YulFunctionCall","src":"5621:20:29"},"variables":[{"name":"mm","nativeSrc":"5615:2:29","nodeType":"YulTypedName","src":"5615:2:29","type":""}]},{"nativeSrc":"5658:43:29","nodeType":"YulAssignment","src":"5658:43:29","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"5675:2:29","nodeType":"YulIdentifier","src":"5675:2:29"},{"name":"prod0","nativeSrc":"5679:5:29","nodeType":"YulIdentifier","src":"5679:5:29"}],"functionName":{"name":"sub","nativeSrc":"5671:3:29","nodeType":"YulIdentifier","src":"5671:3:29"},"nativeSrc":"5671:14:29","nodeType":"YulFunctionCall","src":"5671:14:29"},{"arguments":[{"name":"mm","nativeSrc":"5690:2:29","nodeType":"YulIdentifier","src":"5690:2:29"},{"name":"prod0","nativeSrc":"5694:5:29","nodeType":"YulIdentifier","src":"5694:5:29"}],"functionName":{"name":"lt","nativeSrc":"5687:2:29","nodeType":"YulIdentifier","src":"5687:2:29"},"nativeSrc":"5687:13:29","nodeType":"YulFunctionCall","src":"5687:13:29"}],"functionName":{"name":"sub","nativeSrc":"5667:3:29","nodeType":"YulIdentifier","src":"5667:3:29"},"nativeSrc":"5667:34:29","nodeType":"YulFunctionCall","src":"5667:34:29"},"variableNames":[{"name":"prod1","nativeSrc":"5658:5:29","nodeType":"YulIdentifier","src":"5658:5:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4793,"isOffset":false,"isSlot":false,"src":"5679:5:29","valueSize":1},{"declaration":4793,"isOffset":false,"isSlot":false,"src":"5694:5:29","valueSize":1},{"declaration":4799,"isOffset":false,"isSlot":false,"src":"5658:5:29","valueSize":1},{"declaration":4783,"isOffset":false,"isSlot":false,"src":"5628:1:29","valueSize":1},{"declaration":4785,"isOffset":false,"isSlot":false,"src":"5631:1:29","valueSize":1}],"id":4801,"nodeType":"InlineAssembly","src":"5584:131:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4802,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4799,"src":"5796:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4810,"nodeType":"IfStatement","src":"5792:368:29","trueBody":{"id":4809,"nodeType":"Block","src":"5808:352:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4805,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4793,"src":"6126:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4806,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"6134:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4791,"id":4808,"nodeType":"Return","src":"6119:26:29"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4811,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"6270:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4812,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4799,"src":"6285:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4829,"nodeType":"IfStatement","src":"6266:143:29","trueBody":{"id":4828,"nodeType":"Block","src":"6292:117:29","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4818,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"6330:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4821,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"6348:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3685_$","typeString":"type(library Panic)"}},"id":4822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:29","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3652,"src":"6348:22:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4823,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"6372:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3685_$","typeString":"type(library Panic)"}},"id":4824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:29","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":3648,"src":"6372:20:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4817,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4678,"src":"6322:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4814,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"6310:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3685_$","typeString":"type(library Panic)"}},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:29","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3684,"src":"6310:11:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4827,"nodeType":"ExpressionStatement","src":"6310:84:29"}]}},{"assignments":[4831],"declarations":[{"constant":false,"id":4831,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:29","nodeType":"VariableDeclaration","scope":4915,"src":"6664:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4830,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4832,"nodeType":"VariableDeclarationStatement","src":"6664:17:29"},{"AST":{"nativeSrc":"6704:291:29","nodeType":"YulBlock","src":"6704:291:29","statements":[{"nativeSrc":"6773:38:29","nodeType":"YulAssignment","src":"6773:38:29","value":{"arguments":[{"name":"x","nativeSrc":"6793:1:29","nodeType":"YulIdentifier","src":"6793:1:29"},{"name":"y","nativeSrc":"6796:1:29","nodeType":"YulIdentifier","src":"6796:1:29"},{"name":"denominator","nativeSrc":"6799:11:29","nodeType":"YulIdentifier","src":"6799:11:29"}],"functionName":{"name":"mulmod","nativeSrc":"6786:6:29","nodeType":"YulIdentifier","src":"6786:6:29"},"nativeSrc":"6786:25:29","nodeType":"YulFunctionCall","src":"6786:25:29"},"variableNames":[{"name":"remainder","nativeSrc":"6773:9:29","nodeType":"YulIdentifier","src":"6773:9:29"}]},{"nativeSrc":"6893:41:29","nodeType":"YulAssignment","src":"6893:41:29","value":{"arguments":[{"name":"prod1","nativeSrc":"6906:5:29","nodeType":"YulIdentifier","src":"6906:5:29"},{"arguments":[{"name":"remainder","nativeSrc":"6916:9:29","nodeType":"YulIdentifier","src":"6916:9:29"},{"name":"prod0","nativeSrc":"6927:5:29","nodeType":"YulIdentifier","src":"6927:5:29"}],"functionName":{"name":"gt","nativeSrc":"6913:2:29","nodeType":"YulIdentifier","src":"6913:2:29"},"nativeSrc":"6913:20:29","nodeType":"YulFunctionCall","src":"6913:20:29"}],"functionName":{"name":"sub","nativeSrc":"6902:3:29","nodeType":"YulIdentifier","src":"6902:3:29"},"nativeSrc":"6902:32:29","nodeType":"YulFunctionCall","src":"6902:32:29"},"variableNames":[{"name":"prod1","nativeSrc":"6893:5:29","nodeType":"YulIdentifier","src":"6893:5:29"}]},{"nativeSrc":"6951:30:29","nodeType":"YulAssignment","src":"6951:30:29","value":{"arguments":[{"name":"prod0","nativeSrc":"6964:5:29","nodeType":"YulIdentifier","src":"6964:5:29"},{"name":"remainder","nativeSrc":"6971:9:29","nodeType":"YulIdentifier","src":"6971:9:29"}],"functionName":{"name":"sub","nativeSrc":"6960:3:29","nodeType":"YulIdentifier","src":"6960:3:29"},"nativeSrc":"6960:21:29","nodeType":"YulFunctionCall","src":"6960:21:29"},"variableNames":[{"name":"prod0","nativeSrc":"6951:5:29","nodeType":"YulIdentifier","src":"6951:5:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4787,"isOffset":false,"isSlot":false,"src":"6799:11:29","valueSize":1},{"declaration":4793,"isOffset":false,"isSlot":false,"src":"6927:5:29","valueSize":1},{"declaration":4793,"isOffset":false,"isSlot":false,"src":"6951:5:29","valueSize":1},{"declaration":4793,"isOffset":false,"isSlot":false,"src":"6964:5:29","valueSize":1},{"declaration":4799,"isOffset":false,"isSlot":false,"src":"6893:5:29","valueSize":1},{"declaration":4799,"isOffset":false,"isSlot":false,"src":"6906:5:29","valueSize":1},{"declaration":4831,"isOffset":false,"isSlot":false,"src":"6773:9:29","valueSize":1},{"declaration":4831,"isOffset":false,"isSlot":false,"src":"6916:9:29","valueSize":1},{"declaration":4831,"isOffset":false,"isSlot":false,"src":"6971:9:29","valueSize":1},{"declaration":4783,"isOffset":false,"isSlot":false,"src":"6793:1:29","valueSize":1},{"declaration":4785,"isOffset":false,"isSlot":false,"src":"6796:1:29","valueSize":1}],"id":4833,"nodeType":"InlineAssembly","src":"6695:300:29"},{"assignments":[4835],"declarations":[{"constant":false,"id":4835,"mutability":"mutable","name":"twos","nameLocation":"7207:4:29","nodeType":"VariableDeclaration","scope":4915,"src":"7199:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4834,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4842,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4836,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"7214:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4838,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"7233:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4840,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:29"},{"AST":{"nativeSrc":"7268:366:29","nodeType":"YulBlock","src":"7268:366:29","statements":[{"nativeSrc":"7333:37:29","nodeType":"YulAssignment","src":"7333:37:29","value":{"arguments":[{"name":"denominator","nativeSrc":"7352:11:29","nodeType":"YulIdentifier","src":"7352:11:29"},{"name":"twos","nativeSrc":"7365:4:29","nodeType":"YulIdentifier","src":"7365:4:29"}],"functionName":{"name":"div","nativeSrc":"7348:3:29","nodeType":"YulIdentifier","src":"7348:3:29"},"nativeSrc":"7348:22:29","nodeType":"YulFunctionCall","src":"7348:22:29"},"variableNames":[{"name":"denominator","nativeSrc":"7333:11:29","nodeType":"YulIdentifier","src":"7333:11:29"}]},{"nativeSrc":"7437:25:29","nodeType":"YulAssignment","src":"7437:25:29","value":{"arguments":[{"name":"prod0","nativeSrc":"7450:5:29","nodeType":"YulIdentifier","src":"7450:5:29"},{"name":"twos","nativeSrc":"7457:4:29","nodeType":"YulIdentifier","src":"7457:4:29"}],"functionName":{"name":"div","nativeSrc":"7446:3:29","nodeType":"YulIdentifier","src":"7446:3:29"},"nativeSrc":"7446:16:29","nodeType":"YulFunctionCall","src":"7446:16:29"},"variableNames":[{"name":"prod0","nativeSrc":"7437:5:29","nodeType":"YulIdentifier","src":"7437:5:29"}]},{"nativeSrc":"7581:39:29","nodeType":"YulAssignment","src":"7581:39:29","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7601:1:29","nodeType":"YulLiteral","src":"7601:1:29","type":"","value":"0"},{"name":"twos","nativeSrc":"7604:4:29","nodeType":"YulIdentifier","src":"7604:4:29"}],"functionName":{"name":"sub","nativeSrc":"7597:3:29","nodeType":"YulIdentifier","src":"7597:3:29"},"nativeSrc":"7597:12:29","nodeType":"YulFunctionCall","src":"7597:12:29"},{"name":"twos","nativeSrc":"7611:4:29","nodeType":"YulIdentifier","src":"7611:4:29"}],"functionName":{"name":"div","nativeSrc":"7593:3:29","nodeType":"YulIdentifier","src":"7593:3:29"},"nativeSrc":"7593:23:29","nodeType":"YulFunctionCall","src":"7593:23:29"},{"kind":"number","nativeSrc":"7618:1:29","nodeType":"YulLiteral","src":"7618:1:29","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7589:3:29","nodeType":"YulIdentifier","src":"7589:3:29"},"nativeSrc":"7589:31:29","nodeType":"YulFunctionCall","src":"7589:31:29"},"variableNames":[{"name":"twos","nativeSrc":"7581:4:29","nodeType":"YulIdentifier","src":"7581:4:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4787,"isOffset":false,"isSlot":false,"src":"7333:11:29","valueSize":1},{"declaration":4787,"isOffset":false,"isSlot":false,"src":"7352:11:29","valueSize":1},{"declaration":4793,"isOffset":false,"isSlot":false,"src":"7437:5:29","valueSize":1},{"declaration":4793,"isOffset":false,"isSlot":false,"src":"7450:5:29","valueSize":1},{"declaration":4835,"isOffset":false,"isSlot":false,"src":"7365:4:29","valueSize":1},{"declaration":4835,"isOffset":false,"isSlot":false,"src":"7457:4:29","valueSize":1},{"declaration":4835,"isOffset":false,"isSlot":false,"src":"7581:4:29","valueSize":1},{"declaration":4835,"isOffset":false,"isSlot":false,"src":"7604:4:29","valueSize":1},{"declaration":4835,"isOffset":false,"isSlot":false,"src":"7611:4:29","valueSize":1}],"id":4843,"nodeType":"InlineAssembly","src":"7259:375:29"},{"expression":{"id":4848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4844,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4793,"src":"7700:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4845,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4799,"src":"7709:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4846,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4835,"src":"7717:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4849,"nodeType":"ExpressionStatement","src":"7700:21:29"},{"assignments":[4851],"declarations":[{"constant":false,"id":4851,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:29","nodeType":"VariableDeclaration","scope":4915,"src":"8056:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4850,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4858,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:29","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4853,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"8079:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4855,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:29"},{"expression":{"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4859,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"8312:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4861,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"8327:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4862,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"8341:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4866,"nodeType":"ExpressionStatement","src":"8312:36:29"},{"expression":{"id":4873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4867,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"8382:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4869,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"8397:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4870,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"8411:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4874,"nodeType":"ExpressionStatement","src":"8382:36:29"},{"expression":{"id":4881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4875,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"8454:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4877,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"8469:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4878,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"8483:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4882,"nodeType":"ExpressionStatement","src":"8454:36:29"},{"expression":{"id":4889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4883,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"8525:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4885,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"8540:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4886,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"8554:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4890,"nodeType":"ExpressionStatement","src":"8525:36:29"},{"expression":{"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4891,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"8598:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4893,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"8613:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4894,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"8627:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4898,"nodeType":"ExpressionStatement","src":"8598:36:29"},{"expression":{"id":4905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4899,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"8672:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4901,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"8687:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4902,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"8701:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4906,"nodeType":"ExpressionStatement","src":"8672:36:29"},{"expression":{"id":4911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4907,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4790,"src":"9154:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4908,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4793,"src":"9163:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4909,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"9171:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4912,"nodeType":"ExpressionStatement","src":"9154:24:29"},{"expression":{"id":4913,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4790,"src":"9199:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4791,"id":4914,"nodeType":"Return","src":"9192:13:29"}]}]},"documentation":{"id":4781,"nodeType":"StructuredDocumentation","src":"4679:312:29","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4917,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:29","nodeType":"FunctionDefinition","parameters":{"id":4788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4783,"mutability":"mutable","name":"x","nameLocation":"5020:1:29","nodeType":"VariableDeclaration","scope":4917,"src":"5012:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4782,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4785,"mutability":"mutable","name":"y","nameLocation":"5031:1:29","nodeType":"VariableDeclaration","scope":4917,"src":"5023:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4784,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4787,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:29","nodeType":"VariableDeclaration","scope":4917,"src":"5034:19:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4786,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:29"},"returnParameters":{"id":4791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4790,"mutability":"mutable","name":"result","nameLocation":"5086:6:29","nodeType":"VariableDeclaration","scope":4917,"src":"5078:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4789,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:29"},"scope":6087,"src":"4996:4226:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4953,"nodeType":"Block","src":"9461:128:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4933,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"9485:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4934,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4922,"src":"9488:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4935,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4924,"src":"9491:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4932,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4917,4954],"referencedDeclaration":4917,"src":"9478:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4940,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"9539:8:29","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4493","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4493","typeString":"enum Math.Rounding"}],"id":4939,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"9522:16:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4493_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4943,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"9559:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4944,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4922,"src":"9562:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4945,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4924,"src":"9565:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4942,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:29","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4937,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7852,"src":"9506:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7852_$","typeString":"type(library SafeCast)"}},"id":4938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7851,"src":"9506:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4931,"id":4952,"nodeType":"Return","src":"9471:111:29"}]},"documentation":{"id":4918,"nodeType":"StructuredDocumentation","src":"9228:118:29","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4954,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:29","nodeType":"FunctionDefinition","parameters":{"id":4928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4920,"mutability":"mutable","name":"x","nameLocation":"9375:1:29","nodeType":"VariableDeclaration","scope":4954,"src":"9367:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4919,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4922,"mutability":"mutable","name":"y","nameLocation":"9386:1:29","nodeType":"VariableDeclaration","scope":4954,"src":"9378:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4921,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4924,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:29","nodeType":"VariableDeclaration","scope":4954,"src":"9389:19:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4923,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4927,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:29","nodeType":"VariableDeclaration","scope":4954,"src":"9410:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4493","typeString":"enum Math.Rounding"},"typeName":{"id":4926,"nodeType":"UserDefinedTypeName","pathNode":{"id":4925,"name":"Rounding","nameLocations":["9410:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":4493,"src":"9410:8:29"},"referencedDeclaration":4493,"src":"9410:8:29","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4493","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:29"},"returnParameters":{"id":4931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4954,"src":"9452:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4929,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:29"},"scope":6087,"src":"9351:238:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5050,"nodeType":"Block","src":"10223:1849:29","statements":[{"id":5049,"nodeType":"UncheckedBlock","src":"10233:1833:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4964,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4959,"src":"10261:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4969,"nodeType":"IfStatement","src":"10257:20:29","trueBody":{"expression":{"hexValue":"30","id":4967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4963,"id":4968,"nodeType":"Return","src":"10269:8:29"}},{"assignments":[4971],"declarations":[{"constant":false,"id":4971,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:29","nodeType":"VariableDeclaration","scope":5049,"src":"10748:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4970,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4975,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4972,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"10768:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4973,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4959,"src":"10772:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:29"},{"assignments":[4977],"declarations":[{"constant":false,"id":4977,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:29","nodeType":"VariableDeclaration","scope":5049,"src":"10787:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4976,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4979,"initialValue":{"id":4978,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4959,"src":"10801:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:29"},{"assignments":[4981],"declarations":[{"constant":false,"id":4981,"mutability":"mutable","name":"x","nameLocation":"10945:1:29","nodeType":"VariableDeclaration","scope":5049,"src":"10938:8:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4980,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4983,"initialValue":{"hexValue":"30","id":4982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:29"},{"assignments":[4985],"declarations":[{"constant":false,"id":4985,"mutability":"mutable","name":"y","nameLocation":"10971:1:29","nodeType":"VariableDeclaration","scope":5049,"src":"10964:8:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4984,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4987,"initialValue":{"hexValue":"31","id":4986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:29"},{"body":{"id":5024,"nodeType":"Block","src":"11014:882:29","statements":[{"assignments":[4992],"declarations":[{"constant":false,"id":4992,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:29","nodeType":"VariableDeclaration","scope":5024,"src":"11032:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4991,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4996,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4993,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4977,"src":"11051:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4994,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4971,"src":"11057:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:29"},{"expression":{"id":5007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4997,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4977,"src":"11086:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4998,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4971,"src":"11091:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4999,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":5000,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4971,"src":"11191:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5001,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4977,"src":"11436:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5002,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4971,"src":"11442:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5003,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"11454:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5006,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:29","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5008,"nodeType":"ExpressionStatement","src":"11085:395:29"},{"expression":{"id":5022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5009,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4981,"src":"11500:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5010,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"11503:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5011,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":5012,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"11585:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5013,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4981,"src":"11839:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5014,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"11843:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5017,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"11854:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5015,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:29","typeDescriptions":{}}},"id":5018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5021,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:29","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5023,"nodeType":"ExpressionStatement","src":"11499:382:29"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4988,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4971,"src":"10998:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5025,"nodeType":"WhileStatement","src":"10991:905:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5026,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4977,"src":"11914:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":5027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5031,"nodeType":"IfStatement","src":"11910:22:29","trueBody":{"expression":{"hexValue":"30","id":5029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4963,"id":5030,"nodeType":"Return","src":"11924:8:29"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5033,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4981,"src":"11983:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5036,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4959,"src":"11990:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:29","subExpression":{"id":5039,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4981,"src":"12003:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5037,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:29","typeDescriptions":{}}},"id":5041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":5045,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4981,"src":"12015:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5043,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:29","typeDescriptions":{}}},"id":5046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5032,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4678,"src":"11975:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4963,"id":5048,"nodeType":"Return","src":"11968:50:29"}]}]},"documentation":{"id":4955,"nodeType":"StructuredDocumentation","src":"9595:553:29","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":5051,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:29","nodeType":"FunctionDefinition","parameters":{"id":4960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4957,"mutability":"mutable","name":"a","nameLocation":"10177:1:29","nodeType":"VariableDeclaration","scope":5051,"src":"10169:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4956,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4959,"mutability":"mutable","name":"n","nameLocation":"10188:1:29","nodeType":"VariableDeclaration","scope":5051,"src":"10180:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4958,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:29"},"returnParameters":{"id":4963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4962,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5051,"src":"10214:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4961,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:29"},"scope":6087,"src":"10153:1919:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5071,"nodeType":"Block","src":"12672:82:29","statements":[{"id":5070,"nodeType":"UncheckedBlock","src":"12682:66:29","statements":[{"expression":{"arguments":[{"id":5063,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5054,"src":"12725:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5064,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5056,"src":"12728:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":5065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5067,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5056,"src":"12735:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5061,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"12713:4:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6087_$","typeString":"type(library Math)"}},"id":5062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:29","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":5108,"src":"12713:11:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":5068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5060,"id":5069,"nodeType":"Return","src":"12706:31:29"}]}]},"documentation":{"id":5052,"nodeType":"StructuredDocumentation","src":"12078:514:29","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":5072,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:29","nodeType":"FunctionDefinition","parameters":{"id":5057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5054,"mutability":"mutable","name":"a","nameLocation":"12626:1:29","nodeType":"VariableDeclaration","scope":5072,"src":"12618:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5053,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5056,"mutability":"mutable","name":"p","nameLocation":"12637:1:29","nodeType":"VariableDeclaration","scope":5072,"src":"12629:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5055,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:29"},"returnParameters":{"id":5060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5072,"src":"12663:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5058,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:29"},"scope":6087,"src":"12597:157:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5107,"nodeType":"Block","src":"13524:174:29","statements":[{"assignments":[5085,5087],"declarations":[{"constant":false,"id":5085,"mutability":"mutable","name":"success","nameLocation":"13540:7:29","nodeType":"VariableDeclaration","scope":5107,"src":"13535:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5084,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5087,"mutability":"mutable","name":"result","nameLocation":"13557:6:29","nodeType":"VariableDeclaration","scope":5107,"src":"13549:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5086,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5093,"initialValue":{"arguments":[{"id":5089,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5075,"src":"13577:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5090,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5077,"src":"13580:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5091,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"13583:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5088,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5132,5214],"referencedDeclaration":5132,"src":"13567:9:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":5092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:29"},{"condition":{"id":5095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:29","subExpression":{"id":5094,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5085,"src":"13600:7:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5104,"nodeType":"IfStatement","src":"13595:74:29","trueBody":{"id":5103,"nodeType":"Block","src":"13609:60:29","statements":[{"expression":{"arguments":[{"expression":{"id":5099,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"13635:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3685_$","typeString":"type(library Panic)"}},"id":5100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:29","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3652,"src":"13635:22:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5096,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"13623:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3685_$","typeString":"type(library Panic)"}},"id":5098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:29","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3684,"src":"13623:11:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5102,"nodeType":"ExpressionStatement","src":"13623:35:29"}]}},{"expression":{"id":5105,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5087,"src":"13685:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5083,"id":5106,"nodeType":"Return","src":"13678:13:29"}]},"documentation":{"id":5073,"nodeType":"StructuredDocumentation","src":"12760:678:29","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":5108,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:29","nodeType":"FunctionDefinition","parameters":{"id":5080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5075,"mutability":"mutable","name":"b","nameLocation":"13467:1:29","nodeType":"VariableDeclaration","scope":5108,"src":"13459:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5074,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5077,"mutability":"mutable","name":"e","nameLocation":"13478:1:29","nodeType":"VariableDeclaration","scope":5108,"src":"13470:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5076,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5079,"mutability":"mutable","name":"m","nameLocation":"13489:1:29","nodeType":"VariableDeclaration","scope":5108,"src":"13481:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5078,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:29"},"returnParameters":{"id":5083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5108,"src":"13515:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5081,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:29"},"scope":6087,"src":"13443:255:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5131,"nodeType":"Block","src":"14552:1493:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5122,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5115,"src":"14566:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5129,"nodeType":"IfStatement","src":"14562:29:29","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5127,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5121,"id":5128,"nodeType":"Return","src":"14574:17:29"}},{"AST":{"nativeSrc":"14626:1413:29","nodeType":"YulBlock","src":"14626:1413:29","statements":[{"nativeSrc":"14640:22:29","nodeType":"YulVariableDeclaration","src":"14640:22:29","value":{"arguments":[{"kind":"number","nativeSrc":"14657:4:29","nodeType":"YulLiteral","src":"14657:4:29","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"14651:5:29","nodeType":"YulIdentifier","src":"14651:5:29"},"nativeSrc":"14651:11:29","nodeType":"YulFunctionCall","src":"14651:11:29"},"variables":[{"name":"ptr","nativeSrc":"14644:3:29","nodeType":"YulTypedName","src":"14644:3:29","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"15570:3:29","nodeType":"YulIdentifier","src":"15570:3:29"},{"kind":"number","nativeSrc":"15575:4:29","nodeType":"YulLiteral","src":"15575:4:29","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15563:6:29","nodeType":"YulIdentifier","src":"15563:6:29"},"nativeSrc":"15563:17:29","nodeType":"YulFunctionCall","src":"15563:17:29"},"nativeSrc":"15563:17:29","nodeType":"YulExpressionStatement","src":"15563:17:29"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15604:3:29","nodeType":"YulIdentifier","src":"15604:3:29"},{"kind":"number","nativeSrc":"15609:4:29","nodeType":"YulLiteral","src":"15609:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15600:3:29","nodeType":"YulIdentifier","src":"15600:3:29"},"nativeSrc":"15600:14:29","nodeType":"YulFunctionCall","src":"15600:14:29"},{"kind":"number","nativeSrc":"15616:4:29","nodeType":"YulLiteral","src":"15616:4:29","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15593:6:29","nodeType":"YulIdentifier","src":"15593:6:29"},"nativeSrc":"15593:28:29","nodeType":"YulFunctionCall","src":"15593:28:29"},"nativeSrc":"15593:28:29","nodeType":"YulExpressionStatement","src":"15593:28:29"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15645:3:29","nodeType":"YulIdentifier","src":"15645:3:29"},{"kind":"number","nativeSrc":"15650:4:29","nodeType":"YulLiteral","src":"15650:4:29","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"15641:3:29","nodeType":"YulIdentifier","src":"15641:3:29"},"nativeSrc":"15641:14:29","nodeType":"YulFunctionCall","src":"15641:14:29"},{"kind":"number","nativeSrc":"15657:4:29","nodeType":"YulLiteral","src":"15657:4:29","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15634:6:29","nodeType":"YulIdentifier","src":"15634:6:29"},"nativeSrc":"15634:28:29","nodeType":"YulFunctionCall","src":"15634:28:29"},"nativeSrc":"15634:28:29","nodeType":"YulExpressionStatement","src":"15634:28:29"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15686:3:29","nodeType":"YulIdentifier","src":"15686:3:29"},{"kind":"number","nativeSrc":"15691:4:29","nodeType":"YulLiteral","src":"15691:4:29","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"15682:3:29","nodeType":"YulIdentifier","src":"15682:3:29"},"nativeSrc":"15682:14:29","nodeType":"YulFunctionCall","src":"15682:14:29"},{"name":"b","nativeSrc":"15698:1:29","nodeType":"YulIdentifier","src":"15698:1:29"}],"functionName":{"name":"mstore","nativeSrc":"15675:6:29","nodeType":"YulIdentifier","src":"15675:6:29"},"nativeSrc":"15675:25:29","nodeType":"YulFunctionCall","src":"15675:25:29"},"nativeSrc":"15675:25:29","nodeType":"YulExpressionStatement","src":"15675:25:29"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15724:3:29","nodeType":"YulIdentifier","src":"15724:3:29"},{"kind":"number","nativeSrc":"15729:4:29","nodeType":"YulLiteral","src":"15729:4:29","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"15720:3:29","nodeType":"YulIdentifier","src":"15720:3:29"},"nativeSrc":"15720:14:29","nodeType":"YulFunctionCall","src":"15720:14:29"},{"name":"e","nativeSrc":"15736:1:29","nodeType":"YulIdentifier","src":"15736:1:29"}],"functionName":{"name":"mstore","nativeSrc":"15713:6:29","nodeType":"YulIdentifier","src":"15713:6:29"},"nativeSrc":"15713:25:29","nodeType":"YulFunctionCall","src":"15713:25:29"},"nativeSrc":"15713:25:29","nodeType":"YulExpressionStatement","src":"15713:25:29"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15762:3:29","nodeType":"YulIdentifier","src":"15762:3:29"},{"kind":"number","nativeSrc":"15767:4:29","nodeType":"YulLiteral","src":"15767:4:29","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"15758:3:29","nodeType":"YulIdentifier","src":"15758:3:29"},"nativeSrc":"15758:14:29","nodeType":"YulFunctionCall","src":"15758:14:29"},{"name":"m","nativeSrc":"15774:1:29","nodeType":"YulIdentifier","src":"15774:1:29"}],"functionName":{"name":"mstore","nativeSrc":"15751:6:29","nodeType":"YulIdentifier","src":"15751:6:29"},"nativeSrc":"15751:25:29","nodeType":"YulFunctionCall","src":"15751:25:29"},"nativeSrc":"15751:25:29","nodeType":"YulExpressionStatement","src":"15751:25:29"},{"nativeSrc":"15938:57:29","nodeType":"YulAssignment","src":"15938:57:29","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"15960:3:29","nodeType":"YulIdentifier","src":"15960:3:29"},"nativeSrc":"15960:5:29","nodeType":"YulFunctionCall","src":"15960:5:29"},{"kind":"number","nativeSrc":"15967:4:29","nodeType":"YulLiteral","src":"15967:4:29","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"15973:3:29","nodeType":"YulIdentifier","src":"15973:3:29"},{"kind":"number","nativeSrc":"15978:4:29","nodeType":"YulLiteral","src":"15978:4:29","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"15984:4:29","nodeType":"YulLiteral","src":"15984:4:29","type":"","value":"0x00"},{"kind":"number","nativeSrc":"15990:4:29","nodeType":"YulLiteral","src":"15990:4:29","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"15949:10:29","nodeType":"YulIdentifier","src":"15949:10:29"},"nativeSrc":"15949:46:29","nodeType":"YulFunctionCall","src":"15949:46:29"},"variableNames":[{"name":"success","nativeSrc":"15938:7:29","nodeType":"YulIdentifier","src":"15938:7:29"}]},{"nativeSrc":"16008:21:29","nodeType":"YulAssignment","src":"16008:21:29","value":{"arguments":[{"kind":"number","nativeSrc":"16024:4:29","nodeType":"YulLiteral","src":"16024:4:29","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"16018:5:29","nodeType":"YulIdentifier","src":"16018:5:29"},"nativeSrc":"16018:11:29","nodeType":"YulFunctionCall","src":"16018:11:29"},"variableNames":[{"name":"result","nativeSrc":"16008:6:29","nodeType":"YulIdentifier","src":"16008:6:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5111,"isOffset":false,"isSlot":false,"src":"15698:1:29","valueSize":1},{"declaration":5113,"isOffset":false,"isSlot":false,"src":"15736:1:29","valueSize":1},{"declaration":5115,"isOffset":false,"isSlot":false,"src":"15774:1:29","valueSize":1},{"declaration":5120,"isOffset":false,"isSlot":false,"src":"16008:6:29","valueSize":1},{"declaration":5118,"isOffset":false,"isSlot":false,"src":"15938:7:29","valueSize":1}],"flags":["memory-safe"],"id":5130,"nodeType":"InlineAssembly","src":"14601:1438:29"}]},"documentation":{"id":5109,"nodeType":"StructuredDocumentation","src":"13704:738:29","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":5132,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:29","nodeType":"FunctionDefinition","parameters":{"id":5116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5111,"mutability":"mutable","name":"b","nameLocation":"14474:1:29","nodeType":"VariableDeclaration","scope":5132,"src":"14466:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5110,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5113,"mutability":"mutable","name":"e","nameLocation":"14485:1:29","nodeType":"VariableDeclaration","scope":5132,"src":"14477:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5112,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5115,"mutability":"mutable","name":"m","nameLocation":"14496:1:29","nodeType":"VariableDeclaration","scope":5132,"src":"14488:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5114,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:29"},"returnParameters":{"id":5121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5118,"mutability":"mutable","name":"success","nameLocation":"14527:7:29","nodeType":"VariableDeclaration","scope":5132,"src":"14522:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5117,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5120,"mutability":"mutable","name":"result","nameLocation":"14544:6:29","nodeType":"VariableDeclaration","scope":5132,"src":"14536:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5119,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:29"},"scope":6087,"src":"14447:1598:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5167,"nodeType":"Block","src":"16242:179:29","statements":[{"assignments":[5145,5147],"declarations":[{"constant":false,"id":5145,"mutability":"mutable","name":"success","nameLocation":"16258:7:29","nodeType":"VariableDeclaration","scope":5167,"src":"16253:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5144,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5147,"mutability":"mutable","name":"result","nameLocation":"16280:6:29","nodeType":"VariableDeclaration","scope":5167,"src":"16267:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5146,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5153,"initialValue":{"arguments":[{"id":5149,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5135,"src":"16300:1:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5150,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"16303:1:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5151,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"16306:1:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5148,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5132,5214],"referencedDeclaration":5214,"src":"16290:9:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":5152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:29"},{"condition":{"id":5155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:29","subExpression":{"id":5154,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"16323:7:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5164,"nodeType":"IfStatement","src":"16318:74:29","trueBody":{"id":5163,"nodeType":"Block","src":"16332:60:29","statements":[{"expression":{"arguments":[{"expression":{"id":5159,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"16358:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3685_$","typeString":"type(library Panic)"}},"id":5160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:29","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3652,"src":"16358:22:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5156,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"16346:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3685_$","typeString":"type(library Panic)"}},"id":5158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:29","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3684,"src":"16346:11:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5162,"nodeType":"ExpressionStatement","src":"16346:35:29"}]}},{"expression":{"id":5165,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5147,"src":"16408:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":5143,"id":5166,"nodeType":"Return","src":"16401:13:29"}]},"documentation":{"id":5133,"nodeType":"StructuredDocumentation","src":"16051:85:29","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":5168,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:29","nodeType":"FunctionDefinition","parameters":{"id":5140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5135,"mutability":"mutable","name":"b","nameLocation":"16170:1:29","nodeType":"VariableDeclaration","scope":5168,"src":"16157:14:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5134,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5137,"mutability":"mutable","name":"e","nameLocation":"16186:1:29","nodeType":"VariableDeclaration","scope":5168,"src":"16173:14:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5136,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5139,"mutability":"mutable","name":"m","nameLocation":"16202:1:29","nodeType":"VariableDeclaration","scope":5168,"src":"16189:14:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5138,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:29"},"returnParameters":{"id":5143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5168,"src":"16228:12:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5141,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:29"},"scope":6087,"src":"16141:280:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5213,"nodeType":"Block","src":"16675:771:29","statements":[{"condition":{"arguments":[{"id":5183,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"16700:1:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5182,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"16689:10:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":5184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5192,"nodeType":"IfStatement","src":"16685:47:29","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:29","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5186,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":5190,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":5181,"id":5191,"nodeType":"Return","src":"16704:28:29"}},{"assignments":[5194],"declarations":[{"constant":false,"id":5194,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:29","nodeType":"VariableDeclaration","scope":5213,"src":"16743:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5193,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5197,"initialValue":{"expression":{"id":5195,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"16758:1:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:29","memberName":"length","nodeType":"MemberAccess","src":"16758:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:29"},{"expression":{"id":5210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5198,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5180,"src":"16848:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5201,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"16874:1:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:29","memberName":"length","nodeType":"MemberAccess","src":"16874:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5203,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"16884:1:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:29","memberName":"length","nodeType":"MemberAccess","src":"16884:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5205,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5194,"src":"16894:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5206,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"16900:1:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5207,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"16903:1:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5208,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"16906:1:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5199,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:29","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:29","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:29","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5211,"nodeType":"ExpressionStatement","src":"16848:60:29"},{"AST":{"nativeSrc":"16944:496:29","nodeType":"YulBlock","src":"16944:496:29","statements":[{"nativeSrc":"16958:32:29","nodeType":"YulVariableDeclaration","src":"16958:32:29","value":{"arguments":[{"name":"result","nativeSrc":"16977:6:29","nodeType":"YulIdentifier","src":"16977:6:29"},{"kind":"number","nativeSrc":"16985:4:29","nodeType":"YulLiteral","src":"16985:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16973:3:29","nodeType":"YulIdentifier","src":"16973:3:29"},"nativeSrc":"16973:17:29","nodeType":"YulFunctionCall","src":"16973:17:29"},"variables":[{"name":"dataPtr","nativeSrc":"16962:7:29","nodeType":"YulTypedName","src":"16962:7:29","type":""}]},{"nativeSrc":"17080:73:29","nodeType":"YulAssignment","src":"17080:73:29","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"17102:3:29","nodeType":"YulIdentifier","src":"17102:3:29"},"nativeSrc":"17102:5:29","nodeType":"YulFunctionCall","src":"17102:5:29"},{"kind":"number","nativeSrc":"17109:4:29","nodeType":"YulLiteral","src":"17109:4:29","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"17115:7:29","nodeType":"YulIdentifier","src":"17115:7:29"},{"arguments":[{"name":"result","nativeSrc":"17130:6:29","nodeType":"YulIdentifier","src":"17130:6:29"}],"functionName":{"name":"mload","nativeSrc":"17124:5:29","nodeType":"YulIdentifier","src":"17124:5:29"},"nativeSrc":"17124:13:29","nodeType":"YulFunctionCall","src":"17124:13:29"},{"name":"dataPtr","nativeSrc":"17139:7:29","nodeType":"YulIdentifier","src":"17139:7:29"},{"name":"mLen","nativeSrc":"17148:4:29","nodeType":"YulIdentifier","src":"17148:4:29"}],"functionName":{"name":"staticcall","nativeSrc":"17091:10:29","nodeType":"YulIdentifier","src":"17091:10:29"},"nativeSrc":"17091:62:29","nodeType":"YulFunctionCall","src":"17091:62:29"},"variableNames":[{"name":"success","nativeSrc":"17080:7:29","nodeType":"YulIdentifier","src":"17080:7:29"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"17309:6:29","nodeType":"YulIdentifier","src":"17309:6:29"},{"name":"mLen","nativeSrc":"17317:4:29","nodeType":"YulIdentifier","src":"17317:4:29"}],"functionName":{"name":"mstore","nativeSrc":"17302:6:29","nodeType":"YulIdentifier","src":"17302:6:29"},"nativeSrc":"17302:20:29","nodeType":"YulFunctionCall","src":"17302:20:29"},"nativeSrc":"17302:20:29","nodeType":"YulExpressionStatement","src":"17302:20:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17405:4:29","nodeType":"YulLiteral","src":"17405:4:29","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"17415:7:29","nodeType":"YulIdentifier","src":"17415:7:29"},{"name":"mLen","nativeSrc":"17424:4:29","nodeType":"YulIdentifier","src":"17424:4:29"}],"functionName":{"name":"add","nativeSrc":"17411:3:29","nodeType":"YulIdentifier","src":"17411:3:29"},"nativeSrc":"17411:18:29","nodeType":"YulFunctionCall","src":"17411:18:29"}],"functionName":{"name":"mstore","nativeSrc":"17398:6:29","nodeType":"YulIdentifier","src":"17398:6:29"},"nativeSrc":"17398:32:29","nodeType":"YulFunctionCall","src":"17398:32:29"},"nativeSrc":"17398:32:29","nodeType":"YulExpressionStatement","src":"17398:32:29"}]},"evmVersion":"paris","externalReferences":[{"declaration":5194,"isOffset":false,"isSlot":false,"src":"17148:4:29","valueSize":1},{"declaration":5194,"isOffset":false,"isSlot":false,"src":"17317:4:29","valueSize":1},{"declaration":5194,"isOffset":false,"isSlot":false,"src":"17424:4:29","valueSize":1},{"declaration":5180,"isOffset":false,"isSlot":false,"src":"16977:6:29","valueSize":1},{"declaration":5180,"isOffset":false,"isSlot":false,"src":"17130:6:29","valueSize":1},{"declaration":5180,"isOffset":false,"isSlot":false,"src":"17309:6:29","valueSize":1},{"declaration":5178,"isOffset":false,"isSlot":false,"src":"17080:7:29","valueSize":1}],"flags":["memory-safe"],"id":5212,"nodeType":"InlineAssembly","src":"16919:521:29"}]},"documentation":{"id":5169,"nodeType":"StructuredDocumentation","src":"16427:88:29","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":5214,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:29","nodeType":"FunctionDefinition","parameters":{"id":5176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5171,"mutability":"mutable","name":"b","nameLocation":"16561:1:29","nodeType":"VariableDeclaration","scope":5214,"src":"16548:14:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5170,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5173,"mutability":"mutable","name":"e","nameLocation":"16585:1:29","nodeType":"VariableDeclaration","scope":5214,"src":"16572:14:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5172,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5175,"mutability":"mutable","name":"m","nameLocation":"16609:1:29","nodeType":"VariableDeclaration","scope":5214,"src":"16596:14:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5174,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:29"},"returnParameters":{"id":5181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5178,"mutability":"mutable","name":"success","nameLocation":"16645:7:29","nodeType":"VariableDeclaration","scope":5214,"src":"16640:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5177,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5180,"mutability":"mutable","name":"result","nameLocation":"16667:6:29","nodeType":"VariableDeclaration","scope":5214,"src":"16654:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5179,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:29"},"scope":6087,"src":"16520:926:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5246,"nodeType":"Block","src":"17601:176:29","statements":[{"body":{"id":5242,"nodeType":"Block","src":"17658:92:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5233,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5217,"src":"17676:9:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5235,"indexExpression":{"id":5234,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5223,"src":"17686:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5241,"nodeType":"IfStatement","src":"17672:68:29","trueBody":{"id":5240,"nodeType":"Block","src":"17695:45:29","statements":[{"expression":{"hexValue":"66616c7365","id":5238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5221,"id":5239,"nodeType":"Return","src":"17713:12:29"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5226,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5223,"src":"17631:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5227,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5217,"src":"17635:9:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:29","memberName":"length","nodeType":"MemberAccess","src":"17635:16:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5243,"initializationExpression":{"assignments":[5223],"declarations":[{"constant":false,"id":5223,"mutability":"mutable","name":"i","nameLocation":"17624:1:29","nodeType":"VariableDeclaration","scope":5243,"src":"17616:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5222,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5225,"initialValue":{"hexValue":"30","id":5224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:29"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:29","subExpression":{"id":5230,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5223,"src":"17655:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5232,"nodeType":"ExpressionStatement","src":"17653:3:29"},"nodeType":"ForStatement","src":"17611:139:29"},{"expression":{"hexValue":"74727565","id":5244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5221,"id":5245,"nodeType":"Return","src":"17759:11:29"}]},"documentation":{"id":5215,"nodeType":"StructuredDocumentation","src":"17452:72:29","text":" @dev Returns whether the provided byte array is zero."},"id":5247,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:29","nodeType":"FunctionDefinition","parameters":{"id":5218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5217,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:29","nodeType":"VariableDeclaration","scope":5247,"src":"17549:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5216,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:29"},"returnParameters":{"id":5221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5247,"src":"17595:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5219,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:29"},"scope":6087,"src":"17529:248:29","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5465,"nodeType":"Block","src":"18137:5124:29","statements":[{"id":5464,"nodeType":"UncheckedBlock","src":"18147:5108:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5255,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"18241:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":5256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5261,"nodeType":"IfStatement","src":"18237:53:29","trueBody":{"id":5260,"nodeType":"Block","src":"18249:41:29","statements":[{"expression":{"id":5258,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"18274:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5254,"id":5259,"nodeType":"Return","src":"18267:8:29"}]}},{"assignments":[5263],"declarations":[{"constant":false,"id":5263,"mutability":"mutable","name":"aa","nameLocation":"19225:2:29","nodeType":"VariableDeclaration","scope":5464,"src":"19217:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5262,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5265,"initialValue":{"id":5264,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"19230:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:29"},{"assignments":[5267],"declarations":[{"constant":false,"id":5267,"mutability":"mutable","name":"xn","nameLocation":"19253:2:29","nodeType":"VariableDeclaration","scope":5464,"src":"19245:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5266,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5269,"initialValue":{"hexValue":"31","id":5268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5270,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"19278:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:29","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:29","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5274,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:29","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5285,"nodeType":"IfStatement","src":"19274:92:29","trueBody":{"id":5284,"nodeType":"Block","src":"19296:70:29","statements":[{"expression":{"id":5278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5276,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"19314:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:29","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5279,"nodeType":"ExpressionStatement","src":"19314:10:29"},{"expression":{"id":5282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5280,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"19342:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":5281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:29","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5283,"nodeType":"ExpressionStatement","src":"19342:9:29"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5286,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"19383:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:29","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:29","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5290,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:29","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5301,"nodeType":"IfStatement","src":"19379:90:29","trueBody":{"id":5300,"nodeType":"Block","src":"19400:69:29","statements":[{"expression":{"id":5294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5292,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"19418:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:29","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5295,"nodeType":"ExpressionStatement","src":"19418:9:29"},{"expression":{"id":5298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5296,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"19445:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":5297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5299,"nodeType":"ExpressionStatement","src":"19445:9:29"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5302,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"19486:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:29","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5306,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:29","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5317,"nodeType":"IfStatement","src":"19482:90:29","trueBody":{"id":5316,"nodeType":"Block","src":"19503:69:29","statements":[{"expression":{"id":5310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5308,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"19521:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5311,"nodeType":"ExpressionStatement","src":"19521:9:29"},{"expression":{"id":5314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5312,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"19548:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":5313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5315,"nodeType":"ExpressionStatement","src":"19548:9:29"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5318,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"19589:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:29","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5322,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:29","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5333,"nodeType":"IfStatement","src":"19585:89:29","trueBody":{"id":5332,"nodeType":"Block","src":"19606:68:29","statements":[{"expression":{"id":5326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5324,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"19624:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5327,"nodeType":"ExpressionStatement","src":"19624:9:29"},{"expression":{"id":5330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5328,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"19651:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":5329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:29","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5331,"nodeType":"ExpressionStatement","src":"19651:8:29"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5334,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"19691:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:29","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:29","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5338,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:29","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5349,"nodeType":"IfStatement","src":"19687:87:29","trueBody":{"id":5348,"nodeType":"Block","src":"19707:67:29","statements":[{"expression":{"id":5342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5340,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"19725:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:29","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5343,"nodeType":"ExpressionStatement","src":"19725:8:29"},{"expression":{"id":5346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5344,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"19751:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":5345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:29","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5347,"nodeType":"ExpressionStatement","src":"19751:8:29"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5350,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"19791:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:29","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5354,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5365,"nodeType":"IfStatement","src":"19787:87:29","trueBody":{"id":5364,"nodeType":"Block","src":"19807:67:29","statements":[{"expression":{"id":5358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5356,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"19825:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:29","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5359,"nodeType":"ExpressionStatement","src":"19825:8:29"},{"expression":{"id":5362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5360,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"19851:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":5361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5363,"nodeType":"ExpressionStatement","src":"19851:8:29"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5366,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"19891:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:29","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5370,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:29","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5377,"nodeType":"IfStatement","src":"19887:61:29","trueBody":{"id":5376,"nodeType":"Block","src":"19907:41:29","statements":[{"expression":{"id":5374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5372,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"19925:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":5373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5375,"nodeType":"ExpressionStatement","src":"19925:8:29"}]}},{"expression":{"id":5385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5378,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"20368:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:29","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5380,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"20378:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5382,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5386,"nodeType":"ExpressionStatement","src":"20368:18:29"},{"expression":{"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5387,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"22273:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5388,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"22279:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5389,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"22284:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5390,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"22288:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5393,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5397,"nodeType":"ExpressionStatement","src":"22273:23:29"},{"expression":{"id":5407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5398,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"22382:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5399,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"22388:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5400,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"22393:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5401,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"22397:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5404,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5408,"nodeType":"ExpressionStatement","src":"22382:23:29"},{"expression":{"id":5418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5409,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"22493:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5410,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"22499:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5411,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"22504:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5412,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"22508:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5415,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5419,"nodeType":"ExpressionStatement","src":"22493:23:29"},{"expression":{"id":5429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5420,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"22602:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5421,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"22608:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5422,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"22613:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5423,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"22617:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5426,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5430,"nodeType":"ExpressionStatement","src":"22602:23:29"},{"expression":{"id":5440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5431,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"22712:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5432,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"22718:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5433,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"22723:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5434,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"22727:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5437,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5441,"nodeType":"ExpressionStatement","src":"22712:23:29"},{"expression":{"id":5451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5442,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"22822:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5443,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"22828:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5444,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"22833:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5445,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"22837:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5448,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5452,"nodeType":"ExpressionStatement","src":"22822:23:29"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5453,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"23211:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5456,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"23232:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5457,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"23237:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5458,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"23241:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5454,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7852,"src":"23216:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7852_$","typeString":"type(library SafeCast)"}},"id":5455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7851,"src":"23216:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5254,"id":5463,"nodeType":"Return","src":"23204:40:29"}]}]},"documentation":{"id":5248,"nodeType":"StructuredDocumentation","src":"17783:292:29","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":5466,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:29","nodeType":"FunctionDefinition","parameters":{"id":5251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5250,"mutability":"mutable","name":"a","nameLocation":"18102:1:29","nodeType":"VariableDeclaration","scope":5466,"src":"18094:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5249,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:29"},"returnParameters":{"id":5254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5466,"src":"18128:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5252,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:29"},"scope":6087,"src":"18080:5181:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5499,"nodeType":"Block","src":"23434:171:29","statements":[{"id":5498,"nodeType":"UncheckedBlock","src":"23444:155:29","statements":[{"assignments":[5478],"declarations":[{"constant":false,"id":5478,"mutability":"mutable","name":"result","nameLocation":"23476:6:29","nodeType":"VariableDeclaration","scope":5498,"src":"23468:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5477,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5482,"initialValue":{"arguments":[{"id":5480,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5469,"src":"23490:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5479,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5466,5500],"referencedDeclaration":5466,"src":"23485:4:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:29"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5483,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"23513:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5487,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5472,"src":"23555:8:29","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4493","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4493","typeString":"enum Math.Rounding"}],"id":5486,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"23538:16:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4493_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5489,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"23568:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5490,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"23577:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5492,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5469,"src":"23586:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5484,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7852,"src":"23522:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7852_$","typeString":"type(library SafeCast)"}},"id":5485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7851,"src":"23522:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5476,"id":5497,"nodeType":"Return","src":"23506:82:29"}]}]},"documentation":{"id":5467,"nodeType":"StructuredDocumentation","src":"23267:86:29","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":5500,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:29","nodeType":"FunctionDefinition","parameters":{"id":5473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5469,"mutability":"mutable","name":"a","nameLocation":"23380:1:29","nodeType":"VariableDeclaration","scope":5500,"src":"23372:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5468,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5472,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:29","nodeType":"VariableDeclaration","scope":5500,"src":"23383:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4493","typeString":"enum Math.Rounding"},"typeName":{"id":5471,"nodeType":"UserDefinedTypeName","pathNode":{"id":5470,"name":"Rounding","nameLocations":["23383:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":4493,"src":"23383:8:29"},"referencedDeclaration":4493,"src":"23383:8:29","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4493","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:29"},"returnParameters":{"id":5476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5475,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5500,"src":"23425:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5474,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:29"},"scope":6087,"src":"23358:247:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5695,"nodeType":"Block","src":"23796:981:29","statements":[{"assignments":[5509],"declarations":[{"constant":false,"id":5509,"mutability":"mutable","name":"result","nameLocation":"23814:6:29","nodeType":"VariableDeclaration","scope":5695,"src":"23806:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5508,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5511,"initialValue":{"hexValue":"30","id":5510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:29"},{"assignments":[5513],"declarations":[{"constant":false,"id":5513,"mutability":"mutable","name":"exp","nameLocation":"23842:3:29","nodeType":"VariableDeclaration","scope":5695,"src":"23834:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5512,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5514,"nodeType":"VariableDeclarationStatement","src":"23834:11:29"},{"id":5692,"nodeType":"UncheckedBlock","src":"23855:893:29","statements":[{"expression":{"id":5529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5515,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"23879:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":5516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:29","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"23907:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":5525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:29","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:29","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5523,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:29","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:29","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5517,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7852,"src":"23891:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7852_$","typeString":"type(library SafeCast)"}},"id":5518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7851,"src":"23891:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5530,"nodeType":"ExpressionStatement","src":"23879:51:29"},{"expression":{"id":5533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"23944:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5532,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"23954:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5534,"nodeType":"ExpressionStatement","src":"23944:13:29"},{"expression":{"id":5537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5535,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5509,"src":"23971:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5536,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"23981:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5538,"nodeType":"ExpressionStatement","src":"23971:13:29"},{"expression":{"id":5553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5539,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"23999:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":5540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:29","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5543,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"24026:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":5549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:29","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:29","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5547,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:29","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:29","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5541,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7852,"src":"24010:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7852_$","typeString":"type(library SafeCast)"}},"id":5542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7851,"src":"24010:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5554,"nodeType":"ExpressionStatement","src":"23999:49:29"},{"expression":{"id":5557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5555,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"24062:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5556,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"24072:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5558,"nodeType":"ExpressionStatement","src":"24062:13:29"},{"expression":{"id":5561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5559,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5509,"src":"24089:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5560,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"24099:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5562,"nodeType":"ExpressionStatement","src":"24089:13:29"},{"expression":{"id":5577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5563,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"24117:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":5564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"24144:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":5573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:29","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5571,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:29","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:29","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5565,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7852,"src":"24128:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7852_$","typeString":"type(library SafeCast)"}},"id":5566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7851,"src":"24128:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5578,"nodeType":"ExpressionStatement","src":"24117:49:29"},{"expression":{"id":5581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"24180:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5580,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"24190:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5582,"nodeType":"ExpressionStatement","src":"24180:13:29"},{"expression":{"id":5585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5583,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5509,"src":"24207:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5584,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"24217:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5586,"nodeType":"ExpressionStatement","src":"24207:13:29"},{"expression":{"id":5601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5587,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"24235:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":5588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"24262:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":5597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:29","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5595,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:29","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:29","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5589,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7852,"src":"24246:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7852_$","typeString":"type(library SafeCast)"}},"id":5590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7851,"src":"24246:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5602,"nodeType":"ExpressionStatement","src":"24235:49:29"},{"expression":{"id":5605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"24298:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5604,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"24308:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5606,"nodeType":"ExpressionStatement","src":"24298:13:29"},{"expression":{"id":5609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5607,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5509,"src":"24325:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5608,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"24335:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5610,"nodeType":"ExpressionStatement","src":"24325:13:29"},{"expression":{"id":5625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5611,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"24353:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":5612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:29","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"24379:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":5621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:29","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:29","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5619,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:29","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:29","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5613,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7852,"src":"24363:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7852_$","typeString":"type(library SafeCast)"}},"id":5614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7851,"src":"24363:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5626,"nodeType":"ExpressionStatement","src":"24353:47:29"},{"expression":{"id":5629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"24414:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5628,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"24424:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5630,"nodeType":"ExpressionStatement","src":"24414:13:29"},{"expression":{"id":5633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5631,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5509,"src":"24441:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5632,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"24451:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5634,"nodeType":"ExpressionStatement","src":"24441:13:29"},{"expression":{"id":5649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5635,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"24469:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":5636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:29","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"24495:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":5645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:29","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5643,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:29","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5637,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7852,"src":"24479:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7852_$","typeString":"type(library SafeCast)"}},"id":5638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7851,"src":"24479:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5650,"nodeType":"ExpressionStatement","src":"24469:47:29"},{"expression":{"id":5653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"24530:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5652,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"24540:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5654,"nodeType":"ExpressionStatement","src":"24530:13:29"},{"expression":{"id":5657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5655,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5509,"src":"24557:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5656,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"24567:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5658,"nodeType":"ExpressionStatement","src":"24557:13:29"},{"expression":{"id":5673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5659,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"24585:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"24611:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":5669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:29","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5667,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:29","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:29","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5661,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7852,"src":"24595:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7852_$","typeString":"type(library SafeCast)"}},"id":5662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7851,"src":"24595:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5674,"nodeType":"ExpressionStatement","src":"24585:47:29"},{"expression":{"id":5677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"24646:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5676,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"24656:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5678,"nodeType":"ExpressionStatement","src":"24646:13:29"},{"expression":{"id":5681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5679,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5509,"src":"24673:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5680,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"24683:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5682,"nodeType":"ExpressionStatement","src":"24673:13:29"},{"expression":{"id":5690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5683,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5509,"src":"24701:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"24727:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":5687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5684,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7852,"src":"24711:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7852_$","typeString":"type(library SafeCast)"}},"id":5685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7851,"src":"24711:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5691,"nodeType":"ExpressionStatement","src":"24701:36:29"}]},{"expression":{"id":5693,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5509,"src":"24764:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5507,"id":5694,"nodeType":"Return","src":"24757:13:29"}]},"documentation":{"id":5501,"nodeType":"StructuredDocumentation","src":"23611:119:29","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5696,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:29","nodeType":"FunctionDefinition","parameters":{"id":5504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5503,"mutability":"mutable","name":"value","nameLocation":"23757:5:29","nodeType":"VariableDeclaration","scope":5696,"src":"23749:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5502,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:29"},"returnParameters":{"id":5507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5696,"src":"23787:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5505,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:29"},"scope":6087,"src":"23735:1042:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5729,"nodeType":"Block","src":"25010:175:29","statements":[{"id":5728,"nodeType":"UncheckedBlock","src":"25020:159:29","statements":[{"assignments":[5708],"declarations":[{"constant":false,"id":5708,"mutability":"mutable","name":"result","nameLocation":"25052:6:29","nodeType":"VariableDeclaration","scope":5728,"src":"25044:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5707,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5712,"initialValue":{"arguments":[{"id":5710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5699,"src":"25066:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5709,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5696,5730],"referencedDeclaration":5696,"src":"25061:4:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:29"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5713,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5708,"src":"25093:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5717,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"25135:8:29","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4493","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4493","typeString":"enum Math.Rounding"}],"id":5716,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"25118:16:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4493_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5720,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5708,"src":"25153:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5699,"src":"25162:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5714,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7852,"src":"25102:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7852_$","typeString":"type(library SafeCast)"}},"id":5715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7851,"src":"25102:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5706,"id":5727,"nodeType":"Return","src":"25086:82:29"}]}]},"documentation":{"id":5697,"nodeType":"StructuredDocumentation","src":"24783:142:29","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5730,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:29","nodeType":"FunctionDefinition","parameters":{"id":5703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5699,"mutability":"mutable","name":"value","nameLocation":"24952:5:29","nodeType":"VariableDeclaration","scope":5730,"src":"24944:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5698,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5702,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:29","nodeType":"VariableDeclaration","scope":5730,"src":"24959:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4493","typeString":"enum Math.Rounding"},"typeName":{"id":5701,"nodeType":"UserDefinedTypeName","pathNode":{"id":5700,"name":"Rounding","nameLocations":["24959:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":4493,"src":"24959:8:29"},"referencedDeclaration":4493,"src":"24959:8:29","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4493","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:29"},"returnParameters":{"id":5706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5705,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5730,"src":"25001:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5704,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:29"},"scope":6087,"src":"24930:255:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5858,"nodeType":"Block","src":"25378:854:29","statements":[{"assignments":[5739],"declarations":[{"constant":false,"id":5739,"mutability":"mutable","name":"result","nameLocation":"25396:6:29","nodeType":"VariableDeclaration","scope":5858,"src":"25388:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5738,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5741,"initialValue":{"hexValue":"30","id":5740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:29"},{"id":5855,"nodeType":"UncheckedBlock","src":"25416:787:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"25444:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:29","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:29","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:29","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5758,"nodeType":"IfStatement","src":"25440:103:29","trueBody":{"id":5757,"nodeType":"Block","src":"25463:80:29","statements":[{"expression":{"id":5751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"25481:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:29","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:29","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:29","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5752,"nodeType":"ExpressionStatement","src":"25481:17:29"},{"expression":{"id":5755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5753,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5739,"src":"25516:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:29","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5756,"nodeType":"ExpressionStatement","src":"25516:12:29"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"25560:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:29","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:29","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5775,"nodeType":"IfStatement","src":"25556:103:29","trueBody":{"id":5774,"nodeType":"Block","src":"25579:80:29","statements":[{"expression":{"id":5768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5764,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"25597:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:29","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:29","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5769,"nodeType":"ExpressionStatement","src":"25597:17:29"},{"expression":{"id":5772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5770,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5739,"src":"25632:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5773,"nodeType":"ExpressionStatement","src":"25632:12:29"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"25676:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:29","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:29","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5792,"nodeType":"IfStatement","src":"25672:103:29","trueBody":{"id":5791,"nodeType":"Block","src":"25695:80:29","statements":[{"expression":{"id":5785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"25713:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:29","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:29","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5786,"nodeType":"ExpressionStatement","src":"25713:17:29"},{"expression":{"id":5789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5787,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5739,"src":"25748:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5790,"nodeType":"ExpressionStatement","src":"25748:12:29"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"25792:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:29","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:29","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:29","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5809,"nodeType":"IfStatement","src":"25788:100:29","trueBody":{"id":5808,"nodeType":"Block","src":"25810:78:29","statements":[{"expression":{"id":5802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"25828:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:29","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:29","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:29","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5803,"nodeType":"ExpressionStatement","src":"25828:16:29"},{"expression":{"id":5806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5804,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5739,"src":"25862:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:29","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5807,"nodeType":"ExpressionStatement","src":"25862:11:29"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"25905:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:29","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:29","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:29","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5826,"nodeType":"IfStatement","src":"25901:100:29","trueBody":{"id":5825,"nodeType":"Block","src":"25923:78:29","statements":[{"expression":{"id":5819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"25941:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:29","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:29","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:29","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5820,"nodeType":"ExpressionStatement","src":"25941:16:29"},{"expression":{"id":5823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5821,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5739,"src":"25975:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:29","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5824,"nodeType":"ExpressionStatement","src":"25975:11:29"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"26018:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:29","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:29","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5843,"nodeType":"IfStatement","src":"26014:100:29","trueBody":{"id":5842,"nodeType":"Block","src":"26036:78:29","statements":[{"expression":{"id":5836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"26054:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:29","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:29","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5837,"nodeType":"ExpressionStatement","src":"26054:16:29"},{"expression":{"id":5840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5838,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5739,"src":"26088:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5841,"nodeType":"ExpressionStatement","src":"26088:11:29"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"26131:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:29","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:29","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5854,"nodeType":"IfStatement","src":"26127:66:29","trueBody":{"id":5853,"nodeType":"Block","src":"26149:44:29","statements":[{"expression":{"id":5851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5849,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5739,"src":"26167:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5852,"nodeType":"ExpressionStatement","src":"26167:11:29"}]}}]},{"expression":{"id":5856,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5739,"src":"26219:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5737,"id":5857,"nodeType":"Return","src":"26212:13:29"}]},"documentation":{"id":5731,"nodeType":"StructuredDocumentation","src":"25191:120:29","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5859,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:29","nodeType":"FunctionDefinition","parameters":{"id":5734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5733,"mutability":"mutable","name":"value","nameLocation":"25339:5:29","nodeType":"VariableDeclaration","scope":5859,"src":"25331:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5732,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:29"},"returnParameters":{"id":5737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5736,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5859,"src":"25369:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5735,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:29"},"scope":6087,"src":"25316:916:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5892,"nodeType":"Block","src":"26467:177:29","statements":[{"id":5891,"nodeType":"UncheckedBlock","src":"26477:161:29","statements":[{"assignments":[5871],"declarations":[{"constant":false,"id":5871,"mutability":"mutable","name":"result","nameLocation":"26509:6:29","nodeType":"VariableDeclaration","scope":5891,"src":"26501:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5870,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5875,"initialValue":{"arguments":[{"id":5873,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5862,"src":"26524:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5872,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5859,5893],"referencedDeclaration":5859,"src":"26518:5:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:29"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5876,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5871,"src":"26551:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5880,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5865,"src":"26593:8:29","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4493","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4493","typeString":"enum Math.Rounding"}],"id":5879,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"26576:16:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4493_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:29","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5883,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5871,"src":"26612:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5862,"src":"26621:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5877,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7852,"src":"26560:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7852_$","typeString":"type(library SafeCast)"}},"id":5878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7851,"src":"26560:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5869,"id":5890,"nodeType":"Return","src":"26544:83:29"}]}]},"documentation":{"id":5860,"nodeType":"StructuredDocumentation","src":"26238:143:29","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5893,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:29","nodeType":"FunctionDefinition","parameters":{"id":5866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5862,"mutability":"mutable","name":"value","nameLocation":"26409:5:29","nodeType":"VariableDeclaration","scope":5893,"src":"26401:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5861,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5865,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:29","nodeType":"VariableDeclaration","scope":5893,"src":"26416:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4493","typeString":"enum Math.Rounding"},"typeName":{"id":5864,"nodeType":"UserDefinedTypeName","pathNode":{"id":5863,"name":"Rounding","nameLocations":["26416:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":4493,"src":"26416:8:29"},"referencedDeclaration":4493,"src":"26416:8:29","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4493","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:29"},"returnParameters":{"id":5869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5893,"src":"26458:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5867,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:29"},"scope":6087,"src":"26386:258:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6029,"nodeType":"Block","src":"26964:674:29","statements":[{"assignments":[5902],"declarations":[{"constant":false,"id":5902,"mutability":"mutable","name":"result","nameLocation":"26982:6:29","nodeType":"VariableDeclaration","scope":6029,"src":"26974:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5901,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5904,"initialValue":{"hexValue":"30","id":5903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:29"},{"assignments":[5906],"declarations":[{"constant":false,"id":5906,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:29","nodeType":"VariableDeclaration","scope":6029,"src":"27002:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5905,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5907,"nodeType":"VariableDeclarationStatement","src":"27002:12:29"},{"id":6026,"nodeType":"UncheckedBlock","src":"27024:585:29","statements":[{"expression":{"id":5920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5908,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5906,"src":"27048:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"27071:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":5917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:29","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:29","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5915,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:29","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:29","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5909,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7852,"src":"27055:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7852_$","typeString":"type(library SafeCast)"}},"id":5910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7851,"src":"27055:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5921,"nodeType":"ExpressionStatement","src":"27048:46:29"},{"expression":{"id":5926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"27108:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5923,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5906,"src":"27118:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":5924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:29","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5927,"nodeType":"ExpressionStatement","src":"27108:20:29"},{"expression":{"id":5932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5928,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5902,"src":"27142:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5929,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5906,"src":"27152:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":5930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5933,"nodeType":"ExpressionStatement","src":"27142:19:29"},{"expression":{"id":5946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5934,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5906,"src":"27176:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"27199:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":5943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:29","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:29","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5941,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:29","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:29","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5935,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7852,"src":"27183:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7852_$","typeString":"type(library SafeCast)"}},"id":5936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7851,"src":"27183:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5947,"nodeType":"ExpressionStatement","src":"27176:45:29"},{"expression":{"id":5952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"27235:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5949,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5906,"src":"27245:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":5950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:29","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5953,"nodeType":"ExpressionStatement","src":"27235:19:29"},{"expression":{"id":5958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5954,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5902,"src":"27268:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5955,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5906,"src":"27278:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":5956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:29","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5959,"nodeType":"ExpressionStatement","src":"27268:18:29"},{"expression":{"id":5972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5960,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5906,"src":"27301:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"27324:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":5969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:29","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5967,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:29","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:29","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5961,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7852,"src":"27308:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7852_$","typeString":"type(library SafeCast)"}},"id":5962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7851,"src":"27308:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5973,"nodeType":"ExpressionStatement","src":"27301:45:29"},{"expression":{"id":5978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"27360:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5975,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5906,"src":"27370:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":5976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5979,"nodeType":"ExpressionStatement","src":"27360:19:29"},{"expression":{"id":5984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5980,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5902,"src":"27393:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5981,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5906,"src":"27403:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":5982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:29","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5985,"nodeType":"ExpressionStatement","src":"27393:18:29"},{"expression":{"id":5998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5986,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5906,"src":"27426:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"27449:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":5995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:29","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5993,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:29","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:29","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5987,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7852,"src":"27433:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7852_$","typeString":"type(library SafeCast)"}},"id":5988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7851,"src":"27433:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5999,"nodeType":"ExpressionStatement","src":"27426:45:29"},{"expression":{"id":6004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"27485:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6001,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5906,"src":"27495:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":6002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6005,"nodeType":"ExpressionStatement","src":"27485:19:29"},{"expression":{"id":6010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6006,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5902,"src":"27518:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6007,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5906,"src":"27528:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":6008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6011,"nodeType":"ExpressionStatement","src":"27518:18:29"},{"expression":{"id":6024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6012,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5902,"src":"27551:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"27577:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":6021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":6018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":6017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:29","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:29","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":6019,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:29","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:29","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6013,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7852,"src":"27561:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7852_$","typeString":"type(library SafeCast)"}},"id":6014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7851,"src":"27561:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6025,"nodeType":"ExpressionStatement","src":"27551:47:29"}]},{"expression":{"id":6027,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5902,"src":"27625:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5900,"id":6028,"nodeType":"Return","src":"27618:13:29"}]},"documentation":{"id":5894,"nodeType":"StructuredDocumentation","src":"26650:246:29","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":6030,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:29","nodeType":"FunctionDefinition","parameters":{"id":5897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5896,"mutability":"mutable","name":"value","nameLocation":"26925:5:29","nodeType":"VariableDeclaration","scope":6030,"src":"26917:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5895,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:29"},"returnParameters":{"id":5900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6030,"src":"26955:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5898,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:29"},"scope":6087,"src":"26901:737:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6066,"nodeType":"Block","src":"27875:184:29","statements":[{"id":6065,"nodeType":"UncheckedBlock","src":"27885:168:29","statements":[{"assignments":[6042],"declarations":[{"constant":false,"id":6042,"mutability":"mutable","name":"result","nameLocation":"27917:6:29","nodeType":"VariableDeclaration","scope":6065,"src":"27909:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6041,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6046,"initialValue":{"arguments":[{"id":6044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6033,"src":"27933:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6043,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[6030,6067],"referencedDeclaration":6030,"src":"27926:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:29"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6047,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6042,"src":"27960:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6051,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6036,"src":"28002:8:29","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4493","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4493","typeString":"enum Math.Rounding"}],"id":6050,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"27985:16:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4493_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6054,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6042,"src":"28021:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":6055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:29","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6057,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6033,"src":"28036:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6048,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7852,"src":"27969:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7852_$","typeString":"type(library SafeCast)"}},"id":6049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7851,"src":"27969:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6040,"id":6064,"nodeType":"Return","src":"27953:89:29"}]}]},"documentation":{"id":6031,"nodeType":"StructuredDocumentation","src":"27644:144:29","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6067,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:29","nodeType":"FunctionDefinition","parameters":{"id":6037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6033,"mutability":"mutable","name":"value","nameLocation":"27817:5:29","nodeType":"VariableDeclaration","scope":6067,"src":"27809:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6032,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6036,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:29","nodeType":"VariableDeclaration","scope":6067,"src":"27824:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4493","typeString":"enum Math.Rounding"},"typeName":{"id":6035,"nodeType":"UserDefinedTypeName","pathNode":{"id":6034,"name":"Rounding","nameLocations":["27824:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":4493,"src":"27824:8:29"},"referencedDeclaration":4493,"src":"27824:8:29","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4493","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:29"},"returnParameters":{"id":6040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6039,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6067,"src":"27866:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6038,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:29"},"scope":6087,"src":"27793:266:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6085,"nodeType":"Block","src":"28257:48:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6078,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"28280:8:29","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4493","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4493","typeString":"enum Math.Rounding"}],"id":6077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6076,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:29","typeDescriptions":{}}},"id":6079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":6080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":6082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6075,"id":6084,"nodeType":"Return","src":"28267:31:29"}]},"documentation":{"id":6068,"nodeType":"StructuredDocumentation","src":"28065:113:29","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":6086,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:29","nodeType":"FunctionDefinition","parameters":{"id":6072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6071,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:29","nodeType":"VariableDeclaration","scope":6086,"src":"28209:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4493","typeString":"enum Math.Rounding"},"typeName":{"id":6070,"nodeType":"UserDefinedTypeName","pathNode":{"id":6069,"name":"Rounding","nameLocations":["28209:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":4493,"src":"28209:8:29"},"referencedDeclaration":4493,"src":"28209:8:29","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4493","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:29"},"returnParameters":{"id":6075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6074,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6086,"src":"28251:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6073,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:29"},"scope":6087,"src":"28183:122:29","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6088,"src":"281:28026:29","usedErrors":[],"usedEvents":[]}],"src":"103:28205:29"},"id":29},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[7852]},"id":7853,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6089,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:30"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":6090,"nodeType":"StructuredDocumentation","src":"218:550:30","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":7852,"linearizedBaseContracts":[7852],"name":"SafeCast","nameLocation":"777:8:30","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6091,"nodeType":"StructuredDocumentation","src":"792:68:30","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":6097,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:30","nodeType":"ErrorDefinition","parameters":{"id":6096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6093,"mutability":"mutable","name":"bits","nameLocation":"908:4:30","nodeType":"VariableDeclaration","scope":6097,"src":"902:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6092,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6095,"mutability":"mutable","name":"value","nameLocation":"922:5:30","nodeType":"VariableDeclaration","scope":6097,"src":"914:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6094,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:30"},"src":"865:64:30"},{"documentation":{"id":6098,"nodeType":"StructuredDocumentation","src":"935:75:30","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":6102,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:30","nodeType":"ErrorDefinition","parameters":{"id":6101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6100,"mutability":"mutable","name":"value","nameLocation":"1056:5:30","nodeType":"VariableDeclaration","scope":6102,"src":"1049:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6099,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:30"},"src":"1015:48:30"},{"documentation":{"id":6103,"nodeType":"StructuredDocumentation","src":"1069:67:30","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":6109,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:30","nodeType":"ErrorDefinition","parameters":{"id":6108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6105,"mutability":"mutable","name":"bits","nameLocation":"1183:4:30","nodeType":"VariableDeclaration","scope":6109,"src":"1177:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6104,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6107,"mutability":"mutable","name":"value","nameLocation":"1196:5:30","nodeType":"VariableDeclaration","scope":6109,"src":"1189:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6106,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:30"},"src":"1141:62:30"},{"documentation":{"id":6110,"nodeType":"StructuredDocumentation","src":"1209:75:30","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":6114,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:30","nodeType":"ErrorDefinition","parameters":{"id":6113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6112,"mutability":"mutable","name":"value","nameLocation":"1331:5:30","nodeType":"VariableDeclaration","scope":6114,"src":"1323:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6111,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:30"},"src":"1289:49:30"},{"body":{"id":6141,"nodeType":"Block","src":"1695:152:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"1709:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6124,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":6123,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":6127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:30","memberName":"max","nodeType":"MemberAccess","src":"1717:17:30","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6135,"nodeType":"IfStatement","src":"1705:105:30","trueBody":{"id":6134,"nodeType":"Block","src":"1736:74:30","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:30","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"1793:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6129,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"1757:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6133,"nodeType":"RevertStatement","src":"1750:49:30"}]}},{"expression":{"arguments":[{"id":6138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"1834:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6136,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:30","typeDescriptions":{}}},"id":6139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":6121,"id":6140,"nodeType":"Return","src":"1819:21:30"}]},"documentation":{"id":6115,"nodeType":"StructuredDocumentation","src":"1344:280:30","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6142,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:30","nodeType":"FunctionDefinition","parameters":{"id":6118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6117,"mutability":"mutable","name":"value","nameLocation":"1656:5:30","nodeType":"VariableDeclaration","scope":6142,"src":"1648:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6116,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:30"},"returnParameters":{"id":6121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6142,"src":"1686:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":6119,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:30","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:30"},"scope":7852,"src":"1629:218:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6169,"nodeType":"Block","src":"2204:152:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6150,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6145,"src":"2218:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":6152,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":6151,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":6155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:30","memberName":"max","nodeType":"MemberAccess","src":"2226:17:30","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6163,"nodeType":"IfStatement","src":"2214:105:30","trueBody":{"id":6162,"nodeType":"Block","src":"2245:74:30","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:30","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6145,"src":"2302:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6157,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"2266:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6161,"nodeType":"RevertStatement","src":"2259:49:30"}]}},{"expression":{"arguments":[{"id":6166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6145,"src":"2343:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":6164,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:30","typeDescriptions":{}}},"id":6167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":6149,"id":6168,"nodeType":"Return","src":"2328:21:30"}]},"documentation":{"id":6143,"nodeType":"StructuredDocumentation","src":"1853:280:30","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6170,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:30","nodeType":"FunctionDefinition","parameters":{"id":6146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6145,"mutability":"mutable","name":"value","nameLocation":"2165:5:30","nodeType":"VariableDeclaration","scope":6170,"src":"2157:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6144,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:30"},"returnParameters":{"id":6149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6170,"src":"2195:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":6147,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:30","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:30"},"scope":7852,"src":"2138:218:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6197,"nodeType":"Block","src":"2713:152:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6173,"src":"2727:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6180,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":6179,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":6183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:30","memberName":"max","nodeType":"MemberAccess","src":"2735:17:30","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6191,"nodeType":"IfStatement","src":"2723:105:30","trueBody":{"id":6190,"nodeType":"Block","src":"2754:74:30","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:30","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6173,"src":"2811:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6185,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"2775:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6189,"nodeType":"RevertStatement","src":"2768:49:30"}]}},{"expression":{"arguments":[{"id":6194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6173,"src":"2852:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6192,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:30","typeDescriptions":{}}},"id":6195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":6177,"id":6196,"nodeType":"Return","src":"2837:21:30"}]},"documentation":{"id":6171,"nodeType":"StructuredDocumentation","src":"2362:280:30","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6198,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:30","nodeType":"FunctionDefinition","parameters":{"id":6174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6173,"mutability":"mutable","name":"value","nameLocation":"2674:5:30","nodeType":"VariableDeclaration","scope":6198,"src":"2666:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6172,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:30"},"returnParameters":{"id":6177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6198,"src":"2704:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":6175,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:30","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:30"},"scope":7852,"src":"2647:218:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6225,"nodeType":"Block","src":"3222:152:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"3236:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6208,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":6207,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":6211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:30","memberName":"max","nodeType":"MemberAccess","src":"3244:17:30","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6219,"nodeType":"IfStatement","src":"3232:105:30","trueBody":{"id":6218,"nodeType":"Block","src":"3263:74:30","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:30","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"3320:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6213,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"3284:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6217,"nodeType":"RevertStatement","src":"3277:49:30"}]}},{"expression":{"arguments":[{"id":6222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"3361:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6220,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:30","typeDescriptions":{}}},"id":6223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":6205,"id":6224,"nodeType":"Return","src":"3346:21:30"}]},"documentation":{"id":6199,"nodeType":"StructuredDocumentation","src":"2871:280:30","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6226,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:30","nodeType":"FunctionDefinition","parameters":{"id":6202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6201,"mutability":"mutable","name":"value","nameLocation":"3183:5:30","nodeType":"VariableDeclaration","scope":6226,"src":"3175:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6200,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:30"},"returnParameters":{"id":6205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6226,"src":"3213:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6203,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:30","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:30"},"scope":7852,"src":"3156:218:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6253,"nodeType":"Block","src":"3731:152:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6229,"src":"3745:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6236,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":6235,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":6239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:30","memberName":"max","nodeType":"MemberAccess","src":"3753:17:30","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6247,"nodeType":"IfStatement","src":"3741:105:30","trueBody":{"id":6246,"nodeType":"Block","src":"3772:74:30","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:30","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6229,"src":"3829:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6241,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"3793:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6245,"nodeType":"RevertStatement","src":"3786:49:30"}]}},{"expression":{"arguments":[{"id":6250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6229,"src":"3870:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6248,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:30","typeDescriptions":{}}},"id":6251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":6233,"id":6252,"nodeType":"Return","src":"3855:21:30"}]},"documentation":{"id":6227,"nodeType":"StructuredDocumentation","src":"3380:280:30","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6254,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:30","nodeType":"FunctionDefinition","parameters":{"id":6230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6229,"mutability":"mutable","name":"value","nameLocation":"3692:5:30","nodeType":"VariableDeclaration","scope":6254,"src":"3684:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6228,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:30"},"returnParameters":{"id":6233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6254,"src":"3722:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":6231,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:30","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:30"},"scope":7852,"src":"3665:218:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6281,"nodeType":"Block","src":"4240:152:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6257,"src":"4254:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6264,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":6263,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":6267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:30","memberName":"max","nodeType":"MemberAccess","src":"4262:17:30","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6275,"nodeType":"IfStatement","src":"4250:105:30","trueBody":{"id":6274,"nodeType":"Block","src":"4281:74:30","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:30","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6257,"src":"4338:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6269,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"4302:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6273,"nodeType":"RevertStatement","src":"4295:49:30"}]}},{"expression":{"arguments":[{"id":6278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6257,"src":"4379:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6276,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:30","typeDescriptions":{}}},"id":6279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":6261,"id":6280,"nodeType":"Return","src":"4364:21:30"}]},"documentation":{"id":6255,"nodeType":"StructuredDocumentation","src":"3889:280:30","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6282,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:30","nodeType":"FunctionDefinition","parameters":{"id":6258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6257,"mutability":"mutable","name":"value","nameLocation":"4201:5:30","nodeType":"VariableDeclaration","scope":6282,"src":"4193:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6256,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:30"},"returnParameters":{"id":6261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6282,"src":"4231:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6259,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:30","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:30"},"scope":7852,"src":"4174:218:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6309,"nodeType":"Block","src":"4749:152:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6285,"src":"4763:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6292,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":6291,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":6295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:30","memberName":"max","nodeType":"MemberAccess","src":"4771:17:30","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6303,"nodeType":"IfStatement","src":"4759:105:30","trueBody":{"id":6302,"nodeType":"Block","src":"4790:74:30","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:30","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6285,"src":"4847:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6297,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"4811:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6301,"nodeType":"RevertStatement","src":"4804:49:30"}]}},{"expression":{"arguments":[{"id":6306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6285,"src":"4888:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6304,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:30","typeDescriptions":{}}},"id":6307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":6289,"id":6308,"nodeType":"Return","src":"4873:21:30"}]},"documentation":{"id":6283,"nodeType":"StructuredDocumentation","src":"4398:280:30","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6310,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:30","nodeType":"FunctionDefinition","parameters":{"id":6286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6285,"mutability":"mutable","name":"value","nameLocation":"4710:5:30","nodeType":"VariableDeclaration","scope":6310,"src":"4702:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6284,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:30"},"returnParameters":{"id":6289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6310,"src":"4740:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":6287,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:30","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:30"},"scope":7852,"src":"4683:218:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6337,"nodeType":"Block","src":"5258:152:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"5272:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6320,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":6319,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":6323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:30","memberName":"max","nodeType":"MemberAccess","src":"5280:17:30","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6331,"nodeType":"IfStatement","src":"5268:105:30","trueBody":{"id":6330,"nodeType":"Block","src":"5299:74:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:30","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6327,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"5356:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6325,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"5320:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6329,"nodeType":"RevertStatement","src":"5313:49:30"}]}},{"expression":{"arguments":[{"id":6334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"5397:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6332,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:30","typeDescriptions":{}}},"id":6335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":6317,"id":6336,"nodeType":"Return","src":"5382:21:30"}]},"documentation":{"id":6311,"nodeType":"StructuredDocumentation","src":"4907:280:30","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6338,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:30","nodeType":"FunctionDefinition","parameters":{"id":6314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6313,"mutability":"mutable","name":"value","nameLocation":"5219:5:30","nodeType":"VariableDeclaration","scope":6338,"src":"5211:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6312,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:30"},"returnParameters":{"id":6317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6338,"src":"5249:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":6315,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:30","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:30"},"scope":7852,"src":"5192:218:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6365,"nodeType":"Block","src":"5767:152:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6346,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"5781:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6348,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":6347,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":6351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:30","memberName":"max","nodeType":"MemberAccess","src":"5789:17:30","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6359,"nodeType":"IfStatement","src":"5777:105:30","trueBody":{"id":6358,"nodeType":"Block","src":"5808:74:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:30","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"5865:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6353,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"5829:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6357,"nodeType":"RevertStatement","src":"5822:49:30"}]}},{"expression":{"arguments":[{"id":6362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"5906:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6360,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:30","typeDescriptions":{}}},"id":6363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":6345,"id":6364,"nodeType":"Return","src":"5891:21:30"}]},"documentation":{"id":6339,"nodeType":"StructuredDocumentation","src":"5416:280:30","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6366,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:30","nodeType":"FunctionDefinition","parameters":{"id":6342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6341,"mutability":"mutable","name":"value","nameLocation":"5728:5:30","nodeType":"VariableDeclaration","scope":6366,"src":"5720:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6340,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:30"},"returnParameters":{"id":6345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6366,"src":"5758:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":6343,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:30","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:30"},"scope":7852,"src":"5701:218:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6393,"nodeType":"Block","src":"6276:152:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6369,"src":"6290:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6376,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":6375,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":6379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:30","memberName":"max","nodeType":"MemberAccess","src":"6298:17:30","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6387,"nodeType":"IfStatement","src":"6286:105:30","trueBody":{"id":6386,"nodeType":"Block","src":"6317:74:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:30","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6369,"src":"6374:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6381,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"6338:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6385,"nodeType":"RevertStatement","src":"6331:49:30"}]}},{"expression":{"arguments":[{"id":6390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6369,"src":"6415:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6388,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:30","typeDescriptions":{}}},"id":6391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":6373,"id":6392,"nodeType":"Return","src":"6400:21:30"}]},"documentation":{"id":6367,"nodeType":"StructuredDocumentation","src":"5925:280:30","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6394,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:30","nodeType":"FunctionDefinition","parameters":{"id":6370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6369,"mutability":"mutable","name":"value","nameLocation":"6237:5:30","nodeType":"VariableDeclaration","scope":6394,"src":"6229:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6368,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:30"},"returnParameters":{"id":6373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6394,"src":"6267:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":6371,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:30","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:30"},"scope":7852,"src":"6210:218:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6421,"nodeType":"Block","src":"6785:152:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6402,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"6799:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6404,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":6403,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":6407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:30","memberName":"max","nodeType":"MemberAccess","src":"6807:17:30","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6415,"nodeType":"IfStatement","src":"6795:105:30","trueBody":{"id":6414,"nodeType":"Block","src":"6826:74:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:30","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"6883:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6409,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"6847:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6413,"nodeType":"RevertStatement","src":"6840:49:30"}]}},{"expression":{"arguments":[{"id":6418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"6924:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6416,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:30","typeDescriptions":{}}},"id":6419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":6401,"id":6420,"nodeType":"Return","src":"6909:21:30"}]},"documentation":{"id":6395,"nodeType":"StructuredDocumentation","src":"6434:280:30","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6422,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:30","nodeType":"FunctionDefinition","parameters":{"id":6398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6397,"mutability":"mutable","name":"value","nameLocation":"6746:5:30","nodeType":"VariableDeclaration","scope":6422,"src":"6738:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6396,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:30"},"returnParameters":{"id":6401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6422,"src":"6776:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":6399,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:30","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:30"},"scope":7852,"src":"6719:218:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6449,"nodeType":"Block","src":"7294:152:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"7308:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6432,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":6431,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":6435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:30","memberName":"max","nodeType":"MemberAccess","src":"7316:17:30","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6443,"nodeType":"IfStatement","src":"7304:105:30","trueBody":{"id":6442,"nodeType":"Block","src":"7335:74:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:30","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"7392:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6437,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"7356:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6441,"nodeType":"RevertStatement","src":"7349:49:30"}]}},{"expression":{"arguments":[{"id":6446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"7433:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6444,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:30","typeDescriptions":{}}},"id":6447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":6429,"id":6448,"nodeType":"Return","src":"7418:21:30"}]},"documentation":{"id":6423,"nodeType":"StructuredDocumentation","src":"6943:280:30","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6450,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:30","nodeType":"FunctionDefinition","parameters":{"id":6426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6425,"mutability":"mutable","name":"value","nameLocation":"7255:5:30","nodeType":"VariableDeclaration","scope":6450,"src":"7247:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6424,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:30"},"returnParameters":{"id":6429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6428,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6450,"src":"7285:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6427,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:30","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:30"},"scope":7852,"src":"7228:218:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6477,"nodeType":"Block","src":"7803:152:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6453,"src":"7817:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6460,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":6459,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":6463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:30","memberName":"max","nodeType":"MemberAccess","src":"7825:17:30","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6471,"nodeType":"IfStatement","src":"7813:105:30","trueBody":{"id":6470,"nodeType":"Block","src":"7844:74:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:30","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6467,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6453,"src":"7901:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6465,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"7865:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6469,"nodeType":"RevertStatement","src":"7858:49:30"}]}},{"expression":{"arguments":[{"id":6474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6453,"src":"7942:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6472,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:30","typeDescriptions":{}}},"id":6475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":6457,"id":6476,"nodeType":"Return","src":"7927:21:30"}]},"documentation":{"id":6451,"nodeType":"StructuredDocumentation","src":"7452:280:30","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6478,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:30","nodeType":"FunctionDefinition","parameters":{"id":6454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6453,"mutability":"mutable","name":"value","nameLocation":"7764:5:30","nodeType":"VariableDeclaration","scope":6478,"src":"7756:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6452,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:30"},"returnParameters":{"id":6457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6456,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6478,"src":"7794:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":6455,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:30","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:30"},"scope":7852,"src":"7737:218:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6505,"nodeType":"Block","src":"8312:152:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6486,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6481,"src":"8326:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6488,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":6487,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":6491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:30","memberName":"max","nodeType":"MemberAccess","src":"8334:17:30","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6499,"nodeType":"IfStatement","src":"8322:105:30","trueBody":{"id":6498,"nodeType":"Block","src":"8353:74:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:30","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6481,"src":"8410:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6493,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"8374:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6497,"nodeType":"RevertStatement","src":"8367:49:30"}]}},{"expression":{"arguments":[{"id":6502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6481,"src":"8451:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6500,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:30","typeDescriptions":{}}},"id":6503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":6485,"id":6504,"nodeType":"Return","src":"8436:21:30"}]},"documentation":{"id":6479,"nodeType":"StructuredDocumentation","src":"7961:280:30","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6506,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:30","nodeType":"FunctionDefinition","parameters":{"id":6482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6481,"mutability":"mutable","name":"value","nameLocation":"8273:5:30","nodeType":"VariableDeclaration","scope":6506,"src":"8265:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6480,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:30"},"returnParameters":{"id":6485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6484,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6506,"src":"8303:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":6483,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:30","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:30"},"scope":7852,"src":"8246:218:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6533,"nodeType":"Block","src":"8821:152:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6514,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6509,"src":"8835:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6516,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":6515,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":6519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:30","memberName":"max","nodeType":"MemberAccess","src":"8843:17:30","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6527,"nodeType":"IfStatement","src":"8831:105:30","trueBody":{"id":6526,"nodeType":"Block","src":"8862:74:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:30","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6509,"src":"8919:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6521,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"8883:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6525,"nodeType":"RevertStatement","src":"8876:49:30"}]}},{"expression":{"arguments":[{"id":6530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6509,"src":"8960:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6528,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:30","typeDescriptions":{}}},"id":6531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":6513,"id":6532,"nodeType":"Return","src":"8945:21:30"}]},"documentation":{"id":6507,"nodeType":"StructuredDocumentation","src":"8470:280:30","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6534,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:30","nodeType":"FunctionDefinition","parameters":{"id":6510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6509,"mutability":"mutable","name":"value","nameLocation":"8782:5:30","nodeType":"VariableDeclaration","scope":6534,"src":"8774:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6508,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:30"},"returnParameters":{"id":6513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6534,"src":"8812:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":6511,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:30","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:30"},"scope":7852,"src":"8755:218:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6561,"nodeType":"Block","src":"9330:152:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6542,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6537,"src":"9344:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6544,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":6543,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":6547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:30","memberName":"max","nodeType":"MemberAccess","src":"9352:17:30","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6555,"nodeType":"IfStatement","src":"9340:105:30","trueBody":{"id":6554,"nodeType":"Block","src":"9371:74:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6537,"src":"9428:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6549,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"9392:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6553,"nodeType":"RevertStatement","src":"9385:49:30"}]}},{"expression":{"arguments":[{"id":6558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6537,"src":"9469:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6556,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:30","typeDescriptions":{}}},"id":6559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6541,"id":6560,"nodeType":"Return","src":"9454:21:30"}]},"documentation":{"id":6535,"nodeType":"StructuredDocumentation","src":"8979:280:30","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6562,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:30","nodeType":"FunctionDefinition","parameters":{"id":6538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6537,"mutability":"mutable","name":"value","nameLocation":"9291:5:30","nodeType":"VariableDeclaration","scope":6562,"src":"9283:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6536,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:30"},"returnParameters":{"id":6541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6540,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6562,"src":"9321:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6539,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:30","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:30"},"scope":7852,"src":"9264:218:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6589,"nodeType":"Block","src":"9839:152:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6565,"src":"9853:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6572,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":6571,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":6575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:30","memberName":"max","nodeType":"MemberAccess","src":"9861:17:30","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6583,"nodeType":"IfStatement","src":"9849:105:30","trueBody":{"id":6582,"nodeType":"Block","src":"9880:74:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:30","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6565,"src":"9937:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6577,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"9901:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6581,"nodeType":"RevertStatement","src":"9894:49:30"}]}},{"expression":{"arguments":[{"id":6586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6565,"src":"9978:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6584,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:30","typeDescriptions":{}}},"id":6587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":6569,"id":6588,"nodeType":"Return","src":"9963:21:30"}]},"documentation":{"id":6563,"nodeType":"StructuredDocumentation","src":"9488:280:30","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6590,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:30","nodeType":"FunctionDefinition","parameters":{"id":6566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6565,"mutability":"mutable","name":"value","nameLocation":"9800:5:30","nodeType":"VariableDeclaration","scope":6590,"src":"9792:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6564,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:30"},"returnParameters":{"id":6569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6568,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6590,"src":"9830:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":6567,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:30","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:30"},"scope":7852,"src":"9773:218:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6617,"nodeType":"Block","src":"10348:152:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6593,"src":"10362:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6600,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":6599,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":6603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:30","memberName":"max","nodeType":"MemberAccess","src":"10370:17:30","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6611,"nodeType":"IfStatement","src":"10358:105:30","trueBody":{"id":6610,"nodeType":"Block","src":"10389:74:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:30","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6593,"src":"10446:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6605,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"10410:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6609,"nodeType":"RevertStatement","src":"10403:49:30"}]}},{"expression":{"arguments":[{"id":6614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6593,"src":"10487:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6612,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:30","typeDescriptions":{}}},"id":6615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":6597,"id":6616,"nodeType":"Return","src":"10472:21:30"}]},"documentation":{"id":6591,"nodeType":"StructuredDocumentation","src":"9997:280:30","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6618,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:30","nodeType":"FunctionDefinition","parameters":{"id":6594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6593,"mutability":"mutable","name":"value","nameLocation":"10309:5:30","nodeType":"VariableDeclaration","scope":6618,"src":"10301:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6592,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:30"},"returnParameters":{"id":6597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6596,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6618,"src":"10339:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":6595,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:30","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:30"},"scope":7852,"src":"10282:218:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6645,"nodeType":"Block","src":"10857:152:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6621,"src":"10871:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6628,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":6627,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":6631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:30","memberName":"max","nodeType":"MemberAccess","src":"10879:17:30","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6639,"nodeType":"IfStatement","src":"10867:105:30","trueBody":{"id":6638,"nodeType":"Block","src":"10898:74:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:30","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6621,"src":"10955:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6633,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"10919:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6637,"nodeType":"RevertStatement","src":"10912:49:30"}]}},{"expression":{"arguments":[{"id":6642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6621,"src":"10996:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6640,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:30","typeDescriptions":{}}},"id":6643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":6625,"id":6644,"nodeType":"Return","src":"10981:21:30"}]},"documentation":{"id":6619,"nodeType":"StructuredDocumentation","src":"10506:280:30","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6646,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:30","nodeType":"FunctionDefinition","parameters":{"id":6622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6621,"mutability":"mutable","name":"value","nameLocation":"10818:5:30","nodeType":"VariableDeclaration","scope":6646,"src":"10810:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6620,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:30"},"returnParameters":{"id":6625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6624,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6646,"src":"10848:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":6623,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:30","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:30"},"scope":7852,"src":"10791:218:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6673,"nodeType":"Block","src":"11360:149:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"11374:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6656,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":6655,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":6659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:30","memberName":"max","nodeType":"MemberAccess","src":"11382:16:30","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6667,"nodeType":"IfStatement","src":"11370:103:30","trueBody":{"id":6666,"nodeType":"Block","src":"11400:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:30","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"11456:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6661,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"11421:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6665,"nodeType":"RevertStatement","src":"11414:48:30"}]}},{"expression":{"arguments":[{"id":6670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"11496:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6668,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:30","typeDescriptions":{}}},"id":6671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6653,"id":6672,"nodeType":"Return","src":"11482:20:30"}]},"documentation":{"id":6647,"nodeType":"StructuredDocumentation","src":"11015:276:30","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6674,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:30","nodeType":"FunctionDefinition","parameters":{"id":6650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6649,"mutability":"mutable","name":"value","nameLocation":"11322:5:30","nodeType":"VariableDeclaration","scope":6674,"src":"11314:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6648,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:30"},"returnParameters":{"id":6653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6674,"src":"11352:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6651,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:30","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:30"},"scope":7852,"src":"11296:213:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6701,"nodeType":"Block","src":"11860:149:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6677,"src":"11874:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6684,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":6683,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":6687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:30","memberName":"max","nodeType":"MemberAccess","src":"11882:16:30","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6695,"nodeType":"IfStatement","src":"11870:103:30","trueBody":{"id":6694,"nodeType":"Block","src":"11900:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:30","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6677,"src":"11956:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6689,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"11921:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6693,"nodeType":"RevertStatement","src":"11914:48:30"}]}},{"expression":{"arguments":[{"id":6698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6677,"src":"11996:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6696,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:30","typeDescriptions":{}}},"id":6699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":6681,"id":6700,"nodeType":"Return","src":"11982:20:30"}]},"documentation":{"id":6675,"nodeType":"StructuredDocumentation","src":"11515:276:30","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6702,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:30","nodeType":"FunctionDefinition","parameters":{"id":6678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6677,"mutability":"mutable","name":"value","nameLocation":"11822:5:30","nodeType":"VariableDeclaration","scope":6702,"src":"11814:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6676,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:30"},"returnParameters":{"id":6681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6702,"src":"11852:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":6679,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:30","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:30"},"scope":7852,"src":"11796:213:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6729,"nodeType":"Block","src":"12360:149:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6705,"src":"12374:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6712,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":6711,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":6715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:30","memberName":"max","nodeType":"MemberAccess","src":"12382:16:30","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6723,"nodeType":"IfStatement","src":"12370:103:30","trueBody":{"id":6722,"nodeType":"Block","src":"12400:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:30","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6705,"src":"12456:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6717,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"12421:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6721,"nodeType":"RevertStatement","src":"12414:48:30"}]}},{"expression":{"arguments":[{"id":6726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6705,"src":"12496:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6724,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:30","typeDescriptions":{}}},"id":6727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":6709,"id":6728,"nodeType":"Return","src":"12482:20:30"}]},"documentation":{"id":6703,"nodeType":"StructuredDocumentation","src":"12015:276:30","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6730,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:30","nodeType":"FunctionDefinition","parameters":{"id":6706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6705,"mutability":"mutable","name":"value","nameLocation":"12322:5:30","nodeType":"VariableDeclaration","scope":6730,"src":"12314:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6704,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:30"},"returnParameters":{"id":6709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6730,"src":"12352:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":6707,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:30","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:30"},"scope":7852,"src":"12296:213:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6757,"nodeType":"Block","src":"12860:149:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6733,"src":"12874:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6740,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":6739,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":6743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:30","memberName":"max","nodeType":"MemberAccess","src":"12882:16:30","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6751,"nodeType":"IfStatement","src":"12870:103:30","trueBody":{"id":6750,"nodeType":"Block","src":"12900:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:30","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6733,"src":"12956:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6745,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"12921:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6749,"nodeType":"RevertStatement","src":"12914:48:30"}]}},{"expression":{"arguments":[{"id":6754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6733,"src":"12996:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6752,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:30","typeDescriptions":{}}},"id":6755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":6737,"id":6756,"nodeType":"Return","src":"12982:20:30"}]},"documentation":{"id":6731,"nodeType":"StructuredDocumentation","src":"12515:276:30","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6758,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:30","nodeType":"FunctionDefinition","parameters":{"id":6734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6733,"mutability":"mutable","name":"value","nameLocation":"12822:5:30","nodeType":"VariableDeclaration","scope":6758,"src":"12814:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6732,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:30"},"returnParameters":{"id":6737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6736,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6758,"src":"12852:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":6735,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:30","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:30"},"scope":7852,"src":"12796:213:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6785,"nodeType":"Block","src":"13360:149:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6761,"src":"13374:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6768,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":6767,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":6771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:30","memberName":"max","nodeType":"MemberAccess","src":"13382:16:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6779,"nodeType":"IfStatement","src":"13370:103:30","trueBody":{"id":6778,"nodeType":"Block","src":"13400:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6761,"src":"13456:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6773,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"13421:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6777,"nodeType":"RevertStatement","src":"13414:48:30"}]}},{"expression":{"arguments":[{"id":6782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6761,"src":"13496:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6780,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:30","typeDescriptions":{}}},"id":6783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":6765,"id":6784,"nodeType":"Return","src":"13482:20:30"}]},"documentation":{"id":6759,"nodeType":"StructuredDocumentation","src":"13015:276:30","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6786,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:30","nodeType":"FunctionDefinition","parameters":{"id":6762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6761,"mutability":"mutable","name":"value","nameLocation":"13322:5:30","nodeType":"VariableDeclaration","scope":6786,"src":"13314:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6760,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:30"},"returnParameters":{"id":6765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6786,"src":"13352:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6763,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:30"},"scope":7852,"src":"13296:213:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6813,"nodeType":"Block","src":"13860:149:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6794,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6789,"src":"13874:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6796,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":6795,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":6799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:30","memberName":"max","nodeType":"MemberAccess","src":"13882:16:30","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6807,"nodeType":"IfStatement","src":"13870:103:30","trueBody":{"id":6806,"nodeType":"Block","src":"13900:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:30","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6789,"src":"13956:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6801,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"13921:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6805,"nodeType":"RevertStatement","src":"13914:48:30"}]}},{"expression":{"arguments":[{"id":6810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6789,"src":"13996:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6808,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:30","typeDescriptions":{}}},"id":6811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":6793,"id":6812,"nodeType":"Return","src":"13982:20:30"}]},"documentation":{"id":6787,"nodeType":"StructuredDocumentation","src":"13515:276:30","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6814,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:30","nodeType":"FunctionDefinition","parameters":{"id":6790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6789,"mutability":"mutable","name":"value","nameLocation":"13822:5:30","nodeType":"VariableDeclaration","scope":6814,"src":"13814:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6788,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:30"},"returnParameters":{"id":6793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6814,"src":"13852:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":6791,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:30","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:30"},"scope":7852,"src":"13796:213:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6841,"nodeType":"Block","src":"14360:149:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6817,"src":"14374:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6824,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":6823,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":6827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:30","memberName":"max","nodeType":"MemberAccess","src":"14382:16:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6835,"nodeType":"IfStatement","src":"14370:103:30","trueBody":{"id":6834,"nodeType":"Block","src":"14400:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:30","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6817,"src":"14456:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6829,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"14421:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6833,"nodeType":"RevertStatement","src":"14414:48:30"}]}},{"expression":{"arguments":[{"id":6838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6817,"src":"14496:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6836,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:30","typeDescriptions":{}}},"id":6839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":6821,"id":6840,"nodeType":"Return","src":"14482:20:30"}]},"documentation":{"id":6815,"nodeType":"StructuredDocumentation","src":"14015:276:30","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6842,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:30","nodeType":"FunctionDefinition","parameters":{"id":6818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6817,"mutability":"mutable","name":"value","nameLocation":"14322:5:30","nodeType":"VariableDeclaration","scope":6842,"src":"14314:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6816,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:30"},"returnParameters":{"id":6821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6842,"src":"14352:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6819,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:30"},"scope":7852,"src":"14296:213:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6869,"nodeType":"Block","src":"14860:149:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6845,"src":"14874:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6852,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":6851,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":6855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:30","memberName":"max","nodeType":"MemberAccess","src":"14882:16:30","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6863,"nodeType":"IfStatement","src":"14870:103:30","trueBody":{"id":6862,"nodeType":"Block","src":"14900:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:30","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6845,"src":"14956:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6857,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"14921:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6861,"nodeType":"RevertStatement","src":"14914:48:30"}]}},{"expression":{"arguments":[{"id":6866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6845,"src":"14996:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6864,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:30","typeDescriptions":{}}},"id":6867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":6849,"id":6868,"nodeType":"Return","src":"14982:20:30"}]},"documentation":{"id":6843,"nodeType":"StructuredDocumentation","src":"14515:276:30","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6870,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:30","nodeType":"FunctionDefinition","parameters":{"id":6846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6845,"mutability":"mutable","name":"value","nameLocation":"14822:5:30","nodeType":"VariableDeclaration","scope":6870,"src":"14814:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6844,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:30"},"returnParameters":{"id":6849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6870,"src":"14852:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6847,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:30","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:30"},"scope":7852,"src":"14796:213:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6897,"nodeType":"Block","src":"15360:149:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6878,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6873,"src":"15374:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6880,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6879,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:30","memberName":"max","nodeType":"MemberAccess","src":"15382:16:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6891,"nodeType":"IfStatement","src":"15370:103:30","trueBody":{"id":6890,"nodeType":"Block","src":"15400:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:30","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6873,"src":"15456:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6885,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"15421:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6889,"nodeType":"RevertStatement","src":"15414:48:30"}]}},{"expression":{"arguments":[{"id":6894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6873,"src":"15496:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6892,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:30","typeDescriptions":{}}},"id":6895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6877,"id":6896,"nodeType":"Return","src":"15482:20:30"}]},"documentation":{"id":6871,"nodeType":"StructuredDocumentation","src":"15015:276:30","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6898,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:30","nodeType":"FunctionDefinition","parameters":{"id":6874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6873,"mutability":"mutable","name":"value","nameLocation":"15322:5:30","nodeType":"VariableDeclaration","scope":6898,"src":"15314:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6872,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:30"},"returnParameters":{"id":6877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6898,"src":"15352:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6875,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:30"},"scope":7852,"src":"15296:213:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6925,"nodeType":"Block","src":"15860:149:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"15874:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6908,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6907,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:30","memberName":"max","nodeType":"MemberAccess","src":"15882:16:30","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6919,"nodeType":"IfStatement","src":"15870:103:30","trueBody":{"id":6918,"nodeType":"Block","src":"15900:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:30","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"15956:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6913,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"15921:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6917,"nodeType":"RevertStatement","src":"15914:48:30"}]}},{"expression":{"arguments":[{"id":6922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"15996:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6920,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:30","typeDescriptions":{}}},"id":6923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6905,"id":6924,"nodeType":"Return","src":"15982:20:30"}]},"documentation":{"id":6899,"nodeType":"StructuredDocumentation","src":"15515:276:30","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6926,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:30","nodeType":"FunctionDefinition","parameters":{"id":6902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6901,"mutability":"mutable","name":"value","nameLocation":"15822:5:30","nodeType":"VariableDeclaration","scope":6926,"src":"15814:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6900,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:30"},"returnParameters":{"id":6905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6926,"src":"15852:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6903,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:30","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:30"},"scope":7852,"src":"15796:213:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6953,"nodeType":"Block","src":"16360:149:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6929,"src":"16374:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6936,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6935,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:30","memberName":"max","nodeType":"MemberAccess","src":"16382:16:30","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6947,"nodeType":"IfStatement","src":"16370:103:30","trueBody":{"id":6946,"nodeType":"Block","src":"16400:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:30","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6929,"src":"16456:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6941,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"16421:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6945,"nodeType":"RevertStatement","src":"16414:48:30"}]}},{"expression":{"arguments":[{"id":6950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6929,"src":"16496:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6948,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:30","typeDescriptions":{}}},"id":6951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6933,"id":6952,"nodeType":"Return","src":"16482:20:30"}]},"documentation":{"id":6927,"nodeType":"StructuredDocumentation","src":"16015:276:30","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6954,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:30","nodeType":"FunctionDefinition","parameters":{"id":6930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6929,"mutability":"mutable","name":"value","nameLocation":"16322:5:30","nodeType":"VariableDeclaration","scope":6954,"src":"16314:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6928,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:30"},"returnParameters":{"id":6933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6932,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6954,"src":"16352:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6931,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:30","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:30"},"scope":7852,"src":"16296:213:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6981,"nodeType":"Block","src":"16854:146:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6957,"src":"16868:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6964,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6963,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:30","memberName":"max","nodeType":"MemberAccess","src":"16876:15:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6975,"nodeType":"IfStatement","src":"16864:101:30","trueBody":{"id":6974,"nodeType":"Block","src":"16893:72:30","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:30","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6957,"src":"16948:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6969,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"16914:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6973,"nodeType":"RevertStatement","src":"16907:47:30"}]}},{"expression":{"arguments":[{"id":6978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6957,"src":"16987:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6976,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:30","typeDescriptions":{}}},"id":6979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6961,"id":6980,"nodeType":"Return","src":"16974:19:30"}]},"documentation":{"id":6955,"nodeType":"StructuredDocumentation","src":"16515:272:30","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6982,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:30","nodeType":"FunctionDefinition","parameters":{"id":6958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6957,"mutability":"mutable","name":"value","nameLocation":"16817:5:30","nodeType":"VariableDeclaration","scope":6982,"src":"16809:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6956,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:30"},"returnParameters":{"id":6961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6960,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6982,"src":"16847:5:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6959,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:30"},"scope":7852,"src":"16792:208:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7004,"nodeType":"Block","src":"17236:128:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"17250:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6998,"nodeType":"IfStatement","src":"17246:81:30","trueBody":{"id":6997,"nodeType":"Block","src":"17261:66:30","statements":[{"errorCall":{"arguments":[{"id":6994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"17310:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6993,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6102,"src":"17282:27:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":6995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6996,"nodeType":"RevertStatement","src":"17275:41:30"}]}},{"expression":{"arguments":[{"id":7001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"17351:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6999,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:30","typeDescriptions":{}}},"id":7002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6989,"id":7003,"nodeType":"Return","src":"17336:21:30"}]},"documentation":{"id":6983,"nodeType":"StructuredDocumentation","src":"17006:160:30","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":7005,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:30","nodeType":"FunctionDefinition","parameters":{"id":6986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6985,"mutability":"mutable","name":"value","nameLocation":"17197:5:30","nodeType":"VariableDeclaration","scope":7005,"src":"17190:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6984,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:30"},"returnParameters":{"id":6989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6988,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7005,"src":"17227:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6987,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:30"},"scope":7852,"src":"17171:193:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7030,"nodeType":"Block","src":"17761:150:30","statements":[{"expression":{"id":7018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7013,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7011,"src":"17771:10:30","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7016,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7008,"src":"17791:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":7014,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:30","typeDescriptions":{}}},"id":7017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:30","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":7019,"nodeType":"ExpressionStatement","src":"17771:26:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7020,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7011,"src":"17811:10:30","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7008,"src":"17825:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7029,"nodeType":"IfStatement","src":"17807:98:30","trueBody":{"id":7028,"nodeType":"Block","src":"17832:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":7024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:30","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":7025,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7008,"src":"17888:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7023,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"17853:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7027,"nodeType":"RevertStatement","src":"17846:48:30"}]}}]},"documentation":{"id":7006,"nodeType":"StructuredDocumentation","src":"17370:312:30","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":7031,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:30","nodeType":"FunctionDefinition","parameters":{"id":7009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7008,"mutability":"mutable","name":"value","nameLocation":"17712:5:30","nodeType":"VariableDeclaration","scope":7031,"src":"17705:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7007,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:30"},"returnParameters":{"id":7012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7011,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:30","nodeType":"VariableDeclaration","scope":7031,"src":"17742:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":7010,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:30","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:30"},"scope":7852,"src":"17687:224:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7056,"nodeType":"Block","src":"18308:150:30","statements":[{"expression":{"id":7044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7039,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7037,"src":"18318:10:30","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"18338:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":7040,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:30","typeDescriptions":{}}},"id":7043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:30","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":7045,"nodeType":"ExpressionStatement","src":"18318:26:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7046,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7037,"src":"18358:10:30","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"18372:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7055,"nodeType":"IfStatement","src":"18354:98:30","trueBody":{"id":7054,"nodeType":"Block","src":"18379:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":7050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:30","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":7051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"18435:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7049,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"18400:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7053,"nodeType":"RevertStatement","src":"18393:48:30"}]}}]},"documentation":{"id":7032,"nodeType":"StructuredDocumentation","src":"17917:312:30","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":7057,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:30","nodeType":"FunctionDefinition","parameters":{"id":7035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7034,"mutability":"mutable","name":"value","nameLocation":"18259:5:30","nodeType":"VariableDeclaration","scope":7057,"src":"18252:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7033,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:30"},"returnParameters":{"id":7038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7037,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:30","nodeType":"VariableDeclaration","scope":7057,"src":"18289:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":7036,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:30","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:30"},"scope":7852,"src":"18234:224:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7082,"nodeType":"Block","src":"18855:150:30","statements":[{"expression":{"id":7070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7065,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7063,"src":"18865:10:30","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"18885:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":7066,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:30","typeDescriptions":{}}},"id":7069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:30","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":7071,"nodeType":"ExpressionStatement","src":"18865:26:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7072,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7063,"src":"18905:10:30","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"18919:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7081,"nodeType":"IfStatement","src":"18901:98:30","trueBody":{"id":7080,"nodeType":"Block","src":"18926:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":7076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:30","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":7077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"18982:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7075,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"18947:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7079,"nodeType":"RevertStatement","src":"18940:48:30"}]}}]},"documentation":{"id":7058,"nodeType":"StructuredDocumentation","src":"18464:312:30","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":7083,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:30","nodeType":"FunctionDefinition","parameters":{"id":7061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7060,"mutability":"mutable","name":"value","nameLocation":"18806:5:30","nodeType":"VariableDeclaration","scope":7083,"src":"18799:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7059,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:30"},"returnParameters":{"id":7064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7063,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:30","nodeType":"VariableDeclaration","scope":7083,"src":"18836:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":7062,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:30","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:30"},"scope":7852,"src":"18781:224:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7108,"nodeType":"Block","src":"19402:150:30","statements":[{"expression":{"id":7096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7091,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7089,"src":"19412:10:30","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7094,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7086,"src":"19432:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":7092,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:30","typeDescriptions":{}}},"id":7095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:30","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":7097,"nodeType":"ExpressionStatement","src":"19412:26:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7098,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7089,"src":"19452:10:30","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7086,"src":"19466:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7107,"nodeType":"IfStatement","src":"19448:98:30","trueBody":{"id":7106,"nodeType":"Block","src":"19473:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":7102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:30","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":7103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7086,"src":"19529:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7101,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"19494:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7105,"nodeType":"RevertStatement","src":"19487:48:30"}]}}]},"documentation":{"id":7084,"nodeType":"StructuredDocumentation","src":"19011:312:30","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":7109,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:30","nodeType":"FunctionDefinition","parameters":{"id":7087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7086,"mutability":"mutable","name":"value","nameLocation":"19353:5:30","nodeType":"VariableDeclaration","scope":7109,"src":"19346:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7085,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:30"},"returnParameters":{"id":7090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7089,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:30","nodeType":"VariableDeclaration","scope":7109,"src":"19383:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":7088,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:30","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:30"},"scope":7852,"src":"19328:224:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7134,"nodeType":"Block","src":"19949:150:30","statements":[{"expression":{"id":7122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7117,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7115,"src":"19959:10:30","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7112,"src":"19979:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":7118,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:30","typeDescriptions":{}}},"id":7121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:30","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":7123,"nodeType":"ExpressionStatement","src":"19959:26:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7124,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7115,"src":"19999:10:30","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7112,"src":"20013:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7133,"nodeType":"IfStatement","src":"19995:98:30","trueBody":{"id":7132,"nodeType":"Block","src":"20020:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":7128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:30","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":7129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7112,"src":"20076:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7127,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"20041:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7131,"nodeType":"RevertStatement","src":"20034:48:30"}]}}]},"documentation":{"id":7110,"nodeType":"StructuredDocumentation","src":"19558:312:30","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":7135,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:30","nodeType":"FunctionDefinition","parameters":{"id":7113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7112,"mutability":"mutable","name":"value","nameLocation":"19900:5:30","nodeType":"VariableDeclaration","scope":7135,"src":"19893:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7111,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:30"},"returnParameters":{"id":7116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7115,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:30","nodeType":"VariableDeclaration","scope":7135,"src":"19930:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":7114,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:30","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:30"},"scope":7852,"src":"19875:224:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7160,"nodeType":"Block","src":"20496:150:30","statements":[{"expression":{"id":7148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7143,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7141,"src":"20506:10:30","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7138,"src":"20526:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":7144,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:30","typeDescriptions":{}}},"id":7147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:30","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":7149,"nodeType":"ExpressionStatement","src":"20506:26:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7150,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7141,"src":"20546:10:30","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7138,"src":"20560:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7159,"nodeType":"IfStatement","src":"20542:98:30","trueBody":{"id":7158,"nodeType":"Block","src":"20567:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":7154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:30","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":7155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7138,"src":"20623:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7153,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"20588:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7157,"nodeType":"RevertStatement","src":"20581:48:30"}]}}]},"documentation":{"id":7136,"nodeType":"StructuredDocumentation","src":"20105:312:30","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":7161,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:30","nodeType":"FunctionDefinition","parameters":{"id":7139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7138,"mutability":"mutable","name":"value","nameLocation":"20447:5:30","nodeType":"VariableDeclaration","scope":7161,"src":"20440:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7137,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:30"},"returnParameters":{"id":7142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7141,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:30","nodeType":"VariableDeclaration","scope":7161,"src":"20477:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":7140,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:30","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:30"},"scope":7852,"src":"20422:224:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7186,"nodeType":"Block","src":"21043:150:30","statements":[{"expression":{"id":7174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7169,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7167,"src":"21053:10:30","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7164,"src":"21073:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":7170,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:30","typeDescriptions":{}}},"id":7173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:30","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":7175,"nodeType":"ExpressionStatement","src":"21053:26:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7176,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7167,"src":"21093:10:30","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7164,"src":"21107:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7185,"nodeType":"IfStatement","src":"21089:98:30","trueBody":{"id":7184,"nodeType":"Block","src":"21114:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":7180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:30","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":7181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7164,"src":"21170:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7179,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"21135:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7183,"nodeType":"RevertStatement","src":"21128:48:30"}]}}]},"documentation":{"id":7162,"nodeType":"StructuredDocumentation","src":"20652:312:30","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":7187,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:30","nodeType":"FunctionDefinition","parameters":{"id":7165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7164,"mutability":"mutable","name":"value","nameLocation":"20994:5:30","nodeType":"VariableDeclaration","scope":7187,"src":"20987:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7163,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:30"},"returnParameters":{"id":7168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7167,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:30","nodeType":"VariableDeclaration","scope":7187,"src":"21024:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":7166,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:30","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:30"},"scope":7852,"src":"20969:224:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7212,"nodeType":"Block","src":"21590:150:30","statements":[{"expression":{"id":7200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7195,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7193,"src":"21600:10:30","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7190,"src":"21620:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":7196,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:30","typeDescriptions":{}}},"id":7199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:30","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":7201,"nodeType":"ExpressionStatement","src":"21600:26:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7202,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7193,"src":"21640:10:30","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7190,"src":"21654:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7211,"nodeType":"IfStatement","src":"21636:98:30","trueBody":{"id":7210,"nodeType":"Block","src":"21661:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":7206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:30","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":7207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7190,"src":"21717:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7205,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"21682:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7209,"nodeType":"RevertStatement","src":"21675:48:30"}]}}]},"documentation":{"id":7188,"nodeType":"StructuredDocumentation","src":"21199:312:30","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":7213,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:30","nodeType":"FunctionDefinition","parameters":{"id":7191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7190,"mutability":"mutable","name":"value","nameLocation":"21541:5:30","nodeType":"VariableDeclaration","scope":7213,"src":"21534:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7189,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:30"},"returnParameters":{"id":7194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7193,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:30","nodeType":"VariableDeclaration","scope":7213,"src":"21571:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":7192,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:30","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:30"},"scope":7852,"src":"21516:224:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7238,"nodeType":"Block","src":"22137:150:30","statements":[{"expression":{"id":7226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7221,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7219,"src":"22147:10:30","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7216,"src":"22167:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":7222,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:30","typeDescriptions":{}}},"id":7225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:30","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":7227,"nodeType":"ExpressionStatement","src":"22147:26:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7228,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7219,"src":"22187:10:30","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7216,"src":"22201:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7237,"nodeType":"IfStatement","src":"22183:98:30","trueBody":{"id":7236,"nodeType":"Block","src":"22208:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":7232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:30","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":7233,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7216,"src":"22264:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7231,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"22229:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7235,"nodeType":"RevertStatement","src":"22222:48:30"}]}}]},"documentation":{"id":7214,"nodeType":"StructuredDocumentation","src":"21746:312:30","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":7239,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:30","nodeType":"FunctionDefinition","parameters":{"id":7217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7216,"mutability":"mutable","name":"value","nameLocation":"22088:5:30","nodeType":"VariableDeclaration","scope":7239,"src":"22081:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7215,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:30"},"returnParameters":{"id":7220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7219,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:30","nodeType":"VariableDeclaration","scope":7239,"src":"22118:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":7218,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:30","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:30"},"scope":7852,"src":"22063:224:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7264,"nodeType":"Block","src":"22684:150:30","statements":[{"expression":{"id":7252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7247,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"22694:10:30","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7242,"src":"22714:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":7248,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:30","typeDescriptions":{}}},"id":7251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:30","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":7253,"nodeType":"ExpressionStatement","src":"22694:26:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7254,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"22734:10:30","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7242,"src":"22748:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7263,"nodeType":"IfStatement","src":"22730:98:30","trueBody":{"id":7262,"nodeType":"Block","src":"22755:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":7258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:30","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":7259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7242,"src":"22811:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7257,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"22776:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7261,"nodeType":"RevertStatement","src":"22769:48:30"}]}}]},"documentation":{"id":7240,"nodeType":"StructuredDocumentation","src":"22293:312:30","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":7265,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:30","nodeType":"FunctionDefinition","parameters":{"id":7243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7242,"mutability":"mutable","name":"value","nameLocation":"22635:5:30","nodeType":"VariableDeclaration","scope":7265,"src":"22628:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7241,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:30"},"returnParameters":{"id":7246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7245,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:30","nodeType":"VariableDeclaration","scope":7265,"src":"22665:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":7244,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:30","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:30"},"scope":7852,"src":"22610:224:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7290,"nodeType":"Block","src":"23231:150:30","statements":[{"expression":{"id":7278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7273,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7271,"src":"23241:10:30","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"23261:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":7274,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:30","typeDescriptions":{}}},"id":7277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:30","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":7279,"nodeType":"ExpressionStatement","src":"23241:26:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7280,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7271,"src":"23281:10:30","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"23295:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7289,"nodeType":"IfStatement","src":"23277:98:30","trueBody":{"id":7288,"nodeType":"Block","src":"23302:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":7284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:30","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":7285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"23358:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7283,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"23323:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7287,"nodeType":"RevertStatement","src":"23316:48:30"}]}}]},"documentation":{"id":7266,"nodeType":"StructuredDocumentation","src":"22840:312:30","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":7291,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:30","nodeType":"FunctionDefinition","parameters":{"id":7269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7268,"mutability":"mutable","name":"value","nameLocation":"23182:5:30","nodeType":"VariableDeclaration","scope":7291,"src":"23175:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7267,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:30"},"returnParameters":{"id":7272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7271,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:30","nodeType":"VariableDeclaration","scope":7291,"src":"23212:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":7270,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:30","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:30"},"scope":7852,"src":"23157:224:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7316,"nodeType":"Block","src":"23778:150:30","statements":[{"expression":{"id":7304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7299,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7297,"src":"23788:10:30","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7294,"src":"23808:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":7300,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:30","typeDescriptions":{}}},"id":7303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:30","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":7305,"nodeType":"ExpressionStatement","src":"23788:26:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7306,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7297,"src":"23828:10:30","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7294,"src":"23842:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7315,"nodeType":"IfStatement","src":"23824:98:30","trueBody":{"id":7314,"nodeType":"Block","src":"23849:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":7310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:30","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":7311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7294,"src":"23905:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7309,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"23870:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7313,"nodeType":"RevertStatement","src":"23863:48:30"}]}}]},"documentation":{"id":7292,"nodeType":"StructuredDocumentation","src":"23387:312:30","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":7317,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:30","nodeType":"FunctionDefinition","parameters":{"id":7295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7294,"mutability":"mutable","name":"value","nameLocation":"23729:5:30","nodeType":"VariableDeclaration","scope":7317,"src":"23722:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7293,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:30"},"returnParameters":{"id":7298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7297,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:30","nodeType":"VariableDeclaration","scope":7317,"src":"23759:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":7296,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:30","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:30"},"scope":7852,"src":"23704:224:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7342,"nodeType":"Block","src":"24325:150:30","statements":[{"expression":{"id":7330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7325,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7323,"src":"24335:10:30","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7320,"src":"24355:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":7326,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:30","typeDescriptions":{}}},"id":7329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:30","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":7331,"nodeType":"ExpressionStatement","src":"24335:26:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7332,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7323,"src":"24375:10:30","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7320,"src":"24389:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7341,"nodeType":"IfStatement","src":"24371:98:30","trueBody":{"id":7340,"nodeType":"Block","src":"24396:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":7336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:30","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":7337,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7320,"src":"24452:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7335,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"24417:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7339,"nodeType":"RevertStatement","src":"24410:48:30"}]}}]},"documentation":{"id":7318,"nodeType":"StructuredDocumentation","src":"23934:312:30","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":7343,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:30","nodeType":"FunctionDefinition","parameters":{"id":7321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7320,"mutability":"mutable","name":"value","nameLocation":"24276:5:30","nodeType":"VariableDeclaration","scope":7343,"src":"24269:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7319,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:30"},"returnParameters":{"id":7324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7323,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:30","nodeType":"VariableDeclaration","scope":7343,"src":"24306:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":7322,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:30","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:30"},"scope":7852,"src":"24251:224:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7368,"nodeType":"Block","src":"24872:150:30","statements":[{"expression":{"id":7356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7351,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7349,"src":"24882:10:30","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7346,"src":"24902:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":7352,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:30","typeDescriptions":{}}},"id":7355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:30","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":7357,"nodeType":"ExpressionStatement","src":"24882:26:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7358,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7349,"src":"24922:10:30","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7346,"src":"24936:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7367,"nodeType":"IfStatement","src":"24918:98:30","trueBody":{"id":7366,"nodeType":"Block","src":"24943:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":7362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:30","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":7363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7346,"src":"24999:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7361,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"24964:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7365,"nodeType":"RevertStatement","src":"24957:48:30"}]}}]},"documentation":{"id":7344,"nodeType":"StructuredDocumentation","src":"24481:312:30","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":7369,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:30","nodeType":"FunctionDefinition","parameters":{"id":7347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7346,"mutability":"mutable","name":"value","nameLocation":"24823:5:30","nodeType":"VariableDeclaration","scope":7369,"src":"24816:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7345,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:30"},"returnParameters":{"id":7350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7349,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:30","nodeType":"VariableDeclaration","scope":7369,"src":"24853:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":7348,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:30","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:30"},"scope":7852,"src":"24798:224:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7394,"nodeType":"Block","src":"25419:150:30","statements":[{"expression":{"id":7382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7377,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7375,"src":"25429:10:30","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7372,"src":"25449:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":7378,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:30","typeDescriptions":{}}},"id":7381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:30","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":7383,"nodeType":"ExpressionStatement","src":"25429:26:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7384,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7375,"src":"25469:10:30","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7372,"src":"25483:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7393,"nodeType":"IfStatement","src":"25465:98:30","trueBody":{"id":7392,"nodeType":"Block","src":"25490:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":7388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:30","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":7389,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7372,"src":"25546:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7387,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"25511:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7391,"nodeType":"RevertStatement","src":"25504:48:30"}]}}]},"documentation":{"id":7370,"nodeType":"StructuredDocumentation","src":"25028:312:30","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":7395,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:30","nodeType":"FunctionDefinition","parameters":{"id":7373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7372,"mutability":"mutable","name":"value","nameLocation":"25370:5:30","nodeType":"VariableDeclaration","scope":7395,"src":"25363:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7371,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:30"},"returnParameters":{"id":7376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7375,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:30","nodeType":"VariableDeclaration","scope":7395,"src":"25400:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":7374,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:30","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:30"},"scope":7852,"src":"25345:224:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7420,"nodeType":"Block","src":"25966:150:30","statements":[{"expression":{"id":7408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7403,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7401,"src":"25976:10:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7398,"src":"25996:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":7404,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:30","typeDescriptions":{}}},"id":7407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7409,"nodeType":"ExpressionStatement","src":"25976:26:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7410,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7401,"src":"26016:10:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7398,"src":"26030:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7419,"nodeType":"IfStatement","src":"26012:98:30","trueBody":{"id":7418,"nodeType":"Block","src":"26037:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7398,"src":"26093:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7413,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"26058:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7417,"nodeType":"RevertStatement","src":"26051:48:30"}]}}]},"documentation":{"id":7396,"nodeType":"StructuredDocumentation","src":"25575:312:30","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7421,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:30","nodeType":"FunctionDefinition","parameters":{"id":7399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7398,"mutability":"mutable","name":"value","nameLocation":"25917:5:30","nodeType":"VariableDeclaration","scope":7421,"src":"25910:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7397,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:30"},"returnParameters":{"id":7402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7401,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:30","nodeType":"VariableDeclaration","scope":7421,"src":"25947:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7400,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:30"},"scope":7852,"src":"25892:224:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7446,"nodeType":"Block","src":"26513:150:30","statements":[{"expression":{"id":7434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7429,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7427,"src":"26523:10:30","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"26543:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":7430,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:30","typeDescriptions":{}}},"id":7433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:30","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":7435,"nodeType":"ExpressionStatement","src":"26523:26:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7436,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7427,"src":"26563:10:30","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"26577:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7445,"nodeType":"IfStatement","src":"26559:98:30","trueBody":{"id":7444,"nodeType":"Block","src":"26584:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:30","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"26640:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7439,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"26605:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7443,"nodeType":"RevertStatement","src":"26598:48:30"}]}}]},"documentation":{"id":7422,"nodeType":"StructuredDocumentation","src":"26122:312:30","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7447,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:30","nodeType":"FunctionDefinition","parameters":{"id":7425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7424,"mutability":"mutable","name":"value","nameLocation":"26464:5:30","nodeType":"VariableDeclaration","scope":7447,"src":"26457:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7423,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:30"},"returnParameters":{"id":7428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7427,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:30","nodeType":"VariableDeclaration","scope":7447,"src":"26494:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":7426,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:30","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:30"},"scope":7852,"src":"26439:224:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7472,"nodeType":"Block","src":"27060:150:30","statements":[{"expression":{"id":7460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7455,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7453,"src":"27070:10:30","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"27090:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":7456,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:30","typeDescriptions":{}}},"id":7459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:30","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":7461,"nodeType":"ExpressionStatement","src":"27070:26:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7462,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7453,"src":"27110:10:30","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"27124:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7471,"nodeType":"IfStatement","src":"27106:98:30","trueBody":{"id":7470,"nodeType":"Block","src":"27131:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:30","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7467,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"27187:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7465,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"27152:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7469,"nodeType":"RevertStatement","src":"27145:48:30"}]}}]},"documentation":{"id":7448,"nodeType":"StructuredDocumentation","src":"26669:312:30","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7473,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:30","nodeType":"FunctionDefinition","parameters":{"id":7451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7450,"mutability":"mutable","name":"value","nameLocation":"27011:5:30","nodeType":"VariableDeclaration","scope":7473,"src":"27004:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7449,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:30"},"returnParameters":{"id":7454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7453,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:30","nodeType":"VariableDeclaration","scope":7473,"src":"27041:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":7452,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:30","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:30"},"scope":7852,"src":"26986:224:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7498,"nodeType":"Block","src":"27607:150:30","statements":[{"expression":{"id":7486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7481,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7479,"src":"27617:10:30","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7476,"src":"27637:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":7482,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:30","typeDescriptions":{}}},"id":7485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:30","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":7487,"nodeType":"ExpressionStatement","src":"27617:26:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7488,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7479,"src":"27657:10:30","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7476,"src":"27671:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7497,"nodeType":"IfStatement","src":"27653:98:30","trueBody":{"id":7496,"nodeType":"Block","src":"27678:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:30","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7476,"src":"27734:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7491,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"27699:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7495,"nodeType":"RevertStatement","src":"27692:48:30"}]}}]},"documentation":{"id":7474,"nodeType":"StructuredDocumentation","src":"27216:312:30","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7499,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:30","nodeType":"FunctionDefinition","parameters":{"id":7477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7476,"mutability":"mutable","name":"value","nameLocation":"27558:5:30","nodeType":"VariableDeclaration","scope":7499,"src":"27551:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7475,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:30"},"returnParameters":{"id":7480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7479,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:30","nodeType":"VariableDeclaration","scope":7499,"src":"27588:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":7478,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:30","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:30"},"scope":7852,"src":"27533:224:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7524,"nodeType":"Block","src":"28147:148:30","statements":[{"expression":{"id":7512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7507,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7505,"src":"28157:10:30","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7502,"src":"28176:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":7508,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:30","typeDescriptions":{}}},"id":7511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:30","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":7513,"nodeType":"ExpressionStatement","src":"28157:25:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7514,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7505,"src":"28196:10:30","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7502,"src":"28210:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7523,"nodeType":"IfStatement","src":"28192:97:30","trueBody":{"id":7522,"nodeType":"Block","src":"28217:72:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:30","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7502,"src":"28272:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7517,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"28238:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7521,"nodeType":"RevertStatement","src":"28231:47:30"}]}}]},"documentation":{"id":7500,"nodeType":"StructuredDocumentation","src":"27763:307:30","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7525,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:30","nodeType":"FunctionDefinition","parameters":{"id":7503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7502,"mutability":"mutable","name":"value","nameLocation":"28099:5:30","nodeType":"VariableDeclaration","scope":7525,"src":"28092:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7501,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:30"},"returnParameters":{"id":7506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7505,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:30","nodeType":"VariableDeclaration","scope":7525,"src":"28129:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":7504,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:30","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:30"},"scope":7852,"src":"28075:220:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7550,"nodeType":"Block","src":"28685:148:30","statements":[{"expression":{"id":7538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7533,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"28695:10:30","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7536,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7528,"src":"28714:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":7534,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:30","typeDescriptions":{}}},"id":7537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:30","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":7539,"nodeType":"ExpressionStatement","src":"28695:25:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7540,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"28734:10:30","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7528,"src":"28748:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7549,"nodeType":"IfStatement","src":"28730:97:30","trueBody":{"id":7548,"nodeType":"Block","src":"28755:72:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:30","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7528,"src":"28810:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7543,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"28776:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7547,"nodeType":"RevertStatement","src":"28769:47:30"}]}}]},"documentation":{"id":7526,"nodeType":"StructuredDocumentation","src":"28301:307:30","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7551,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:30","nodeType":"FunctionDefinition","parameters":{"id":7529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7528,"mutability":"mutable","name":"value","nameLocation":"28637:5:30","nodeType":"VariableDeclaration","scope":7551,"src":"28630:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7527,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:30"},"returnParameters":{"id":7532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7531,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:30","nodeType":"VariableDeclaration","scope":7551,"src":"28667:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":7530,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:30","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:30"},"scope":7852,"src":"28613:220:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7576,"nodeType":"Block","src":"29223:148:30","statements":[{"expression":{"id":7564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7559,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7557,"src":"29233:10:30","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7554,"src":"29252:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":7560,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:30","typeDescriptions":{}}},"id":7563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:30","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":7565,"nodeType":"ExpressionStatement","src":"29233:25:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7566,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7557,"src":"29272:10:30","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7554,"src":"29286:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7575,"nodeType":"IfStatement","src":"29268:97:30","trueBody":{"id":7574,"nodeType":"Block","src":"29293:72:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:30","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7554,"src":"29348:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7569,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"29314:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7573,"nodeType":"RevertStatement","src":"29307:47:30"}]}}]},"documentation":{"id":7552,"nodeType":"StructuredDocumentation","src":"28839:307:30","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7577,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:30","nodeType":"FunctionDefinition","parameters":{"id":7555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7554,"mutability":"mutable","name":"value","nameLocation":"29175:5:30","nodeType":"VariableDeclaration","scope":7577,"src":"29168:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7553,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:30"},"returnParameters":{"id":7558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7557,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:30","nodeType":"VariableDeclaration","scope":7577,"src":"29205:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":7556,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:30","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:30"},"scope":7852,"src":"29151:220:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7602,"nodeType":"Block","src":"29761:148:30","statements":[{"expression":{"id":7590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7585,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7583,"src":"29771:10:30","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7580,"src":"29790:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":7586,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:30","typeDescriptions":{}}},"id":7589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:30","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":7591,"nodeType":"ExpressionStatement","src":"29771:25:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7592,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7583,"src":"29810:10:30","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7580,"src":"29824:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7601,"nodeType":"IfStatement","src":"29806:97:30","trueBody":{"id":7600,"nodeType":"Block","src":"29831:72:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:30","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7580,"src":"29886:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7595,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"29852:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7599,"nodeType":"RevertStatement","src":"29845:47:30"}]}}]},"documentation":{"id":7578,"nodeType":"StructuredDocumentation","src":"29377:307:30","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7603,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:30","nodeType":"FunctionDefinition","parameters":{"id":7581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7580,"mutability":"mutable","name":"value","nameLocation":"29713:5:30","nodeType":"VariableDeclaration","scope":7603,"src":"29706:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7579,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:30"},"returnParameters":{"id":7584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7583,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:30","nodeType":"VariableDeclaration","scope":7603,"src":"29743:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":7582,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:30","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:30"},"scope":7852,"src":"29689:220:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7628,"nodeType":"Block","src":"30299:148:30","statements":[{"expression":{"id":7616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7611,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7609,"src":"30309:10:30","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7606,"src":"30328:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":7612,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:30","typeDescriptions":{}}},"id":7615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:30","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":7617,"nodeType":"ExpressionStatement","src":"30309:25:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7618,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7609,"src":"30348:10:30","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7606,"src":"30362:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7627,"nodeType":"IfStatement","src":"30344:97:30","trueBody":{"id":7626,"nodeType":"Block","src":"30369:72:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7623,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7606,"src":"30424:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7621,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"30390:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7625,"nodeType":"RevertStatement","src":"30383:47:30"}]}}]},"documentation":{"id":7604,"nodeType":"StructuredDocumentation","src":"29915:307:30","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7629,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:30","nodeType":"FunctionDefinition","parameters":{"id":7607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7606,"mutability":"mutable","name":"value","nameLocation":"30251:5:30","nodeType":"VariableDeclaration","scope":7629,"src":"30244:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7605,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:30"},"returnParameters":{"id":7610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7609,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:30","nodeType":"VariableDeclaration","scope":7629,"src":"30281:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7608,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:30","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:30"},"scope":7852,"src":"30227:220:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7654,"nodeType":"Block","src":"30837:148:30","statements":[{"expression":{"id":7642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7637,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7635,"src":"30847:10:30","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7632,"src":"30866:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":7638,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:30","typeDescriptions":{}}},"id":7641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:30","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":7643,"nodeType":"ExpressionStatement","src":"30847:25:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7644,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7635,"src":"30886:10:30","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7645,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7632,"src":"30900:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7653,"nodeType":"IfStatement","src":"30882:97:30","trueBody":{"id":7652,"nodeType":"Block","src":"30907:72:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:30","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7632,"src":"30962:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7647,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"30928:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7651,"nodeType":"RevertStatement","src":"30921:47:30"}]}}]},"documentation":{"id":7630,"nodeType":"StructuredDocumentation","src":"30453:307:30","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7655,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:30","nodeType":"FunctionDefinition","parameters":{"id":7633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7632,"mutability":"mutable","name":"value","nameLocation":"30789:5:30","nodeType":"VariableDeclaration","scope":7655,"src":"30782:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7631,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:30"},"returnParameters":{"id":7636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7635,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:30","nodeType":"VariableDeclaration","scope":7655,"src":"30819:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":7634,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:30","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:30"},"scope":7852,"src":"30765:220:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7680,"nodeType":"Block","src":"31375:148:30","statements":[{"expression":{"id":7668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7663,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7661,"src":"31385:10:30","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7658,"src":"31404:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":7664,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:30","typeDescriptions":{}}},"id":7667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:30","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":7669,"nodeType":"ExpressionStatement","src":"31385:25:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7670,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7661,"src":"31424:10:30","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7658,"src":"31438:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7679,"nodeType":"IfStatement","src":"31420:97:30","trueBody":{"id":7678,"nodeType":"Block","src":"31445:72:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:30","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7658,"src":"31500:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7673,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"31466:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7677,"nodeType":"RevertStatement","src":"31459:47:30"}]}}]},"documentation":{"id":7656,"nodeType":"StructuredDocumentation","src":"30991:307:30","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7681,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:30","nodeType":"FunctionDefinition","parameters":{"id":7659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7658,"mutability":"mutable","name":"value","nameLocation":"31327:5:30","nodeType":"VariableDeclaration","scope":7681,"src":"31320:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7657,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:30"},"returnParameters":{"id":7662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7661,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:30","nodeType":"VariableDeclaration","scope":7681,"src":"31357:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":7660,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:30","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:30"},"scope":7852,"src":"31303:220:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7706,"nodeType":"Block","src":"31913:148:30","statements":[{"expression":{"id":7694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7689,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7687,"src":"31923:10:30","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7684,"src":"31942:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":7690,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:30","typeDescriptions":{}}},"id":7693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:30","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":7695,"nodeType":"ExpressionStatement","src":"31923:25:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7696,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7687,"src":"31962:10:30","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7684,"src":"31976:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7705,"nodeType":"IfStatement","src":"31958:97:30","trueBody":{"id":7704,"nodeType":"Block","src":"31983:72:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:30","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7684,"src":"32038:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7699,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"32004:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7703,"nodeType":"RevertStatement","src":"31997:47:30"}]}}]},"documentation":{"id":7682,"nodeType":"StructuredDocumentation","src":"31529:307:30","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7707,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:30","nodeType":"FunctionDefinition","parameters":{"id":7685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7684,"mutability":"mutable","name":"value","nameLocation":"31865:5:30","nodeType":"VariableDeclaration","scope":7707,"src":"31858:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7683,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:30"},"returnParameters":{"id":7688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7687,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:30","nodeType":"VariableDeclaration","scope":7707,"src":"31895:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":7686,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:30","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:30"},"scope":7852,"src":"31841:220:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7732,"nodeType":"Block","src":"32451:148:30","statements":[{"expression":{"id":7720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7715,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7713,"src":"32461:10:30","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7710,"src":"32480:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":7716,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:30","typeDescriptions":{}}},"id":7719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:30","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":7721,"nodeType":"ExpressionStatement","src":"32461:25:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7722,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7713,"src":"32500:10:30","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7710,"src":"32514:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7731,"nodeType":"IfStatement","src":"32496:97:30","trueBody":{"id":7730,"nodeType":"Block","src":"32521:72:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:30","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7710,"src":"32576:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7725,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"32542:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7729,"nodeType":"RevertStatement","src":"32535:47:30"}]}}]},"documentation":{"id":7708,"nodeType":"StructuredDocumentation","src":"32067:307:30","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7733,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:30","nodeType":"FunctionDefinition","parameters":{"id":7711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7710,"mutability":"mutable","name":"value","nameLocation":"32403:5:30","nodeType":"VariableDeclaration","scope":7733,"src":"32396:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7709,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:30"},"returnParameters":{"id":7714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7713,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:30","nodeType":"VariableDeclaration","scope":7733,"src":"32433:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":7712,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:30","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:30"},"scope":7852,"src":"32379:220:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7758,"nodeType":"Block","src":"32989:148:30","statements":[{"expression":{"id":7746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7741,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7739,"src":"32999:10:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7736,"src":"33018:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":7742,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:30","typeDescriptions":{}}},"id":7745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":7747,"nodeType":"ExpressionStatement","src":"32999:25:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7748,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7739,"src":"33038:10:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7736,"src":"33052:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7757,"nodeType":"IfStatement","src":"33034:97:30","trueBody":{"id":7756,"nodeType":"Block","src":"33059:72:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:30","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7736,"src":"33114:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7751,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"33080:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7755,"nodeType":"RevertStatement","src":"33073:47:30"}]}}]},"documentation":{"id":7734,"nodeType":"StructuredDocumentation","src":"32605:307:30","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7759,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:30","nodeType":"FunctionDefinition","parameters":{"id":7737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7736,"mutability":"mutable","name":"value","nameLocation":"32941:5:30","nodeType":"VariableDeclaration","scope":7759,"src":"32934:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7735,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:30"},"returnParameters":{"id":7740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7739,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:30","nodeType":"VariableDeclaration","scope":7759,"src":"32971:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":7738,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:30"},"scope":7852,"src":"32917:220:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7784,"nodeType":"Block","src":"33527:148:30","statements":[{"expression":{"id":7772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7767,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7765,"src":"33537:10:30","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7762,"src":"33556:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":7768,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:30","typeDescriptions":{}}},"id":7771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:30","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":7773,"nodeType":"ExpressionStatement","src":"33537:25:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7774,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7765,"src":"33576:10:30","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7762,"src":"33590:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7783,"nodeType":"IfStatement","src":"33572:97:30","trueBody":{"id":7782,"nodeType":"Block","src":"33597:72:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:30","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7762,"src":"33652:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7777,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"33618:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7781,"nodeType":"RevertStatement","src":"33611:47:30"}]}}]},"documentation":{"id":7760,"nodeType":"StructuredDocumentation","src":"33143:307:30","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7785,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:30","nodeType":"FunctionDefinition","parameters":{"id":7763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7762,"mutability":"mutable","name":"value","nameLocation":"33479:5:30","nodeType":"VariableDeclaration","scope":7785,"src":"33472:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7761,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:30"},"returnParameters":{"id":7766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7765,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:30","nodeType":"VariableDeclaration","scope":7785,"src":"33509:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":7764,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:30","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:30"},"scope":7852,"src":"33455:220:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7810,"nodeType":"Block","src":"34058:146:30","statements":[{"expression":{"id":7798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7793,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7791,"src":"34068:10:30","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7788,"src":"34086:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":7794,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:30","typeDescriptions":{}}},"id":7797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:30","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":7799,"nodeType":"ExpressionStatement","src":"34068:24:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7800,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7791,"src":"34106:10:30","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7788,"src":"34120:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7809,"nodeType":"IfStatement","src":"34102:96:30","trueBody":{"id":7808,"nodeType":"Block","src":"34127:71:30","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:30","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7788,"src":"34181:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7803,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"34148:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7807,"nodeType":"RevertStatement","src":"34141:46:30"}]}}]},"documentation":{"id":7786,"nodeType":"StructuredDocumentation","src":"33681:302:30","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7811,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:30","nodeType":"FunctionDefinition","parameters":{"id":7789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7788,"mutability":"mutable","name":"value","nameLocation":"34011:5:30","nodeType":"VariableDeclaration","scope":7811,"src":"34004:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7787,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:30"},"returnParameters":{"id":7792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7791,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:30","nodeType":"VariableDeclaration","scope":7811,"src":"34041:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":7790,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:30","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:30"},"scope":7852,"src":"33988:216:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7840,"nodeType":"Block","src":"34444:250:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7814,"src":"34557:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":7824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7823,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":7822,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":7826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:30","memberName":"max","nodeType":"MemberAccess","src":"34573:16:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7820,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:30","typeDescriptions":{}}},"id":7827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7834,"nodeType":"IfStatement","src":"34553:105:30","trueBody":{"id":7833,"nodeType":"Block","src":"34592:66:30","statements":[{"errorCall":{"arguments":[{"id":7830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7814,"src":"34641:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7829,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6114,"src":"34613:27:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":7831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7832,"nodeType":"RevertStatement","src":"34606:41:30"}]}},{"expression":{"arguments":[{"id":7837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7814,"src":"34681:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7835,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:30","typeDescriptions":{}}},"id":7838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7818,"id":7839,"nodeType":"Return","src":"34667:20:30"}]},"documentation":{"id":7812,"nodeType":"StructuredDocumentation","src":"34210:165:30","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":7841,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:30","nodeType":"FunctionDefinition","parameters":{"id":7815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7814,"mutability":"mutable","name":"value","nameLocation":"34406:5:30","nodeType":"VariableDeclaration","scope":7841,"src":"34398:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7813,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:30"},"returnParameters":{"id":7818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7817,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7841,"src":"34436:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7816,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:30"},"scope":7852,"src":"34380:314:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7850,"nodeType":"Block","src":"34853:87:30","statements":[{"AST":{"nativeSrc":"34888:46:30","nodeType":"YulBlock","src":"34888:46:30","statements":[{"nativeSrc":"34902:22:30","nodeType":"YulAssignment","src":"34902:22:30","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:30","nodeType":"YulIdentifier","src":"34921:1:30"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:30","nodeType":"YulIdentifier","src":"34914:6:30"},"nativeSrc":"34914:9:30","nodeType":"YulFunctionCall","src":"34914:9:30"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:30","nodeType":"YulIdentifier","src":"34907:6:30"},"nativeSrc":"34907:17:30","nodeType":"YulFunctionCall","src":"34907:17:30"},"variableNames":[{"name":"u","nativeSrc":"34902:1:30","nodeType":"YulIdentifier","src":"34902:1:30"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7844,"isOffset":false,"isSlot":false,"src":"34921:1:30","valueSize":1},{"declaration":7847,"isOffset":false,"isSlot":false,"src":"34902:1:30","valueSize":1}],"flags":["memory-safe"],"id":7849,"nodeType":"InlineAssembly","src":"34863:71:30"}]},"documentation":{"id":7842,"nodeType":"StructuredDocumentation","src":"34700:90:30","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":7851,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:30","nodeType":"FunctionDefinition","parameters":{"id":7845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7844,"mutability":"mutable","name":"b","nameLocation":"34816:1:30","nodeType":"VariableDeclaration","scope":7851,"src":"34811:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7843,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:30"},"returnParameters":{"id":7848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7847,"mutability":"mutable","name":"u","nameLocation":"34850:1:30","nodeType":"VariableDeclaration","scope":7851,"src":"34842:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7846,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:30"},"scope":7852,"src":"34795:145:30","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7853,"src":"769:34173:30","usedErrors":[6097,6102,6109,6114],"usedEvents":[]}],"src":"192:34751:30"},"id":30},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[7852],"SignedMath":[7996]},"id":7997,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7854,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:31"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":7856,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7997,"sourceUnit":7853,"src":"135:40:31","symbolAliases":[{"foreign":{"id":7855,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7852,"src":"143:8:31","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":7857,"nodeType":"StructuredDocumentation","src":"177:80:31","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7996,"linearizedBaseContracts":[7996],"name":"SignedMath","nameLocation":"266:10:31","nodeType":"ContractDefinition","nodes":[{"body":{"id":7886,"nodeType":"Block","src":"746:215:31","statements":[{"id":7885,"nodeType":"UncheckedBlock","src":"756:199:31","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7869,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7864,"src":"894:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7870,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7862,"src":"900:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7871,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7864,"src":"904:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7873,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":7878,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7860,"src":"932:9:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7876,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7852,"src":"916:8:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7852_$","typeString":"type(library SafeCast)"}},"id":7877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:31","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7851,"src":"916:15:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7874,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:31","typeDescriptions":{}}},"id":7880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7882,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7868,"id":7884,"nodeType":"Return","src":"887:57:31"}]}]},"documentation":{"id":7858,"nodeType":"StructuredDocumentation","src":"283:374:31","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":7887,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:31","nodeType":"FunctionDefinition","parameters":{"id":7865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7860,"mutability":"mutable","name":"condition","nameLocation":"684:9:31","nodeType":"VariableDeclaration","scope":7887,"src":"679:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7859,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7862,"mutability":"mutable","name":"a","nameLocation":"702:1:31","nodeType":"VariableDeclaration","scope":7887,"src":"695:8:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7861,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7864,"mutability":"mutable","name":"b","nameLocation":"712:1:31","nodeType":"VariableDeclaration","scope":7887,"src":"705:8:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7863,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:31"},"returnParameters":{"id":7868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7887,"src":"738:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7866,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:31"},"scope":7996,"src":"662:299:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7905,"nodeType":"Block","src":"1102:44:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7898,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7890,"src":"1127:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7899,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7892,"src":"1131:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7901,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7890,"src":"1134:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7902,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7892,"src":"1137:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7897,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7887,"src":"1119:7:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7896,"id":7904,"nodeType":"Return","src":"1112:27:31"}]},"documentation":{"id":7888,"nodeType":"StructuredDocumentation","src":"967:66:31","text":" @dev Returns the largest of two signed numbers."},"id":7906,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:31","nodeType":"FunctionDefinition","parameters":{"id":7893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7890,"mutability":"mutable","name":"a","nameLocation":"1058:1:31","nodeType":"VariableDeclaration","scope":7906,"src":"1051:8:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7889,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7892,"mutability":"mutable","name":"b","nameLocation":"1068:1:31","nodeType":"VariableDeclaration","scope":7906,"src":"1061:8:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7891,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:31"},"returnParameters":{"id":7896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7895,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7906,"src":"1094:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7894,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:31"},"scope":7996,"src":"1038:108:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7924,"nodeType":"Block","src":"1288:44:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7917,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7909,"src":"1313:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7918,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"1317:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7920,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7909,"src":"1320:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7921,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"1323:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7916,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7887,"src":"1305:7:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7915,"id":7923,"nodeType":"Return","src":"1298:27:31"}]},"documentation":{"id":7907,"nodeType":"StructuredDocumentation","src":"1152:67:31","text":" @dev Returns the smallest of two signed numbers."},"id":7925,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:31","nodeType":"FunctionDefinition","parameters":{"id":7912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7909,"mutability":"mutable","name":"a","nameLocation":"1244:1:31","nodeType":"VariableDeclaration","scope":7925,"src":"1237:8:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7908,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7911,"mutability":"mutable","name":"b","nameLocation":"1254:1:31","nodeType":"VariableDeclaration","scope":7925,"src":"1247:8:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7910,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:31"},"returnParameters":{"id":7915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7914,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7925,"src":"1280:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7913,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:31"},"scope":7996,"src":"1224:108:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7968,"nodeType":"Block","src":"1537:162:31","statements":[{"assignments":[7936],"declarations":[{"constant":false,"id":7936,"mutability":"mutable","name":"x","nameLocation":"1606:1:31","nodeType":"VariableDeclaration","scope":7968,"src":"1599:8:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7935,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7949,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7937,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7928,"src":"1611:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7938,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7930,"src":"1615:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7940,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7941,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7928,"src":"1622:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7942,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7930,"src":"1626:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7944,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7947,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:31"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7950,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7936,"src":"1651:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7955,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7936,"src":"1671:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7953,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:31","typeDescriptions":{}}},"id":7956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:31","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7951,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:31","typeDescriptions":{}}},"id":7959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7960,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7928,"src":"1685:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7961,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7930,"src":"1689:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7963,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7965,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7934,"id":7967,"nodeType":"Return","src":"1644:48:31"}]},"documentation":{"id":7926,"nodeType":"StructuredDocumentation","src":"1338:126:31","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7969,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:31","nodeType":"FunctionDefinition","parameters":{"id":7931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7928,"mutability":"mutable","name":"a","nameLocation":"1493:1:31","nodeType":"VariableDeclaration","scope":7969,"src":"1486:8:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7927,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7930,"mutability":"mutable","name":"b","nameLocation":"1503:1:31","nodeType":"VariableDeclaration","scope":7969,"src":"1496:8:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7929,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:31"},"returnParameters":{"id":7934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7933,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7969,"src":"1529:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7932,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:31"},"scope":7996,"src":"1469:230:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7994,"nodeType":"Block","src":"1843:767:31","statements":[{"id":7993,"nodeType":"UncheckedBlock","src":"1853:751:31","statements":[{"assignments":[7978],"declarations":[{"constant":false,"id":7978,"mutability":"mutable","name":"mask","nameLocation":"2424:4:31","nodeType":"VariableDeclaration","scope":7993,"src":"2417:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7977,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7982,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7979,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7972,"src":"2431:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:31","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7985,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7972,"src":"2576:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7986,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7978,"src":"2580:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7988,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7989,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7978,"src":"2588:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7983,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:31","typeDescriptions":{}}},"id":7991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7976,"id":7992,"nodeType":"Return","src":"2560:33:31"}]}]},"documentation":{"id":7970,"nodeType":"StructuredDocumentation","src":"1705:78:31","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7995,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:31","nodeType":"FunctionDefinition","parameters":{"id":7973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7972,"mutability":"mutable","name":"n","nameLocation":"1808:1:31","nodeType":"VariableDeclaration","scope":7995,"src":"1801:8:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7971,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:31"},"returnParameters":{"id":7976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7995,"src":"1834:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7974,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:31"},"scope":7996,"src":"1788:822:31","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7997,"src":"258:2354:31","usedErrors":[],"usedEvents":[]}],"src":"109:2504:31"},"id":31},"contracts/ProductToken.sol":{"ast":{"absolutePath":"contracts/ProductToken.sol","exportedSymbols":{"AccessControl":[454],"Arrays":[3571],"Context":[3633],"ERC1155":[1739],"ERC1155Utils":[2074],"ERC165":[4469],"IAccessControl":[537],"IERC1155":[1862],"IERC1155Errors":[822],"IERC1155MetadataURI":[1920],"IERC165":[4481],"Math":[6087],"ProductToken":[8180],"SignedMath":[7996],"Strings":[4445]},"id":8181,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7998,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:32"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","id":7999,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8181,"sourceUnit":1740,"src":"58:59:32","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":8000,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8181,"sourceUnit":455,"src":"118:58:32","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":8001,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8181,"sourceUnit":4446,"src":"177:51:32","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8002,"name":"ERC1155","nameLocations":["255:7:32"],"nodeType":"IdentifierPath","referencedDeclaration":1739,"src":"255:7:32"},"id":8003,"nodeType":"InheritanceSpecifier","src":"255:7:32"},{"baseName":{"id":8004,"name":"AccessControl","nameLocations":["264:13:32"],"nodeType":"IdentifierPath","referencedDeclaration":454,"src":"264:13:32"},"id":8005,"nodeType":"InheritanceSpecifier","src":"264:13:32"}],"canonicalName":"ProductToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8180,"linearizedBaseContracts":[8180,454,1739,822,1920,1862,4469,4481,537,3633],"name":"ProductToken","nameLocation":"239:12:32","nodeType":"ContractDefinition","nodes":[{"global":false,"id":8008,"libraryName":{"id":8006,"name":"Strings","nameLocations":["290:7:32"],"nodeType":"IdentifierPath","referencedDeclaration":4445,"src":"290:7:32"},"nodeType":"UsingForDirective","src":"284:26:32","typeName":{"id":8007,"name":"uint256","nodeType":"ElementaryTypeName","src":"302:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"functionSelector":"d5391393","id":8013,"mutability":"constant","name":"MINTER_ROLE","nameLocation":"367:11:32","nodeType":"VariableDeclaration","scope":8180,"src":"343:62:32","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8009,"name":"bytes32","nodeType":"ElementaryTypeName","src":"343:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d494e5445525f524f4c45","id":8011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"391:13:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""},"value":"MINTER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""}],"id":8010,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"381:9:32","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"381:24:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"id":8017,"mutability":"mutable","name":"_productSupply","nameLocation":"502:14:32","nodeType":"VariableDeclaration","scope":8180,"src":"466:50:32","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":8016,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8014,"name":"uint256","nodeType":"ElementaryTypeName","src":"474:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"466:27:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8015,"name":"uint256","nodeType":"ElementaryTypeName","src":"485:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":8019,"mutability":"mutable","name":"_baseUri","nameLocation":"571:8:32","nodeType":"VariableDeclaration","scope":8180,"src":"556:23:32","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":8018,"name":"string","nodeType":"ElementaryTypeName","src":"556:6:32","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"anonymous":false,"eventSelector":"1ace3364065011f2a2f041ccf777c9f5394104fb5c15ec40e2ed753531e33b21","id":8027,"name":"ProductMinted","nameLocation":"610:13:32","nodeType":"EventDefinition","parameters":{"id":8026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8021,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"640:2:32","nodeType":"VariableDeclaration","scope":8027,"src":"624:18:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8020,"name":"address","nodeType":"ElementaryTypeName","src":"624:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8023,"indexed":true,"mutability":"mutable","name":"productId","nameLocation":"660:9:32","nodeType":"VariableDeclaration","scope":8027,"src":"644:25:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8022,"name":"uint256","nodeType":"ElementaryTypeName","src":"644:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8025,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"679:6:32","nodeType":"VariableDeclaration","scope":8027,"src":"671:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8024,"name":"uint256","nodeType":"ElementaryTypeName","src":"671:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"623:63:32"},"src":"604:83:32"},{"anonymous":false,"eventSelector":"6741b2fc379fad678116fe3d4d4b9a1a184ab53ba36b86ad0fa66340b1ab41ad","id":8031,"name":"BaseURIUpdated","nameLocation":"698:14:32","nodeType":"EventDefinition","parameters":{"id":8030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8029,"indexed":false,"mutability":"mutable","name":"newUri","nameLocation":"720:6:32","nodeType":"VariableDeclaration","scope":8031,"src":"713:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8028,"name":"string","nodeType":"ElementaryTypeName","src":"713:6:32","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"712:15:32"},"src":"692:36:32"},{"body":{"id":8055,"nodeType":"Block","src":"781:132:32","statements":[{"expression":{"id":8041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8039,"name":"_baseUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8019,"src":"791:8:32","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8040,"name":"baseUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8033,"src":"802:7:32","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"791:18:32","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":8042,"nodeType":"ExpressionStatement","src":"791:18:32"},{"expression":{"arguments":[{"id":8044,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"830:18:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8045,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"850:3:32","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"854:6:32","memberName":"sender","nodeType":"MemberAccess","src":"850:10:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8043,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"819:10:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":8047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"819:42:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8048,"nodeType":"ExpressionStatement","src":"819:42:32"},{"expression":{"arguments":[{"id":8050,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8013,"src":"882:11:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8051,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"895:3:32","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"899:6:32","memberName":"sender","nodeType":"MemberAccess","src":"895:10:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8049,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"871:10:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":8053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"871:35:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8054,"nodeType":"ExpressionStatement","src":"871:35:32"}]},"id":8056,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"","id":8036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"777:2:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"id":8037,"kind":"baseConstructorSpecifier","modifierName":{"id":8035,"name":"ERC1155","nameLocations":["769:7:32"],"nodeType":"IdentifierPath","referencedDeclaration":1739,"src":"769:7:32"},"nodeType":"ModifierInvocation","src":"769:11:32"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8033,"mutability":"mutable","name":"baseUri","nameLocation":"760:7:32","nodeType":"VariableDeclaration","scope":8056,"src":"746:21:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8032,"name":"string","nodeType":"ElementaryTypeName","src":"746:6:32","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"745:23:32"},"returnParameters":{"id":8038,"nodeType":"ParameterList","parameters":[],"src":"781:0:32"},"scope":8180,"src":"734:179:32","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8087,"nodeType":"Block","src":"1011:145:32","statements":[{"expression":{"id":8072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8068,"name":"_productSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8017,"src":"1021:14:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":8070,"indexExpression":{"id":8069,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8060,"src":"1036:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1021:25:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8071,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8062,"src":"1050:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1021:35:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8073,"nodeType":"ExpressionStatement","src":"1021:35:32"},{"expression":{"arguments":[{"id":8075,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8058,"src":"1072:2:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8076,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8060,"src":"1076:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8077,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8062,"src":"1087:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":8078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1095:2:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":8074,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"1066:5:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":8079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1066:32:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8080,"nodeType":"ExpressionStatement","src":"1066:32:32"},{"eventCall":{"arguments":[{"id":8082,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8058,"src":"1127:2:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8083,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8060,"src":"1131:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8084,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8062,"src":"1142:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8081,"name":"ProductMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8027,"src":"1113:13:32","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":8085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1113:36:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8086,"nodeType":"EmitStatement","src":"1108:41:32"}]},"functionSelector":"156e29f6","id":8088,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8065,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8013,"src":"998:11:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8066,"kind":"modifierInvocation","modifierName":{"id":8064,"name":"onlyRole","nameLocations":["989:8:32"],"nodeType":"IdentifierPath","referencedDeclaration":199,"src":"989:8:32"},"nodeType":"ModifierInvocation","src":"989:21:32"}],"name":"mint","nameLocation":"928:4:32","nodeType":"FunctionDefinition","parameters":{"id":8063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8058,"mutability":"mutable","name":"to","nameLocation":"941:2:32","nodeType":"VariableDeclaration","scope":8088,"src":"933:10:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8057,"name":"address","nodeType":"ElementaryTypeName","src":"933:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8060,"mutability":"mutable","name":"productId","nameLocation":"953:9:32","nodeType":"VariableDeclaration","scope":8088,"src":"945:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8059,"name":"uint256","nodeType":"ElementaryTypeName","src":"945:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8062,"mutability":"mutable","name":"amount","nameLocation":"972:6:32","nodeType":"VariableDeclaration","scope":8088,"src":"964:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8061,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"932:47:32"},"returnParameters":{"id":8067,"nodeType":"ParameterList","parameters":[],"src":"1011:0:32"},"scope":8180,"src":"919:237:32","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[925],"body":{"id":8108,"nodeType":"Block","src":"1245:87:32","statements":[{"expression":{"arguments":[{"arguments":[{"id":8100,"name":"_baseUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8019,"src":"1286:8:32","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8101,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8090,"src":"1296:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1304:8:32","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":4193,"src":"1296:16:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":8103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1296:18:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2e6a736f6e","id":8104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1316:7:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972","typeString":"literal_string \".json\""},"value":".json"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972","typeString":"literal_string \".json\""}],"expression":{"id":8098,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1269:3:32","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1273:12:32","memberName":"encodePacked","nodeType":"MemberAccess","src":"1269:16:32","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1269:55:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1262:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":8096,"name":"string","nodeType":"ElementaryTypeName","src":"1262:6:32","typeDescriptions":{}}},"id":8106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1262:63:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":8095,"id":8107,"nodeType":"Return","src":"1255:70:32"}]},"functionSelector":"0e89341c","id":8109,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"1171:3:32","nodeType":"FunctionDefinition","overrides":{"id":8092,"nodeType":"OverrideSpecifier","overrides":[],"src":"1212:8:32"},"parameters":{"id":8091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8090,"mutability":"mutable","name":"tokenId","nameLocation":"1183:7:32","nodeType":"VariableDeclaration","scope":8109,"src":"1175:15:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8089,"name":"uint256","nodeType":"ElementaryTypeName","src":"1175:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1174:17:32"},"returnParameters":{"id":8095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8094,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8109,"src":"1230:13:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8093,"name":"string","nodeType":"ElementaryTypeName","src":"1230:6:32","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1229:15:32"},"scope":8180,"src":"1162:170:32","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":8125,"nodeType":"Block","src":"1418:71:32","statements":[{"expression":{"id":8119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8117,"name":"_baseUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8019,"src":"1428:8:32","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8118,"name":"newUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8111,"src":"1439:6:32","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1428:17:32","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":8120,"nodeType":"ExpressionStatement","src":"1428:17:32"},{"eventCall":{"arguments":[{"id":8122,"name":"newUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8111,"src":"1475:6:32","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8121,"name":"BaseURIUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8031,"src":"1460:14:32","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":8123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1460:22:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8124,"nodeType":"EmitStatement","src":"1455:27:32"}]},"functionSelector":"55f804b3","id":8126,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8114,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"1398:18:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8115,"kind":"modifierInvocation","modifierName":{"id":8113,"name":"onlyRole","nameLocations":["1389:8:32"],"nodeType":"IdentifierPath","referencedDeclaration":199,"src":"1389:8:32"},"nodeType":"ModifierInvocation","src":"1389:28:32"}],"name":"setBaseURI","nameLocation":"1347:10:32","nodeType":"FunctionDefinition","parameters":{"id":8112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8111,"mutability":"mutable","name":"newUri","nameLocation":"1372:6:32","nodeType":"VariableDeclaration","scope":8126,"src":"1358:20:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8110,"name":"string","nodeType":"ElementaryTypeName","src":"1358:6:32","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1357:22:32"},"returnParameters":{"id":8116,"nodeType":"ParameterList","parameters":[],"src":"1418:0:32"},"scope":8180,"src":"1338:151:32","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8137,"nodeType":"Block","src":"1567:49:32","statements":[{"expression":{"baseExpression":{"id":8133,"name":"_productSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8017,"src":"1584:14:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":8135,"indexExpression":{"id":8134,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8128,"src":"1599:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1584:25:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8132,"id":8136,"nodeType":"Return","src":"1577:32:32"}]},"functionSelector":"ef8593e7","id":8138,"implemented":true,"kind":"function","modifiers":[],"name":"productSupply","nameLocation":"1504:13:32","nodeType":"FunctionDefinition","parameters":{"id":8129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8128,"mutability":"mutable","name":"productId","nameLocation":"1526:9:32","nodeType":"VariableDeclaration","scope":8138,"src":"1518:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8127,"name":"uint256","nodeType":"ElementaryTypeName","src":"1518:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1517:19:32"},"returnParameters":{"id":8132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8131,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8138,"src":"1558:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8130,"name":"uint256","nodeType":"ElementaryTypeName","src":"1558:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1557:9:32"},"scope":8180,"src":"1495:121:32","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8162,"nodeType":"Block","src":"1716:92:32","statements":[{"expression":{"arguments":[{"id":8151,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8140,"src":"1732:4:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8152,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8142,"src":"1738:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8153,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8144,"src":"1749:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8150,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"1726:5:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":8154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1726:30:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8155,"nodeType":"ExpressionStatement","src":"1726:30:32"},{"expression":{"id":8160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8156,"name":"_productSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8017,"src":"1766:14:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":8158,"indexExpression":{"id":8157,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8142,"src":"1781:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1766:25:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":8159,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8144,"src":"1795:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1766:35:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8161,"nodeType":"ExpressionStatement","src":"1766:35:32"}]},"functionSelector":"f5298aca","id":8163,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8147,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8013,"src":"1703:11:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8148,"kind":"modifierInvocation","modifierName":{"id":8146,"name":"onlyRole","nameLocations":["1694:8:32"],"nodeType":"IdentifierPath","referencedDeclaration":199,"src":"1694:8:32"},"nodeType":"ModifierInvocation","src":"1694:21:32"}],"name":"burn","nameLocation":"1631:4:32","nodeType":"FunctionDefinition","parameters":{"id":8145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8140,"mutability":"mutable","name":"from","nameLocation":"1644:4:32","nodeType":"VariableDeclaration","scope":8163,"src":"1636:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8139,"name":"address","nodeType":"ElementaryTypeName","src":"1636:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8142,"mutability":"mutable","name":"productId","nameLocation":"1658:9:32","nodeType":"VariableDeclaration","scope":8163,"src":"1650:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8141,"name":"uint256","nodeType":"ElementaryTypeName","src":"1650:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8144,"mutability":"mutable","name":"amount","nameLocation":"1677:6:32","nodeType":"VariableDeclaration","scope":8163,"src":"1669:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8143,"name":"uint256","nodeType":"ElementaryTypeName","src":"1669:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1635:49:32"},"returnParameters":{"id":8149,"nodeType":"ParameterList","parameters":[],"src":"1716:0:32"},"scope":8180,"src":"1622:186:32","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[221,914],"body":{"id":8178,"nodeType":"Block","src":"1982:60:32","statements":[{"expression":{"arguments":[{"id":8175,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8165,"src":"2023:11:32","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":8173,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1999:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ProductToken_$8180_$","typeString":"type(contract super ProductToken)"}},"id":8174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2005:17:32","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":221,"src":"1999:23:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":8176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1999:36:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8172,"id":8177,"nodeType":"Return","src":"1992:43:32"}]},"functionSelector":"01ffc9a7","id":8179,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1848:17:32","nodeType":"FunctionDefinition","overrides":{"id":8169,"nodeType":"OverrideSpecifier","overrides":[{"id":8167,"name":"ERC1155","nameLocations":["1931:7:32"],"nodeType":"IdentifierPath","referencedDeclaration":1739,"src":"1931:7:32"},{"id":8168,"name":"AccessControl","nameLocations":["1940:13:32"],"nodeType":"IdentifierPath","referencedDeclaration":454,"src":"1940:13:32"}],"src":"1922:32:32"},"parameters":{"id":8166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8165,"mutability":"mutable","name":"interfaceId","nameLocation":"1873:11:32","nodeType":"VariableDeclaration","scope":8179,"src":"1866:18:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":8164,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1866:6:32","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1865:20:32"},"returnParameters":{"id":8172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8179,"src":"1972:4:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8170,"name":"bool","nodeType":"ElementaryTypeName","src":"1972:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1971:6:32"},"scope":8180,"src":"1839:203:32","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":8181,"src":"230:1814:32","usedErrors":[464,467,787,792,797,804,809,814,821],"usedEvents":[476,485,494,1759,1774,1783,1790,8027,8031]}],"src":"32:2013:32"},"id":32},"contracts/USDCFundraiser.sol":{"ast":{"absolutePath":"contracts/USDCFundraiser.sol","exportedSymbols":{"AccessControl":[454],"Arrays":[3571],"AutomationBase":[37],"AutomationCompatible":[48],"AutomationCompatibleInterface":[67],"Context":[3633],"ERC1155":[1739],"ERC1155Utils":[2074],"ERC165":[4469],"IAccessControl":[537],"IAutomationForwarder":[103],"IAutomationRegistrar":[9219],"IAutomationRegistryConsumer":[150],"IERC1155":[1862],"IERC1155Errors":[822],"IERC1155MetadataURI":[1920],"IERC165":[4481],"IERC20":[2667],"Math":[6087],"Ownable":[685],"Pausable":[3802],"ProductToken":[8180],"ReentrancyGuard":[3871],"SignedMath":[7996],"Strings":[4445],"USDCFundraiser":[9180]},"id":9181,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8182,"literals":["solidity","^","0.8",".27"],"nodeType":"PragmaDirective","src":"32:24:33"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":8183,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9181,"sourceUnit":2668,"src":"58:56:33","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":8184,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9181,"sourceUnit":686,"src":"115:52:33","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","file":"@openzeppelin/contracts/utils/Pausable.sol","id":8185,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9181,"sourceUnit":3803,"src":"168:52:33","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":8186,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9181,"sourceUnit":3872,"src":"221:59:33","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol","file":"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol","id":8187,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9181,"sourceUnit":49,"src":"281:75:33","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/ProductToken.sol","file":"./ProductToken.sol","id":8188,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9181,"sourceUnit":8181,"src":"357:28:33","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IAutomationRegistrar.sol","file":"./interfaces/IAutomationRegistrar.sol","id":8189,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9181,"sourceUnit":9220,"src":"386:47:33","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/automation/interfaces/IAutomationRegistryConsumer.sol","file":"@chainlink/contracts/src/v0.8/automation/interfaces/IAutomationRegistryConsumer.sol","id":8191,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9181,"sourceUnit":151,"src":"434:132:33","symbolAliases":[{"foreign":{"id":8190,"name":"IAutomationRegistryConsumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"442:27:33","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/automation/interfaces/IAutomationForwarder.sol","file":"@chainlink/contracts/src/v0.8/automation/interfaces/IAutomationForwarder.sol","id":8193,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9181,"sourceUnit":104,"src":"567:114:33","symbolAliases":[{"foreign":{"id":8192,"name":"IAutomationForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"575:20:33","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8194,"name":"Ownable","nameLocations":["710:7:33"],"nodeType":"IdentifierPath","referencedDeclaration":685,"src":"710:7:33"},"id":8195,"nodeType":"InheritanceSpecifier","src":"710:7:33"},{"baseName":{"id":8196,"name":"Pausable","nameLocations":["719:8:33"],"nodeType":"IdentifierPath","referencedDeclaration":3802,"src":"719:8:33"},"id":8197,"nodeType":"InheritanceSpecifier","src":"719:8:33"},{"baseName":{"id":8198,"name":"ReentrancyGuard","nameLocations":["729:15:33"],"nodeType":"IdentifierPath","referencedDeclaration":3871,"src":"729:15:33"},"id":8199,"nodeType":"InheritanceSpecifier","src":"729:15:33"},{"baseName":{"id":8200,"name":"AutomationCompatibleInterface","nameLocations":["746:29:33"],"nodeType":"IdentifierPath","referencedDeclaration":67,"src":"746:29:33"},"id":8201,"nodeType":"InheritanceSpecifier","src":"746:29:33"}],"canonicalName":"USDCFundraiser","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9180,"linearizedBaseContracts":[9180,67,3871,3802,685,3633],"name":"USDCFundraiser","nameLocation":"692:14:33","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"3e413bee","id":8204,"mutability":"mutable","name":"usdc","nameLocation":"796:4:33","nodeType":"VariableDeclaration","scope":9180,"src":"782:18:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2667","typeString":"contract IERC20"},"typeName":{"id":8203,"nodeType":"UserDefinedTypeName","pathNode":{"id":8202,"name":"IERC20","nameLocations":["782:6:33"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"782:6:33"},"referencedDeclaration":2667,"src":"782:6:33","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2667","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"25b4f65f","id":8207,"mutability":"mutable","name":"productToken","nameLocation":"826:12:33","nodeType":"VariableDeclaration","scope":9180,"src":"806:32:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ProductToken_$8180","typeString":"contract ProductToken"},"typeName":{"id":8206,"nodeType":"UserDefinedTypeName","pathNode":{"id":8205,"name":"ProductToken","nameLocations":["806:12:33"],"nodeType":"IdentifierPath","referencedDeclaration":8180,"src":"806:12:33"},"referencedDeclaration":8180,"src":"806:12:33","typeDescriptions":{"typeIdentifier":"t_contract$_ProductToken_$8180","typeString":"contract ProductToken"}},"visibility":"public"},{"constant":false,"functionSelector":"c9788631","id":8209,"mutability":"mutable","name":"beneficiaryWallet","nameLocation":"859:17:33","nodeType":"VariableDeclaration","scope":9180,"src":"844:32:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8208,"name":"address","nodeType":"ElementaryTypeName","src":"844:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"f25f4b56","id":8211,"mutability":"mutable","name":"feeWallet","nameLocation":"897:9:33","nodeType":"VariableDeclaration","scope":9180,"src":"882:24:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8210,"name":"address","nodeType":"ElementaryTypeName","src":"882:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"42235da6","id":8213,"mutability":"mutable","name":"minimumTarget","nameLocation":"927:13:33","nodeType":"VariableDeclaration","scope":9180,"src":"912:28:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8212,"name":"uint256","nodeType":"ElementaryTypeName","src":"912:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"29dcb0cf","id":8215,"mutability":"mutable","name":"deadline","nameLocation":"961:8:33","nodeType":"VariableDeclaration","scope":9180,"src":"946:23:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8214,"name":"uint256","nodeType":"ElementaryTypeName","src":"946:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"2897f6a0","id":8217,"mutability":"mutable","name":"enforceConditions","nameLocation":"987:17:33","nodeType":"VariableDeclaration","scope":9180,"src":"975:29:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8216,"name":"bool","nodeType":"ElementaryTypeName","src":"975:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"a001ecdd","id":8219,"mutability":"mutable","name":"feePercentage","nameLocation":"1025:13:33","nodeType":"VariableDeclaration","scope":9180,"src":"1010:28:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8218,"name":"uint256","nodeType":"ElementaryTypeName","src":"1010:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"fc7e286d","id":8223,"mutability":"mutable","name":"deposits","nameLocation":"1129:8:33","nodeType":"VariableDeclaration","scope":9180,"src":"1094:43:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":8222,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8220,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1094:27:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8221,"name":"uint256","nodeType":"ElementaryTypeName","src":"1113:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"c5c4744c","id":8225,"mutability":"mutable","name":"totalRaised","nameLocation":"1158:11:33","nodeType":"VariableDeclaration","scope":9180,"src":"1143:26:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8224,"name":"uint256","nodeType":"ElementaryTypeName","src":"1143:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"b3f05b97","id":8227,"mutability":"mutable","name":"finalized","nameLocation":"1187:9:33","nodeType":"VariableDeclaration","scope":9180,"src":"1175:21:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8226,"name":"bool","nodeType":"ElementaryTypeName","src":"1175:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"id":8229,"mutability":"mutable","name":"currentTokenId","nameLocation":"1218:14:33","nodeType":"VariableDeclaration","scope":9180,"src":"1202:30:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8228,"name":"uint256","nodeType":"ElementaryTypeName","src":"1202:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"functionSelector":"66bff1db","id":8233,"mutability":"mutable","name":"tokenDeposits","nameLocation":"1273:13:33","nodeType":"VariableDeclaration","scope":9180,"src":"1238:48:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":8232,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8230,"name":"uint256","nodeType":"ElementaryTypeName","src":"1246:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1238:27:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8231,"name":"uint256","nodeType":"ElementaryTypeName","src":"1257:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"38eb6a19","id":8237,"mutability":"mutable","name":"productPrices","nameLocation":"1356:13:33","nodeType":"VariableDeclaration","scope":9180,"src":"1321:48:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":8236,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8234,"name":"uint256","nodeType":"ElementaryTypeName","src":"1329:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1321:27:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8235,"name":"uint256","nodeType":"ElementaryTypeName","src":"1340:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"id":8239,"mutability":"mutable","name":"CHAINLINK_REGISTRAR","nameLocation":"1384:19:33","nodeType":"VariableDeclaration","scope":9180,"src":"1376:27:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8238,"name":"address","nodeType":"ElementaryTypeName","src":"1376:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8241,"mutability":"mutable","name":"CHAINLINK_REGISTRY","nameLocation":"1417:18:33","nodeType":"VariableDeclaration","scope":9180,"src":"1409:26:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8240,"name":"address","nodeType":"ElementaryTypeName","src":"1409:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8243,"mutability":"mutable","name":"LINK_TOKEN","nameLocation":"1449:10:33","nodeType":"VariableDeclaration","scope":9180,"src":"1441:18:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8242,"name":"address","nodeType":"ElementaryTypeName","src":"1441:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8245,"mutability":"mutable","name":"CHAINLINK_REGISTRAR_SELECTOR","nameLocation":"1472:28:33","nodeType":"VariableDeclaration","scope":9180,"src":"1465:35:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":8244,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1465:6:33","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":8247,"mutability":"mutable","name":"isRegisteredWithChainlink","nameLocation":"1511:25:33","nodeType":"VariableDeclaration","scope":9180,"src":"1506:30:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8246,"name":"bool","nodeType":"ElementaryTypeName","src":"1506:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8249,"mutability":"mutable","name":"s_stationUpkeepID","nameLocation":"1551:17:33","nodeType":"VariableDeclaration","scope":9180,"src":"1543:25:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8248,"name":"uint256","nodeType":"ElementaryTypeName","src":"1543:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8252,"mutability":"mutable","name":"s_forwarder","nameLocation":"1595:11:33","nodeType":"VariableDeclaration","scope":9180,"src":"1574:32:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAutomationForwarder_$103","typeString":"contract IAutomationForwarder"},"typeName":{"id":8251,"nodeType":"UserDefinedTypeName","pathNode":{"id":8250,"name":"IAutomationForwarder","nameLocations":["1574:20:33"],"nodeType":"IdentifierPath","referencedDeclaration":103,"src":"1574:20:33"},"referencedDeclaration":103,"src":"1574:20:33","typeDescriptions":{"typeIdentifier":"t_contract$_IAutomationForwarder_$103","typeString":"contract IAutomationForwarder"}},"visibility":"internal"},{"constant":false,"id":8254,"mutability":"mutable","name":"s_registerUpkeepSelector","nameLocation":"1619:24:33","nodeType":"VariableDeclaration","scope":9180,"src":"1612:31:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":8253,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1612:6:33","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"body":{"id":8261,"nodeType":"Block","src":"1710:41:33","statements":[{"expression":{"id":8259,"name":"s_stationUpkeepID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8249,"src":"1727:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8258,"id":8260,"nodeType":"Return","src":"1720:24:33"}]},"functionSelector":"02f8baa1","id":8262,"implemented":true,"kind":"function","modifiers":[],"name":"getStationUpkeepID","nameLocation":"1659:18:33","nodeType":"FunctionDefinition","parameters":{"id":8255,"nodeType":"ParameterList","parameters":[],"src":"1677:2:33"},"returnParameters":{"id":8258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8257,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8262,"src":"1701:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8256,"name":"uint256","nodeType":"ElementaryTypeName","src":"1701:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1700:9:33"},"scope":9180,"src":"1650:101:33","stateMutability":"view","virtual":false,"visibility":"public"},{"canonicalName":"USDCFundraiser.RegistrationParams","id":8283,"members":[{"constant":false,"id":8264,"mutability":"mutable","name":"name","nameLocation":"1800:4:33","nodeType":"VariableDeclaration","scope":8283,"src":"1793:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8263,"name":"string","nodeType":"ElementaryTypeName","src":"1793:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8266,"mutability":"mutable","name":"encryptedEmail","nameLocation":"1820:14:33","nodeType":"VariableDeclaration","scope":8283,"src":"1814:20:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":8265,"name":"bytes","nodeType":"ElementaryTypeName","src":"1814:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8268,"mutability":"mutable","name":"upkeepContract","nameLocation":"1852:14:33","nodeType":"VariableDeclaration","scope":8283,"src":"1844:22:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8267,"name":"address","nodeType":"ElementaryTypeName","src":"1844:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8270,"mutability":"mutable","name":"gasLimit","nameLocation":"1883:8:33","nodeType":"VariableDeclaration","scope":8283,"src":"1876:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8269,"name":"uint32","nodeType":"ElementaryTypeName","src":"1876:6:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8272,"mutability":"mutable","name":"adminAddress","nameLocation":"1909:12:33","nodeType":"VariableDeclaration","scope":8283,"src":"1901:20:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8271,"name":"address","nodeType":"ElementaryTypeName","src":"1901:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8274,"mutability":"mutable","name":"triggerType","nameLocation":"1937:11:33","nodeType":"VariableDeclaration","scope":8283,"src":"1931:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8273,"name":"uint8","nodeType":"ElementaryTypeName","src":"1931:5:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":8276,"mutability":"mutable","name":"checkData","nameLocation":"1964:9:33","nodeType":"VariableDeclaration","scope":8283,"src":"1958:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":8275,"name":"bytes","nodeType":"ElementaryTypeName","src":"1958:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8278,"mutability":"mutable","name":"triggerConfig","nameLocation":"1989:13:33","nodeType":"VariableDeclaration","scope":8283,"src":"1983:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":8277,"name":"bytes","nodeType":"ElementaryTypeName","src":"1983:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8280,"mutability":"mutable","name":"offchainConfig","nameLocation":"2018:14:33","nodeType":"VariableDeclaration","scope":8283,"src":"2012:20:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":8279,"name":"bytes","nodeType":"ElementaryTypeName","src":"2012:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8282,"mutability":"mutable","name":"amount","nameLocation":"2049:6:33","nodeType":"VariableDeclaration","scope":8283,"src":"2042:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8281,"name":"uint96","nodeType":"ElementaryTypeName","src":"2042:6:33","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"name":"RegistrationParams","nameLocation":"1764:18:33","nodeType":"StructDefinition","scope":9180,"src":"1757:305:33","visibility":"public"},{"anonymous":false,"eventSelector":"90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15","id":8291,"name":"Deposit","nameLocation":"2074:7:33","nodeType":"EventDefinition","parameters":{"id":8290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8285,"indexed":true,"mutability":"mutable","name":"depositor","nameLocation":"2098:9:33","nodeType":"VariableDeclaration","scope":8291,"src":"2082:25:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8284,"name":"address","nodeType":"ElementaryTypeName","src":"2082:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8287,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2117:6:33","nodeType":"VariableDeclaration","scope":8291,"src":"2109:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8286,"name":"uint256","nodeType":"ElementaryTypeName","src":"2109:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8289,"indexed":false,"mutability":"mutable","name":"fee","nameLocation":"2133:3:33","nodeType":"VariableDeclaration","scope":8291,"src":"2125:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8288,"name":"uint256","nodeType":"ElementaryTypeName","src":"2125:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2081:56:33"},"src":"2068:70:33"},{"anonymous":false,"eventSelector":"bb28353e4598c3b9199101a66e0989549b659a59a54d2c27fbb183f1932c8e6d","id":8297,"name":"Refund","nameLocation":"2149:6:33","nodeType":"EventDefinition","parameters":{"id":8296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8293,"indexed":true,"mutability":"mutable","name":"depositor","nameLocation":"2172:9:33","nodeType":"VariableDeclaration","scope":8297,"src":"2156:25:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8292,"name":"address","nodeType":"ElementaryTypeName","src":"2156:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8295,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2191:6:33","nodeType":"VariableDeclaration","scope":8297,"src":"2183:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8294,"name":"uint256","nodeType":"ElementaryTypeName","src":"2183:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2155:43:33"},"src":"2143:56:33"},{"anonymous":false,"eventSelector":"221c08a06b07a64803b3787861a3f276212fcccb51c2e6234077a9b8cb13047a","id":8303,"name":"FundsReleased","nameLocation":"2210:13:33","nodeType":"EventDefinition","parameters":{"id":8302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8299,"indexed":true,"mutability":"mutable","name":"beneficiary","nameLocation":"2240:11:33","nodeType":"VariableDeclaration","scope":8303,"src":"2224:27:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8298,"name":"address","nodeType":"ElementaryTypeName","src":"2224:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8301,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2261:6:33","nodeType":"VariableDeclaration","scope":8303,"src":"2253:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8300,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2223:45:33"},"src":"2204:65:33"},{"anonymous":false,"eventSelector":"8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c76","id":8307,"name":"FeeUpdated","nameLocation":"2280:10:33","nodeType":"EventDefinition","parameters":{"id":8306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8305,"indexed":false,"mutability":"mutable","name":"newFeePercentage","nameLocation":"2299:16:33","nodeType":"VariableDeclaration","scope":8307,"src":"2291:24:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8304,"name":"uint256","nodeType":"ElementaryTypeName","src":"2291:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:26:33"},"src":"2274:43:33"},{"anonymous":false,"eventSelector":"5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695","id":8313,"name":"EmergencyWithdraw","nameLocation":"2328:17:33","nodeType":"EventDefinition","parameters":{"id":8312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8309,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2362:2:33","nodeType":"VariableDeclaration","scope":8313,"src":"2346:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8308,"name":"address","nodeType":"ElementaryTypeName","src":"2346:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8311,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2374:6:33","nodeType":"VariableDeclaration","scope":8313,"src":"2366:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8310,"name":"uint256","nodeType":"ElementaryTypeName","src":"2366:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2345:36:33"},"src":"2322:60:33"},{"anonymous":false,"eventSelector":"b751835a12376750bd69b4b4c0c1d306480284514d2fa88f72edf3eeea8515f6","id":8319,"name":"ProductPriceSet","nameLocation":"2393:15:33","nodeType":"EventDefinition","parameters":{"id":8318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8315,"indexed":false,"mutability":"mutable","name":"productId","nameLocation":"2417:9:33","nodeType":"VariableDeclaration","scope":8319,"src":"2409:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8314,"name":"uint256","nodeType":"ElementaryTypeName","src":"2409:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8317,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"2436:5:33","nodeType":"VariableDeclaration","scope":8319,"src":"2428:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8316,"name":"uint256","nodeType":"ElementaryTypeName","src":"2428:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2408:34:33"},"src":"2387:56:33"},{"anonymous":false,"eventSelector":"3c5ad147104e56be34a9176a6692f7df8d2f4b29a5af06bc6b98970d329d6577","id":8325,"name":"Debug","nameLocation":"2454:5:33","nodeType":"EventDefinition","parameters":{"id":8324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8321,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"2467:7:33","nodeType":"VariableDeclaration","scope":8325,"src":"2460:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8320,"name":"string","nodeType":"ElementaryTypeName","src":"2460:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8323,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"2484:5:33","nodeType":"VariableDeclaration","scope":8325,"src":"2476:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8322,"name":"uint256","nodeType":"ElementaryTypeName","src":"2476:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2459:31:33"},"src":"2448:43:33"},{"anonymous":false,"eventSelector":"d54ba61ed4070561dcc6d272cdd44f051344b2c11b31180228f79dcb0003cf83","id":8331,"name":"DebugBytes","nameLocation":"2502:10:33","nodeType":"EventDefinition","parameters":{"id":8330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8327,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"2520:7:33","nodeType":"VariableDeclaration","scope":8331,"src":"2513:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8326,"name":"string","nodeType":"ElementaryTypeName","src":"2513:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8329,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"2535:5:33","nodeType":"VariableDeclaration","scope":8331,"src":"2529:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8328,"name":"bytes","nodeType":"ElementaryTypeName","src":"2529:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2512:29:33"},"src":"2496:46:33"},{"anonymous":false,"eventSelector":"9ecfd97bf22760e90779a4364f3646d6cbb7e6207b75280c803ca569a34234a0","id":8335,"name":"ForwarderChanged","nameLocation":"2553:16:33","nodeType":"EventDefinition","parameters":{"id":8334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8333,"indexed":true,"mutability":"mutable","name":"forwarder","nameLocation":"2586:9:33","nodeType":"VariableDeclaration","scope":8335,"src":"2570:25:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8332,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:27:33"},"src":"2547:50:33"},{"anonymous":false,"eventSelector":"966a2cf4da2fe388fb461e726e2765451662471d3e61fb50c4191dd71434cb58","id":8337,"name":"UpkeepPerformed","nameLocation":"2608:15:33","nodeType":"EventDefinition","parameters":{"id":8336,"nodeType":"ParameterList","parameters":[],"src":"2623:2:33"},"src":"2602:24:33"},{"body":{"id":8512,"nodeType":"Block","src":"3118:1237:33","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8373,"name":"_usdcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8339,"src":"3136:12:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3160:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3152:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8374,"name":"address","nodeType":"ElementaryTypeName","src":"3152:7:33","typeDescriptions":{}}},"id":8377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3152:10:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3136:26:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420555344432061646472657373","id":8379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3164:22:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_768308344d94e849ff3f5e31c8c5ffd3ba25816fc055df9374d86b549adb5dbe","typeString":"literal_string \"Invalid USDC address\""},"value":"Invalid USDC address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_768308344d94e849ff3f5e31c8c5ffd3ba25816fc055df9374d86b549adb5dbe","typeString":"literal_string \"Invalid USDC address\""}],"id":8372,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3128:7:33","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3128:59:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8381,"nodeType":"ExpressionStatement","src":"3128:59:33"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8383,"name":"_beneficiaryWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8341,"src":"3205:18:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3235:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3227:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8384,"name":"address","nodeType":"ElementaryTypeName","src":"3227:7:33","typeDescriptions":{}}},"id":8387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3227:10:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3205:32:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642062656e65666963696172792077616c6c6574","id":8389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3239:28:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_4fb404270f8671c9d22f0c1969164c9acfaa49b30ad7eb4e563457da2ef849f5","typeString":"literal_string \"Invalid beneficiary wallet\""},"value":"Invalid beneficiary wallet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4fb404270f8671c9d22f0c1969164c9acfaa49b30ad7eb4e563457da2ef849f5","typeString":"literal_string \"Invalid beneficiary wallet\""}],"id":8382,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3197:7:33","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3197:71:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8391,"nodeType":"ExpressionStatement","src":"3197:71:33"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8393,"name":"_feeWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8343,"src":"3286:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3308:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3300:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8394,"name":"address","nodeType":"ElementaryTypeName","src":"3300:7:33","typeDescriptions":{}}},"id":8397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3300:10:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3286:24:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206665652077616c6c6574","id":8399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3312:20:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_4a20e95700812c61fc815a3eafd2b14e7c5b30d1b7fda875401c829c7555a76b","typeString":"literal_string \"Invalid fee wallet\""},"value":"Invalid fee wallet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4a20e95700812c61fc815a3eafd2b14e7c5b30d1b7fda875401c829c7555a76b","typeString":"literal_string \"Invalid fee wallet\""}],"id":8392,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3278:7:33","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3278:55:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8401,"nodeType":"ExpressionStatement","src":"3278:55:33"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8403,"name":"_productIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8354,"src":"3351:11:33","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":8404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3363:6:33","memberName":"length","nodeType":"MemberAccess","src":"3351:18:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8405,"name":"_productPrices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8357,"src":"3373:14:33","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":8406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3388:6:33","memberName":"length","nodeType":"MemberAccess","src":"3373:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3351:43:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"417272617973206c656e677468206d69736d61746368","id":8408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3396:24:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c","typeString":"literal_string \"Arrays length mismatch\""},"value":"Arrays length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c","typeString":"literal_string \"Arrays length mismatch\""}],"id":8402,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3343:7:33","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3343:78:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8410,"nodeType":"ExpressionStatement","src":"3343:78:33"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8412,"name":"_productIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8354,"src":"3439:11:33","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":8413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3451:6:33","memberName":"length","nodeType":"MemberAccess","src":"3439:18:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3460:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3439:22:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2070726f64756374732070726f7669646564","id":8416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3463:22:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_89dd7ec0cefe3769075e8d91de553b100c1372baa96efb8c12d11e65d967cf42","typeString":"literal_string \"No products provided\""},"value":"No products provided"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_89dd7ec0cefe3769075e8d91de553b100c1372baa96efb8c12d11e65d967cf42","typeString":"literal_string \"No products provided\""}],"id":8411,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3431:7:33","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3431:55:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8418,"nodeType":"ExpressionStatement","src":"3431:55:33"},{"expression":{"id":8423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8419,"name":"usdc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8204,"src":"3505:4:33","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2667","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8421,"name":"_usdcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8339,"src":"3519:12:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8420,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"3512:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2667_$","typeString":"type(contract IERC20)"}},"id":8422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3512:20:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2667","typeString":"contract IERC20"}},"src":"3505:27:33","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2667","typeString":"contract IERC20"}},"id":8424,"nodeType":"ExpressionStatement","src":"3505:27:33"},{"expression":{"id":8427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8425,"name":"beneficiaryWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8209,"src":"3542:17:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8426,"name":"_beneficiaryWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8341,"src":"3562:18:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3542:38:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8428,"nodeType":"ExpressionStatement","src":"3542:38:33"},{"expression":{"id":8431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8429,"name":"feeWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8211,"src":"3590:9:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8430,"name":"_feeWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8343,"src":"3602:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3590:22:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8432,"nodeType":"ExpressionStatement","src":"3590:22:33"},{"expression":{"id":8435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8433,"name":"minimumTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8213,"src":"3622:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8434,"name":"_minimumTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8345,"src":"3638:14:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3622:30:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8436,"nodeType":"ExpressionStatement","src":"3622:30:33"},{"expression":{"id":8439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8437,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8215,"src":"3662:8:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8438,"name":"_deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8347,"src":"3673:9:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3662:20:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8440,"nodeType":"ExpressionStatement","src":"3662:20:33"},{"expression":{"id":8443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8441,"name":"enforceConditions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8217,"src":"3692:17:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8442,"name":"_enforceConditions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8349,"src":"3712:18:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3692:38:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8444,"nodeType":"ExpressionStatement","src":"3692:38:33"},{"expression":{"id":8447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8445,"name":"feePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8219,"src":"3740:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"323530","id":8446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3756:3:33","typeDescriptions":{"typeIdentifier":"t_rational_250_by_1","typeString":"int_const 250"},"value":"250"},"src":"3740:19:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8448,"nodeType":"ExpressionStatement","src":"3740:19:33"},{"expression":{"id":8453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8449,"name":"productToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8207,"src":"3789:12:33","typeDescriptions":{"typeIdentifier":"t_contract$_ProductToken_$8180","typeString":"contract ProductToken"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8451,"name":"_productTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8351,"src":"3817:20:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8450,"name":"ProductToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"3804:12:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ProductToken_$8180_$","typeString":"type(contract ProductToken)"}},"id":8452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3804:34:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ProductToken_$8180","typeString":"contract ProductToken"}},"src":"3789:49:33","typeDescriptions":{"typeIdentifier":"t_contract$_ProductToken_$8180","typeString":"contract ProductToken"}},"id":8454,"nodeType":"ExpressionStatement","src":"3789:49:33"},{"body":{"id":8494,"nodeType":"Block","src":"3935:212:33","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8467,"name":"_productPrices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8357,"src":"3957:14:33","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":8469,"indexExpression":{"id":8468,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8456,"src":"3972:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3957:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3977:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3957:21:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642070726f64756374207072696365","id":8472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3980:23:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a01df042e0d631eda59ceb6fb129bc3e9a3051d9aa3dae4410cfef799bcf831","typeString":"literal_string \"Invalid product price\""},"value":"Invalid product price"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a01df042e0d631eda59ceb6fb129bc3e9a3051d9aa3dae4410cfef799bcf831","typeString":"literal_string \"Invalid product price\""}],"id":8466,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3949:7:33","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3949:55:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8474,"nodeType":"ExpressionStatement","src":"3949:55:33"},{"expression":{"id":8483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8475,"name":"productPrices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8237,"src":"4018:13:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":8479,"indexExpression":{"baseExpression":{"id":8476,"name":"_productIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8354,"src":"4032:11:33","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":8478,"indexExpression":{"id":8477,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8456,"src":"4044:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4032:14:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4018:29:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":8480,"name":"_productPrices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8357,"src":"4050:14:33","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":8482,"indexExpression":{"id":8481,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8456,"src":"4065:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4050:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4018:49:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8484,"nodeType":"ExpressionStatement","src":"4018:49:33"},{"eventCall":{"arguments":[{"baseExpression":{"id":8486,"name":"_productIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8354,"src":"4102:11:33","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":8488,"indexExpression":{"id":8487,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8456,"src":"4114:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:14:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":8489,"name":"_productPrices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8357,"src":"4118:14:33","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":8491,"indexExpression":{"id":8490,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8456,"src":"4133:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4118:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8485,"name":"ProductPriceSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8319,"src":"4086:15:33","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":8492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:50:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8493,"nodeType":"EmitStatement","src":"4081:55:33"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8459,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8456,"src":"3906:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":8460,"name":"_productIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8354,"src":"3910:11:33","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":8461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3922:6:33","memberName":"length","nodeType":"MemberAccess","src":"3910:18:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3906:22:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8495,"initializationExpression":{"assignments":[8456],"declarations":[{"constant":false,"id":8456,"mutability":"mutable","name":"i","nameLocation":"3899:1:33","nodeType":"VariableDeclaration","scope":8495,"src":"3891:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8455,"name":"uint256","nodeType":"ElementaryTypeName","src":"3891:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8458,"initialValue":{"hexValue":"30","id":8457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3903:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3891:13:33"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":8464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3930:3:33","subExpression":{"id":8463,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8456,"src":"3930:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8465,"nodeType":"ExpressionStatement","src":"3930:3:33"},"nodeType":"ForStatement","src":"3887:260:33"},{"expression":{"id":8498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8496,"name":"LINK_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8243,"src":"4157:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8497,"name":"_linkToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8359,"src":"4170:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4157:23:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8499,"nodeType":"ExpressionStatement","src":"4157:23:33"},{"expression":{"id":8502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8500,"name":"CHAINLINK_REGISTRAR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8239,"src":"4190:19:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8501,"name":"_chainlinkRegistrar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8361,"src":"4212:19:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4190:41:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8503,"nodeType":"ExpressionStatement","src":"4190:41:33"},{"expression":{"id":8506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8504,"name":"CHAINLINK_REGISTRY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8241,"src":"4241:18:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8505,"name":"_chainlinkRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8363,"src":"4262:18:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4241:39:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8507,"nodeType":"ExpressionStatement","src":"4241:39:33"},{"expression":{"id":8510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8508,"name":"CHAINLINK_REGISTRAR_SELECTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8245,"src":"4290:28:33","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8509,"name":"_chainlinkRegistrarSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8365,"src":"4321:27:33","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"4290:58:33","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":8511,"nodeType":"ExpressionStatement","src":"4290:58:33"}]},"id":8513,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":8368,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3106:3:33","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3110:6:33","memberName":"sender","nodeType":"MemberAccess","src":"3106:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8370,"kind":"baseConstructorSpecifier","modifierName":{"id":8367,"name":"Ownable","nameLocations":["3098:7:33"],"nodeType":"IdentifierPath","referencedDeclaration":685,"src":"3098:7:33"},"nodeType":"ModifierInvocation","src":"3098:19:33"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8339,"mutability":"mutable","name":"_usdcAddress","nameLocation":"2661:12:33","nodeType":"VariableDeclaration","scope":8513,"src":"2653:20:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8338,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8341,"mutability":"mutable","name":"_beneficiaryWallet","nameLocation":"2691:18:33","nodeType":"VariableDeclaration","scope":8513,"src":"2683:26:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8340,"name":"address","nodeType":"ElementaryTypeName","src":"2683:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8343,"mutability":"mutable","name":"_feeWallet","nameLocation":"2727:10:33","nodeType":"VariableDeclaration","scope":8513,"src":"2719:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8342,"name":"address","nodeType":"ElementaryTypeName","src":"2719:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8345,"mutability":"mutable","name":"_minimumTarget","nameLocation":"2755:14:33","nodeType":"VariableDeclaration","scope":8513,"src":"2747:22:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8344,"name":"uint256","nodeType":"ElementaryTypeName","src":"2747:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8347,"mutability":"mutable","name":"_deadline","nameLocation":"2787:9:33","nodeType":"VariableDeclaration","scope":8513,"src":"2779:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8346,"name":"uint256","nodeType":"ElementaryTypeName","src":"2779:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8349,"mutability":"mutable","name":"_enforceConditions","nameLocation":"2811:18:33","nodeType":"VariableDeclaration","scope":8513,"src":"2806:23:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8348,"name":"bool","nodeType":"ElementaryTypeName","src":"2806:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8351,"mutability":"mutable","name":"_productTokenAddress","nameLocation":"2847:20:33","nodeType":"VariableDeclaration","scope":8513,"src":"2839:28:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8350,"name":"address","nodeType":"ElementaryTypeName","src":"2839:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8354,"mutability":"mutable","name":"_productIds","nameLocation":"2894:11:33","nodeType":"VariableDeclaration","scope":8513,"src":"2877:28:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8352,"name":"uint256","nodeType":"ElementaryTypeName","src":"2877:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8353,"nodeType":"ArrayTypeName","src":"2877:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":8357,"mutability":"mutable","name":"_productPrices","nameLocation":"2932:14:33","nodeType":"VariableDeclaration","scope":8513,"src":"2915:31:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8355,"name":"uint256","nodeType":"ElementaryTypeName","src":"2915:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8356,"nodeType":"ArrayTypeName","src":"2915:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":8359,"mutability":"mutable","name":"_linkToken","nameLocation":"2964:10:33","nodeType":"VariableDeclaration","scope":8513,"src":"2956:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8358,"name":"address","nodeType":"ElementaryTypeName","src":"2956:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8361,"mutability":"mutable","name":"_chainlinkRegistrar","nameLocation":"2992:19:33","nodeType":"VariableDeclaration","scope":8513,"src":"2984:27:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8360,"name":"address","nodeType":"ElementaryTypeName","src":"2984:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8363,"mutability":"mutable","name":"_chainlinkRegistry","nameLocation":"3029:18:33","nodeType":"VariableDeclaration","scope":8513,"src":"3021:26:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8362,"name":"address","nodeType":"ElementaryTypeName","src":"3021:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8365,"mutability":"mutable","name":"_chainlinkRegistrarSelector","nameLocation":"3064:27:33","nodeType":"VariableDeclaration","scope":8513,"src":"3057:34:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":8364,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3057:6:33","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2643:454:33"},"returnParameters":{"id":8371,"nodeType":"ParameterList","parameters":[],"src":"3118:0:33"},"scope":9180,"src":"2632:1723:33","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8634,"nodeType":"Block","src":"4451:1002:33","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8525,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8517,"src":"4469:8:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4480:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4469:12:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5175616e74697479206d7573742062652067726561746572207468616e2030","id":8528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4483:33:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_0256b2f79971b33d79a70471e25342b40a29973a9924f7bf65b61d253cc5e2ad","typeString":"literal_string \"Quantity must be greater than 0\""},"value":"Quantity must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0256b2f79971b33d79a70471e25342b40a29973a9924f7bf65b61d253cc5e2ad","typeString":"literal_string \"Quantity must be greater than 0\""}],"id":8524,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4461:7:33","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4461:56:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8530,"nodeType":"ExpressionStatement","src":"4461:56:33"},{"expression":{"arguments":[{"id":8533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4535:10:33","subExpression":{"id":8532,"name":"finalized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8227,"src":"4536:9:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e647261697365722069732066696e616c697a6564","id":8534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4547:25:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_0e10c2acff21fd9bdc778f1da1513ebcc8bd47c91168304207bd58e3ee272e87","typeString":"literal_string \"Fundraiser is finalized\""},"value":"Fundraiser is finalized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0e10c2acff21fd9bdc778f1da1513ebcc8bd47c91168304207bd58e3ee272e87","typeString":"literal_string \"Fundraiser is finalized\""}],"id":8531,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4527:7:33","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4527:46:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8536,"nodeType":"ExpressionStatement","src":"4527:46:33"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8538,"name":"productPrices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8237,"src":"4591:13:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":8540,"indexExpression":{"id":8539,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8515,"src":"4605:9:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4591:24:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4618:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4591:28:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f64756374206e6f7420617661696c61626c65","id":8543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4621:23:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_5b64a04ee2399719a13ccc9b67dde3fab166ade67e6d3994e0b405deed8fbf30","typeString":"literal_string \"Product not available\""},"value":"Product not available"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5b64a04ee2399719a13ccc9b67dde3fab166ade67e6d3994e0b405deed8fbf30","typeString":"literal_string \"Product not available\""}],"id":8537,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4583:7:33","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4583:62:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8545,"nodeType":"ExpressionStatement","src":"4583:62:33"},{"condition":{"id":8546,"name":"enforceConditions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8217,"src":"4668:17:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8556,"nodeType":"IfStatement","src":"4664:107:33","trueBody":{"id":8555,"nodeType":"Block","src":"4687:84:33","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8548,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4709:5:33","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4715:9:33","memberName":"timestamp","nodeType":"MemberAccess","src":"4709:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":8550,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8215,"src":"4728:8:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4709:27:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"446561646c696e652068617320706173736564","id":8552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4738:21:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_7421a191034bc374ccb6dd52063911398cf9e445e873b3cd1b99e7d03b2574c8","typeString":"literal_string \"Deadline has passed\""},"value":"Deadline has passed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7421a191034bc374ccb6dd52063911398cf9e445e873b3cd1b99e7d03b2574c8","typeString":"literal_string \"Deadline has passed\""}],"id":8547,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4701:7:33","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4701:59:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8554,"nodeType":"ExpressionStatement","src":"4701:59:33"}]}},{"assignments":[8558],"declarations":[{"constant":false,"id":8558,"mutability":"mutable","name":"totalAmount","nameLocation":"4789:11:33","nodeType":"VariableDeclaration","scope":8634,"src":"4781:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8557,"name":"uint256","nodeType":"ElementaryTypeName","src":"4781:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8564,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8559,"name":"productPrices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8237,"src":"4803:13:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":8561,"indexExpression":{"id":8560,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8515,"src":"4817:9:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4803:24:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8562,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8517,"src":"4830:8:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4803:35:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4781:57:33"},{"assignments":[8566],"declarations":[{"constant":false,"id":8566,"mutability":"mutable","name":"fee","nameLocation":"4856:3:33","nodeType":"VariableDeclaration","scope":8634,"src":"4848:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8565,"name":"uint256","nodeType":"ElementaryTypeName","src":"4848:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8573,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8567,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8558,"src":"4863:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8568,"name":"feePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8219,"src":"4877:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4863:27:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8570,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4862:29:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":8571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4894:5:33","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"4862:37:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4848:51:33"},{"assignments":[8575],"declarations":[{"constant":false,"id":8575,"mutability":"mutable","name":"netAmount","nameLocation":"4917:9:33","nodeType":"VariableDeclaration","scope":8634,"src":"4909:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8574,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8579,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8576,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8558,"src":"4929:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8577,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8566,"src":"4943:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4929:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4909:37:33"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":8583,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4983:3:33","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4987:6:33","memberName":"sender","nodeType":"MemberAccess","src":"4983:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":8587,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5003:4:33","typeDescriptions":{"typeIdentifier":"t_contract$_USDCFundraiser_$9180","typeString":"contract USDCFundraiser"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_USDCFundraiser_$9180","typeString":"contract USDCFundraiser"}],"id":8586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4995:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8585,"name":"address","nodeType":"ElementaryTypeName","src":"4995:7:33","typeDescriptions":{}}},"id":8588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4995:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8589,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8558,"src":"5010:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8581,"name":"usdc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8204,"src":"4965:4:33","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2667","typeString":"contract IERC20"}},"id":8582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4970:12:33","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":2666,"src":"4965:17:33","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":8590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4965:57:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206661696c6564","id":8591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5024:17:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""},"value":"Transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""}],"id":8580,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4957:7:33","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4957:85:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8593,"nodeType":"ExpressionStatement","src":"4957:85:33"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8594,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8566,"src":"5065:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5071:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5065:7:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8607,"nodeType":"IfStatement","src":"5061:99:33","trueBody":{"id":8606,"nodeType":"Block","src":"5074:86:33","statements":[{"expression":{"arguments":[{"arguments":[{"id":8600,"name":"feeWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8211,"src":"5110:9:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8601,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8566,"src":"5121:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8598,"name":"usdc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8204,"src":"5096:4:33","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2667","typeString":"contract IERC20"}},"id":8599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5101:8:33","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2634,"src":"5096:13:33","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":8602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5096:29:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466565207472616e73666572206661696c6564","id":8603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5127:21:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56","typeString":"literal_string \"Fee transfer failed\""},"value":"Fee transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56","typeString":"literal_string \"Fee transfer failed\""}],"id":8597,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5088:7:33","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5088:61:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8605,"nodeType":"ExpressionStatement","src":"5088:61:33"}]}},{"expression":{"arguments":[{"expression":{"id":8611,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5222:3:33","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5226:6:33","memberName":"sender","nodeType":"MemberAccess","src":"5222:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8613,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8515,"src":"5234:9:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8614,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8517,"src":"5245:8:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8608,"name":"productToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8207,"src":"5204:12:33","typeDescriptions":{"typeIdentifier":"t_contract$_ProductToken_$8180","typeString":"contract ProductToken"}},"id":8610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5217:4:33","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":8088,"src":"5204:17:33","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) external"}},"id":8615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5204:50:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8616,"nodeType":"ExpressionStatement","src":"5204:50:33"},{"expression":{"id":8621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8617,"name":"tokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8233,"src":"5322:13:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":8619,"indexExpression":{"id":8618,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8515,"src":"5336:9:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5322:24:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8620,"name":"netAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8575,"src":"5350:9:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5322:37:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8622,"nodeType":"ExpressionStatement","src":"5322:37:33"},{"expression":{"id":8625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8623,"name":"totalRaised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8225,"src":"5369:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8624,"name":"netAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8575,"src":"5384:9:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5369:24:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8626,"nodeType":"ExpressionStatement","src":"5369:24:33"},{"eventCall":{"arguments":[{"expression":{"id":8628,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5417:3:33","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5421:6:33","memberName":"sender","nodeType":"MemberAccess","src":"5417:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8630,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8558,"src":"5429:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8631,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8566,"src":"5442:3:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8627,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8291,"src":"5409:7:33","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":8632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5409:37:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8633,"nodeType":"EmitStatement","src":"5404:42:33"}]},"functionSelector":"e2bbb158","id":8635,"implemented":true,"kind":"function","modifiers":[{"id":8520,"kind":"modifierInvocation","modifierName":{"id":8519,"name":"nonReentrant","nameLocations":["4424:12:33"],"nodeType":"IdentifierPath","referencedDeclaration":3835,"src":"4424:12:33"},"nodeType":"ModifierInvocation","src":"4424:12:33"},{"id":8522,"kind":"modifierInvocation","modifierName":{"id":8521,"name":"whenNotPaused","nameLocations":["4437:13:33"],"nodeType":"IdentifierPath","referencedDeclaration":3727,"src":"4437:13:33"},"nodeType":"ModifierInvocation","src":"4437:13:33"}],"name":"deposit","nameLocation":"4370:7:33","nodeType":"FunctionDefinition","parameters":{"id":8518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8515,"mutability":"mutable","name":"productId","nameLocation":"4386:9:33","nodeType":"VariableDeclaration","scope":8635,"src":"4378:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8514,"name":"uint256","nodeType":"ElementaryTypeName","src":"4378:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8517,"mutability":"mutable","name":"quantity","nameLocation":"4405:8:33","nodeType":"VariableDeclaration","scope":8635,"src":"4397:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8516,"name":"uint256","nodeType":"ElementaryTypeName","src":"4397:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4377:37:33"},"returnParameters":{"id":8523,"nodeType":"ParameterList","parameters":[],"src":"4451:0:33"},"scope":9180,"src":"4361:1092:33","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8679,"nodeType":"Block","src":"5513:396:33","statements":[{"expression":{"arguments":[{"id":8644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5531:10:33","subExpression":{"id":8643,"name":"finalized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8227,"src":"5532:9:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c72656164792066696e616c697a6564","id":8645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5543:19:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_c608cfc2c91a4bb42b76b0a5c0095809a7e0bd210c6feb6ebdcb2905abc98251","typeString":"literal_string \"Already finalized\""},"value":"Already finalized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c608cfc2c91a4bb42b76b0a5c0095809a7e0bd210c6feb6ebdcb2905abc98251","typeString":"literal_string \"Already finalized\""}],"id":8642,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5523:7:33","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5523:40:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8647,"nodeType":"ExpressionStatement","src":"5523:40:33"},{"condition":{"id":8648,"name":"enforceConditions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8217,"src":"5577:17:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8673,"nodeType":"Block","src":"5837:40:33","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8670,"name":"_releaseFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8698,"src":"5851:13:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5851:15:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8672,"nodeType":"ExpressionStatement","src":"5851:15:33"}]},"id":8674,"nodeType":"IfStatement","src":"5573:304:33","trueBody":{"id":8669,"nodeType":"Block","src":"5596:235:33","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8650,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5618:5:33","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5624:9:33","memberName":"timestamp","nodeType":"MemberAccess","src":"5618:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8652,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8215,"src":"5636:8:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5618:26:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"446561646c696e65206e6f742072656163686564","id":8654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5646:22:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_53e292b015226176e474a9791766536fc304b6afdefdc8e17ad1e85a84510013","typeString":"literal_string \"Deadline not reached\""},"value":"Deadline not reached"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_53e292b015226176e474a9791766536fc304b6afdefdc8e17ad1e85a84510013","typeString":"literal_string \"Deadline not reached\""}],"id":8649,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5610:7:33","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5610:59:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8656,"nodeType":"ExpressionStatement","src":"5610:59:33"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8657,"name":"totalRaised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8225,"src":"5687:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":8658,"name":"minimumTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8213,"src":"5702:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5687:28:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8667,"nodeType":"Block","src":"5771:50:33","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8664,"name":"_processRefunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8742,"src":"5789:15:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:17:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8666,"nodeType":"ExpressionStatement","src":"5789:17:33"}]},"id":8668,"nodeType":"IfStatement","src":"5683:138:33","trueBody":{"id":8663,"nodeType":"Block","src":"5717:48:33","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8660,"name":"_releaseFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8698,"src":"5735:13:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5735:15:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8662,"nodeType":"ExpressionStatement","src":"5735:15:33"}]}}]}},{"expression":{"id":8677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8675,"name":"finalized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8227,"src":"5886:9:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5898:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5886:16:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8678,"nodeType":"ExpressionStatement","src":"5886:16:33"}]},"functionSelector":"4bb278f3","id":8680,"implemented":true,"kind":"function","modifiers":[{"id":8638,"kind":"modifierInvocation","modifierName":{"id":8637,"name":"nonReentrant","nameLocations":["5486:12:33"],"nodeType":"IdentifierPath","referencedDeclaration":3835,"src":"5486:12:33"},"nodeType":"ModifierInvocation","src":"5486:12:33"},{"id":8640,"kind":"modifierInvocation","modifierName":{"id":8639,"name":"whenNotPaused","nameLocations":["5499:13:33"],"nodeType":"IdentifierPath","referencedDeclaration":3727,"src":"5499:13:33"},"nodeType":"ModifierInvocation","src":"5499:13:33"}],"name":"finalize","nameLocation":"5468:8:33","nodeType":"FunctionDefinition","parameters":{"id":8636,"nodeType":"ParameterList","parameters":[],"src":"5476:2:33"},"returnParameters":{"id":8641,"nodeType":"ParameterList","parameters":[],"src":"5513:0:33"},"scope":9180,"src":"5459:450:33","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8697,"nodeType":"Block","src":"5948:150:33","statements":[{"expression":{"arguments":[{"arguments":[{"id":8686,"name":"beneficiaryWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8209,"src":"5980:17:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8687,"name":"totalRaised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8225,"src":"5999:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8684,"name":"usdc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8204,"src":"5966:4:33","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2667","typeString":"contract IERC20"}},"id":8685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5971:8:33","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2634,"src":"5966:13:33","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":8688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5966:45:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206661696c6564","id":8689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6013:17:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""},"value":"Transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""}],"id":8683,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5958:7:33","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5958:73:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8691,"nodeType":"ExpressionStatement","src":"5958:73:33"},{"eventCall":{"arguments":[{"id":8693,"name":"beneficiaryWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8209,"src":"6060:17:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8694,"name":"totalRaised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8225,"src":"6079:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8692,"name":"FundsReleased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8303,"src":"6046:13:33","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6046:45:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8696,"nodeType":"EmitStatement","src":"6041:50:33"}]},"id":8698,"implemented":true,"kind":"function","modifiers":[],"name":"_releaseFunds","nameLocation":"5924:13:33","nodeType":"FunctionDefinition","parameters":{"id":8681,"nodeType":"ParameterList","parameters":[],"src":"5937:2:33"},"returnParameters":{"id":8682,"nodeType":"ParameterList","parameters":[],"src":"5948:0:33"},"scope":9180,"src":"5915:183:33","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":8741,"nodeType":"Block","src":"6139:293:33","statements":[{"body":{"id":8739,"nodeType":"Block","src":"6212:214:33","statements":[{"assignments":[8714],"declarations":[{"constant":false,"id":8714,"mutability":"mutable","name":"amount","nameLocation":"6234:6:33","nodeType":"VariableDeclaration","scope":8739,"src":"6226:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8713,"name":"uint256","nodeType":"ElementaryTypeName","src":"6226:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8718,"initialValue":{"baseExpression":{"id":8715,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8223,"src":"6243:8:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8717,"indexExpression":{"id":8716,"name":"depositor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8702,"src":"6252:9:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6243:19:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6226:36:33"},{"expression":{"id":8723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8719,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8223,"src":"6276:8:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8721,"indexExpression":{"id":8720,"name":"depositor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8702,"src":"6285:9:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6276:19:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":8722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6298:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6276:23:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8724,"nodeType":"ExpressionStatement","src":"6276:23:33"},{"expression":{"arguments":[{"arguments":[{"id":8728,"name":"depositor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8702,"src":"6335:9:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8729,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8714,"src":"6346:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8726,"name":"usdc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8204,"src":"6321:4:33","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2667","typeString":"contract IERC20"}},"id":8727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6326:8:33","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2634,"src":"6321:13:33","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":8730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6321:32:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526566756e64206661696c6564","id":8731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6355:15:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e","typeString":"literal_string \"Refund failed\""},"value":"Refund failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e","typeString":"literal_string \"Refund failed\""}],"id":8725,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6313:7:33","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6313:58:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8733,"nodeType":"ExpressionStatement","src":"6313:58:33"},{"eventCall":{"arguments":[{"id":8735,"name":"depositor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8702,"src":"6397:9:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8736,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8714,"src":"6408:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8734,"name":"Refund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8297,"src":"6390:6:33","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:25:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8738,"nodeType":"EmitStatement","src":"6385:30:33"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8708,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8223,"src":"6186:8:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8710,"indexExpression":{"id":8709,"name":"depositor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8702,"src":"6195:9:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6186:19:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6208:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6186:23:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8740,"initializationExpression":{"assignments":[8702],"declarations":[{"constant":false,"id":8702,"mutability":"mutable","name":"depositor","nameLocation":"6162:9:33","nodeType":"VariableDeclaration","scope":8740,"src":"6154:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8701,"name":"address","nodeType":"ElementaryTypeName","src":"6154:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":8707,"initialValue":{"arguments":[{"hexValue":"30","id":8705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6182:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6174:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8703,"name":"address","nodeType":"ElementaryTypeName","src":"6174:7:33","typeDescriptions":{}}},"id":8706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:10:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6154:30:33"},"isSimpleCounterLoop":false,"nodeType":"ForStatement","src":"6149:277:33"}]},"id":8742,"implemented":true,"kind":"function","modifiers":[],"name":"_processRefunds","nameLocation":"6113:15:33","nodeType":"FunctionDefinition","parameters":{"id":8699,"nodeType":"ParameterList","parameters":[],"src":"6128:2:33"},"returnParameters":{"id":8700,"nodeType":"ParameterList","parameters":[],"src":"6139:0:33"},"scope":9180,"src":"6104:328:33","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":8764,"nodeType":"Block","src":"6535:160:33","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8750,"name":"newFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8744,"src":"6553:16:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31303030","id":8751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6573:4:33","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"6553:24:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4665652063616e6e6f742065786365656420313025","id":8753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6579:23:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_697e1050e49c2a32d802845ecac75df93b62d147a0a67808d6dec2b44ce5e80f","typeString":"literal_string \"Fee cannot exceed 10%\""},"value":"Fee cannot exceed 10%"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_697e1050e49c2a32d802845ecac75df93b62d147a0a67808d6dec2b44ce5e80f","typeString":"literal_string \"Fee cannot exceed 10%\""}],"id":8749,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6545:7:33","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6545:58:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8755,"nodeType":"ExpressionStatement","src":"6545:58:33"},{"expression":{"id":8758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8756,"name":"feePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8219,"src":"6613:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8757,"name":"newFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8744,"src":"6629:16:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6613:32:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8759,"nodeType":"ExpressionStatement","src":"6613:32:33"},{"eventCall":{"arguments":[{"id":8761,"name":"newFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8744,"src":"6671:16:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8760,"name":"FeeUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8307,"src":"6660:10:33","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":8762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6660:28:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8763,"nodeType":"EmitStatement","src":"6655:33:33"}]},"functionSelector":"6cad3fb0","id":8765,"implemented":true,"kind":"function","modifiers":[{"id":8747,"kind":"modifierInvocation","modifierName":{"id":8746,"name":"onlyOwner","nameLocations":["6525:9:33"],"nodeType":"IdentifierPath","referencedDeclaration":596,"src":"6525:9:33"},"nodeType":"ModifierInvocation","src":"6525:9:33"}],"name":"updateFeePercentage","nameLocation":"6470:19:33","nodeType":"FunctionDefinition","parameters":{"id":8745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8744,"mutability":"mutable","name":"newFeePercentage","nameLocation":"6498:16:33","nodeType":"VariableDeclaration","scope":8765,"src":"6490:24:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8743,"name":"uint256","nodeType":"ElementaryTypeName","src":"6490:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6489:26:33"},"returnParameters":{"id":8748,"nodeType":"ParameterList","parameters":[],"src":"6535:0:33"},"scope":9180,"src":"6461:234:33","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8773,"nodeType":"Block","src":"6737:25:33","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8770,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3785,"src":"6747:6:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6747:8:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8772,"nodeType":"ExpressionStatement","src":"6747:8:33"}]},"functionSelector":"8456cb59","id":8774,"implemented":true,"kind":"function","modifiers":[{"id":8768,"kind":"modifierInvocation","modifierName":{"id":8767,"name":"onlyOwner","nameLocations":["6727:9:33"],"nodeType":"IdentifierPath","referencedDeclaration":596,"src":"6727:9:33"},"nodeType":"ModifierInvocation","src":"6727:9:33"}],"name":"pause","nameLocation":"6710:5:33","nodeType":"FunctionDefinition","parameters":{"id":8766,"nodeType":"ParameterList","parameters":[],"src":"6715:2:33"},"returnParameters":{"id":8769,"nodeType":"ParameterList","parameters":[],"src":"6737:0:33"},"scope":9180,"src":"6701:61:33","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8782,"nodeType":"Block","src":"6806:27:33","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8779,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"6816:8:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6816:10:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8781,"nodeType":"ExpressionStatement","src":"6816:10:33"}]},"functionSelector":"3f4ba83a","id":8783,"implemented":true,"kind":"function","modifiers":[{"id":8777,"kind":"modifierInvocation","modifierName":{"id":8776,"name":"onlyOwner","nameLocations":["6796:9:33"],"nodeType":"IdentifierPath","referencedDeclaration":596,"src":"6796:9:33"},"nodeType":"ModifierInvocation","src":"6796:9:33"}],"name":"unpause","nameLocation":"6777:7:33","nodeType":"FunctionDefinition","parameters":{"id":8775,"nodeType":"ParameterList","parameters":[],"src":"6784:2:33"},"returnParameters":{"id":8778,"nodeType":"ParameterList","parameters":[],"src":"6806:0:33"},"scope":9180,"src":"6768:65:33","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8829,"nodeType":"Block","src":"6913:250:33","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8793,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8785,"src":"6931:2:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6945:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6937:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8794,"name":"address","nodeType":"ElementaryTypeName","src":"6937:7:33","typeDescriptions":{}}},"id":8797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6937:10:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6931:16:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061646472657373","id":8799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6949:17:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""},"value":"Invalid address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""}],"id":8792,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6923:7:33","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6923:44:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8801,"nodeType":"ExpressionStatement","src":"6923:44:33"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8803,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8787,"src":"6985:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"arguments":[{"id":8808,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7018:4:33","typeDescriptions":{"typeIdentifier":"t_contract$_USDCFundraiser_$9180","typeString":"contract USDCFundraiser"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_USDCFundraiser_$9180","typeString":"contract USDCFundraiser"}],"id":8807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7010:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8806,"name":"address","nodeType":"ElementaryTypeName","src":"7010:7:33","typeDescriptions":{}}},"id":8809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7010:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8804,"name":"usdc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8204,"src":"6995:4:33","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2667","typeString":"contract IERC20"}},"id":8805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7000:9:33","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2624,"src":"6995:14:33","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":8810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6995:29:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6985:39:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":8812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7026:22:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":8802,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6977:7:33","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6977:72:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8814,"nodeType":"ExpressionStatement","src":"6977:72:33"},{"expression":{"arguments":[{"arguments":[{"id":8818,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8785,"src":"7081:2:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8819,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8787,"src":"7085:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8816,"name":"usdc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8204,"src":"7067:4:33","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2667","typeString":"contract IERC20"}},"id":8817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7072:8:33","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2634,"src":"7067:13:33","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":8820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7067:25:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206661696c6564","id":8821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7094:17:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""},"value":"Transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""}],"id":8815,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7059:7:33","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7059:53:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8823,"nodeType":"ExpressionStatement","src":"7059:53:33"},{"eventCall":{"arguments":[{"id":8825,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8785,"src":"7145:2:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8826,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8787,"src":"7149:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8824,"name":"EmergencyWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8313,"src":"7127:17:33","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7127:29:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8828,"nodeType":"EmitStatement","src":"7122:34:33"}]},"functionSelector":"95ccea67","id":8830,"implemented":true,"kind":"function","modifiers":[{"id":8790,"kind":"modifierInvocation","modifierName":{"id":8789,"name":"onlyOwner","nameLocations":["6903:9:33"],"nodeType":"IdentifierPath","referencedDeclaration":596,"src":"6903:9:33"},"nodeType":"ModifierInvocation","src":"6903:9:33"}],"name":"emergencyWithdraw","nameLocation":"6848:17:33","nodeType":"FunctionDefinition","parameters":{"id":8788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8785,"mutability":"mutable","name":"to","nameLocation":"6874:2:33","nodeType":"VariableDeclaration","scope":8830,"src":"6866:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8784,"name":"address","nodeType":"ElementaryTypeName","src":"6866:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8787,"mutability":"mutable","name":"amount","nameLocation":"6886:6:33","nodeType":"VariableDeclaration","scope":8830,"src":"6878:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8786,"name":"uint256","nodeType":"ElementaryTypeName","src":"6878:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6865:28:33"},"returnParameters":{"id":8791,"nodeType":"ParameterList","parameters":[],"src":"6913:0:33"},"scope":9180,"src":"6839:324:33","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8855,"nodeType":"Block","src":"7257:177:33","statements":[{"expression":{"arguments":[{"id":8839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7275:10:33","subExpression":{"id":8838,"name":"finalized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8227,"src":"7276:9:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e647261697365722069732066696e616c697a6564","id":8840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7287:25:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_0e10c2acff21fd9bdc778f1da1513ebcc8bd47c91168304207bd58e3ee272e87","typeString":"literal_string \"Fundraiser is finalized\""},"value":"Fundraiser is finalized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0e10c2acff21fd9bdc778f1da1513ebcc8bd47c91168304207bd58e3ee272e87","typeString":"literal_string \"Fundraiser is finalized\""}],"id":8837,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7267:7:33","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7267:46:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8842,"nodeType":"ExpressionStatement","src":"7267:46:33"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8844,"name":"newDeadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8832,"src":"7331:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":8845,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7345:5:33","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7351:9:33","memberName":"timestamp","nodeType":"MemberAccess","src":"7345:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7331:29:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"446561646c696e65206d75737420626520696e2074686520667574757265","id":8848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7362:32:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3e7aa4aa0cbec9a64fb6a0b8b9ffd2b31f86995a33f516b85a302b0ba10930e","typeString":"literal_string \"Deadline must be in the future\""},"value":"Deadline must be in the future"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d3e7aa4aa0cbec9a64fb6a0b8b9ffd2b31f86995a33f516b85a302b0ba10930e","typeString":"literal_string \"Deadline must be in the future\""}],"id":8843,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7323:7:33","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7323:72:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8850,"nodeType":"ExpressionStatement","src":"7323:72:33"},{"expression":{"id":8853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8851,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8215,"src":"7405:8:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8852,"name":"newDeadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8832,"src":"7416:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7405:22:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8854,"nodeType":"ExpressionStatement","src":"7405:22:33"}]},"functionSelector":"42af1884","id":8856,"implemented":true,"kind":"function","modifiers":[{"id":8835,"kind":"modifierInvocation","modifierName":{"id":8834,"name":"onlyOwner","nameLocations":["7247:9:33"],"nodeType":"IdentifierPath","referencedDeclaration":596,"src":"7247:9:33"},"nodeType":"ModifierInvocation","src":"7247:9:33"}],"name":"updateDeadline","nameLocation":"7202:14:33","nodeType":"FunctionDefinition","parameters":{"id":8833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8832,"mutability":"mutable","name":"newDeadline","nameLocation":"7225:11:33","nodeType":"VariableDeclaration","scope":8856,"src":"7217:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8831,"name":"uint256","nodeType":"ElementaryTypeName","src":"7217:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7216:21:33"},"returnParameters":{"id":8836,"nodeType":"ParameterList","parameters":[],"src":"7257:0:33"},"scope":9180,"src":"7193:241:33","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8876,"nodeType":"Block","src":"7518:97:33","statements":[{"expression":{"id":8869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8865,"name":"productPrices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8237,"src":"7528:13:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":8867,"indexExpression":{"id":8866,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8858,"src":"7542:9:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7528:24:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8868,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8860,"src":"7555:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7528:32:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8870,"nodeType":"ExpressionStatement","src":"7528:32:33"},{"eventCall":{"arguments":[{"id":8872,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8858,"src":"7591:9:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8873,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8860,"src":"7602:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8871,"name":"ProductPriceSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8319,"src":"7575:15:33","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":8874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7575:33:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8875,"nodeType":"EmitStatement","src":"7570:38:33"}]},"functionSelector":"44d3498a","id":8877,"implemented":true,"kind":"function","modifiers":[{"id":8863,"kind":"modifierInvocation","modifierName":{"id":8862,"name":"onlyOwner","nameLocations":["7508:9:33"],"nodeType":"IdentifierPath","referencedDeclaration":596,"src":"7508:9:33"},"nodeType":"ModifierInvocation","src":"7508:9:33"}],"name":"setProductPrice","nameLocation":"7449:15:33","nodeType":"FunctionDefinition","parameters":{"id":8861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8858,"mutability":"mutable","name":"productId","nameLocation":"7473:9:33","nodeType":"VariableDeclaration","scope":8877,"src":"7465:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8857,"name":"uint256","nodeType":"ElementaryTypeName","src":"7465:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8860,"mutability":"mutable","name":"price","nameLocation":"7492:5:33","nodeType":"VariableDeclaration","scope":8877,"src":"7484:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8859,"name":"uint256","nodeType":"ElementaryTypeName","src":"7484:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7464:34:33"},"returnParameters":{"id":8864,"nodeType":"ParameterList","parameters":[],"src":"7518:0:33"},"scope":9180,"src":"7440:175:33","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8959,"nodeType":"Block","src":"7670:707:33","statements":[{"expression":{"arguments":[{"id":8883,"name":"finalized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8227,"src":"7688:9:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742066696e616c697a6564","id":8884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7699:15:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_3384ef3d6d5f22c33f8ceafbd881cffb3391d66cb183375a46649f4d413aa772","typeString":"literal_string \"Not finalized\""},"value":"Not finalized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3384ef3d6d5f22c33f8ceafbd881cffb3391d66cb183375a46649f4d413aa772","typeString":"literal_string \"Not finalized\""}],"id":8882,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7680:7:33","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7680:35:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8886,"nodeType":"ExpressionStatement","src":"7680:35:33"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8888,"name":"totalRaised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8225,"src":"7733:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8889,"name":"minimumTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8213,"src":"7747:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7733:27:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54617267657420776173206d6574","id":8891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7762:16:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_c7fa761ee3bd6553574f260418c4b9028ddde12e4ff7b86c238ddb5d6a2fb514","typeString":"literal_string \"Target was met\""},"value":"Target was met"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c7fa761ee3bd6553574f260418c4b9028ddde12e4ff7b86c238ddb5d6a2fb514","typeString":"literal_string \"Target was met\""}],"id":8887,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7725:7:33","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7725:54:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8893,"nodeType":"ExpressionStatement","src":"7725:54:33"},{"assignments":[8895],"declarations":[{"constant":false,"id":8895,"mutability":"mutable","name":"balance","nameLocation":"7806:7:33","nodeType":"VariableDeclaration","scope":8959,"src":"7798:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8894,"name":"uint256","nodeType":"ElementaryTypeName","src":"7798:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8902,"initialValue":{"arguments":[{"expression":{"id":8898,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7839:3:33","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7843:6:33","memberName":"sender","nodeType":"MemberAccess","src":"7839:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8900,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8879,"src":"7851:9:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8896,"name":"productToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8207,"src":"7816:12:33","typeDescriptions":{"typeIdentifier":"t_contract$_ProductToken_$8180","typeString":"contract ProductToken"}},"id":8897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7829:9:33","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":942,"src":"7816:22:33","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view external returns (uint256)"}},"id":8901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7816:45:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7798:63:33"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8904,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8895,"src":"7879:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7889:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7879:11:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20746f6b656e7320746f20726566756e64","id":8907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7892:21:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_ed1b1c1ec736fefa85f418463b3093aee7d035d7d3e56ffb9f63ca1674321189","typeString":"literal_string \"No tokens to refund\""},"value":"No tokens to refund"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ed1b1c1ec736fefa85f418463b3093aee7d035d7d3e56ffb9f63ca1674321189","typeString":"literal_string \"No tokens to refund\""}],"id":8903,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7871:7:33","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7871:43:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8909,"nodeType":"ExpressionStatement","src":"7871:43:33"},{"assignments":[8911],"declarations":[{"constant":false,"id":8911,"mutability":"mutable","name":"refundAmount","nameLocation":"7941:12:33","nodeType":"VariableDeclaration","scope":8959,"src":"7933:20:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8910,"name":"uint256","nodeType":"ElementaryTypeName","src":"7933:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8923,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8912,"name":"tokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8233,"src":"7957:13:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":8914,"indexExpression":{"id":8913,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8879,"src":"7971:9:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7957:24:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8915,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8895,"src":"7984:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7957:34:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8917,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7956:36:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[{"id":8920,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8879,"src":"8022:9:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8918,"name":"productToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8207,"src":"7995:12:33","typeDescriptions":{"typeIdentifier":"t_contract$_ProductToken_$8180","typeString":"contract ProductToken"}},"id":8919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8008:13:33","memberName":"productSupply","nodeType":"MemberAccess","referencedDeclaration":8138,"src":"7995:26:33","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":8921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7995:37:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7956:76:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7933:99:33"},{"expression":{"id":8932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8924,"name":"tokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8233,"src":"8042:13:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":8926,"indexExpression":{"id":8925,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8879,"src":"8056:9:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8042:24:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8927,"name":"tokenDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8233,"src":"8069:13:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":8929,"indexExpression":{"id":8928,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8879,"src":"8083:9:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8069:24:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8930,"name":"refundAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8911,"src":"8096:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8069:39:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8042:66:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8933,"nodeType":"ExpressionStatement","src":"8042:66:33"},{"expression":{"arguments":[{"expression":{"id":8937,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8176:3:33","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8180:6:33","memberName":"sender","nodeType":"MemberAccess","src":"8176:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8939,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8879,"src":"8188:9:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8940,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8895,"src":"8199:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8934,"name":"productToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8207,"src":"8158:12:33","typeDescriptions":{"typeIdentifier":"t_contract$_ProductToken_$8180","typeString":"contract ProductToken"}},"id":8936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8171:4:33","memberName":"burn","nodeType":"MemberAccess","referencedDeclaration":8163,"src":"8158:17:33","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) external"}},"id":8941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8158:49:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8942,"nodeType":"ExpressionStatement","src":"8158:49:33"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":8946,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8280:3:33","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8284:6:33","memberName":"sender","nodeType":"MemberAccess","src":"8280:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8948,"name":"refundAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8911,"src":"8292:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8944,"name":"usdc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8204,"src":"8266:4:33","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2667","typeString":"contract IERC20"}},"id":8945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8271:8:33","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2634,"src":"8266:13:33","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":8949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8266:39:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526566756e64206661696c6564","id":8950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8307:15:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e","typeString":"literal_string \"Refund failed\""},"value":"Refund failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e","typeString":"literal_string \"Refund failed\""}],"id":8943,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8258:7:33","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8258:65:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8952,"nodeType":"ExpressionStatement","src":"8258:65:33"},{"eventCall":{"arguments":[{"expression":{"id":8954,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8345:3:33","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8349:6:33","memberName":"sender","nodeType":"MemberAccess","src":"8345:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8956,"name":"refundAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8911,"src":"8357:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8953,"name":"Refund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8297,"src":"8338:6:33","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8338:32:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8958,"nodeType":"EmitStatement","src":"8333:37:33"}]},"functionSelector":"5b7baf64","id":8960,"implemented":true,"kind":"function","modifiers":[],"name":"claimRefund","nameLocation":"7630:11:33","nodeType":"FunctionDefinition","parameters":{"id":8880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8879,"mutability":"mutable","name":"productId","nameLocation":"7650:9:33","nodeType":"VariableDeclaration","scope":8960,"src":"7642:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8878,"name":"uint256","nodeType":"ElementaryTypeName","src":"7642:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7641:19:33"},"returnParameters":{"id":8881,"nodeType":"ParameterList","parameters":[],"src":"7670:0:33"},"scope":9180,"src":"7621:756:33","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8970,"nodeType":"Block","src":"8481:49:33","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8966,"name":"s_forwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8252,"src":"8498:11:33","typeDescriptions":{"typeIdentifier":"t_contract$_IAutomationForwarder_$103","typeString":"contract IAutomationForwarder"}},"id":8967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8510:11:33","memberName":"getRegistry","nodeType":"MemberAccess","referencedDeclaration":97,"src":"8498:23:33","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_contract$_IAutomationRegistryConsumer_$150_$","typeString":"function () view external returns (contract IAutomationRegistryConsumer)"}},"id":8968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8498:25:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAutomationRegistryConsumer_$150","typeString":"contract IAutomationRegistryConsumer"}},"functionReturnParameters":8965,"id":8969,"nodeType":"Return","src":"8491:32:33"}]},"id":8971,"implemented":true,"kind":"function","modifiers":[],"name":"_getStationUpkeepRegistry","nameLocation":"8392:25:33","nodeType":"FunctionDefinition","parameters":{"id":8961,"nodeType":"ParameterList","parameters":[],"src":"8417:2:33"},"returnParameters":{"id":8965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8964,"mutability":"mutable","name":"registry","nameLocation":"8471:8:33","nodeType":"VariableDeclaration","scope":8971,"src":"8443:36:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAutomationRegistryConsumer_$150","typeString":"contract IAutomationRegistryConsumer"},"typeName":{"id":8963,"nodeType":"UserDefinedTypeName","pathNode":{"id":8962,"name":"IAutomationRegistryConsumer","nameLocations":["8443:27:33"],"nodeType":"IdentifierPath","referencedDeclaration":150,"src":"8443:27:33"},"referencedDeclaration":150,"src":"8443:27:33","typeDescriptions":{"typeIdentifier":"t_contract$_IAutomationRegistryConsumer_$150","typeString":"contract IAutomationRegistryConsumer"}},"visibility":"internal"}],"src":"8442:38:33"},"scope":9180,"src":"8383:147:33","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8988,"nodeType":"Block","src":"8570:143:33","statements":[{"assignments":[8976],"declarations":[{"constant":false,"id":8976,"mutability":"mutable","name":"registry","nameLocation":"8608:8:33","nodeType":"VariableDeclaration","scope":8988,"src":"8580:36:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAutomationRegistryConsumer_$150","typeString":"contract IAutomationRegistryConsumer"},"typeName":{"id":8975,"nodeType":"UserDefinedTypeName","pathNode":{"id":8974,"name":"IAutomationRegistryConsumer","nameLocations":["8580:27:33"],"nodeType":"IdentifierPath","referencedDeclaration":150,"src":"8580:27:33"},"referencedDeclaration":150,"src":"8580:27:33","typeDescriptions":{"typeIdentifier":"t_contract$_IAutomationRegistryConsumer_$150","typeString":"contract IAutomationRegistryConsumer"}},"visibility":"internal"}],"id":8979,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":8977,"name":"_getStationUpkeepRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8971,"src":"8619:25:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IAutomationRegistryConsumer_$150_$","typeString":"function () view returns (contract IAutomationRegistryConsumer)"}},"id":8978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8619:27:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAutomationRegistryConsumer_$150","typeString":"contract IAutomationRegistryConsumer"}},"nodeType":"VariableDeclarationStatement","src":"8580:66:33"},{"expression":{"arguments":[{"id":8983,"name":"s_stationUpkeepID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8249,"src":"8679:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":8984,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"8698:5:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":8985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8698:7:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8980,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8976,"src":"8656:8:33","typeDescriptions":{"typeIdentifier":"t_contract$_IAutomationRegistryConsumer_$150","typeString":"contract IAutomationRegistryConsumer"}},"id":8982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8665:13:33","memberName":"withdrawFunds","nodeType":"MemberAccess","referencedDeclaration":149,"src":"8656:22:33","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address) external"}},"id":8986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8656:50:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8987,"nodeType":"ExpressionStatement","src":"8656:50:33"}]},"id":8989,"implemented":true,"kind":"function","modifiers":[],"name":"_withdrawLink","nameLocation":"8545:13:33","nodeType":"FunctionDefinition","parameters":{"id":8972,"nodeType":"ParameterList","parameters":[],"src":"8558:2:33"},"returnParameters":{"id":8973,"nodeType":"ParameterList","parameters":[],"src":"8570:0:33"},"scope":9180,"src":"8536:177:33","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[60],"body":{"id":9013,"nodeType":"Block","src":"8928:107:33","statements":[{"expression":{"id":9007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8999,"name":"upkeepNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8995,"src":"8938:12:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8953:10:33","subExpression":{"id":9000,"name":"finalized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8227,"src":"8954:9:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9002,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8967:5:33","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8973:9:33","memberName":"timestamp","nodeType":"MemberAccess","src":"8967:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":9004,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8215,"src":"8985:8:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8967:26:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8953:40:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8938:55:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9008,"nodeType":"ExpressionStatement","src":"8938:55:33"},{"expression":{"components":[{"id":9009,"name":"upkeepNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8995,"src":"9011:12:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"","id":9010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9025:2:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"id":9011,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9010:18:33","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$","typeString":"tuple(bool,literal_string \"\")"}},"functionReturnParameters":8998,"id":9012,"nodeType":"Return","src":"9003:25:33"}]},"functionSelector":"6e04ff0d","id":9014,"implemented":true,"kind":"function","modifiers":[],"name":"checkUpkeep","nameLocation":"8760:11:33","nodeType":"FunctionDefinition","overrides":{"id":8993,"nodeType":"OverrideSpecifier","overrides":[],"src":"8845:8:33"},"parameters":{"id":8992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8991,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9014,"src":"8772:14:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":8990,"name":"bytes","nodeType":"ElementaryTypeName","src":"8772:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8771:32:33"},"returnParameters":{"id":8998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8995,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"8877:12:33","nodeType":"VariableDeclaration","scope":9014,"src":"8872:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8994,"name":"bool","nodeType":"ElementaryTypeName","src":"8872:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8997,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9014,"src":"8891:12:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8996,"name":"bytes","nodeType":"ElementaryTypeName","src":"8891:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8871:51:33"},"scope":9180,"src":"8751:284:33","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[66],"body":{"id":9038,"nodeType":"Block","src":"9150:162:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9164:10:33","subExpression":{"id":9020,"name":"finalized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8227,"src":"9165:9:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9022,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9178:5:33","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9184:9:33","memberName":"timestamp","nodeType":"MemberAccess","src":"9178:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":9024,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8215,"src":"9196:8:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9178:26:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9164:40:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9037,"nodeType":"IfStatement","src":"9160:146:33","trueBody":{"id":9036,"nodeType":"Block","src":"9206:100:33","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9027,"name":"finalize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8680,"src":"9220:8:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9220:10:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9029,"nodeType":"ExpressionStatement","src":"9220:10:33"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9030,"name":"UpkeepPerformed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8337,"src":"9249:15:33","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9249:17:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9032,"nodeType":"EmitStatement","src":"9244:22:33"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9033,"name":"_withdrawLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"9280:13:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9280:15:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9035,"nodeType":"ExpressionStatement","src":"9280:15:33"}]}}]},"functionSelector":"4585e33b","id":9039,"implemented":true,"kind":"function","modifiers":[],"name":"performUpkeep","nameLocation":"9084:13:33","nodeType":"FunctionDefinition","overrides":{"id":9018,"nodeType":"OverrideSpecifier","overrides":[],"src":"9141:8:33"},"parameters":{"id":9017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9016,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9039,"src":"9098:14:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":9015,"name":"bytes","nodeType":"ElementaryTypeName","src":"9098:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9097:34:33"},"returnParameters":{"id":9019,"nodeType":"ParameterList","parameters":[],"src":"9150:0:33"},"scope":9180,"src":"9075:237:33","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9123,"nodeType":"Block","src":"9463:805:33","statements":[{"assignments":[9049],"declarations":[{"constant":false,"id":9049,"mutability":"mutable","name":"approveSuccess","nameLocation":"9478:14:33","nodeType":"VariableDeclaration","scope":9123,"src":"9473:19:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9048,"name":"bool","nodeType":"ElementaryTypeName","src":"9473:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":9057,"initialValue":{"arguments":[{"id":9054,"name":"CHAINLINK_REGISTRAR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8239,"src":"9522:19:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"31","id":9055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9543:7:33","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"expression":{"arguments":[{"id":9051,"name":"LINK_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8243,"src":"9502:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9050,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"9495:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2667_$","typeString":"type(contract IERC20)"}},"id":9052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9495:18:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2667","typeString":"contract IERC20"}},"id":9053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9514:7:33","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":2654,"src":"9495:26:33","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":9056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9495:56:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9473:78:33"},{"expression":{"arguments":[{"id":9059,"name":"approveSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9049,"src":"9569:14:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c494e4b20617070726f76616c206661696c6564","id":9060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9585:22:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_69d48844075da93407e7d5d8c45df462d52d42c8c2eec1434d61662c3cf99deb","typeString":"literal_string \"LINK approval failed\""},"value":"LINK approval failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_69d48844075da93407e7d5d8c45df462d52d42c8c2eec1434d61662c3cf99deb","typeString":"literal_string \"LINK approval failed\""}],"id":9058,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9561:7:33","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9561:47:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9062,"nodeType":"ExpressionStatement","src":"9561:47:33"},{"expression":{"id":9069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9063,"name":"stationUpkeepID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9046,"src":"9619:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9065,"name":"CHAINLINK_REGISTRAR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8239,"src":"9653:19:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9066,"name":"CHAINLINK_REGISTRAR_SELECTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8245,"src":"9674:28:33","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":9067,"name":"registrationParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9041,"src":"9704:18:33","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":9064,"name":"_registerUpkeep","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9179,"src":"9637:15:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes4_$_t_bytes_calldata_ptr_$returns$_t_uint256_$","typeString":"function (address,bytes4,bytes calldata) returns (uint256)"}},"id":9068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9637:86:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9619:104:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9070,"nodeType":"ExpressionStatement","src":"9619:104:33"},{"expression":{"id":9073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9071,"name":"s_stationUpkeepID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8249,"src":"9733:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9072,"name":"stationUpkeepID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9046,"src":"9753:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9733:35:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9074,"nodeType":"ExpressionStatement","src":"9733:35:33"},{"expression":{"id":9077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9075,"name":"isRegisteredWithChainlink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8247,"src":"9778:25:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":9076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9806:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9778:32:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9078,"nodeType":"ExpressionStatement","src":"9778:32:33"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9079,"name":"CHAINLINK_REGISTRY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8241,"src":"9824:18:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":9082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9854:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9846:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9080,"name":"address","nodeType":"ElementaryTypeName","src":"9846:7:33","typeDescriptions":{}}},"id":9083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9846:10:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9824:32:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9122,"nodeType":"IfStatement","src":"9820:442:33","trueBody":{"id":9121,"nodeType":"Block","src":"9858:404:33","statements":[{"assignments":[9086,9088],"declarations":[{"constant":false,"id":9086,"mutability":"mutable","name":"success","nameLocation":"9878:7:33","nodeType":"VariableDeclaration","scope":9121,"src":"9873:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9085,"name":"bool","nodeType":"ElementaryTypeName","src":"9873:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9088,"mutability":"mutable","name":"returnData","nameLocation":"9900:10:33","nodeType":"VariableDeclaration","scope":9121,"src":"9887:23:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9087,"name":"bytes","nodeType":"ElementaryTypeName","src":"9887:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":9097,"initialValue":{"arguments":[{"arguments":[{"hexValue":"676574466f727761726465722875696e7432353629","id":9093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9984:23:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_79ea99438d0df04f0e50a3b4abff3e4744744c164c9f7c3624b151cfe94103fe","typeString":"literal_string \"getForwarder(uint256)\""},"value":"getForwarder(uint256)"},{"id":9094,"name":"stationUpkeepID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9046,"src":"10009:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_79ea99438d0df04f0e50a3b4abff3e4744744c164c9f7c3624b151cfe94103fe","typeString":"literal_string \"getForwarder(uint256)\""},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9091,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9960:3:33","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9964:19:33","memberName":"encodeWithSignature","nodeType":"MemberAccess","src":"9960:23:33","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory) pure returns (bytes memory)"}},"id":9095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9960:65:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":9089,"name":"CHAINLINK_REGISTRY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8241,"src":"9930:18:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9949:10:33","memberName":"staticcall","nodeType":"MemberAccess","src":"9930:29:33","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":9096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9930:96:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"9872:154:33"},{"condition":{"id":9098,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9086,"src":"10044:7:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9120,"nodeType":"IfStatement","src":"10040:212:33","trueBody":{"id":9119,"nodeType":"Block","src":"10053:199:33","statements":[{"assignments":[9100],"declarations":[{"constant":false,"id":9100,"mutability":"mutable","name":"forwarder","nameLocation":"10079:9:33","nodeType":"VariableDeclaration","scope":9119,"src":"10071:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9099,"name":"address","nodeType":"ElementaryTypeName","src":"10071:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":9108,"initialValue":{"arguments":[{"id":9103,"name":"returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9088,"src":"10102:10:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":9105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10115:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9104,"name":"address","nodeType":"ElementaryTypeName","src":"10115:7:33","typeDescriptions":{}}}],"id":9106,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10114:9:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}],"expression":{"id":9101,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"10091:3:33","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10095:6:33","memberName":"decode","nodeType":"MemberAccess","src":"10091:10:33","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":9107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10091:33:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"VariableDeclarationStatement","src":"10071:53:33"},{"expression":{"id":9113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9109,"name":"s_forwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8252,"src":"10142:11:33","typeDescriptions":{"typeIdentifier":"t_contract$_IAutomationForwarder_$103","typeString":"contract IAutomationForwarder"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9111,"name":"forwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9100,"src":"10177:9:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9110,"name":"IAutomationForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"10156:20:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAutomationForwarder_$103_$","typeString":"type(contract IAutomationForwarder)"}},"id":9112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10156:31:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAutomationForwarder_$103","typeString":"contract IAutomationForwarder"}},"src":"10142:45:33","typeDescriptions":{"typeIdentifier":"t_contract$_IAutomationForwarder_$103","typeString":"contract IAutomationForwarder"}},"id":9114,"nodeType":"ExpressionStatement","src":"10142:45:33"},{"eventCall":{"arguments":[{"id":9116,"name":"forwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9100,"src":"10227:9:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9115,"name":"ForwarderChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8335,"src":"10210:16:33","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":9117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10210:27:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9118,"nodeType":"EmitStatement","src":"10205:32:33"}]}}]}}]},"functionSelector":"4232d7f8","id":9124,"implemented":true,"kind":"function","modifiers":[{"id":9044,"kind":"modifierInvocation","modifierName":{"id":9043,"name":"onlyOwner","nameLocations":["9407:9:33"],"nodeType":"IdentifierPath","referencedDeclaration":596,"src":"9407:9:33"},"nodeType":"ModifierInvocation","src":"9407:9:33"}],"name":"initializeChainlink","nameLocation":"9327:19:33","nodeType":"FunctionDefinition","parameters":{"id":9042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9041,"mutability":"mutable","name":"registrationParams","nameLocation":"9362:18:33","nodeType":"VariableDeclaration","scope":9124,"src":"9347:33:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":9040,"name":"bytes","nodeType":"ElementaryTypeName","src":"9347:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9346:35:33"},"returnParameters":{"id":9047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9046,"mutability":"mutable","name":"stationUpkeepID","nameLocation":"9442:15:33","nodeType":"VariableDeclaration","scope":9124,"src":"9434:23:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9045,"name":"uint256","nodeType":"ElementaryTypeName","src":"9434:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9433:25:33"},"scope":9180,"src":"9318:950:33","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9178,"nodeType":"Block","src":"10406:404:33","statements":[{"assignments":[9136,9138],"declarations":[{"constant":false,"id":9136,"mutability":"mutable","name":"success","nameLocation":"10422:7:33","nodeType":"VariableDeclaration","scope":9178,"src":"10417:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9135,"name":"bool","nodeType":"ElementaryTypeName","src":"10417:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9138,"mutability":"mutable","name":"returnData","nameLocation":"10444:10:33","nodeType":"VariableDeclaration","scope":9178,"src":"10431:23:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9137,"name":"bytes","nodeType":"ElementaryTypeName","src":"10431:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":9148,"initialValue":{"arguments":[{"arguments":[{"id":9144,"name":"selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9128,"src":"10498:8:33","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":9145,"name":"registrationParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9130,"src":"10508:18:33","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":9142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10485:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":9141,"name":"bytes","nodeType":"ElementaryTypeName","src":"10485:5:33","typeDescriptions":{}}},"id":9143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10491:6:33","memberName":"concat","nodeType":"MemberAccess","src":"10485:12:33","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":9146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10485:42:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":9139,"name":"registrar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9126,"src":"10470:9:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10480:4:33","memberName":"call","nodeType":"MemberAccess","src":"10470:14:33","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":9147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10470:58:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"10416:112:33"},{"condition":{"id":9150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10542:8:33","subExpression":{"id":9149,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9136,"src":"10543:7:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9169,"nodeType":"IfStatement","src":"10538:216:33","trueBody":{"id":9168,"nodeType":"Block","src":"10552:202:33","statements":[{"eventCall":{"arguments":[{"hexValue":"526567697374726174696f6e206661696c6564","id":9152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10577:21:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d17a16f3de8a00b014275cd700251f8c4b7eea7cc5eb19756a630dc47358eea","typeString":"literal_string \"Registration failed\""},"value":"Registration failed"},{"expression":{"id":9153,"name":"returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9138,"src":"10600:10:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":9154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10611:6:33","memberName":"length","nodeType":"MemberAccess","src":"10600:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9d17a16f3de8a00b014275cd700251f8c4b7eea7cc5eb19756a630dc47358eea","typeString":"literal_string \"Registration failed\""},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9151,"name":"Debug","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8325,"src":"10571:5:33","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (string memory,uint256)"}},"id":9155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10571:47:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9156,"nodeType":"EmitStatement","src":"10566:52:33"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9157,"name":"returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9138,"src":"10636:10:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":9158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10647:6:33","memberName":"length","nodeType":"MemberAccess","src":"10636:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10656:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10636:21:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9167,"nodeType":"IfStatement","src":"10632:112:33","trueBody":{"id":9166,"nodeType":"Block","src":"10659:85:33","statements":[{"eventCall":{"arguments":[{"hexValue":"526567697374726174696f6e2064617461","id":9162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10697:19:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_da0cc21a87865e1c05fb06194fd2da5a70a7fe5e6a4fa3dca96fb1c84d5bd43d","typeString":"literal_string \"Registration data\""},"value":"Registration data"},{"id":9163,"name":"returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9138,"src":"10718:10:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da0cc21a87865e1c05fb06194fd2da5a70a7fe5e6a4fa3dca96fb1c84d5bd43d","typeString":"literal_string \"Registration data\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9161,"name":"DebugBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8331,"src":"10686:10:33","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (string memory,bytes memory)"}},"id":9164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10686:43:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9165,"nodeType":"EmitStatement","src":"10681:48:33"}]}}]}},{"expression":{"arguments":[{"id":9172,"name":"returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9138,"src":"10781:10:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":9174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10794:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9173,"name":"uint256","nodeType":"ElementaryTypeName","src":"10794:7:33","typeDescriptions":{}}}],"id":9175,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10793:9:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"expression":{"id":9170,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"10770:3:33","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10774:6:33","memberName":"decode","nodeType":"MemberAccess","src":"10770:10:33","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":9176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10770:33:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9134,"id":9177,"nodeType":"Return","src":"10763:40:33"}]},"id":9179,"implemented":true,"kind":"function","modifiers":[],"name":"_registerUpkeep","nameLocation":"10283:15:33","nodeType":"FunctionDefinition","parameters":{"id":9131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9126,"mutability":"mutable","name":"registrar","nameLocation":"10307:9:33","nodeType":"VariableDeclaration","scope":9179,"src":"10299:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9125,"name":"address","nodeType":"ElementaryTypeName","src":"10299:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9128,"mutability":"mutable","name":"selector","nameLocation":"10325:8:33","nodeType":"VariableDeclaration","scope":9179,"src":"10318:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":9127,"name":"bytes4","nodeType":"ElementaryTypeName","src":"10318:6:33","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":9130,"mutability":"mutable","name":"registrationParams","nameLocation":"10350:18:33","nodeType":"VariableDeclaration","scope":9179,"src":"10335:33:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":9129,"name":"bytes","nodeType":"ElementaryTypeName","src":"10335:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10298:71:33"},"returnParameters":{"id":9134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9133,"mutability":"mutable","name":"upkeepID","nameLocation":"10396:8:33","nodeType":"VariableDeclaration","scope":9179,"src":"10388:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9132,"name":"uint256","nodeType":"ElementaryTypeName","src":"10388:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10387:18:33"},"scope":9180,"src":"10274:536:33","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":9181,"src":"683:10129:33","usedErrors":[551,556,3707,3710,3816],"usedEvents":[562,3699,3704,8291,8297,8303,8307,8313,8319,8325,8331,8335,8337]}],"src":"32:10781:33"},"id":33},"contracts/interfaces/IAutomationRegistrar.sol":{"ast":{"absolutePath":"contracts/interfaces/IAutomationRegistrar.sol","exportedSymbols":{"IAutomationRegistrar":[9219]},"id":9220,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9182,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:34"},{"abstract":false,"baseContracts":[],"canonicalName":"IAutomationRegistrar","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":9219,"linearizedBaseContracts":[9219],"name":"IAutomationRegistrar","nameLocation":"68:20:34","nodeType":"ContractDefinition","nodes":[{"functionSelector":"856853e6","id":9207,"implemented":false,"kind":"function","modifiers":[],"name":"register","nameLocation":"104:8:34","nodeType":"FunctionDefinition","parameters":{"id":9205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9184,"mutability":"mutable","name":"name","nameLocation":"136:4:34","nodeType":"VariableDeclaration","scope":9207,"src":"122:18:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9183,"name":"string","nodeType":"ElementaryTypeName","src":"122:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9186,"mutability":"mutable","name":"encryptedEmail","nameLocation":"163:14:34","nodeType":"VariableDeclaration","scope":9207,"src":"150:27:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9185,"name":"bytes","nodeType":"ElementaryTypeName","src":"150:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9188,"mutability":"mutable","name":"upkeepContract","nameLocation":"195:14:34","nodeType":"VariableDeclaration","scope":9207,"src":"187:22:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9187,"name":"address","nodeType":"ElementaryTypeName","src":"187:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9190,"mutability":"mutable","name":"gasLimit","nameLocation":"226:8:34","nodeType":"VariableDeclaration","scope":9207,"src":"219:15:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9189,"name":"uint32","nodeType":"ElementaryTypeName","src":"219:6:34","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9192,"mutability":"mutable","name":"adminAddress","nameLocation":"252:12:34","nodeType":"VariableDeclaration","scope":9207,"src":"244:20:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9191,"name":"address","nodeType":"ElementaryTypeName","src":"244:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9194,"mutability":"mutable","name":"triggerType","nameLocation":"280:11:34","nodeType":"VariableDeclaration","scope":9207,"src":"274:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":9193,"name":"uint8","nodeType":"ElementaryTypeName","src":"274:5:34","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":9196,"mutability":"mutable","name":"checkData","nameLocation":"314:9:34","nodeType":"VariableDeclaration","scope":9207,"src":"301:22:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9195,"name":"bytes","nodeType":"ElementaryTypeName","src":"301:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9198,"mutability":"mutable","name":"triggerConfig","nameLocation":"346:13:34","nodeType":"VariableDeclaration","scope":9207,"src":"333:26:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9197,"name":"bytes","nodeType":"ElementaryTypeName","src":"333:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9200,"mutability":"mutable","name":"offchainConfig","nameLocation":"382:14:34","nodeType":"VariableDeclaration","scope":9207,"src":"369:27:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9199,"name":"bytes","nodeType":"ElementaryTypeName","src":"369:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9202,"mutability":"mutable","name":"amount","nameLocation":"413:6:34","nodeType":"VariableDeclaration","scope":9207,"src":"406:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9201,"name":"uint96","nodeType":"ElementaryTypeName","src":"406:6:34","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":9204,"mutability":"mutable","name":"sender","nameLocation":"437:6:34","nodeType":"VariableDeclaration","scope":9207,"src":"429:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9203,"name":"address","nodeType":"ElementaryTypeName","src":"429:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"112:337:34"},"returnParameters":{"id":9206,"nodeType":"ParameterList","parameters":[],"src":"458:0:34"},"scope":9219,"src":"95:364:34","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a4c0ed36","id":9218,"implemented":false,"kind":"function","modifiers":[],"name":"onTokenTransfer","nameLocation":"474:15:34","nodeType":"FunctionDefinition","parameters":{"id":9214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9209,"mutability":"mutable","name":"sender","nameLocation":"507:6:34","nodeType":"VariableDeclaration","scope":9218,"src":"499:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9208,"name":"address","nodeType":"ElementaryTypeName","src":"499:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9211,"mutability":"mutable","name":"amount","nameLocation":"531:6:34","nodeType":"VariableDeclaration","scope":9218,"src":"523:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9210,"name":"uint256","nodeType":"ElementaryTypeName","src":"523:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9213,"mutability":"mutable","name":"data","nameLocation":"562:4:34","nodeType":"VariableDeclaration","scope":9218,"src":"547:19:34","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":9212,"name":"bytes","nodeType":"ElementaryTypeName","src":"547:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"489:83:34"},"returnParameters":{"id":9217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9216,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9218,"src":"591:4:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9215,"name":"bool","nodeType":"ElementaryTypeName","src":"591:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"590:6:34"},"scope":9219,"src":"465:132:34","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":9220,"src":"58:541:34","usedErrors":[],"usedEvents":[]}],"src":"33:566:34"},"id":34},"contracts/interfaces/IAutomationRegistry.sol":{"ast":{"absolutePath":"contracts/interfaces/IAutomationRegistry.sol","exportedSymbols":{"IAutomationRegistry":[9278]},"id":9279,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9221,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:35"},{"abstract":false,"baseContracts":[],"canonicalName":"IAutomationRegistry","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":9278,"linearizedBaseContracts":[9278],"name":"IAutomationRegistry","nameLocation":"68:19:35","nodeType":"ContractDefinition","nodes":[{"functionSelector":"c4110e5c","id":9240,"implemented":false,"kind":"function","modifiers":[],"name":"register","nameLocation":"103:8:35","nodeType":"FunctionDefinition","parameters":{"id":9238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9223,"mutability":"mutable","name":"name","nameLocation":"135:4:35","nodeType":"VariableDeclaration","scope":9240,"src":"121:18:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9222,"name":"string","nodeType":"ElementaryTypeName","src":"121:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9225,"mutability":"mutable","name":"encryptedEmail","nameLocation":"162:14:35","nodeType":"VariableDeclaration","scope":9240,"src":"149:27:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9224,"name":"bytes","nodeType":"ElementaryTypeName","src":"149:5:35","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9227,"mutability":"mutable","name":"upkeepContract","nameLocation":"194:14:35","nodeType":"VariableDeclaration","scope":9240,"src":"186:22:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9226,"name":"address","nodeType":"ElementaryTypeName","src":"186:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9229,"mutability":"mutable","name":"gasLimit","nameLocation":"225:8:35","nodeType":"VariableDeclaration","scope":9240,"src":"218:15:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9228,"name":"uint32","nodeType":"ElementaryTypeName","src":"218:6:35","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9231,"mutability":"mutable","name":"adminAddress","nameLocation":"251:12:35","nodeType":"VariableDeclaration","scope":9240,"src":"243:20:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9230,"name":"address","nodeType":"ElementaryTypeName","src":"243:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9233,"mutability":"mutable","name":"checkData","nameLocation":"286:9:35","nodeType":"VariableDeclaration","scope":9240,"src":"273:22:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9232,"name":"bytes","nodeType":"ElementaryTypeName","src":"273:5:35","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9235,"mutability":"mutable","name":"amount","nameLocation":"312:6:35","nodeType":"VariableDeclaration","scope":9240,"src":"305:13:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9234,"name":"uint96","nodeType":"ElementaryTypeName","src":"305:6:35","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":9237,"mutability":"mutable","name":"source","nameLocation":"334:6:35","nodeType":"VariableDeclaration","scope":9240,"src":"328:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":9236,"name":"uint8","nodeType":"ElementaryTypeName","src":"328:5:35","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"111:235:35"},"returnParameters":{"id":9239,"nodeType":"ParameterList","parameters":[],"src":"355:0:35"},"scope":9278,"src":"94:262:35","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c7c3a19a","id":9265,"implemented":false,"kind":"function","modifiers":[],"name":"getUpkeep","nameLocation":"371:9:35","nodeType":"FunctionDefinition","parameters":{"id":9243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9242,"mutability":"mutable","name":"id","nameLocation":"389:2:35","nodeType":"VariableDeclaration","scope":9265,"src":"381:10:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9241,"name":"uint256","nodeType":"ElementaryTypeName","src":"381:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"380:12:35"},"returnParameters":{"id":9264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9245,"mutability":"mutable","name":"target","nameLocation":"433:6:35","nodeType":"VariableDeclaration","scope":9265,"src":"425:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9244,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9247,"mutability":"mutable","name":"executeGas","nameLocation":"456:10:35","nodeType":"VariableDeclaration","scope":9265,"src":"449:17:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9246,"name":"uint32","nodeType":"ElementaryTypeName","src":"449:6:35","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9249,"mutability":"mutable","name":"checkData","nameLocation":"489:9:35","nodeType":"VariableDeclaration","scope":9265,"src":"476:22:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9248,"name":"bytes","nodeType":"ElementaryTypeName","src":"476:5:35","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9251,"mutability":"mutable","name":"balance","nameLocation":"515:7:35","nodeType":"VariableDeclaration","scope":9265,"src":"508:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9250,"name":"uint96","nodeType":"ElementaryTypeName","src":"508:6:35","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":9253,"mutability":"mutable","name":"lastKeeper","nameLocation":"540:10:35","nodeType":"VariableDeclaration","scope":9265,"src":"532:18:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9252,"name":"address","nodeType":"ElementaryTypeName","src":"532:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9255,"mutability":"mutable","name":"admin","nameLocation":"568:5:35","nodeType":"VariableDeclaration","scope":9265,"src":"560:13:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9254,"name":"address","nodeType":"ElementaryTypeName","src":"560:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9257,"mutability":"mutable","name":"maxValidBlocknumber","nameLocation":"590:19:35","nodeType":"VariableDeclaration","scope":9265,"src":"583:26:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":9256,"name":"uint64","nodeType":"ElementaryTypeName","src":"583:6:35","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":9259,"mutability":"mutable","name":"amountSpent","nameLocation":"626:11:35","nodeType":"VariableDeclaration","scope":9265,"src":"619:18:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9258,"name":"uint96","nodeType":"ElementaryTypeName","src":"619:6:35","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":9261,"mutability":"mutable","name":"paused","nameLocation":"652:6:35","nodeType":"VariableDeclaration","scope":9265,"src":"647:11:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9260,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9263,"mutability":"mutable","name":"offchainConfig","nameLocation":"681:14:35","nodeType":"VariableDeclaration","scope":9265,"src":"668:27:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9262,"name":"bytes","nodeType":"ElementaryTypeName","src":"668:5:35","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"415:286:35"},"scope":9278,"src":"362:340:35","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c8048022","id":9270,"implemented":false,"kind":"function","modifiers":[],"name":"cancelUpkeep","nameLocation":"717:12:35","nodeType":"FunctionDefinition","parameters":{"id":9268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9267,"mutability":"mutable","name":"id","nameLocation":"738:2:35","nodeType":"VariableDeclaration","scope":9270,"src":"730:10:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9266,"name":"uint256","nodeType":"ElementaryTypeName","src":"730:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"729:12:35"},"returnParameters":{"id":9269,"nodeType":"ParameterList","parameters":[],"src":"750:0:35"},"scope":9278,"src":"708:43:35","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"744bfe61","id":9277,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawFunds","nameLocation":"765:13:35","nodeType":"FunctionDefinition","parameters":{"id":9275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9272,"mutability":"mutable","name":"id","nameLocation":"787:2:35","nodeType":"VariableDeclaration","scope":9277,"src":"779:10:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9271,"name":"uint256","nodeType":"ElementaryTypeName","src":"779:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9274,"mutability":"mutable","name":"to","nameLocation":"799:2:35","nodeType":"VariableDeclaration","scope":9277,"src":"791:10:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9273,"name":"address","nodeType":"ElementaryTypeName","src":"791:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"778:24:35"},"returnParameters":{"id":9276,"nodeType":"ParameterList","parameters":[],"src":"811:0:35"},"scope":9278,"src":"756:56:35","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":9279,"src":"58:756:35","usedErrors":[],"usedEvents":[]}],"src":"33:781:35"},"id":35},"contracts/mocks/MockAutomationRegistrar.sol":{"ast":{"absolutePath":"contracts/mocks/MockAutomationRegistrar.sol","exportedSymbols":{"MockAutomationRegistrar":[9334]},"id":9335,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9280,"literals":["solidity","^","0.8",".27"],"nodeType":"PragmaDirective","src":"32:24:36"},{"abstract":false,"baseContracts":[],"canonicalName":"MockAutomationRegistrar","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9334,"linearizedBaseContracts":[9334],"name":"MockAutomationRegistrar","nameLocation":"67:23:36","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"ea3d9a7b7ea302e8330a22297188500bda7e831aea0b89bfeb7ab2ee77313102","id":9298,"name":"RegistrationRequested","nameLocation":"103:21:36","nodeType":"EventDefinition","parameters":{"id":9297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9282,"indexed":false,"mutability":"mutable","name":"name","nameLocation":"141:4:36","nodeType":"VariableDeclaration","scope":9298,"src":"134:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9281,"name":"string","nodeType":"ElementaryTypeName","src":"134:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9284,"indexed":false,"mutability":"mutable","name":"encryptedEmail","nameLocation":"161:14:36","nodeType":"VariableDeclaration","scope":9298,"src":"155:20:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9283,"name":"bytes","nodeType":"ElementaryTypeName","src":"155:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9286,"indexed":false,"mutability":"mutable","name":"upkeepContract","nameLocation":"193:14:36","nodeType":"VariableDeclaration","scope":9298,"src":"185:22:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9285,"name":"address","nodeType":"ElementaryTypeName","src":"185:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9288,"indexed":false,"mutability":"mutable","name":"gasLimit","nameLocation":"224:8:36","nodeType":"VariableDeclaration","scope":9298,"src":"217:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9287,"name":"uint32","nodeType":"ElementaryTypeName","src":"217:6:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9290,"indexed":false,"mutability":"mutable","name":"adminAddress","nameLocation":"250:12:36","nodeType":"VariableDeclaration","scope":9298,"src":"242:20:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9289,"name":"address","nodeType":"ElementaryTypeName","src":"242:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9292,"indexed":false,"mutability":"mutable","name":"checkData","nameLocation":"278:9:36","nodeType":"VariableDeclaration","scope":9298,"src":"272:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9291,"name":"bytes","nodeType":"ElementaryTypeName","src":"272:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9294,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"304:6:36","nodeType":"VariableDeclaration","scope":9298,"src":"297:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9293,"name":"uint96","nodeType":"ElementaryTypeName","src":"297:6:36","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":9296,"indexed":false,"mutability":"mutable","name":"source","nameLocation":"326:6:36","nodeType":"VariableDeclaration","scope":9298,"src":"320:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":9295,"name":"uint8","nodeType":"ElementaryTypeName","src":"320:5:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"124:214:36"},"src":"97:242:36"},{"body":{"id":9332,"nodeType":"Block","src":"622:259:36","statements":[{"eventCall":{"arguments":[{"id":9320,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9300,"src":"672:4:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":9321,"name":"encryptedEmail","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9302,"src":"690:14:36","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":9322,"name":"upkeepContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9304,"src":"718:14:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9323,"name":"gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9306,"src":"746:8:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":9324,"name":"adminAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9308,"src":"768:12:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9325,"name":"checkData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9310,"src":"794:9:36","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":9326,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9312,"src":"817:6:36","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":9327,"name":"source","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9314,"src":"837:6:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":9319,"name":"RegistrationRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9298,"src":"637:21:36","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$_t_uint32_$_t_address_$_t_bytes_memory_ptr_$_t_uint96_$_t_uint8_$returns$__$","typeString":"function (string memory,bytes memory,address,uint32,address,bytes memory,uint96,uint8)"}},"id":9328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"637:216:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9329,"nodeType":"EmitStatement","src":"632:221:36"},{"expression":{"hexValue":"74727565","id":9330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"870:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":9318,"id":9331,"nodeType":"Return","src":"863:11:36"}]},"functionSelector":"c4110e5c","id":9333,"implemented":true,"kind":"function","modifiers":[],"name":"register","nameLocation":"354:8:36","nodeType":"FunctionDefinition","parameters":{"id":9315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9300,"mutability":"mutable","name":"name","nameLocation":"386:4:36","nodeType":"VariableDeclaration","scope":9333,"src":"372:18:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9299,"name":"string","nodeType":"ElementaryTypeName","src":"372:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9302,"mutability":"mutable","name":"encryptedEmail","nameLocation":"413:14:36","nodeType":"VariableDeclaration","scope":9333,"src":"400:27:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9301,"name":"bytes","nodeType":"ElementaryTypeName","src":"400:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9304,"mutability":"mutable","name":"upkeepContract","nameLocation":"445:14:36","nodeType":"VariableDeclaration","scope":9333,"src":"437:22:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9303,"name":"address","nodeType":"ElementaryTypeName","src":"437:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9306,"mutability":"mutable","name":"gasLimit","nameLocation":"476:8:36","nodeType":"VariableDeclaration","scope":9333,"src":"469:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9305,"name":"uint32","nodeType":"ElementaryTypeName","src":"469:6:36","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9308,"mutability":"mutable","name":"adminAddress","nameLocation":"502:12:36","nodeType":"VariableDeclaration","scope":9333,"src":"494:20:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9307,"name":"address","nodeType":"ElementaryTypeName","src":"494:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9310,"mutability":"mutable","name":"checkData","nameLocation":"537:9:36","nodeType":"VariableDeclaration","scope":9333,"src":"524:22:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9309,"name":"bytes","nodeType":"ElementaryTypeName","src":"524:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9312,"mutability":"mutable","name":"amount","nameLocation":"563:6:36","nodeType":"VariableDeclaration","scope":9333,"src":"556:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9311,"name":"uint96","nodeType":"ElementaryTypeName","src":"556:6:36","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":9314,"mutability":"mutable","name":"source","nameLocation":"585:6:36","nodeType":"VariableDeclaration","scope":9333,"src":"579:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":9313,"name":"uint8","nodeType":"ElementaryTypeName","src":"579:5:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"362:235:36"},"returnParameters":{"id":9318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9333,"src":"616:4:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9316,"name":"bool","nodeType":"ElementaryTypeName","src":"616:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"615:6:36"},"scope":9334,"src":"345:536:36","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":9335,"src":"58:825:36","usedErrors":[],"usedEvents":[9298]}],"src":"32:852:36"},"id":36},"contracts/mocks/MockLINK.sol":{"ast":{"absolutePath":"contracts/mocks/MockLINK.sol","exportedSymbols":{"Context":[3633],"ERC20":[2589],"IERC20":[2667],"IERC20Errors":[727],"IERC20Metadata":[2693],"MockLINK":[9371]},"id":9372,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9336,"literals":["solidity","^","0.8",".27"],"nodeType":"PragmaDirective","src":"32:24:37"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":9337,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9372,"sourceUnit":2590,"src":"58:55:37","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9338,"name":"ERC20","nameLocations":["136:5:37"],"nodeType":"IdentifierPath","referencedDeclaration":2589,"src":"136:5:37"},"id":9339,"nodeType":"InheritanceSpecifier","src":"136:5:37"}],"canonicalName":"MockLINK","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9371,"linearizedBaseContracts":[9371,2589,727,2693,2667,3633],"name":"MockLINK","nameLocation":"124:8:37","nodeType":"ContractDefinition","nodes":[{"body":{"id":9356,"nodeType":"Block","src":"189:52:37","statements":[{"expression":{"arguments":[{"expression":{"id":9347,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"205:3:37","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"209:6:37","memberName":"sender","nodeType":"MemberAccess","src":"205:10:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_rational_1000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000"},"id":9353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31303030303030","id":9349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"217:7:37","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":9352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":9350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"227:2:37","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":9351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"231:2:37","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"227:6:37","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"217:16:37","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000"}],"id":9346,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"199:5:37","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"199:35:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9355,"nodeType":"ExpressionStatement","src":"199:35:37"}]},"id":9357,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4d6f636b204c494e4b","id":9342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"168:11:37","typeDescriptions":{"typeIdentifier":"t_stringliteral_e0643721c4e4805e3742ded7a1ca00e8684507d2fb82cedc02fb19832c6aface","typeString":"literal_string \"Mock LINK\""},"value":"Mock LINK"},{"hexValue":"4c494e4b","id":9343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"181:6:37","typeDescriptions":{"typeIdentifier":"t_stringliteral_921a3539bcb764c889432630877414523e7fbca00c211bc787aeae69e2e3a779","typeString":"literal_string \"LINK\""},"value":"LINK"}],"id":9344,"kind":"baseConstructorSpecifier","modifierName":{"id":9341,"name":"ERC20","nameLocations":["162:5:37"],"nodeType":"IdentifierPath","referencedDeclaration":2589,"src":"162:5:37"},"nodeType":"ModifierInvocation","src":"162:26:37"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9340,"nodeType":"ParameterList","parameters":[],"src":"159:2:37"},"returnParameters":{"id":9345,"nodeType":"ParameterList","parameters":[],"src":"189:0:37"},"scope":9371,"src":"148:93:37","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9369,"nodeType":"Block","src":"298:34:37","statements":[{"expression":{"arguments":[{"id":9365,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9359,"src":"314:2:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9366,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9361,"src":"318:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9364,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"308:5:37","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"308:17:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9368,"nodeType":"ExpressionStatement","src":"308:17:37"}]},"functionSelector":"40c10f19","id":9370,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"256:4:37","nodeType":"FunctionDefinition","parameters":{"id":9362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9359,"mutability":"mutable","name":"to","nameLocation":"269:2:37","nodeType":"VariableDeclaration","scope":9370,"src":"261:10:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9358,"name":"address","nodeType":"ElementaryTypeName","src":"261:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9361,"mutability":"mutable","name":"amount","nameLocation":"281:6:37","nodeType":"VariableDeclaration","scope":9370,"src":"273:14:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9360,"name":"uint256","nodeType":"ElementaryTypeName","src":"273:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"260:28:37"},"returnParameters":{"id":9363,"nodeType":"ParameterList","parameters":[],"src":"298:0:37"},"scope":9371,"src":"247:85:37","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":9372,"src":"115:219:37","usedErrors":[697,702,707,716,721,726],"usedEvents":[2601,2610]}],"src":"32:303:37"},"id":37},"contracts/test/MockUSDC.sol":{"ast":{"absolutePath":"contracts/test/MockUSDC.sol","exportedSymbols":{"Context":[3633],"ERC20":[2589],"IERC20":[2667],"IERC20Errors":[727],"IERC20Metadata":[2693],"MockUSDC":[9404]},"id":9405,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9373,"literals":["solidity","^","0.8",".27"],"nodeType":"PragmaDirective","src":"32:24:38"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":9374,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9405,"sourceUnit":2590,"src":"58:55:38","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9375,"name":"ERC20","nameLocations":["136:5:38"],"nodeType":"IdentifierPath","referencedDeclaration":2589,"src":"136:5:38"},"id":9376,"nodeType":"InheritanceSpecifier","src":"136:5:38"}],"canonicalName":"MockUSDC","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9404,"linearizedBaseContracts":[9404,2589,727,2693,2667,3633],"name":"MockUSDC","nameLocation":"124:8:38","nodeType":"ContractDefinition","nodes":[{"body":{"id":9393,"nodeType":"Block","src":"189:85:38","statements":[{"expression":{"arguments":[{"expression":{"id":9384,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"205:3:38","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"209:6:38","memberName":"sender","nodeType":"MemberAccess","src":"205:10:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"id":9390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31303030303030","id":9386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"217:7:38","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"id":9389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":9387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"227:2:38","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"36","id":9388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"231:1:38","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"227:5:38","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"}},"src":"217:15:38","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"}],"id":9383,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"199:5:38","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"199:34:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9392,"nodeType":"ExpressionStatement","src":"199:34:38"}]},"id":9394,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4d6f636b2055534443","id":9379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"168:11:38","typeDescriptions":{"typeIdentifier":"t_stringliteral_40fd8d9bac95df88c590648925b2475dbec9d83bba102209ea610dd314cd27d8","typeString":"literal_string \"Mock USDC\""},"value":"Mock USDC"},{"hexValue":"55534443","id":9380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"181:6:38","typeDescriptions":{"typeIdentifier":"t_stringliteral_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa","typeString":"literal_string \"USDC\""},"value":"USDC"}],"id":9381,"kind":"baseConstructorSpecifier","modifierName":{"id":9378,"name":"ERC20","nameLocations":["162:5:38"],"nodeType":"IdentifierPath","referencedDeclaration":2589,"src":"162:5:38"},"nodeType":"ModifierInvocation","src":"162:26:38"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9377,"nodeType":"ParameterList","parameters":[],"src":"159:2:38"},"returnParameters":{"id":9382,"nodeType":"ParameterList","parameters":[],"src":"189:0:38"},"scope":9404,"src":"148:126:38","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2153],"body":{"id":9402,"nodeType":"Block","src":"337:49:38","statements":[{"expression":{"hexValue":"36","id":9400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"354:1:38","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"functionReturnParameters":9399,"id":9401,"nodeType":"Return","src":"347:8:38"}]},"functionSelector":"313ce567","id":9403,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"289:8:38","nodeType":"FunctionDefinition","overrides":{"id":9396,"nodeType":"OverrideSpecifier","overrides":[],"src":"312:8:38"},"parameters":{"id":9395,"nodeType":"ParameterList","parameters":[],"src":"297:2:38"},"returnParameters":{"id":9399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9403,"src":"330:5:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":9397,"name":"uint8","nodeType":"ElementaryTypeName","src":"330:5:38","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"329:7:38"},"scope":9404,"src":"280:106:38","stateMutability":"pure","virtual":false,"visibility":"public"}],"scope":9405,"src":"115:273:38","usedErrors":[697,702,707,716,721,726],"usedEvents":[2601,2610]}],"src":"32:357:38"},"id":38}},"contracts":{"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol":{"AutomationBase":{"abi":[{"inputs":[],"name":"OnlySimulatedBackend","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601357603a908160198239f35b600080fdfe600080fdfea264697066735822122070923a5117710055482db09ba072e8ecbddb84e87b89891fb3fe89c123a4d68064736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x13 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x19 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x923A5117710055482DB09BA072E8ECBDDB DUP5 0xE8 PUSH28 0x89891FB3FE89C123A4D68064736F6C634300081B0033000000000000 ","sourceMap":"57:634:0:-:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122070923a5117710055482db09ba072e8ecbddb84e87b89891fb3fe89c123a4d68064736f6c634300081b0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x923A5117710055482DB09BA072E8ECBDDB DUP5 0xE8 PUSH28 0x89891FB3FE89C123A4D68064736F6C634300081B0033000000000000 ","sourceMap":"57:634:0:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":\"AutomationBase\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"keccak256\":\"0x8c97744adc25cf30d1a2509bff6c0ddc9b36feb75f8e38c85d5c62b8ec773159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c53c8736dacbf8c517c63937d556c3e4873a62f509c5d84b89e32fc5c9c6c2c\",\"dweb:/ipfs/QmeR6RSce5dTDcPgbwBnG7E8U89716bqsUcv1NeWnX5RJf\"]}},\"version\":1}"}},"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol":{"AutomationCompatible":{"abi":[{"inputs":[],"name":"OnlySimulatedBackend","type":"error"},{"inputs":[{"internalType":"bytes","name":"checkData","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"performData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"performData","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"checkUpkeep(bytes)":"6e04ff0d","performUpkeep(bytes)":"4585e33b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":\"AutomationCompatible\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"keccak256\":\"0x8c97744adc25cf30d1a2509bff6c0ddc9b36feb75f8e38c85d5c62b8ec773159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c53c8736dacbf8c517c63937d556c3e4873a62f509c5d84b89e32fc5c9c6c2c\",\"dweb:/ipfs/QmeR6RSce5dTDcPgbwBnG7E8U89716bqsUcv1NeWnX5RJf\"]},\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":{\"keccak256\":\"0xce623f3e7fa4addf240032d2817b2b489ac08e79fae14a5cc5850ed3f1acddf8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0546b2739f3989b897c5cb591d01211e2db22e1a8578f68117f1a8a692abd85c\",\"dweb:/ipfs/QmW6guw8uUk2Dq49PWdjeZeEvnDDRg3CVX2BVcVNcT6QNL\"]},\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e35eb46dfadf12396e92dd970547209dfd99f0ae5b1ec7b5a3e81617f620a1\",\"dweb:/ipfs/Qmanoi2CDi9MwkP44HosagvewfMEvCMN1YthGRmCexVjwY\"]}},\"version\":1}"}},"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol":{"AutomationCompatibleInterface":{"abi":[{"inputs":[{"internalType":"bytes","name":"checkData","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"performData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"performData","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"checkUpkeep(bytes)":"6e04ff0d","performUpkeep(bytes)":"4585e33b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":\"AutomationCompatibleInterface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e35eb46dfadf12396e92dd970547209dfd99f0ae5b1ec7b5a3e81617f620a1\",\"dweb:/ipfs/Qmanoi2CDi9MwkP44HosagvewfMEvCMN1YthGRmCexVjwY\"]}},\"version\":1}"}},"@chainlink/contracts/src/v0.8/automation/interfaces/IAutomationForwarder.sol":{"IAutomationForwarder":{"abi":[{"inputs":[{"internalType":"uint256","name":"gasAmount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"forward","outputs":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"uint256","name":"gasUsed","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getRegistry","outputs":[{"internalType":"contract IAutomationRegistryConsumer","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTarget","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"typeAndVersion","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"newRegistry","type":"address"}],"name":"updateRegistry","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"forward(uint256,bytes)":"79188d16","getRegistry()":"5ab1bd53","getTarget()":"f00e6a2a","typeAndVersion()":"181f5a77","updateRegistry(address)":"1a5da6c8"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gasAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"forward\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRegistry\",\"outputs\":[{\"internalType\":\"contract IAutomationRegistryConsumer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTarget\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"typeAndVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRegistry\",\"type\":\"address\"}],\"name\":\"updateRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/IAutomationForwarder.sol\":\"IAutomationForwarder\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/IAutomationForwarder.sol\":{\"keccak256\":\"0x5b97b0a8a8d89b77b572e2c41d8fabbad9c4a9920ab698f8c898d2cc9c1a0eb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1026a62312dc859f63d2d063b0eb10addcf5ffe011ce01b1d39013adb0ea2f0f\",\"dweb:/ipfs/QmeRcnHW9wqtsuXWNb5RUDp48nW5MZYBf7CdoXzyUY5F3T\"]},\"@chainlink/contracts/src/v0.8/automation/interfaces/IAutomationRegistryConsumer.sol\":{\"keccak256\":\"0x3e4f465acb278a1a1aac6a038f5d3b21794fd3ff37e2544944f4b42fc07a327b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b98c402fe45fb6282ddf03541ca9db944ed7b23c7bbfa4a5a09b2cb961f45eff\",\"dweb:/ipfs/QmNn3dopG84uqmw6TG33uHtyFfARGj3XSNMu5YyVcj12hS\"]},\"@chainlink/contracts/src/v0.8/shared/interfaces/ITypeAndVersion.sol\":{\"keccak256\":\"0xf5827cb463c01d055021684d04f9186391c2d9ac850e0d0819f76140e4fc84ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a19c7bae07330e6d7904a0a21cf0ab0067ef096b66c1653a2e012801a931c5b9\",\"dweb:/ipfs/QmckpvSuLx8UL8zfVzAtN6ZRxyXHUSVqqz2JwYZ2jrK58h\"]}},\"version\":1}"}},"@chainlink/contracts/src/v0.8/automation/interfaces/IAutomationRegistryConsumer.sol":{"IAutomationRegistryConsumer":{"abi":[{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint96","name":"amount","type":"uint96"}],"name":"addFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"cancelUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"getBalance","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"getMinBalance","outputs":[{"internalType":"uint96","name":"minBalance","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"pauseUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"unpauseUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"withdrawFunds","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addFunds(uint256,uint96)":"948108f7","cancelUpkeep(uint256)":"c8048022","getBalance(uint256)":"1e010439","getMinBalance(uint256)":"d7632648","pauseUpkeep(uint256)":"8765ecbe","unpauseUpkeep(uint256)":"5165f2f5","withdrawFunds(uint256,address)":"744bfe61"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"}],\"name\":\"addFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"cancelUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getMinBalance\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"minBalance\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"pauseUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"unpauseUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Functions can be added to this interface, but not removed.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"IAutomationRegistryConsumer defines the LTS user-facing interface that we intend to maintain for across upgrades. As long as users use functions from within this interface, their upkeeps will retain backwards compatability across migrations.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/IAutomationRegistryConsumer.sol\":\"IAutomationRegistryConsumer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/IAutomationRegistryConsumer.sol\":{\"keccak256\":\"0x3e4f465acb278a1a1aac6a038f5d3b21794fd3ff37e2544944f4b42fc07a327b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b98c402fe45fb6282ddf03541ca9db944ed7b23c7bbfa4a5a09b2cb961f45eff\",\"dweb:/ipfs/QmNn3dopG84uqmw6TG33uHtyFfARGj3XSNMu5YyVcj12hS\"]}},\"version\":1}"}},"@chainlink/contracts/src/v0.8/shared/interfaces/ITypeAndVersion.sol":{"ITypeAndVersion":{"abi":[{"inputs":[],"name":"typeAndVersion","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"typeAndVersion()":"181f5a77"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"typeAndVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/ITypeAndVersion.sol\":\"ITypeAndVersion\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/ITypeAndVersion.sol\":{\"keccak256\":\"0xf5827cb463c01d055021684d04f9186391c2d9ac850e0d0819f76140e4fc84ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a19c7bae07330e6d7904a0a21cf0ab0067ef096b66c1653a2e012801a931c5b9\",\"dweb:/ipfs/QmckpvSuLx8UL8zfVzAtN6ZRxyXHUSVqqz2JwYZ2jrK58h\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ERC1155":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x22933f0f4897ff70a991c3baebfbc2574fd052dc4bae7fcafec45b07c1f23dd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13674cffad18cec55f013056496d7d2e3a34bd7bdbe23d1ef0c7588088c73367\",\"dweb:/ipfs/QmcBkrwxNvCApG48Gyby2L6qCNtuhaFncGpbJt3zuukTmu\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x30afe9013aaeb3ba735284a9310792776f57a3b2db6fc1d99628f2c47287f5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c675b740746031092efcedb2e18179f05fce8ba482de64e982715e4aa16bc90\",\"dweb:/ipfs/QmVdUD89qYudLc88k5AsuQ6VWyz9SE1c6UXrVK32Yqh1YS\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xaf9586854de33dc9d3a7160cad8170fdfb4119d02a44bad90ba16d71d701cc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15a02762b0a51d66e36be135c27de656093fc09292fa743df8484b87d4486ea\",\"dweb:/ipfs/QmbEozFrt5XwC9nzDFuXvN1RF3hQVwKYNi8c2R4bFvYJ2X\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"IERC1155":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC-1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC-1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"IERC1155MetadataURI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ERC1155Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220460b1512b1edf88f017797601e12b9f145c714a147dd7e3ec892b89062e7653664736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID SIGNEXTEND ISZERO SLT 0xB1 0xED 0xF8 DUP16 ADD PUSH24 0x97601E12B9F145C714A147DD7E3EC892B89062E765366473 PUSH16 0x6C634300081B00330000000000000000 ","sourceMap":"439:3094:14:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220460b1512b1edf88f017797601e12b9f145c714a147dd7e3ec892b89062e7653664736f6c634300081b0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID SIGNEXTEND ISZERO SLT 0xB1 0xED 0xF8 DUP16 ADD PUSH24 0x97601E12B9F145C714A147DD7E3EC892B89062E765366473 PUSH16 0x6C634300081B00330000000000000000 ","sourceMap":"439:3094:14:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-1155 utility functions. See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":\"ERC1155Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x30afe9013aaeb3ba735284a9310792776f57a3b2db6fc1d99628f2c47287f5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c675b740746031092efcedb2e18179f05fce8ba482de64e982715e4aa16bc90\",\"dweb:/ipfs/QmVdUD89qYudLc88k5AsuQ6VWyz9SE1c6UXrVK32Yqh1YS\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Arrays.sol":{"Arrays":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220626e5684184704a3aa785121cfb0cee8983525d1eb77d32a3498144c0b31fc2f64736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0x6E5684 XOR SELFBALANCE DIV LOG3 0xAA PUSH25 0x5121CFB0CEE8983525D1EB77D32A3498144C0B31FC2F64736F PUSH13 0x634300081B0033000000000000 ","sourceMap":"459:17881:18:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220626e5684184704a3aa785121cfb0cee8983525d1eb77d32a3498144c0b31fc2f64736f6c634300081b0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0x6E5684 XOR SELFBALANCE DIV LOG3 0xAA PUSH25 0x5121CFB0CEE8983525D1EB77D32A3498144C0B31FC2F64736F PUSH13 0x634300081B0033000000000000 ","sourceMap":"459:17881:18:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xaf9586854de33dc9d3a7160cad8170fdfb4119d02a44bad90ba16d71d701cc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15a02762b0a51d66e36be135c27de656093fc09292fa743df8484b87d4486ea\",\"dweb:/ipfs/QmbEozFrt5XwC9nzDFuXvN1RF3hQVwKYNi8c2R4bFvYJ2X\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Comparators.sol":{"Comparators":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220ae2526edf2e484d72220e5166192877dacf5540312f704ddbf0d5a905c5ccb0864736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0x25 0x26 0xED CALLCODE 0xE4 DUP5 0xD7 0x22 KECCAK256 0xE5 AND PUSH2 0x9287 PUSH30 0xACF5540312F704DDBF0D5A905C5CCB0864736F6C634300081B0033000000 ","sourceMap":"224:218:19:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220ae2526edf2e484d72220e5166192877dacf5540312f704ddbf0d5a905c5ccb0864736f6c634300081b0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0x25 0x26 0xED CALLCODE 0xE4 DUP5 0xD7 0x22 KECCAK256 0xE5 AND PUSH2 0x9287 PUSH30 0xACF5540312F704DDBF0D5A905C5CCB0864736F6C634300081B0033000000 ","sourceMap":"224:218:19:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to compare values. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Comparators.sol\":\"Comparators\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220373b6658416fa67f587bd31b0fda24785851a27822b133650316753c7967f10a64736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY EXTCODESIZE PUSH7 0x58416FA67F587B 0xD3 SHL 0xF 0xDA 0x24 PUSH25 0x5851A27822B133650316753C7967F10A64736F6C634300081B STOP CALLER ","sourceMap":"657:1315:21:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220373b6658416fa67f587bd31b0fda24785851a27822b133650316753c7967f10a64736f6c634300081b0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY EXTCODESIZE PUSH7 0x58416FA67F587B 0xD3 SHL 0xF 0xDA 0x24 PUSH25 0x5851A27822B133650316753C7967F10A64736F6C634300081B STOP CALLER ","sourceMap":"657:1315:21:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Pausable.sol":{"Pausable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"SlotDerivation":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212207f86df1a322c9f68d351f2cf98e4c5c157862406ff63d11a82968fa36945e51a64736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x86DF1A322C9F68D351F2CF98E4C5C157862406FF63D11A82968FA36945E51A64 PUSH20 0x6F6C634300081B00330000000000000000000000 ","sourceMap":"1598:3723:24:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212207f86df1a322c9f68d351f2cf98e4c5c157862406ff63d11a82968fa36945e51a64736f6c634300081b0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x86DF1A322C9F68D351F2CF98E4C5C157862406FF63D11A82968FA36945E51A64 PUSH20 0x6F6C634300081B00330000000000000000000000 ","sourceMap":"1598:3723:24:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for computing storage (and transient storage) locations from namespaces and deriving slots corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by the solidity language / compiler. See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.]. Example usage: ```solidity contract Example {     // Add the library methods     using StorageSlot for bytes32;     using SlotDerivation for bytes32;     // Declare a namespace     string private constant _NAMESPACE = \\\"<namespace>\\\" // eg. OpenZeppelin.Slot     function setValueInNamespace(uint256 key, address newValue) internal {         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;     }     function getValueInNamespace(uint256 key) internal view returns (address) {         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;     } } ``` TIP: Consider using this library along with {StorageSlot}. NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking upgrade safety will ignore the slots accessed through this library. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":\"SlotDerivation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122026c44db60a74befea2ffa47b111b90f5693c749f869a86e412c4e3604debc3b064736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xC4 0x4D 0xB6 EXP PUSH21 0xBEFEA2FFA47B111B90F5693C749F869A86E412C4E3 PUSH1 0x4D 0xEB 0xC3 0xB0 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"1407:2774:25:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122026c44db60a74befea2ffa47b111b90f5693c749f869a86e412c4e3604debc3b064736f6c634300081b0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xC4 0x4D 0xB6 EXP PUSH21 0xBEFEA2FFA47B111B90F5693C749F869A86E412C4E3 PUSH1 0x4D 0xEB 0xC3 0xB0 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"1407:2774:25:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212208028699ede9a4c714c4fc5392525fc10381117d85e51ac0e3dbdffb72ea41e7164736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 0x28 PUSH10 0x9EDE9A4C714C4FC53925 0x25 0xFC LT CODESIZE GT OR 0xD8 MCOPY MLOAD 0xAC 0xE RETURNDATASIZE 0xBD SELFDESTRUCT 0xB7 0x2E LOG4 0x1E PUSH18 0x64736F6C634300081B003300000000000000 ","sourceMap":"251:3680:26:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212208028699ede9a4c714c4fc5392525fc10381117d85e51ac0e3dbdffb72ea41e7164736f6c634300081b0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 0x28 PUSH10 0x9EDE9A4C714C4FC53925 0x25 0xFC LT CODESIZE GT OR 0xD8 MCOPY MLOAD 0xAC 0xE RETURNDATASIZE 0xBD SELFDESTRUCT 0xB7 0x2E LOG4 0x1E PUSH18 0x64736F6C634300081B003300000000000000 ","sourceMap":"251:3680:26:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220f01680de34a5280e2d48bc07a6b9a9d9b5ad5175d500e38276ae2380f455d6cc64736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE AND DUP1 0xDE CALLVALUE 0xA5 0x28 0xE 0x2D BASEFEE 0xBC SMOD 0xA6 0xB9 0xA9 0xD9 0xB5 0xAD MLOAD PUSH22 0xD500E38276AE2380F455D6CC64736F6C634300081B00 CALLER ","sourceMap":"281:28026:29:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220f01680de34a5280e2d48bc07a6b9a9d9b5ad5175d500e38276ae2380f455d6cc64736f6c634300081b0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE AND DUP1 0xDE CALLVALUE 0xA5 0x28 0xE 0x2D BASEFEE 0xBC SMOD 0xA6 0xB9 0xA9 0xD9 0xB5 0xAD MLOAD PUSH22 0xD500E38276AE2380F455D6CC64736F6C634300081B00 CALLER ","sourceMap":"281:28026:29:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220f989b9f7ecc8b58b54c4c9c4a5abc2f90b9924b22763f537486185cc903d0d8964736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 DUP10 0xB9 0xF7 0xEC 0xC8 0xB5 DUP12 SLOAD 0xC4 0xC9 0xC4 0xA5 0xAB 0xC2 0xF9 SIGNEXTEND SWAP10 0x24 0xB2 0x27 PUSH4 0xF5374861 DUP6 0xCC SWAP1 RETURNDATASIZE 0xD DUP10 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"769:34173:30:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220f989b9f7ecc8b58b54c4c9c4a5abc2f90b9924b22763f537486185cc903d0d8964736f6c634300081b0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 DUP10 0xB9 0xF7 0xEC 0xC8 0xB5 DUP12 SLOAD 0xC4 0xC9 0xC4 0xA5 0xAB 0xC2 0xF9 SIGNEXTEND SWAP10 0x24 0xB2 0x27 PUSH4 0xF5374861 DUP6 0xCC SWAP1 RETURNDATASIZE 0xD DUP10 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"769:34173:30:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212201a35a282a1ec24fc1605e35a0b72678cbe82ea84872194e77d3918c5c3ecebf464736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE CALLDATALOAD LOG2 DUP3 LOG1 0xEC 0x24 0xFC AND SDIV 0xE3 GAS SIGNEXTEND PUSH19 0x678CBE82EA84872194E77D3918C5C3ECEBF464 PUSH20 0x6F6C634300081B00330000000000000000000000 ","sourceMap":"258:2354:31:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212201a35a282a1ec24fc1605e35a0b72678cbe82ea84872194e77d3918c5c3ecebf464736f6c634300081b0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE CALLDATALOAD LOG2 DUP3 LOG1 0xEC 0x24 0xFC AND SDIV 0xE3 GAS SIGNEXTEND PUSH19 0x678CBE82EA84872194E77D3918C5C3ECEBF464 PUSH20 0x6F6C634300081B00330000000000000000000000 ","sourceMap":"258:2354:31:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/ProductToken.sol":{"ProductToken":{"abi":[{"inputs":[{"internalType":"string","name":"baseUri","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"newUri","type":"string"}],"name":"BaseURIUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"productId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ProductMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"productId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"productId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"productId","type":"uint256"}],"name":"productSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"newUri","type":"string"}],"name":"setBaseURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"allocate_memory":{"entryPoint":682,"id":null,"parameterSlots":1,"returnSlots":1},"fun_grantRole":{"entryPoint":719,"id":415,"parameterSlots":1,"returnSlots":1},"fun_grantRole_2845":{"entryPoint":843,"id":415,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"6080604052346102a5576000611eaf908138038061001c816102aa565b9384398201916020818403126102a1578051906001600160401b038211610289570182601f820112156102a1578051906001600160401b03821161028d5761006d601f8301601f19166020016102aa565b938285526020838301011161028957908291825b828110610272575050602090840101526020908061009e836102aa565b5250600254600181811c91168015610268575b8282101461020557601f811161023b575b5060006002558151906001600160401b03821161022557600554600181811c9116801561021b575b8282101461020557601f81116101be575b5080601f83116001146101575750819260009261014c575b50508160011b916000199060031b1c1916176005555b610132336102cf565b5061013c3361034b565b50604051611a6b90816103e48239f35b015190503880610113565b90601f19831693600560005282600020926000905b8682106101a6575050836001951061018d575b505050811b01600555610129565b015160001960f88460031b161c1916905538808061017f565b8060018596829496860151815501950193019061016c565b600560005281600020601f840160051c8101918385106101fb575b601f0160051c01905b8181106101ef57506100fb565b600081556001016101e2565b90915081906101d9565b634e487b7160e01b600052602260045260246000fd5b90607f16906100ea565b634e487b7160e01b600052604160045260246000fd5b6002600052601f82600020910160051c8101905b81811061025c57506100c2565b6000815560010161024f565b90607f16906100b1565b602082820181015187830182015285945001610081565b8280fd5b634e487b7160e01b83526041600452602483fd5b5080fd5b600080fd5b6040519190601f01601f191682016001600160401b0381118382101761022557604052565b6001600160a01b0381166000908152600080516020611e8f833981519152602052604090205460ff16610345576001600160a01b03166000818152600080516020611e8f83398151915260205260408120805460ff19166001179055339190600080516020611e4f8339815191528180a4600190565b50600090565b6001600160a01b0381166000908152600080516020611e6f833981519152602052604090205460ff16610345576001600160a01b03166000818152600080516020611e6f83398151915260205260408120805460ff191660011790553391907f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a690600080516020611e4f8339815191529080a460019056fe6080604052600436101561001257600080fd5b60003560e01c8062fdd58e1461014657806301ffc9a7146101415780630e89341c1461013c578063156e29f614610137578063248a9ca3146101325780632eb2c2d61461012d5780632f2ff15d1461012857806336568abe146101235780634e1273f41461011e57806355f804b31461011957806391d1485414610114578063a217fddf1461010f578063a22cb4651461010a578063d539139314610105578063d547741f14610100578063e985e9c5146100fb578063ef8593e7146100f6578063f242432a146100f15763f5298aca146100ec57600080fd5b610f2b565b610e31565b610e05565b610db4565b610d74565b610d39565b610c80565b610c64565b610c11565b610a87565b6109c6565b61093b565b6108f6565b610867565b610712565b6104b7565b6102d4565b6101ef565b610190565b600435906001600160a01b038216820361016157565b600080fd5b602435906001600160a01b038216820361016157565b35906001600160a01b038216820361016157565b346101615760403660031901126101615760206101d46101ae61014b565b6024356000526000835260406000209060018060a01b0316600052602052604060002090565b54604051908152f35b6001600160e01b031981160361016157565b346101615760203660031901126101615760043561020c816101dd565b63ffffffff60e01b16637965db0b60e01b8114908115610235575b506040519015158152602090f35b636cdb3d1360e11b811491508115610267575b8115610256575b5038610227565b6301ffc9a760e01b1490503861024f565b6303a24d0760e21b81149150610248565b60005b83811061028b5750506000910152565b818101518382015260200161027b565b906020916102b481518092818552858086019101610278565b601f01601f1916010190565b9060206102d192818152019061029b565b90565b346101615760203660031901126101615760006004358072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b81101561046a575b806d04ee2d6d415b85acef8100000000600a92101561044e575b662386f26fc10000811015610439575b6305f5e100811015610427575b612710811015610417575b6064811015610408575b10156103fd575b61039a602161036e6001850161136f565b938401015b60001901916f181899199a1a9b1b9c1cb0b131b232b360811b600a82061a8353600a900490565b9081156103aa5761039a90610373565b6040516103f9906103ed816103df6103ce886103c860208501611118565b906111a1565b64173539b7b760d91b815260050190565b03601f19810183528261075d565b604051918291826102c0565b0390f35b60019091019061035d565b60029060649004930192610356565b600490612710900493019261034c565b6008906305f5e1009004930192610341565b601090662386f26fc100009004930192610334565b6020906d04ee2d6d415b85acef81000000009004930192610324565b506040915072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b810461030a565b6060906003190112610161576004356001600160a01b038116810361016157906024359060443590565b34610161576104c53661048d565b90916104cf6113a1565b826000526004602052604060002080549083820180921161070d57556040519060206104fb818461075d565b600083526001600160a01b0382169081156106f75761053a85879160405192600184526020840152604083019160018352606084015260808301604052565b9281518451908181036106e057509596811515965060005b83518110156105c35780888860019360051b8880828a010151918b0101519261057f575b50505001610552565b6105b99161059a6105b1926000526000602052604060002090565b9060018060a01b0316600052602052604060002090565b9182546111ce565b9055388881610576565b509361066495919792937f1ace3364065011f2a2f041ccf777c9f5394104fb5c15ec40e2ed753531e33b219760018651146000146106a357896000838801517fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f626106458688015160405191829133958360209093929193604081019481520152565b0390a45b610669575b5050505050604051918291829190602083019252565b0390a3005b845160010361068f578061068595015191015191600033611995565b388080808061064e565b50909261069e93600033611860565b610685565b8960006040517f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb3391806106d8898d836117a3565b0390a4610649565b635b05999160e01b60005260045260245260446000fd5b632bfa23e760e11b600052600060045260246000fd5b6111b8565b3461016157602036600319011261016157602061073f600435600052600360205260016040600020015490565b604051908152f35b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761077f57604052565b610747565b67ffffffffffffffff811161077f5760051b60200190565b9080601f830112156101615781356107b381610784565b926107c1604051948561075d565b81845260208085019260051b82010192831161016157602001905b8282106107e95750505090565b81358152602091820191016107dc565b67ffffffffffffffff811161077f57601f01601f191660200190565b929192610821826107f9565b9161082f604051938461075d565b829481845281830111610161578281602093846000960137010152565b9080601f83011215610161578160206102d193359101610815565b346101615760a03660031901126101615761088061014b565b610888610166565b9060443567ffffffffffffffff8111610161576108a990369060040161079c565b60643567ffffffffffffffff8111610161576108c990369060040161079c565b906084359367ffffffffffffffff8511610161576108ee6108f495369060040161084c565b936111db565b005b34610161576040366003190112610161576108f4600435610915610166565b9061093661093182600052600360205260016040600020015490565b611466565b6114a3565b3461016157604036600319011261016157600435610957610166565b336001600160a01b03821603610970576108f491611537565b63334bd91960e11b60005260046000fd5b906020808351928381520192019060005b81811061099f5750505090565b8251845260209384019390920191600101610992565b9060206102d1928181520190610981565b346101615760403660031901126101615760043567ffffffffffffffff8111610161573660238201121561016157806004013590610a0382610784565b91610a11604051938461075d565b8083526024602084019160051b8301019136831161016157602401905b828210610a6f578360243567ffffffffffffffff8111610161576103f991610a5d610a6392369060040161079c565b90611264565b604051918291826109b5565b60208091610a7c8461017c565b815201910190610a2e565b346101615760203660031901126101615760043567ffffffffffffffff8111610161573660238201121561016157610ac9903690602481600401359101610815565b610ad1611413565b805167ffffffffffffffff811161077f57610af681610af16005546110de565b61131c565b6020601f8211600114610b695791610b4a82610b59937f6741b2fc379fad678116fe3d4d4b9a1a184ab53ba36b86ad0fa66340b1ab41ad95600091610b5e575b508160011b916000199060031b1c19161790565b600555604051918291826102c0565b0390a1005b905083015138610b36565b6005600052601f198216907f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db09160005b818110610bf95750927f6741b2fc379fad678116fe3d4d4b9a1a184ab53ba36b86ad0fa66340b1ab41ad949260019282610b599610610be0575b5050811b016005556103ed565b84015160001960f88460031b161c191690553880610bd3565b91926020600181928689015181550194019201610b99565b3461016157604036600319011261016157602060ff610c58600435610c34610166565b906000526003845260406000209060018060a01b0316600052602052604060002090565b54166040519015158152f35b3461016157600036600319011261016157602060405160008152f35b3461016157604036600319011261016157610c9961014b565b6024359081151590818303610161576001600160a01b038116928315610d2457610ce5610cf69233600052600160205260406000209060018060a01b0316600052602052604060002090565b9060ff801983541691151516179055565b6040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b62ced3e160e81b600052600060045260246000fd5b346101615760003660031901126101615760206040517f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68152f35b34610161576040366003190112610161576108f4600435610d93610166565b90610daf61093182600052600360205260016040600020015490565b611537565b3461016157604036600319011261016157602060ff610c58610dd461014b565b610ddc610166565b6001600160a01b0391821660009081526001865260408082209290931681526020919091522090565b346101615760203660031901126101615760043560005260046020526020604060002054604051908152f35b346101615760a036600319011261016157610e4a61014b565b610e52610166565b604435906064359260843567ffffffffffffffff811161016157610e7a90369060040161084c565b926001600160a01b0382163381141580610f07575b610eef576001600160a01b038416156106f75715610eda576108f494610ed260405192600184526020840152604083019160018352606084015260808301604052565b9290916115c2565b626a0d4560e21b600052600060045260246000fd5b63711bec9160e11b6000523360045260245260446000fd5b50600081815260016020908152604080832033845290915290205460ff1615610e8f565b3461016157610f393661048d565b610f416113a1565b6001600160a01b038316918215610eda57610f7c82829160405192600184526020840152604083019160018352606084015260808301604052565b926020926000604051610f8f868261075d565b5282518551908181036106e057505060005b8351811015611037578060051b858082870101519188010151610fd28a61059a846000526000602052604060002090565b54818110611000578a61059a6001959493610ff99303936000526000602052604060002090565b5501610fa1565b6040516303dee4c560e01b81526001600160a01b038c16600482015260248101919091526044810182905260648101839052608490fd5b5091946000919560049585600183511485146110a2579182015191015160408051928352602083019190915233917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629190a45b600052526040600020805491820391821161070d5755005b506110d67f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb916040519182913395836117a3565b0390a461108a565b90600182811c9216801561110e575b60208310146110f857565b634e487b7160e01b600052602260045260246000fd5b91607f16916110ed565b60055460009291611128826110de565b916001811690811561118f5750600114611140575050565b6005600090815292935090917f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b83821061117b5750500190565b60018160209254848601520191019061116e565b60ff1916825250811515909102019150565b906111b460209282815194859201610278565b0190565b634e487b7160e01b600052601160045260246000fd5b9190820180921161070d57565b939291906001600160a01b0385163381141580611216575b610eef576001600160a01b038216156106f75715610eda57611214946115c2565b565b50600081815260016020908152604080832033845290915290205460ff16156111f3565b805182101561124e5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b9190918051835180820361130557505080519061128082610784565b9161128e604051938461075d565b80835261129d601f1991610784565b0136602084013760005b81518110156112fe57806112ed60019260051b60208082870101519189010151906000918252602082815260408084206001600160a01b03909316845291905290205490565b6112f7828661123a565b52016112a7565b5090925050565b635b05999160e01b60005260045260245260446000fd5b601f8111611328575050565b60056000526020600020906020601f840160051c83019310611365575b601f0160051c01905b818110611359575050565b6000815560010161134e565b9091508190611345565b90611379826107f9565b611386604051918261075d565b8281528092611397601f19916107f9565b0190602036910137565b3360009081527f5562e70da342db81569f3094d36be279beaca7ad8e08f434ea188e79d2bfe10c602052604090205460ff16156113da57565b63e2517d3f60e01b600052336004527f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a660245260446000fd5b3360009081527f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92eff602052604090205460ff161561144c57565b63e2517d3f60e01b60005233600452600060245260446000fd5b600081815260036020908152604080832033845290915290205460ff161561148b5750565b63e2517d3f60e01b6000523360045260245260446000fd5b60008181526003602090815260408083206001600160a01b038616845290915290205460ff166115305760008181526003602090815260408083206001600160a01b03861684529091529020805460ff1916600117905533916001600160a01b0316907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d600080a4600190565b5050600090565b60008181526003602090815260408083206001600160a01b038616845290915290205460ff16156115305760008181526003602090815260408083206001600160a01b03861684529091529020805460ff1916905533916001600160a01b0316907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b600080a4600190565b94939290919384518251908181036106e05750506001600160a01b0386811695861515959185168015159391929060005b84518110156116d5578060051b90898988602080868b010151958c0101519261164e575b93600194611629575b505050016115f3565b6116449161059a6105b1926000526000602052604060002090565b9055388981611620565b5050909161166a8d61059a836000526000602052604060002090565b5482811061169e578291898f611695600197968f95039161059a856000526000602052604060002090565b55909450611617565b6040516303dee4c560e01b81526001600160a01b038f16600482015260248101919091526044810183905260648101829052608490fd5b5091989593929790965060018851146000146117695760208881015186820151604080519283529282015233917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291a45b611732575b5050505050565b84516001036117585760208061174e9601519201519233611995565b388080808061172b565b61176494919233611860565b61174e565b6040517f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb33918061179b898d836117a3565b0390a4611726565b90916117ba6102d193604084526040840190610981565b916020818403910152610981565b9081602091031261016157516102d1816101dd565b6001600160a01b0391821681529116602082015260a0604082018190526102d1949193919261182292916118149190860190610981565b908482036060860152610981565b91608081840391015261029b565b3d1561185b573d90611841826107f9565b9161184f604051938461075d565b82523d6000602084013e565b606090565b9091949293853b611874575b505050505050565b60209361189691604051968795869563bc197c8160e01b8752600487016117dd565b038160006001600160a01b0387165af16000918161192b575b506118eb57506118bd611830565b80519190826118e457632bfa23e760e11b6000526001600160a01b03821660045260246000fd5b9050602001fd5b6001600160e01b0319166343e6837f60e01b0161190e575038808080808061186c565b632bfa23e760e11b6000526001600160a01b031660045260246000fd5b61194e91925060203d602011611955575b611946818361075d565b8101906117c8565b90386118af565b503d61193c565b6001600160a01b039182168152911660208201526040810191909152606081019190915260a0608082018190526102d19291019061029b565b9091949293853b6119a857505050505050565b6020936119ca91604051968795869563f23a6e6160e01b87526004870161195c565b038160006001600160a01b0387165af160009181611a14575b506119f157506118bd611830565b6001600160e01b031916630dc5919f60e01b0161190e575038808080808061186c565b611a2e91925060203d60201161195557611946818361075d565b90386119e356fea2646970667358221220991cc3b76147d5e1fa6850a4beafea47843a8b9d350ad78f01b4c211df67e99864736f6c634300081b00332f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d5562e70da342db81569f3094d36be279beaca7ad8e08f434ea188e79d2bfe10c3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92eff","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x2A5 JUMPI PUSH1 0x0 PUSH2 0x1EAF SWAP1 DUP2 CODESIZE SUB DUP1 PUSH2 0x1C DUP2 PUSH2 0x2AA JUMP JUMPDEST SWAP4 DUP5 CODECOPY DUP3 ADD SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SLT PUSH2 0x2A1 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x289 JUMPI ADD DUP3 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x2A1 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x28D JUMPI PUSH2 0x6D PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x2AA JUMP JUMPDEST SWAP4 DUP3 DUP6 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x289 JUMPI SWAP1 DUP3 SWAP2 DUP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x272 JUMPI POP POP PUSH1 0x20 SWAP1 DUP5 ADD ADD MSTORE PUSH1 0x20 SWAP1 DUP1 PUSH2 0x9E DUP4 PUSH2 0x2AA JUMP JUMPDEST MSTORE POP PUSH1 0x2 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x268 JUMPI JUMPDEST DUP3 DUP3 LT EQ PUSH2 0x205 JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x23B JUMPI JUMPDEST POP PUSH1 0x0 PUSH1 0x2 SSTORE DUP2 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x225 JUMPI PUSH1 0x5 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x21B JUMPI JUMPDEST DUP3 DUP3 LT EQ PUSH2 0x205 JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x1BE JUMPI JUMPDEST POP DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x157 JUMPI POP DUP2 SWAP3 PUSH1 0x0 SWAP3 PUSH2 0x14C JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x5 SSTORE JUMPDEST PUSH2 0x132 CALLER PUSH2 0x2CF JUMP JUMPDEST POP PUSH2 0x13C CALLER PUSH2 0x34B JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1A6B SWAP1 DUP2 PUSH2 0x3E4 DUP3 CODECOPY RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x113 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP4 PUSH1 0x5 PUSH1 0x0 MSTORE DUP3 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP7 DUP3 LT PUSH2 0x1A6 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0x18D JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x5 SSTORE PUSH2 0x129 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x17F JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x16C JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP4 DUP6 LT PUSH2 0x1FB JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1EF JUMPI POP PUSH2 0xFB JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1E2 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1D9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0xEA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 MSTORE PUSH1 0x1F DUP3 PUSH1 0x0 KECCAK256 SWAP2 ADD PUSH1 0x5 SHR DUP2 ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x25C JUMPI POP PUSH2 0xC2 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x24F JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0xB1 JUMP JUMPDEST PUSH1 0x20 DUP3 DUP3 ADD DUP2 ADD MLOAD DUP8 DUP4 ADD DUP3 ADD MSTORE DUP6 SWAP5 POP ADD PUSH2 0x81 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x225 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E8F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x345 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E8F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E4F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E6F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x345 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E6F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP2 SWAP1 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E4F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xFDD58E EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x156E29F6 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0xEF8593E7 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0xF1 JUMPI PUSH4 0xF5298ACA EQ PUSH2 0xEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF2B JUMP JUMPDEST PUSH2 0xE31 JUMP JUMPDEST PUSH2 0xE05 JUMP JUMPDEST PUSH2 0xDB4 JUMP JUMPDEST PUSH2 0xD74 JUMP JUMPDEST PUSH2 0xD39 JUMP JUMPDEST PUSH2 0xC80 JUMP JUMPDEST PUSH2 0xC64 JUMP JUMPDEST PUSH2 0xC11 JUMP JUMPDEST PUSH2 0xA87 JUMP JUMPDEST PUSH2 0x9C6 JUMP JUMPDEST PUSH2 0x93B JUMP JUMPDEST PUSH2 0x8F6 JUMP JUMPDEST PUSH2 0x867 JUMP JUMPDEST PUSH2 0x712 JUMP JUMPDEST PUSH2 0x4B7 JUMP JUMPDEST PUSH2 0x2D4 JUMP JUMPDEST PUSH2 0x1EF JUMP JUMPDEST PUSH2 0x190 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x161 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x161 JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x161 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x161 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x161 JUMPI PUSH1 0x20 PUSH2 0x1D4 PUSH2 0x1AE PUSH2 0x14B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND SUB PUSH2 0x161 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x161 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x161 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x20C DUP2 PUSH2 0x1DD JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x235 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x267 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x256 JUMPI JUMPDEST POP CODESIZE PUSH2 0x227 JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x24F JUMP JUMPDEST PUSH4 0x3A24D07 PUSH1 0xE2 SHL DUP2 EQ SWAP2 POP PUSH2 0x248 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x28B JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x27B JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x2B4 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x278 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x2D1 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x29B JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x161 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x161 JUMPI PUSH1 0x0 PUSH1 0x4 CALLDATALOAD DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x46A JUMPI JUMPDEST DUP1 PUSH14 0x4EE2D6D415B85ACEF8100000000 PUSH1 0xA SWAP3 LT ISZERO PUSH2 0x44E JUMPI JUMPDEST PUSH7 0x2386F26FC10000 DUP2 LT ISZERO PUSH2 0x439 JUMPI JUMPDEST PUSH4 0x5F5E100 DUP2 LT ISZERO PUSH2 0x427 JUMPI JUMPDEST PUSH2 0x2710 DUP2 LT ISZERO PUSH2 0x417 JUMPI JUMPDEST PUSH1 0x64 DUP2 LT ISZERO PUSH2 0x408 JUMPI JUMPDEST LT ISZERO PUSH2 0x3FD JUMPI JUMPDEST PUSH2 0x39A PUSH1 0x21 PUSH2 0x36E PUSH1 0x1 DUP6 ADD PUSH2 0x136F JUMP JUMPDEST SWAP4 DUP5 ADD ADD JUMPDEST PUSH1 0x0 NOT ADD SWAP2 PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP3 MOD BYTE DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV SWAP1 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x3AA JUMPI PUSH2 0x39A SWAP1 PUSH2 0x373 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F9 SWAP1 PUSH2 0x3ED DUP2 PUSH2 0x3DF PUSH2 0x3CE DUP9 PUSH2 0x3C8 PUSH1 0x20 DUP6 ADD PUSH2 0x1118 JUMP JUMPDEST SWAP1 PUSH2 0x11A1 JUMP JUMPDEST PUSH5 0x173539B7B7 PUSH1 0xD9 SHL DUP2 MSTORE PUSH1 0x5 ADD SWAP1 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x75D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2C0 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x35D JUMP JUMPDEST PUSH1 0x2 SWAP1 PUSH1 0x64 SWAP1 DIV SWAP4 ADD SWAP3 PUSH2 0x356 JUMP JUMPDEST PUSH1 0x4 SWAP1 PUSH2 0x2710 SWAP1 DIV SWAP4 ADD SWAP3 PUSH2 0x34C JUMP JUMPDEST PUSH1 0x8 SWAP1 PUSH4 0x5F5E100 SWAP1 DIV SWAP4 ADD SWAP3 PUSH2 0x341 JUMP JUMPDEST PUSH1 0x10 SWAP1 PUSH7 0x2386F26FC10000 SWAP1 DIV SWAP4 ADD SWAP3 PUSH2 0x334 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH14 0x4EE2D6D415B85ACEF8100000000 SWAP1 DIV SWAP4 ADD SWAP3 PUSH2 0x324 JUMP JUMPDEST POP PUSH1 0x40 SWAP2 POP PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP2 DIV PUSH2 0x30A JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x161 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x161 JUMPI SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x161 JUMPI PUSH2 0x4C5 CALLDATASIZE PUSH2 0x48D JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x4CF PUSH2 0x13A1 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 DUP4 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x70D JUMPI SSTORE PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 PUSH2 0x4FB DUP2 DUP5 PUSH2 0x75D JUMP JUMPDEST PUSH1 0x0 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP2 ISZERO PUSH2 0x6F7 JUMPI PUSH2 0x53A DUP6 DUP8 SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP3 DUP2 MLOAD DUP5 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x6E0 JUMPI POP SWAP6 SWAP7 DUP2 ISZERO ISZERO SWAP7 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x5C3 JUMPI DUP1 DUP9 DUP9 PUSH1 0x1 SWAP4 PUSH1 0x5 SHL DUP9 DUP1 DUP3 DUP11 ADD ADD MLOAD SWAP2 DUP12 ADD ADD MLOAD SWAP3 PUSH2 0x57F JUMPI JUMPDEST POP POP POP ADD PUSH2 0x552 JUMP JUMPDEST PUSH2 0x5B9 SWAP2 PUSH2 0x59A PUSH2 0x5B1 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 DUP3 SLOAD PUSH2 0x11CE JUMP JUMPDEST SWAP1 SSTORE CODESIZE DUP9 DUP2 PUSH2 0x576 JUMP JUMPDEST POP SWAP4 PUSH2 0x664 SWAP6 SWAP2 SWAP8 SWAP3 SWAP4 PUSH32 0x1ACE3364065011F2A2F041CCF777C9F5394104FB5C15EC40E2ED753531E33B21 SWAP8 PUSH1 0x1 DUP7 MLOAD EQ PUSH1 0x0 EQ PUSH2 0x6A3 JUMPI DUP10 PUSH1 0x0 DUP4 DUP9 ADD MLOAD PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 PUSH2 0x645 DUP7 DUP9 ADD MLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x40 DUP2 ADD SWAP5 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG4 JUMPDEST PUSH2 0x669 JUMPI JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP3 MSTORE JUMP JUMPDEST SUB SWAP1 LOG3 STOP JUMPDEST DUP5 MLOAD PUSH1 0x1 SUB PUSH2 0x68F JUMPI DUP1 PUSH2 0x685 SWAP6 ADD MLOAD SWAP2 ADD MLOAD SWAP2 PUSH1 0x0 CALLER PUSH2 0x1995 JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x64E JUMP JUMPDEST POP SWAP1 SWAP3 PUSH2 0x69E SWAP4 PUSH1 0x0 CALLER PUSH2 0x1860 JUMP JUMPDEST PUSH2 0x685 JUMP JUMPDEST DUP10 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB CALLER SWAP2 DUP1 PUSH2 0x6D8 DUP10 DUP14 DUP4 PUSH2 0x17A3 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x649 JUMP JUMPDEST PUSH4 0x5B059991 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x11B8 JUMP JUMPDEST CALLVALUE PUSH2 0x161 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x161 JUMPI PUSH1 0x20 PUSH2 0x73F PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x77F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x747 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x77F JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x161 JUMPI DUP2 CALLDATALOAD PUSH2 0x7B3 DUP2 PUSH2 0x784 JUMP JUMPDEST SWAP3 PUSH2 0x7C1 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x75D JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x161 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x7E9 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x7DC JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x77F JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x821 DUP3 PUSH2 0x7F9 JUMP JUMPDEST SWAP2 PUSH2 0x82F PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x75D JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x161 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x161 JUMPI DUP2 PUSH1 0x20 PUSH2 0x2D1 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x815 JUMP JUMPDEST CALLVALUE PUSH2 0x161 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x161 JUMPI PUSH2 0x880 PUSH2 0x14B JUMP JUMPDEST PUSH2 0x888 PUSH2 0x166 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x161 JUMPI PUSH2 0x8A9 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x79C JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x161 JUMPI PUSH2 0x8C9 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x79C JUMP JUMPDEST SWAP1 PUSH1 0x84 CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0x161 JUMPI PUSH2 0x8EE PUSH2 0x8F4 SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x84C JUMP JUMPDEST SWAP4 PUSH2 0x11DB JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x161 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x161 JUMPI PUSH2 0x8F4 PUSH1 0x4 CALLDATALOAD PUSH2 0x915 PUSH2 0x166 JUMP JUMPDEST SWAP1 PUSH2 0x936 PUSH2 0x931 DUP3 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1466 JUMP JUMPDEST PUSH2 0x14A3 JUMP JUMPDEST CALLVALUE PUSH2 0x161 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x161 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x957 PUSH2 0x166 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x970 JUMPI PUSH2 0x8F4 SWAP2 PUSH2 0x1537 JUMP JUMPDEST PUSH4 0x334BD919 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x99F JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x992 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x2D1 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x981 JUMP JUMPDEST CALLVALUE PUSH2 0x161 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x161 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x161 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x161 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH2 0xA03 DUP3 PUSH2 0x784 JUMP JUMPDEST SWAP2 PUSH2 0xA11 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x75D JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x24 PUSH1 0x20 DUP5 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x161 JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xA6F JUMPI DUP4 PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x161 JUMPI PUSH2 0x3F9 SWAP2 PUSH2 0xA5D PUSH2 0xA63 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x79C JUMP JUMPDEST SWAP1 PUSH2 0x1264 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0xA7C DUP5 PUSH2 0x17C JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0xA2E JUMP JUMPDEST CALLVALUE PUSH2 0x161 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x161 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x161 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x161 JUMPI PUSH2 0xAC9 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x815 JUMP JUMPDEST PUSH2 0xAD1 PUSH2 0x1413 JUMP JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x77F JUMPI PUSH2 0xAF6 DUP2 PUSH2 0xAF1 PUSH1 0x5 SLOAD PUSH2 0x10DE JUMP JUMPDEST PUSH2 0x131C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0xB69 JUMPI SWAP2 PUSH2 0xB4A DUP3 PUSH2 0xB59 SWAP4 PUSH32 0x6741B2FC379FAD678116FE3D4D4B9A1A184AB53BA36B86AD0FA66340B1AB41AD SWAP6 PUSH1 0x0 SWAP2 PUSH2 0xB5E JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2C0 JUMP JUMPDEST SUB SWAP1 LOG1 STOP JUMPDEST SWAP1 POP DUP4 ADD MLOAD CODESIZE PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 MSTORE PUSH1 0x1F NOT DUP3 AND SWAP1 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xBF9 JUMPI POP SWAP3 PUSH32 0x6741B2FC379FAD678116FE3D4D4B9A1A184AB53BA36B86AD0FA66340B1AB41AD SWAP5 SWAP3 PUSH1 0x1 SWAP3 DUP3 PUSH2 0xB59 SWAP7 LT PUSH2 0xBE0 JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0x5 SSTORE PUSH2 0x3ED JUMP JUMPDEST DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0xBD3 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP10 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0xB99 JUMP JUMPDEST CALLVALUE PUSH2 0x161 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x161 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0xC58 PUSH1 0x4 CALLDATALOAD PUSH2 0xC34 PUSH2 0x166 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x3 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x161 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x161 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x161 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x161 JUMPI PUSH2 0xC99 PUSH2 0x14B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO SWAP1 DUP2 DUP4 SUB PUSH2 0x161 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP3 DUP4 ISZERO PUSH2 0xD24 JUMPI PUSH2 0xCE5 PUSH2 0xCF6 SWAP3 CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH3 0xCED3E1 PUSH1 0xE8 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x161 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x161 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x161 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x161 JUMPI PUSH2 0x8F4 PUSH1 0x4 CALLDATALOAD PUSH2 0xD93 PUSH2 0x166 JUMP JUMPDEST SWAP1 PUSH2 0xDAF PUSH2 0x931 DUP3 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1537 JUMP JUMPDEST CALLVALUE PUSH2 0x161 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x161 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0xC58 PUSH2 0xDD4 PUSH2 0x14B JUMP JUMPDEST PUSH2 0xDDC PUSH2 0x166 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP7 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP4 AND DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x161 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x161 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x161 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x161 JUMPI PUSH2 0xE4A PUSH2 0x14B JUMP JUMPDEST PUSH2 0xE52 PUSH2 0x166 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD SWAP3 PUSH1 0x84 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x161 JUMPI PUSH2 0xE7A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x84C JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER DUP2 EQ ISZERO DUP1 PUSH2 0xF07 JUMPI JUMPDEST PUSH2 0xEEF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x6F7 JUMPI ISZERO PUSH2 0xEDA JUMPI PUSH2 0x8F4 SWAP5 PUSH2 0xED2 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH2 0x15C2 JUMP JUMPDEST PUSH3 0x6A0D45 PUSH1 0xE2 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x711BEC91 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE8F JUMP JUMPDEST CALLVALUE PUSH2 0x161 JUMPI PUSH2 0xF39 CALLDATASIZE PUSH2 0x48D JUMP JUMPDEST PUSH2 0xF41 PUSH2 0x13A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 DUP3 ISZERO PUSH2 0xEDA JUMPI PUSH2 0xF7C DUP3 DUP3 SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP3 PUSH1 0x20 SWAP3 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xF8F DUP7 DUP3 PUSH2 0x75D JUMP JUMPDEST MSTORE DUP3 MLOAD DUP6 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x6E0 JUMPI POP POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1037 JUMPI DUP1 PUSH1 0x5 SHL DUP6 DUP1 DUP3 DUP8 ADD ADD MLOAD SWAP2 DUP9 ADD ADD MLOAD PUSH2 0xFD2 DUP11 PUSH2 0x59A DUP5 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD DUP2 DUP2 LT PUSH2 0x1000 JUMPI DUP11 PUSH2 0x59A PUSH1 0x1 SWAP6 SWAP5 SWAP4 PUSH2 0xFF9 SWAP4 SUB SWAP4 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE ADD PUSH2 0xFA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP SWAP2 SWAP5 PUSH1 0x0 SWAP2 SWAP6 PUSH1 0x4 SWAP6 DUP6 PUSH1 0x1 DUP4 MLOAD EQ DUP6 EQ PUSH2 0x10A2 JUMPI SWAP2 DUP3 ADD MLOAD SWAP2 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 SWAP1 LOG4 JUMPDEST PUSH1 0x0 MSTORE MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP2 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x70D JUMPI SSTORE STOP JUMPDEST POP PUSH2 0x10D6 PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB SWAP2 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH2 0x17A3 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x108A JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x110E JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x10F8 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x10ED JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x1128 DUP3 PUSH2 0x10DE JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x118F JUMPI POP PUSH1 0x1 EQ PUSH2 0x1140 JUMPI POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 JUMPDEST DUP4 DUP3 LT PUSH2 0x117B JUMPI POP POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP5 DUP7 ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x116E JUMP JUMPDEST PUSH1 0xFF NOT AND DUP3 MSTORE POP DUP2 ISZERO ISZERO SWAP1 SWAP2 MUL ADD SWAP2 POP JUMP JUMPDEST SWAP1 PUSH2 0x11B4 PUSH1 0x20 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x278 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x70D JUMPI JUMP JUMPDEST SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER DUP2 EQ ISZERO DUP1 PUSH2 0x1216 JUMPI JUMPDEST PUSH2 0xEEF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x6F7 JUMPI ISZERO PUSH2 0xEDA JUMPI PUSH2 0x1214 SWAP5 PUSH2 0x15C2 JUMP JUMPDEST JUMP JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x11F3 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x124E JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 MLOAD DUP4 MLOAD DUP1 DUP3 SUB PUSH2 0x1305 JUMPI POP POP DUP1 MLOAD SWAP1 PUSH2 0x1280 DUP3 PUSH2 0x784 JUMP JUMPDEST SWAP2 PUSH2 0x128E PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x75D JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH2 0x129D PUSH1 0x1F NOT SWAP2 PUSH2 0x784 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x12FE JUMPI DUP1 PUSH2 0x12ED PUSH1 0x1 SWAP3 PUSH1 0x5 SHL PUSH1 0x20 DUP1 DUP3 DUP8 ADD ADD MLOAD SWAP2 DUP10 ADD ADD MLOAD SWAP1 PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x12F7 DUP3 DUP7 PUSH2 0x123A JUMP JUMPDEST MSTORE ADD PUSH2 0x12A7 JUMP JUMPDEST POP SWAP1 SWAP3 POP POP JUMP JUMPDEST PUSH4 0x5B059991 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1328 JUMPI POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 LT PUSH2 0x1365 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1359 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x134E JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1345 JUMP JUMPDEST SWAP1 PUSH2 0x1379 DUP3 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x1386 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x75D JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1397 PUSH1 0x1F NOT SWAP2 PUSH2 0x7F9 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x5562E70DA342DB81569F3094D36BE279BEACA7AD8E08F434EA188E79D2BFE10C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x13DA JUMPI JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x3617319A054D772F909F7C479A2CEBE5066E836A939412E32403C99029B92EFF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x144C JUMPI JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x0 PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x148B JUMPI POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1530 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1530 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP5 SWAP4 SWAP3 SWAP1 SWAP2 SWAP4 DUP5 MLOAD DUP3 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x6E0 JUMPI POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP6 DUP7 ISZERO ISZERO SWAP6 SWAP2 DUP6 AND DUP1 ISZERO ISZERO SWAP4 SWAP2 SWAP3 SWAP1 PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x16D5 JUMPI DUP1 PUSH1 0x5 SHL SWAP1 DUP10 DUP10 DUP9 PUSH1 0x20 DUP1 DUP7 DUP12 ADD ADD MLOAD SWAP6 DUP13 ADD ADD MLOAD SWAP3 PUSH2 0x164E JUMPI JUMPDEST SWAP4 PUSH1 0x1 SWAP5 PUSH2 0x1629 JUMPI JUMPDEST POP POP POP ADD PUSH2 0x15F3 JUMP JUMPDEST PUSH2 0x1644 SWAP2 PUSH2 0x59A PUSH2 0x5B1 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 SSTORE CODESIZE DUP10 DUP2 PUSH2 0x1620 JUMP JUMPDEST POP POP SWAP1 SWAP2 PUSH2 0x166A DUP14 PUSH2 0x59A DUP4 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD DUP3 DUP2 LT PUSH2 0x169E JUMPI DUP3 SWAP2 DUP10 DUP16 PUSH2 0x1695 PUSH1 0x1 SWAP8 SWAP7 DUP16 SWAP6 SUB SWAP2 PUSH2 0x59A DUP6 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE SWAP1 SWAP5 POP PUSH2 0x1617 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP SWAP2 SWAP9 SWAP6 SWAP4 SWAP3 SWAP8 SWAP1 SWAP7 POP PUSH1 0x1 DUP9 MLOAD EQ PUSH1 0x0 EQ PUSH2 0x1769 JUMPI PUSH1 0x20 DUP9 DUP2 ADD MLOAD DUP7 DUP3 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP3 DUP3 ADD MSTORE CALLER SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 LOG4 JUMPDEST PUSH2 0x1732 JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP5 MLOAD PUSH1 0x1 SUB PUSH2 0x1758 JUMPI PUSH1 0x20 DUP1 PUSH2 0x174E SWAP7 ADD MLOAD SWAP3 ADD MLOAD SWAP3 CALLER PUSH2 0x1995 JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x172B JUMP JUMPDEST PUSH2 0x1764 SWAP5 SWAP2 SWAP3 CALLER PUSH2 0x1860 JUMP JUMPDEST PUSH2 0x174E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB CALLER SWAP2 DUP1 PUSH2 0x179B DUP10 DUP14 DUP4 PUSH2 0x17A3 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x1726 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x17BA PUSH2 0x2D1 SWAP4 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x981 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x981 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x161 JUMPI MLOAD PUSH2 0x2D1 DUP2 PUSH2 0x1DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x2D1 SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 PUSH2 0x1822 SWAP3 SWAP2 PUSH2 0x1814 SWAP2 SWAP1 DUP7 ADD SWAP1 PUSH2 0x981 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x981 JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x29B JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x185B JUMPI RETURNDATASIZE SWAP1 PUSH2 0x1841 DUP3 PUSH2 0x7F9 JUMP JUMPDEST SWAP2 PUSH2 0x184F PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x75D JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP5 SWAP3 SWAP4 DUP6 EXTCODESIZE PUSH2 0x1874 JUMPI JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP4 PUSH2 0x1896 SWAP2 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP6 PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0x17DD JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x192B JUMPI JUMPDEST POP PUSH2 0x18EB JUMPI POP PUSH2 0x18BD PUSH2 0x1830 JUMP JUMPDEST DUP1 MLOAD SWAP2 SWAP1 DUP3 PUSH2 0x18E4 JUMPI PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x43E6837F PUSH1 0xE0 SHL ADD PUSH2 0x190E JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x186C JUMP JUMPDEST PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x194E SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1955 JUMPI JUMPDEST PUSH2 0x1946 DUP2 DUP4 PUSH2 0x75D JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x17C8 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x18AF JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x193C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x2D1 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x29B JUMP JUMPDEST SWAP1 SWAP2 SWAP5 SWAP3 SWAP4 DUP6 EXTCODESIZE PUSH2 0x19A8 JUMPI POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP4 PUSH2 0x19CA SWAP2 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP6 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0x195C JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x1A14 JUMPI JUMPDEST POP PUSH2 0x19F1 JUMPI POP PUSH2 0x18BD PUSH2 0x1830 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xDC5919F PUSH1 0xE0 SHL ADD PUSH2 0x190E JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x186C JUMP JUMPDEST PUSH2 0x1A2E SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1955 JUMPI PUSH2 0x1946 DUP2 DUP4 PUSH2 0x75D JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x19E3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 SHR 0xC3 0xB7 PUSH2 0x47D5 0xE1 STATICCALL PUSH9 0x50A4BEAFEA47843A8B SWAP14 CALLDATALOAD EXP 0xD7 DUP16 ADD 0xB4 0xC2 GT 0xDF PUSH8 0xE99864736F6C6343 STOP ADDMOD SHL STOP CALLER 0x2F DUP8 DUP9 GT PUSH31 0x7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D5562E70D LOG3 TIMESTAMP 0xDB DUP2 JUMP SWAP16 ADDRESS SWAP5 0xD3 PUSH12 0xE279BEACA7AD8E08F434EA18 DUP15 PUSH26 0xD2BFE10C3617319A054D772F909F7C479A2CEBE5066E836A9394 SLT 0xE3 0x24 SUB 0xC9 SWAP1 0x29 0xB9 0x2E SELFDESTRUCT ","sourceMap":"230:1814:32:-:0;;;;;;-1:-1:-1;230:1814:32;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;230:1814:32;;;;;;;;;;;;;;;;-1:-1:-1;;;;;230:1814:32;;;;;;;;-1:-1:-1;;230:1814:32;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;10356:13:10;230:1814:32;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10356:13:10;230:1814:32;;;;-1:-1:-1;;;;;230:1814:32;;;;791:18;230:1814;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;230:1814:32;;;;;;;;;;;;;;;;;;;791:18;230:1814;;819:42;850:10;819:42;:::i;:::-;;871:35;850:10;871:35;:::i;:::-;;230:1814;;;;;;;;;;;;;-1:-1:-1;230:1814:32;;;;;;;;;;;791:18;-1:-1:-1;230:1814:32;;-1:-1:-1;230:1814:32;;-1:-1:-1;230:1814:32;;;;;;;;;;;;;;;;;;;;;;791:18;230:1814;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;791:18;-1:-1:-1;230:1814:32;;-1:-1:-1;230:1814:32;;;;791:18;230:1814;;;;;;;;;;;;791:18;230:1814;;;;;;;;;;;;;-1:-1:-1;230:1814:32;;;;;;;;;-1:-1:-1;230:1814:32;;;;;;;;-1:-1:-1;230:1814:32;;;;;-1:-1:-1;230:1814:32;;;;;;;;;;;;-1:-1:-1;230:1814:32;;;;;-1:-1:-1;230:1814:32;;10356:13:10;-1:-1:-1;230:1814:32;;;-1:-1:-1;230:1814:32;;;;;;;;;;;;;;;;;;-1:-1:-1;230:1814:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;230:1814:32;;;;;;;;-1:-1:-1;;;230:1814:32;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;230:1814:32;;;-1:-1:-1;;;;;230:1814:32;;;;;;;;;;:::o;6179:316:6:-;-1:-1:-1;;;;;230:1814:32;;;;;;-1:-1:-1;;;;;;;;;;;230:1814:32;;;;;;;;;;-1:-1:-1;;;;;230:1814:32;;;;;-1:-1:-1;;;;;;;;;;;230:1814:32;;;;;;;-1:-1:-1;;230:1814:32;;;;;735:10:20;;230:1814:32;-1:-1:-1;;;;;;;;;;;230:1814:32;;6370:40:6;6347:4;6424:11;:::o;6272:217::-;6466:12;230:1814:32;6466:12:6;:::o;6179:316::-;-1:-1:-1;;;;;230:1814:32;;;;;;-1:-1:-1;;;;;;;;;;;230:1814:32;;;;;;;;;;-1:-1:-1;;;;;230:1814:32;;;;;-1:-1:-1;;;;;;;;;;;230:1814:32;;;;;;;-1:-1:-1;;230:1814:32;;;;;735:10:20;;230:1814:32;381:24;;-1:-1:-1;;;;;;;;;;;6370:40:6;230:1814:32;6370:40:6;6347:4;6424:11;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":380,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_address_7578":{"entryPoint":331,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_7595":{"entryPoint":358,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_addresst_uint256t_uint256":{"entryPoint":1165,"id":null,"parameterSlots":1,"returnSlots":3},"abi_decode_array_uint256_dyn":{"entryPoint":1948,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_available_length_bytes":{"entryPoint":2069,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bytes":{"entryPoint":2124,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes4_fromMemory":{"entryPoint":6088,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint256_7580":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint256_7613":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_address_address_array_uint256_dyn_array_uint256_dyn_bytes":{"entryPoint":6109,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_address_address_uint256_uint256_bytes":{"entryPoint":6492,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_address_uint256_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":2485,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn_array_uint256_dyn":{"entryPoint":6051,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_array_uint256_dyn_memory_ptr":{"entryPoint":2433,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":704,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_memory_ptr":{"entryPoint":4513,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_storage":{"entryPoint":4376,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_string_to_string":{"entryPoint":667,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_stringliteral":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_uint256_uint256_7667":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_and_zero_memory_array_string":{"entryPoint":4975,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":1924,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":2041,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"checked_add_uint256":{"entryPoint":4558,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":4892,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":632,"id":null,"parameterSlots":3,"returnSlots":0},"external_fun_DEFAULT_ADMIN_ROLE":{"entryPoint":3172,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_MINTER_ROLE":{"entryPoint":3385,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_balanceOf":{"entryPoint":400,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_balanceOfBatch":{"entryPoint":2502,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_burn":{"entryPoint":3883,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getRoleAdmin":{"entryPoint":1810,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_grantRole":{"entryPoint":2294,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_hasRole":{"entryPoint":3089,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_isApprovedForAll":{"entryPoint":3508,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_mint":{"entryPoint":1207,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_productSupply":{"entryPoint":3589,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_renounceRole":{"entryPoint":2363,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_revokeRole":{"entryPoint":3444,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_safeBatchTransferFrom":{"entryPoint":2151,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_safeTransferFrom":{"entryPoint":3633,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setApprovalForAll":{"entryPoint":3200,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setBaseURI":{"entryPoint":2695,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_supportsInterface":{"entryPoint":495,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_uri":{"entryPoint":724,"id":null,"parameterSlots":0,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4318,"id":null,"parameterSlots":1,"returnSlots":1},"extract_returndata":{"entryPoint":6192,"id":null,"parameterSlots":0,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":1885,"id":null,"parameterSlots":2,"returnSlots":0},"fun_asSingletonArrays":{"entryPoint":null,"id":1738,"parameterSlots":2,"returnSlots":2},"fun_balanceOf":{"entryPoint":null,"id":942,"parameterSlots":2,"returnSlots":1},"fun_balanceOfBatch":{"entryPoint":4708,"id":1012,"parameterSlots":2,"returnSlots":1},"fun_checkOnERC1155BatchReceived":{"entryPoint":6240,"id":2073,"parameterSlots":6,"returnSlots":0},"fun_checkOnERC1155Received":{"entryPoint":6549,"id":1999,"parameterSlots":6,"returnSlots":0},"fun_checkRole":{"entryPoint":5222,"id":252,"parameterSlots":1,"returnSlots":0},"fun_checkRole_7590":{"entryPoint":5025,"id":252,"parameterSlots":0,"returnSlots":0},"fun_checkRole_7600":{"entryPoint":5139,"id":252,"parameterSlots":0,"returnSlots":0},"fun_getRoleAdmin":{"entryPoint":null,"id":287,"parameterSlots":1,"returnSlots":1},"fun_grantRole":{"entryPoint":5283,"id":415,"parameterSlots":2,"returnSlots":1},"fun_revokeRole":{"entryPoint":5431,"id":453,"parameterSlots":2,"returnSlots":1},"fun_safeBatchTransferFrom":{"entryPoint":4571,"id":1135,"parameterSlots":5,"returnSlots":0},"fun_updateWithAcceptanceCheck":{"entryPoint":5570,"id":1368,"parameterSlots":5,"returnSlots":0},"mapping_index_access_mapping_address_uint256_of_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_uint256_mapping_address_uint256_of_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_uint256_dyn":{"entryPoint":4666,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":4536,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1863,"id":null,"parameterSlots":0,"returnSlots":0},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":477,"id":null,"parameterSlots":1,"returnSlots":0},"wrapping_div_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"wrapping_div_uint256_7581":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"wrapping_div_uint256_7582":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"wrapping_div_uint256_7583":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"wrapping_div_uint256_7584":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"wrapping_div_uint256_7585":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"wrapping_div_uint256_7587":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c8062fdd58e1461014657806301ffc9a7146101415780630e89341c1461013c578063156e29f614610137578063248a9ca3146101325780632eb2c2d61461012d5780632f2ff15d1461012857806336568abe146101235780634e1273f41461011e57806355f804b31461011957806391d1485414610114578063a217fddf1461010f578063a22cb4651461010a578063d539139314610105578063d547741f14610100578063e985e9c5146100fb578063ef8593e7146100f6578063f242432a146100f15763f5298aca146100ec57600080fd5b610f2b565b610e31565b610e05565b610db4565b610d74565b610d39565b610c80565b610c64565b610c11565b610a87565b6109c6565b61093b565b6108f6565b610867565b610712565b6104b7565b6102d4565b6101ef565b610190565b600435906001600160a01b038216820361016157565b600080fd5b602435906001600160a01b038216820361016157565b35906001600160a01b038216820361016157565b346101615760403660031901126101615760206101d46101ae61014b565b6024356000526000835260406000209060018060a01b0316600052602052604060002090565b54604051908152f35b6001600160e01b031981160361016157565b346101615760203660031901126101615760043561020c816101dd565b63ffffffff60e01b16637965db0b60e01b8114908115610235575b506040519015158152602090f35b636cdb3d1360e11b811491508115610267575b8115610256575b5038610227565b6301ffc9a760e01b1490503861024f565b6303a24d0760e21b81149150610248565b60005b83811061028b5750506000910152565b818101518382015260200161027b565b906020916102b481518092818552858086019101610278565b601f01601f1916010190565b9060206102d192818152019061029b565b90565b346101615760203660031901126101615760006004358072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b81101561046a575b806d04ee2d6d415b85acef8100000000600a92101561044e575b662386f26fc10000811015610439575b6305f5e100811015610427575b612710811015610417575b6064811015610408575b10156103fd575b61039a602161036e6001850161136f565b938401015b60001901916f181899199a1a9b1b9c1cb0b131b232b360811b600a82061a8353600a900490565b9081156103aa5761039a90610373565b6040516103f9906103ed816103df6103ce886103c860208501611118565b906111a1565b64173539b7b760d91b815260050190565b03601f19810183528261075d565b604051918291826102c0565b0390f35b60019091019061035d565b60029060649004930192610356565b600490612710900493019261034c565b6008906305f5e1009004930192610341565b601090662386f26fc100009004930192610334565b6020906d04ee2d6d415b85acef81000000009004930192610324565b506040915072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b810461030a565b6060906003190112610161576004356001600160a01b038116810361016157906024359060443590565b34610161576104c53661048d565b90916104cf6113a1565b826000526004602052604060002080549083820180921161070d57556040519060206104fb818461075d565b600083526001600160a01b0382169081156106f75761053a85879160405192600184526020840152604083019160018352606084015260808301604052565b9281518451908181036106e057509596811515965060005b83518110156105c35780888860019360051b8880828a010151918b0101519261057f575b50505001610552565b6105b99161059a6105b1926000526000602052604060002090565b9060018060a01b0316600052602052604060002090565b9182546111ce565b9055388881610576565b509361066495919792937f1ace3364065011f2a2f041ccf777c9f5394104fb5c15ec40e2ed753531e33b219760018651146000146106a357896000838801517fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f626106458688015160405191829133958360209093929193604081019481520152565b0390a45b610669575b5050505050604051918291829190602083019252565b0390a3005b845160010361068f578061068595015191015191600033611995565b388080808061064e565b50909261069e93600033611860565b610685565b8960006040517f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb3391806106d8898d836117a3565b0390a4610649565b635b05999160e01b60005260045260245260446000fd5b632bfa23e760e11b600052600060045260246000fd5b6111b8565b3461016157602036600319011261016157602061073f600435600052600360205260016040600020015490565b604051908152f35b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761077f57604052565b610747565b67ffffffffffffffff811161077f5760051b60200190565b9080601f830112156101615781356107b381610784565b926107c1604051948561075d565b81845260208085019260051b82010192831161016157602001905b8282106107e95750505090565b81358152602091820191016107dc565b67ffffffffffffffff811161077f57601f01601f191660200190565b929192610821826107f9565b9161082f604051938461075d565b829481845281830111610161578281602093846000960137010152565b9080601f83011215610161578160206102d193359101610815565b346101615760a03660031901126101615761088061014b565b610888610166565b9060443567ffffffffffffffff8111610161576108a990369060040161079c565b60643567ffffffffffffffff8111610161576108c990369060040161079c565b906084359367ffffffffffffffff8511610161576108ee6108f495369060040161084c565b936111db565b005b34610161576040366003190112610161576108f4600435610915610166565b9061093661093182600052600360205260016040600020015490565b611466565b6114a3565b3461016157604036600319011261016157600435610957610166565b336001600160a01b03821603610970576108f491611537565b63334bd91960e11b60005260046000fd5b906020808351928381520192019060005b81811061099f5750505090565b8251845260209384019390920191600101610992565b9060206102d1928181520190610981565b346101615760403660031901126101615760043567ffffffffffffffff8111610161573660238201121561016157806004013590610a0382610784565b91610a11604051938461075d565b8083526024602084019160051b8301019136831161016157602401905b828210610a6f578360243567ffffffffffffffff8111610161576103f991610a5d610a6392369060040161079c565b90611264565b604051918291826109b5565b60208091610a7c8461017c565b815201910190610a2e565b346101615760203660031901126101615760043567ffffffffffffffff8111610161573660238201121561016157610ac9903690602481600401359101610815565b610ad1611413565b805167ffffffffffffffff811161077f57610af681610af16005546110de565b61131c565b6020601f8211600114610b695791610b4a82610b59937f6741b2fc379fad678116fe3d4d4b9a1a184ab53ba36b86ad0fa66340b1ab41ad95600091610b5e575b508160011b916000199060031b1c19161790565b600555604051918291826102c0565b0390a1005b905083015138610b36565b6005600052601f198216907f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db09160005b818110610bf95750927f6741b2fc379fad678116fe3d4d4b9a1a184ab53ba36b86ad0fa66340b1ab41ad949260019282610b599610610be0575b5050811b016005556103ed565b84015160001960f88460031b161c191690553880610bd3565b91926020600181928689015181550194019201610b99565b3461016157604036600319011261016157602060ff610c58600435610c34610166565b906000526003845260406000209060018060a01b0316600052602052604060002090565b54166040519015158152f35b3461016157600036600319011261016157602060405160008152f35b3461016157604036600319011261016157610c9961014b565b6024359081151590818303610161576001600160a01b038116928315610d2457610ce5610cf69233600052600160205260406000209060018060a01b0316600052602052604060002090565b9060ff801983541691151516179055565b6040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b62ced3e160e81b600052600060045260246000fd5b346101615760003660031901126101615760206040517f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68152f35b34610161576040366003190112610161576108f4600435610d93610166565b90610daf61093182600052600360205260016040600020015490565b611537565b3461016157604036600319011261016157602060ff610c58610dd461014b565b610ddc610166565b6001600160a01b0391821660009081526001865260408082209290931681526020919091522090565b346101615760203660031901126101615760043560005260046020526020604060002054604051908152f35b346101615760a036600319011261016157610e4a61014b565b610e52610166565b604435906064359260843567ffffffffffffffff811161016157610e7a90369060040161084c565b926001600160a01b0382163381141580610f07575b610eef576001600160a01b038416156106f75715610eda576108f494610ed260405192600184526020840152604083019160018352606084015260808301604052565b9290916115c2565b626a0d4560e21b600052600060045260246000fd5b63711bec9160e11b6000523360045260245260446000fd5b50600081815260016020908152604080832033845290915290205460ff1615610e8f565b3461016157610f393661048d565b610f416113a1565b6001600160a01b038316918215610eda57610f7c82829160405192600184526020840152604083019160018352606084015260808301604052565b926020926000604051610f8f868261075d565b5282518551908181036106e057505060005b8351811015611037578060051b858082870101519188010151610fd28a61059a846000526000602052604060002090565b54818110611000578a61059a6001959493610ff99303936000526000602052604060002090565b5501610fa1565b6040516303dee4c560e01b81526001600160a01b038c16600482015260248101919091526044810182905260648101839052608490fd5b5091946000919560049585600183511485146110a2579182015191015160408051928352602083019190915233917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629190a45b600052526040600020805491820391821161070d5755005b506110d67f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb916040519182913395836117a3565b0390a461108a565b90600182811c9216801561110e575b60208310146110f857565b634e487b7160e01b600052602260045260246000fd5b91607f16916110ed565b60055460009291611128826110de565b916001811690811561118f5750600114611140575050565b6005600090815292935090917f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b83821061117b5750500190565b60018160209254848601520191019061116e565b60ff1916825250811515909102019150565b906111b460209282815194859201610278565b0190565b634e487b7160e01b600052601160045260246000fd5b9190820180921161070d57565b939291906001600160a01b0385163381141580611216575b610eef576001600160a01b038216156106f75715610eda57611214946115c2565b565b50600081815260016020908152604080832033845290915290205460ff16156111f3565b805182101561124e5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b9190918051835180820361130557505080519061128082610784565b9161128e604051938461075d565b80835261129d601f1991610784565b0136602084013760005b81518110156112fe57806112ed60019260051b60208082870101519189010151906000918252602082815260408084206001600160a01b03909316845291905290205490565b6112f7828661123a565b52016112a7565b5090925050565b635b05999160e01b60005260045260245260446000fd5b601f8111611328575050565b60056000526020600020906020601f840160051c83019310611365575b601f0160051c01905b818110611359575050565b6000815560010161134e565b9091508190611345565b90611379826107f9565b611386604051918261075d565b8281528092611397601f19916107f9565b0190602036910137565b3360009081527f5562e70da342db81569f3094d36be279beaca7ad8e08f434ea188e79d2bfe10c602052604090205460ff16156113da57565b63e2517d3f60e01b600052336004527f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a660245260446000fd5b3360009081527f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92eff602052604090205460ff161561144c57565b63e2517d3f60e01b60005233600452600060245260446000fd5b600081815260036020908152604080832033845290915290205460ff161561148b5750565b63e2517d3f60e01b6000523360045260245260446000fd5b60008181526003602090815260408083206001600160a01b038616845290915290205460ff166115305760008181526003602090815260408083206001600160a01b03861684529091529020805460ff1916600117905533916001600160a01b0316907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d600080a4600190565b5050600090565b60008181526003602090815260408083206001600160a01b038616845290915290205460ff16156115305760008181526003602090815260408083206001600160a01b03861684529091529020805460ff1916905533916001600160a01b0316907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b600080a4600190565b94939290919384518251908181036106e05750506001600160a01b0386811695861515959185168015159391929060005b84518110156116d5578060051b90898988602080868b010151958c0101519261164e575b93600194611629575b505050016115f3565b6116449161059a6105b1926000526000602052604060002090565b9055388981611620565b5050909161166a8d61059a836000526000602052604060002090565b5482811061169e578291898f611695600197968f95039161059a856000526000602052604060002090565b55909450611617565b6040516303dee4c560e01b81526001600160a01b038f16600482015260248101919091526044810183905260648101829052608490fd5b5091989593929790965060018851146000146117695760208881015186820151604080519283529282015233917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291a45b611732575b5050505050565b84516001036117585760208061174e9601519201519233611995565b388080808061172b565b61176494919233611860565b61174e565b6040517f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb33918061179b898d836117a3565b0390a4611726565b90916117ba6102d193604084526040840190610981565b916020818403910152610981565b9081602091031261016157516102d1816101dd565b6001600160a01b0391821681529116602082015260a0604082018190526102d1949193919261182292916118149190860190610981565b908482036060860152610981565b91608081840391015261029b565b3d1561185b573d90611841826107f9565b9161184f604051938461075d565b82523d6000602084013e565b606090565b9091949293853b611874575b505050505050565b60209361189691604051968795869563bc197c8160e01b8752600487016117dd565b038160006001600160a01b0387165af16000918161192b575b506118eb57506118bd611830565b80519190826118e457632bfa23e760e11b6000526001600160a01b03821660045260246000fd5b9050602001fd5b6001600160e01b0319166343e6837f60e01b0161190e575038808080808061186c565b632bfa23e760e11b6000526001600160a01b031660045260246000fd5b61194e91925060203d602011611955575b611946818361075d565b8101906117c8565b90386118af565b503d61193c565b6001600160a01b039182168152911660208201526040810191909152606081019190915260a0608082018190526102d19291019061029b565b9091949293853b6119a857505050505050565b6020936119ca91604051968795869563f23a6e6160e01b87526004870161195c565b038160006001600160a01b0387165af160009181611a14575b506119f157506118bd611830565b6001600160e01b031916630dc5919f60e01b0161190e575038808080808061186c565b611a2e91925060203d60201161195557611946818361075d565b90386119e356fea2646970667358221220991cc3b76147d5e1fa6850a4beafea47843a8b9d350ad78f01b4c211df67e99864736f6c634300081b0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xFDD58E EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x156E29F6 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0xEF8593E7 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0xF1 JUMPI PUSH4 0xF5298ACA EQ PUSH2 0xEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF2B JUMP JUMPDEST PUSH2 0xE31 JUMP JUMPDEST PUSH2 0xE05 JUMP JUMPDEST PUSH2 0xDB4 JUMP JUMPDEST PUSH2 0xD74 JUMP JUMPDEST PUSH2 0xD39 JUMP JUMPDEST PUSH2 0xC80 JUMP JUMPDEST PUSH2 0xC64 JUMP JUMPDEST PUSH2 0xC11 JUMP JUMPDEST PUSH2 0xA87 JUMP JUMPDEST PUSH2 0x9C6 JUMP JUMPDEST PUSH2 0x93B JUMP JUMPDEST PUSH2 0x8F6 JUMP JUMPDEST PUSH2 0x867 JUMP JUMPDEST PUSH2 0x712 JUMP JUMPDEST PUSH2 0x4B7 JUMP JUMPDEST PUSH2 0x2D4 JUMP JUMPDEST PUSH2 0x1EF JUMP JUMPDEST PUSH2 0x190 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x161 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x161 JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x161 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x161 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x161 JUMPI PUSH1 0x20 PUSH2 0x1D4 PUSH2 0x1AE PUSH2 0x14B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND SUB PUSH2 0x161 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x161 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x161 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x20C DUP2 PUSH2 0x1DD JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x235 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x267 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x256 JUMPI JUMPDEST POP CODESIZE PUSH2 0x227 JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x24F JUMP JUMPDEST PUSH4 0x3A24D07 PUSH1 0xE2 SHL DUP2 EQ SWAP2 POP PUSH2 0x248 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x28B JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x27B JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x2B4 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x278 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x2D1 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x29B JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x161 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x161 JUMPI PUSH1 0x0 PUSH1 0x4 CALLDATALOAD DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x46A JUMPI JUMPDEST DUP1 PUSH14 0x4EE2D6D415B85ACEF8100000000 PUSH1 0xA SWAP3 LT ISZERO PUSH2 0x44E JUMPI JUMPDEST PUSH7 0x2386F26FC10000 DUP2 LT ISZERO PUSH2 0x439 JUMPI JUMPDEST PUSH4 0x5F5E100 DUP2 LT ISZERO PUSH2 0x427 JUMPI JUMPDEST PUSH2 0x2710 DUP2 LT ISZERO PUSH2 0x417 JUMPI JUMPDEST PUSH1 0x64 DUP2 LT ISZERO PUSH2 0x408 JUMPI JUMPDEST LT ISZERO PUSH2 0x3FD JUMPI JUMPDEST PUSH2 0x39A PUSH1 0x21 PUSH2 0x36E PUSH1 0x1 DUP6 ADD PUSH2 0x136F JUMP JUMPDEST SWAP4 DUP5 ADD ADD JUMPDEST PUSH1 0x0 NOT ADD SWAP2 PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP3 MOD BYTE DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV SWAP1 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x3AA JUMPI PUSH2 0x39A SWAP1 PUSH2 0x373 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F9 SWAP1 PUSH2 0x3ED DUP2 PUSH2 0x3DF PUSH2 0x3CE DUP9 PUSH2 0x3C8 PUSH1 0x20 DUP6 ADD PUSH2 0x1118 JUMP JUMPDEST SWAP1 PUSH2 0x11A1 JUMP JUMPDEST PUSH5 0x173539B7B7 PUSH1 0xD9 SHL DUP2 MSTORE PUSH1 0x5 ADD SWAP1 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x75D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2C0 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x35D JUMP JUMPDEST PUSH1 0x2 SWAP1 PUSH1 0x64 SWAP1 DIV SWAP4 ADD SWAP3 PUSH2 0x356 JUMP JUMPDEST PUSH1 0x4 SWAP1 PUSH2 0x2710 SWAP1 DIV SWAP4 ADD SWAP3 PUSH2 0x34C JUMP JUMPDEST PUSH1 0x8 SWAP1 PUSH4 0x5F5E100 SWAP1 DIV SWAP4 ADD SWAP3 PUSH2 0x341 JUMP JUMPDEST PUSH1 0x10 SWAP1 PUSH7 0x2386F26FC10000 SWAP1 DIV SWAP4 ADD SWAP3 PUSH2 0x334 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH14 0x4EE2D6D415B85ACEF8100000000 SWAP1 DIV SWAP4 ADD SWAP3 PUSH2 0x324 JUMP JUMPDEST POP PUSH1 0x40 SWAP2 POP PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP2 DIV PUSH2 0x30A JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x161 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x161 JUMPI SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x161 JUMPI PUSH2 0x4C5 CALLDATASIZE PUSH2 0x48D JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x4CF PUSH2 0x13A1 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 DUP4 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x70D JUMPI SSTORE PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 PUSH2 0x4FB DUP2 DUP5 PUSH2 0x75D JUMP JUMPDEST PUSH1 0x0 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP2 ISZERO PUSH2 0x6F7 JUMPI PUSH2 0x53A DUP6 DUP8 SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP3 DUP2 MLOAD DUP5 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x6E0 JUMPI POP SWAP6 SWAP7 DUP2 ISZERO ISZERO SWAP7 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x5C3 JUMPI DUP1 DUP9 DUP9 PUSH1 0x1 SWAP4 PUSH1 0x5 SHL DUP9 DUP1 DUP3 DUP11 ADD ADD MLOAD SWAP2 DUP12 ADD ADD MLOAD SWAP3 PUSH2 0x57F JUMPI JUMPDEST POP POP POP ADD PUSH2 0x552 JUMP JUMPDEST PUSH2 0x5B9 SWAP2 PUSH2 0x59A PUSH2 0x5B1 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 DUP3 SLOAD PUSH2 0x11CE JUMP JUMPDEST SWAP1 SSTORE CODESIZE DUP9 DUP2 PUSH2 0x576 JUMP JUMPDEST POP SWAP4 PUSH2 0x664 SWAP6 SWAP2 SWAP8 SWAP3 SWAP4 PUSH32 0x1ACE3364065011F2A2F041CCF777C9F5394104FB5C15EC40E2ED753531E33B21 SWAP8 PUSH1 0x1 DUP7 MLOAD EQ PUSH1 0x0 EQ PUSH2 0x6A3 JUMPI DUP10 PUSH1 0x0 DUP4 DUP9 ADD MLOAD PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 PUSH2 0x645 DUP7 DUP9 ADD MLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x40 DUP2 ADD SWAP5 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG4 JUMPDEST PUSH2 0x669 JUMPI JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP3 MSTORE JUMP JUMPDEST SUB SWAP1 LOG3 STOP JUMPDEST DUP5 MLOAD PUSH1 0x1 SUB PUSH2 0x68F JUMPI DUP1 PUSH2 0x685 SWAP6 ADD MLOAD SWAP2 ADD MLOAD SWAP2 PUSH1 0x0 CALLER PUSH2 0x1995 JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x64E JUMP JUMPDEST POP SWAP1 SWAP3 PUSH2 0x69E SWAP4 PUSH1 0x0 CALLER PUSH2 0x1860 JUMP JUMPDEST PUSH2 0x685 JUMP JUMPDEST DUP10 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB CALLER SWAP2 DUP1 PUSH2 0x6D8 DUP10 DUP14 DUP4 PUSH2 0x17A3 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x649 JUMP JUMPDEST PUSH4 0x5B059991 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x11B8 JUMP JUMPDEST CALLVALUE PUSH2 0x161 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x161 JUMPI PUSH1 0x20 PUSH2 0x73F PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x77F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x747 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x77F JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x161 JUMPI DUP2 CALLDATALOAD PUSH2 0x7B3 DUP2 PUSH2 0x784 JUMP JUMPDEST SWAP3 PUSH2 0x7C1 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x75D JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x161 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x7E9 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x7DC JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x77F JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x821 DUP3 PUSH2 0x7F9 JUMP JUMPDEST SWAP2 PUSH2 0x82F PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x75D JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x161 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x161 JUMPI DUP2 PUSH1 0x20 PUSH2 0x2D1 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x815 JUMP JUMPDEST CALLVALUE PUSH2 0x161 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x161 JUMPI PUSH2 0x880 PUSH2 0x14B JUMP JUMPDEST PUSH2 0x888 PUSH2 0x166 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x161 JUMPI PUSH2 0x8A9 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x79C JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x161 JUMPI PUSH2 0x8C9 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x79C JUMP JUMPDEST SWAP1 PUSH1 0x84 CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0x161 JUMPI PUSH2 0x8EE PUSH2 0x8F4 SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x84C JUMP JUMPDEST SWAP4 PUSH2 0x11DB JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x161 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x161 JUMPI PUSH2 0x8F4 PUSH1 0x4 CALLDATALOAD PUSH2 0x915 PUSH2 0x166 JUMP JUMPDEST SWAP1 PUSH2 0x936 PUSH2 0x931 DUP3 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1466 JUMP JUMPDEST PUSH2 0x14A3 JUMP JUMPDEST CALLVALUE PUSH2 0x161 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x161 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x957 PUSH2 0x166 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x970 JUMPI PUSH2 0x8F4 SWAP2 PUSH2 0x1537 JUMP JUMPDEST PUSH4 0x334BD919 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x99F JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x992 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x2D1 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x981 JUMP JUMPDEST CALLVALUE PUSH2 0x161 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x161 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x161 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x161 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH2 0xA03 DUP3 PUSH2 0x784 JUMP JUMPDEST SWAP2 PUSH2 0xA11 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x75D JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x24 PUSH1 0x20 DUP5 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x161 JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xA6F JUMPI DUP4 PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x161 JUMPI PUSH2 0x3F9 SWAP2 PUSH2 0xA5D PUSH2 0xA63 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x79C JUMP JUMPDEST SWAP1 PUSH2 0x1264 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0xA7C DUP5 PUSH2 0x17C JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0xA2E JUMP JUMPDEST CALLVALUE PUSH2 0x161 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x161 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x161 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x161 JUMPI PUSH2 0xAC9 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x815 JUMP JUMPDEST PUSH2 0xAD1 PUSH2 0x1413 JUMP JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x77F JUMPI PUSH2 0xAF6 DUP2 PUSH2 0xAF1 PUSH1 0x5 SLOAD PUSH2 0x10DE JUMP JUMPDEST PUSH2 0x131C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0xB69 JUMPI SWAP2 PUSH2 0xB4A DUP3 PUSH2 0xB59 SWAP4 PUSH32 0x6741B2FC379FAD678116FE3D4D4B9A1A184AB53BA36B86AD0FA66340B1AB41AD SWAP6 PUSH1 0x0 SWAP2 PUSH2 0xB5E JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2C0 JUMP JUMPDEST SUB SWAP1 LOG1 STOP JUMPDEST SWAP1 POP DUP4 ADD MLOAD CODESIZE PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 MSTORE PUSH1 0x1F NOT DUP3 AND SWAP1 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xBF9 JUMPI POP SWAP3 PUSH32 0x6741B2FC379FAD678116FE3D4D4B9A1A184AB53BA36B86AD0FA66340B1AB41AD SWAP5 SWAP3 PUSH1 0x1 SWAP3 DUP3 PUSH2 0xB59 SWAP7 LT PUSH2 0xBE0 JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0x5 SSTORE PUSH2 0x3ED JUMP JUMPDEST DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0xBD3 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP10 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0xB99 JUMP JUMPDEST CALLVALUE PUSH2 0x161 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x161 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0xC58 PUSH1 0x4 CALLDATALOAD PUSH2 0xC34 PUSH2 0x166 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x3 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x161 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x161 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x161 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x161 JUMPI PUSH2 0xC99 PUSH2 0x14B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO SWAP1 DUP2 DUP4 SUB PUSH2 0x161 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP3 DUP4 ISZERO PUSH2 0xD24 JUMPI PUSH2 0xCE5 PUSH2 0xCF6 SWAP3 CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH3 0xCED3E1 PUSH1 0xE8 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x161 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x161 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x161 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x161 JUMPI PUSH2 0x8F4 PUSH1 0x4 CALLDATALOAD PUSH2 0xD93 PUSH2 0x166 JUMP JUMPDEST SWAP1 PUSH2 0xDAF PUSH2 0x931 DUP3 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1537 JUMP JUMPDEST CALLVALUE PUSH2 0x161 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x161 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0xC58 PUSH2 0xDD4 PUSH2 0x14B JUMP JUMPDEST PUSH2 0xDDC PUSH2 0x166 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP7 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP4 AND DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x161 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x161 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x161 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x161 JUMPI PUSH2 0xE4A PUSH2 0x14B JUMP JUMPDEST PUSH2 0xE52 PUSH2 0x166 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD SWAP3 PUSH1 0x84 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x161 JUMPI PUSH2 0xE7A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x84C JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER DUP2 EQ ISZERO DUP1 PUSH2 0xF07 JUMPI JUMPDEST PUSH2 0xEEF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x6F7 JUMPI ISZERO PUSH2 0xEDA JUMPI PUSH2 0x8F4 SWAP5 PUSH2 0xED2 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH2 0x15C2 JUMP JUMPDEST PUSH3 0x6A0D45 PUSH1 0xE2 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x711BEC91 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE8F JUMP JUMPDEST CALLVALUE PUSH2 0x161 JUMPI PUSH2 0xF39 CALLDATASIZE PUSH2 0x48D JUMP JUMPDEST PUSH2 0xF41 PUSH2 0x13A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 DUP3 ISZERO PUSH2 0xEDA JUMPI PUSH2 0xF7C DUP3 DUP3 SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP3 PUSH1 0x20 SWAP3 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xF8F DUP7 DUP3 PUSH2 0x75D JUMP JUMPDEST MSTORE DUP3 MLOAD DUP6 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x6E0 JUMPI POP POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1037 JUMPI DUP1 PUSH1 0x5 SHL DUP6 DUP1 DUP3 DUP8 ADD ADD MLOAD SWAP2 DUP9 ADD ADD MLOAD PUSH2 0xFD2 DUP11 PUSH2 0x59A DUP5 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD DUP2 DUP2 LT PUSH2 0x1000 JUMPI DUP11 PUSH2 0x59A PUSH1 0x1 SWAP6 SWAP5 SWAP4 PUSH2 0xFF9 SWAP4 SUB SWAP4 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE ADD PUSH2 0xFA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP SWAP2 SWAP5 PUSH1 0x0 SWAP2 SWAP6 PUSH1 0x4 SWAP6 DUP6 PUSH1 0x1 DUP4 MLOAD EQ DUP6 EQ PUSH2 0x10A2 JUMPI SWAP2 DUP3 ADD MLOAD SWAP2 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 SWAP1 LOG4 JUMPDEST PUSH1 0x0 MSTORE MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP2 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x70D JUMPI SSTORE STOP JUMPDEST POP PUSH2 0x10D6 PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB SWAP2 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH2 0x17A3 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x108A JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x110E JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x10F8 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x10ED JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x1128 DUP3 PUSH2 0x10DE JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x118F JUMPI POP PUSH1 0x1 EQ PUSH2 0x1140 JUMPI POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 JUMPDEST DUP4 DUP3 LT PUSH2 0x117B JUMPI POP POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP5 DUP7 ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x116E JUMP JUMPDEST PUSH1 0xFF NOT AND DUP3 MSTORE POP DUP2 ISZERO ISZERO SWAP1 SWAP2 MUL ADD SWAP2 POP JUMP JUMPDEST SWAP1 PUSH2 0x11B4 PUSH1 0x20 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x278 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x70D JUMPI JUMP JUMPDEST SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER DUP2 EQ ISZERO DUP1 PUSH2 0x1216 JUMPI JUMPDEST PUSH2 0xEEF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x6F7 JUMPI ISZERO PUSH2 0xEDA JUMPI PUSH2 0x1214 SWAP5 PUSH2 0x15C2 JUMP JUMPDEST JUMP JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x11F3 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x124E JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 MLOAD DUP4 MLOAD DUP1 DUP3 SUB PUSH2 0x1305 JUMPI POP POP DUP1 MLOAD SWAP1 PUSH2 0x1280 DUP3 PUSH2 0x784 JUMP JUMPDEST SWAP2 PUSH2 0x128E PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x75D JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH2 0x129D PUSH1 0x1F NOT SWAP2 PUSH2 0x784 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x12FE JUMPI DUP1 PUSH2 0x12ED PUSH1 0x1 SWAP3 PUSH1 0x5 SHL PUSH1 0x20 DUP1 DUP3 DUP8 ADD ADD MLOAD SWAP2 DUP10 ADD ADD MLOAD SWAP1 PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x12F7 DUP3 DUP7 PUSH2 0x123A JUMP JUMPDEST MSTORE ADD PUSH2 0x12A7 JUMP JUMPDEST POP SWAP1 SWAP3 POP POP JUMP JUMPDEST PUSH4 0x5B059991 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1328 JUMPI POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 LT PUSH2 0x1365 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1359 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x134E JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1345 JUMP JUMPDEST SWAP1 PUSH2 0x1379 DUP3 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x1386 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x75D JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1397 PUSH1 0x1F NOT SWAP2 PUSH2 0x7F9 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x5562E70DA342DB81569F3094D36BE279BEACA7AD8E08F434EA188E79D2BFE10C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x13DA JUMPI JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x3617319A054D772F909F7C479A2CEBE5066E836A939412E32403C99029B92EFF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x144C JUMPI JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x0 PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x148B JUMPI POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1530 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1530 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP5 SWAP4 SWAP3 SWAP1 SWAP2 SWAP4 DUP5 MLOAD DUP3 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x6E0 JUMPI POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP6 DUP7 ISZERO ISZERO SWAP6 SWAP2 DUP6 AND DUP1 ISZERO ISZERO SWAP4 SWAP2 SWAP3 SWAP1 PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x16D5 JUMPI DUP1 PUSH1 0x5 SHL SWAP1 DUP10 DUP10 DUP9 PUSH1 0x20 DUP1 DUP7 DUP12 ADD ADD MLOAD SWAP6 DUP13 ADD ADD MLOAD SWAP3 PUSH2 0x164E JUMPI JUMPDEST SWAP4 PUSH1 0x1 SWAP5 PUSH2 0x1629 JUMPI JUMPDEST POP POP POP ADD PUSH2 0x15F3 JUMP JUMPDEST PUSH2 0x1644 SWAP2 PUSH2 0x59A PUSH2 0x5B1 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 SSTORE CODESIZE DUP10 DUP2 PUSH2 0x1620 JUMP JUMPDEST POP POP SWAP1 SWAP2 PUSH2 0x166A DUP14 PUSH2 0x59A DUP4 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD DUP3 DUP2 LT PUSH2 0x169E JUMPI DUP3 SWAP2 DUP10 DUP16 PUSH2 0x1695 PUSH1 0x1 SWAP8 SWAP7 DUP16 SWAP6 SUB SWAP2 PUSH2 0x59A DUP6 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE SWAP1 SWAP5 POP PUSH2 0x1617 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP SWAP2 SWAP9 SWAP6 SWAP4 SWAP3 SWAP8 SWAP1 SWAP7 POP PUSH1 0x1 DUP9 MLOAD EQ PUSH1 0x0 EQ PUSH2 0x1769 JUMPI PUSH1 0x20 DUP9 DUP2 ADD MLOAD DUP7 DUP3 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP3 DUP3 ADD MSTORE CALLER SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 LOG4 JUMPDEST PUSH2 0x1732 JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP5 MLOAD PUSH1 0x1 SUB PUSH2 0x1758 JUMPI PUSH1 0x20 DUP1 PUSH2 0x174E SWAP7 ADD MLOAD SWAP3 ADD MLOAD SWAP3 CALLER PUSH2 0x1995 JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x172B JUMP JUMPDEST PUSH2 0x1764 SWAP5 SWAP2 SWAP3 CALLER PUSH2 0x1860 JUMP JUMPDEST PUSH2 0x174E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB CALLER SWAP2 DUP1 PUSH2 0x179B DUP10 DUP14 DUP4 PUSH2 0x17A3 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x1726 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x17BA PUSH2 0x2D1 SWAP4 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x981 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x981 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x161 JUMPI MLOAD PUSH2 0x2D1 DUP2 PUSH2 0x1DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x2D1 SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 PUSH2 0x1822 SWAP3 SWAP2 PUSH2 0x1814 SWAP2 SWAP1 DUP7 ADD SWAP1 PUSH2 0x981 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x981 JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x29B JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x185B JUMPI RETURNDATASIZE SWAP1 PUSH2 0x1841 DUP3 PUSH2 0x7F9 JUMP JUMPDEST SWAP2 PUSH2 0x184F PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x75D JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP5 SWAP3 SWAP4 DUP6 EXTCODESIZE PUSH2 0x1874 JUMPI JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP4 PUSH2 0x1896 SWAP2 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP6 PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0x17DD JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x192B JUMPI JUMPDEST POP PUSH2 0x18EB JUMPI POP PUSH2 0x18BD PUSH2 0x1830 JUMP JUMPDEST DUP1 MLOAD SWAP2 SWAP1 DUP3 PUSH2 0x18E4 JUMPI PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x43E6837F PUSH1 0xE0 SHL ADD PUSH2 0x190E JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x186C JUMP JUMPDEST PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x194E SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1955 JUMPI JUMPDEST PUSH2 0x1946 DUP2 DUP4 PUSH2 0x75D JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x17C8 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x18AF JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x193C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x2D1 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x29B JUMP JUMPDEST SWAP1 SWAP2 SWAP5 SWAP3 SWAP4 DUP6 EXTCODESIZE PUSH2 0x19A8 JUMPI POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP4 PUSH2 0x19CA SWAP2 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP6 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0x195C JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x1A14 JUMPI JUMPDEST POP PUSH2 0x19F1 JUMPI POP PUSH2 0x18BD PUSH2 0x1830 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xDC5919F PUSH1 0xE0 SHL ADD PUSH2 0x190E JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x186C JUMP JUMPDEST PUSH2 0x1A2E SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1955 JUMPI PUSH2 0x1946 DUP2 DUP4 PUSH2 0x75D JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x19E3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 SHR 0xC3 0xB7 PUSH2 0x47D5 0xE1 STATICCALL PUSH9 0x50A4BEAFEA47843A8B SWAP14 CALLDATALOAD EXP 0xD7 DUP16 ADD 0xB4 0xC2 GT 0xDF PUSH8 0xE99864736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"230:1814:32:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;230:1814:32;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;230:1814:32;;;;;;:::o;:::-;;;-1:-1:-1;;;;;230:1814:32;;;;;;:::o;:::-;;;;;;-1:-1:-1;;230:1814:32;;;;;2348:22:10;230:1814:32;;:::i;:::-;;;-1:-1:-1;230:1814:32;-1:-1:-1;230:1814:32;;;-1:-1:-1;230:1814:32;;;;;;;;;;;;;;;;;2348:22:10;230:1814:32;;;;;;;;-1:-1:-1;;;;;;230:1814:32;;;;;:::o;:::-;;;;;;-1:-1:-1;;230:1814:32;;;;;;;;;:::i;:::-;;;;;2688:32:6;;;2673:47;;:87;;;;;230:1814:32;-1:-1:-1;230:1814:32;;;;;;;;;;2673:87:6;-1:-1:-1;;;1515:41:10;;;-1:-1:-1;1515:109:10;;;;2673:87:6;1515:161:10;;;;2673:87:6;;;;;1515:161:10;-1:-1:-1;;;862:40:27;;-1:-1:-1;1515:161:10;;;:109;-1:-1:-1;;;1572:52:10;;;-1:-1:-1;1515:109:10;;230:1814:32;;;;;;;;-1:-1:-1;;230:1814:32;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;230:1814:32;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;-1:-1:-1;;230:1814:32;;;;-1:-1:-1;230:1814:32;;;-1:-1:-1;;;25444:17:29;;;25440:103;;230:1814:32;25560:17:29;25569:8;26140:7;25560:17;;;25556:103;;230:1814:32;25685:8:29;25676:17;;;25672:103;;230:1814:32;25801:7:29;25792:16;;;25788:100;;230:1814:32;25914:7:29;25905:16;;;25901:100;;230:1814:32;26027:7:29;26018:16;;;26014:100;;230:1814:32;26131:16:29;;26127:66;;230:1814:32;1161:11:26;874:92;817:18;779:1;230:1814:32;;817:18:26;:::i;:::-;849:11;874:92;;;979:247;-1:-1:-1;;230:1814:32;;-1:-1:-1;;;26140:7:29;1033:111:26;;;230:1814:32;1033:111:26;26140:7:29;230:1814:32;;;;1161:11:26;1194:10;;;1190:21;;1161:11;;979:247;;1190:21;230:1814:32;;;;1269:55;230:1814;;;1206:5:26;230:1814:32;;1269:55;;230:1814;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;230:1814:32;;;;;;;1269:55;230:1814;;1269:55;;;;;;:::i;:::-;230:1814;;;;;;;:::i;:::-;;;;26127:66:29;26177:1;230:1814:32;;;;26127:66:29;;26014:100;26098:1;;26027:7;230:1814:32;;;;26014:100:29;;;25901;230:1814:32;;25914:7:29;230:1814:32;;;;25901:100:29;;;25788;25872:1;;25801:7;230:1814:32;;;;25788:100:29;;;25672:103;25758:2;;25685:8;230:1814:32;;;;25672:103:29;;;25556;230:1814:32;;25569:8:29;230:1814:32;;;;25556:103:29;;;25440;-1:-1:-1;25526:2:29;;-1:-1:-1;;;;230:1814:32;;25440:103:29;;230:1814:32;;;;;;;;;;;-1:-1:-1;;;;;230:1814:32;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;2475:4:6;;;;:::i;:::-;230:1814:32;-1:-1:-1;230:1814:32;;;;;-1:-1:-1;230:1814:32;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;230:1814:32;;-1:-1:-1;;;;;230:1814:32;;;10850:16:10;;10846:88;;10993:29;;;13707:822;13875:648;;;;;;;;;;;;;;;;;;;;;;;;;;13707:822;10993:29;230:1814:32;;;;;5263:27:10;;;;5259:117;;-1:-1:-1;5433:13:10;;6032:16;;;;-1:-1:-1;230:1814:32;5464:3:10;230:1814:32;;5448:14:10;;;;;17035:82:18;;;230:1814:32;17035:82:18;;;;;;;;;;;;;;;6028:81:10;;;5464:3;;;;230:1814:32;5433:13:10;;6028:81;6068:26;:13;;:17;:13;5445:1;230:1814:32;5445:1:10;230:1814:32;;;5445:1:10;230:1814:32;;;6068:13:10;230:1814:32;;;;;;;;;;;;;;;;6068:17:10;230:1814:32;;;6068:26:10;:::i;:::-;230:1814:32;;6028:81:10;;;;;5448:14;;;1113:36:32;5448:14:10;;;;;1113:36:32;5448:14:10;230:1814:32;;;6133:15:10;6129:288;230:1814:32;;;17035:82:18;230:1814:32;17035:82:18;;;;6279:45:10;;17035:82:18;;;;230:1814:32;;735:10:20;;;;6279:45:10;;230:1814:32;;;;;;;;;;;;;;;6279:45:10;;;;6129:288;7243:453;;6129:288;230:1814:32;;;;;;;1113:36;;;;230:1814;;;;;;;;1113:36;;;;230:1814;7243:453:10;230:1814:32;;;7328:15:10;230:1814:32;;17035:82:18;7548:4:10;17035:82:18;;;;;;735:10:20;230:1814:32;735:10:20;7548:4:10;:::i;:::-;7243:453;;;;;;;7324:362;735:10:20;;;7666:4:10;735:10:20;230:1814:32;735:10:20;7666:4:10;:::i;:::-;7324:362;;6129:288;230:1814:32;;;;6360:46:10;735:10:20;6360:46:10;;;;;;;:::i;:::-;;;;6129:288;;5259:117;-1:-1:-1;;;230:1814:32;5313:52:10;;230:1814:32;;;;;5313:52:10;10846:88;10889:34;;;-1:-1:-1;10889:34:10;-1:-1:-1;230:1814:32;;;-1:-1:-1;10889:34:10;230:1814:32;;:::i;:::-;;;;;;-1:-1:-1;;230:1814:32;;;;;;;;-1:-1:-1;230:1814:32;3901:6:6;230:1814:32;;3901:22:6;230:1814:32;-1:-1:-1;230:1814:32;3901:22:6;230:1814:32;3810:120:6;;230:1814:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;230:1814:32;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;230:1814:32;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;230:1814:32;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;-1:-1:-1;;230:1814:32;;;;4330:25:6;230:1814:32;;;;:::i;:::-;4300:18:6;2475:4;4300:18;;-1:-1:-1;230:1814:32;3901:6:6;230:1814:32;;3901:22:6;230:1814:32;-1:-1:-1;230:1814:32;3901:22:6;230:1814:32;3810:120:6;;4300:18;2475:4;:::i;:::-;4330:25;:::i;230:1814:32:-;;;;;;-1:-1:-1;;230:1814:32;;;;;;;;:::i;:::-;735:10:20;-1:-1:-1;;;;;230:1814:32;;5421:34:6;5417:102;;5529:37;;;:::i;5417:102::-;5478:30;;;-1:-1:-1;5478:30:6;230:1814:32;-1:-1:-1;5478:30:6;230:1814:32;;;;;;;;;;;;;;-1:-1:-1;230:1814:32;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;230:1814:32;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;230:1814:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2475:4:6;;:::i;:::-;230:1814:32;;;;;;;;;;1428:17;230:1814;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;1460:22;230:1814;1460:22;230:1814;-1:-1:-1;230:1814:32;;;;;;;;;;;;;;;;;;;;;1428:17;230:1814;;;1460:22;;;;;:::i;:::-;;;;230:1814;;;;;;;;;;;1428:17;230:1814;;-1:-1:-1;;230:1814:32;;;;;-1:-1:-1;230:1814:32;;;;;;;;1460:22;230:1814;;;;;1460:22;230:1814;;;;;;;;;;1428:17;230:1814;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;230:1814:32;;;;;;2954:29:6;230:1814:32;;;;:::i;:::-;;-1:-1:-1;230:1814:32;2954:6:6;230:1814:32;;;-1:-1:-1;230:1814:32;;;;;;;;;;;;;;;;;2954:29:6;230:1814:32;;;;;;;;;;;;;;;;-1:-1:-1;;230:1814:32;;;;;;;;;;;;;;;;;-1:-1:-1;;230:1814:32;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;230:1814:32;;;13383:22:10;;13379:94;;13482:35;:46;735:10:20;;-1:-1:-1;230:1814:32;13482:18:10;230:1814:32;;;-1:-1:-1;230:1814:32;;;;;;;;;;;;;;;;;13482:35:10;230:1814:32;;;;;;;;;;;;;;;13482:46:10;230:1814:32;;;;;13543:41:10;230:1814:32;735:10:20;13543:41:10;;230:1814:32;13379:94:10;13428:34;;;-1:-1:-1;13428:34:10;-1:-1:-1;230:1814:32;;;-1:-1:-1;13428:34:10;230:1814:32;;;;;;-1:-1:-1;;230:1814:32;;;;;;;381:24;230:1814;;;;;;;;;-1:-1:-1;;230:1814:32;;;;4747:26:6;230:1814:32;;;;:::i;:::-;4717:18:6;2475:4;4717:18;;-1:-1:-1;230:1814:32;3901:6:6;230:1814:32;;3901:22:6;230:1814:32;-1:-1:-1;230:1814:32;3901:22:6;230:1814:32;3810:120:6;;2475:4;4747:26;:::i;230:1814:32:-;;;;;;-1:-1:-1;;230:1814:32;;;;;;3478:37:10;230:1814:32;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;230:1814:32;;;-1:-1:-1;230:1814:32;;;;;;;;;;;;;;;;-1:-1:-1;230:1814:32;;;;;;;;;;;;;-1:-1:-1;;230:1814:32;;;;;;-1:-1:-1;230:1814:32;;;;;;-1:-1:-1;230:1814:32;;;;;;;;;;;;;;-1:-1:-1;;230:1814:32;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;230:1814:32;;735:10:20;3755:14:10;;;;:49;;230:1814:32;3751:129:10;;-1:-1:-1;;;;;230:1814:32;;8281:16:10;8277:88;;8378:18;8374:88;;8610:4;8521:29;;13875:648;;;;;;;;;;;;;;;;;;;;;;;;;;13707:822;8521:29;8610:4;;;;:::i;8374:88::-;8419:32;;;-1:-1:-1;8419:32:10;-1:-1:-1;230:1814:32;;;-1:-1:-1;8419:32:10;3751:129;3827:42;;;-1:-1:-1;3827:42:10;735:10:20;230:1814:32;;;;;-1:-1:-1;3827:42:10;3755:49;-1:-1:-1;;230:1814:32;;;3478:18:10;230:1814:32;;;;;;;;735:10:20;230:1814:32;;;;;;;;;;3773:31:10;3755:49;;230:1814:32;;;;;;;:::i;:::-;2475:4:6;;:::i;:::-;-1:-1:-1;;;;;230:1814:32;;;12186:18:10;;12182:88;;12329:29;;;13707:822;13875:648;;;;;;;;;;;;;;;;;;;;;;;;;;13707:822;12329:29;230:1814:32;;;12202:1:10;230:1814:32;;;;;;:::i;:::-;;;;;;5263:27:10;;;;5259:117;;5433:13;;12202:1;5464:3;230:1814:32;;5448:14:10;;;;;17035:82:18;;;;;;;;;;;;;;;5658:19:10;:13;;;5445:1;230:1814:32;5445:1:10;230:1814:32;;;5445:1:10;230:1814:32;;;5658:19:10;230:1814:32;5699:19:10;;;5695:129;;230:1814:32;5940:13:10;230:1814:32;;;;5940:19:10;230:1814:32;;5940:13:10;5445:1;230:1814:32;5445:1:10;230:1814:32;;;5445:1:10;230:1814:32;;;5940:19:10;230:1814:32;;5433:13:10;;5695:129;230:1814:32;;-1:-1:-1;;;5749:56:10;;-1:-1:-1;;;;;230:1814:32;;;5749:56:10;;230:1814:32;;;;;;;;;;;;;;;;;;;;;;5749:56:10;5448:14;;;;12202:1;5448:14;;230:1814:32;5448:14:10;230:1814:32;;;;6133:15:10;230:1814:32;;;;17035:82:18;;;;;;;230:1814:32;;;;;;;;;;;;;735:10:20;;6279:45:10;;230:1814:32;6279:45:10;6129:288;12202:1;230:1814:32;;;12202:1:10;230:1814:32;;;;;;;;;;;;;6129:288:10;230:1814:32;6360:46:10;;230:1814:32;;;735:10:20;;;;6360:46:10;;;:::i;:::-;;;;6129:288;;230:1814:32;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;1286:8;230:1814;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;1286:8;-1:-1:-1;230:1814:32;;;;;-1:-1:-1;230:1814:32;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;230:1814:32;;;-1:-1:-1;230:1814:32;;;;;;;;-1:-1:-1;230:1814:32:o;:::-;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;4012:429:10:-;;;;;-1:-1:-1;;;;;230:1814:32;;735:10:20;4249:14:10;;;;:49;;4012:429;4245:129;;-1:-1:-1;;;;;230:1814:32;;9216:16:10;9212:88;;9313:18;9309:88;;9456:4;;;:::i;:::-;4012:429::o;4249:49::-;-1:-1:-1;;230:1814:32;;;3478:18:10;230:1814:32;;;;;;;;735:10:20;230:1814:32;;;;;;;;;;4267:31:10;4249:49;;230:1814:32;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;2534:552:10;;;;230:1814:32;;;;2690:29:10;;;2686:121;;230:1814:32;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;2932:3:10;230:1814:32;;2911:19:10;;;;;16237:82:18;2970:68:10;230:1814:32;16237:82:18;;;230:1814:32;16237:82:18;;;;;;17035;;;;;2970:68:10;2348:9;230:1814:32;;;;;;;;;;;-1:-1:-1;;;;;230:1814:32;;;;;;;;;;;2245:132:10;;2970:68;2951:87;;;;:::i;:::-;230:1814:32;;2896:13:10;;2911:19;-1:-1:-1;2911:19:10;;-1:-1:-1;;2534:552:10:o;2686:121::-;5313:52;;;-1:-1:-1;2742:54:10;;230:1814:32;;;;-1:-1:-1;2742:54:10;230:1814:32;;;;;;;;:::o;:::-;1428:17;-1:-1:-1;230:1814:32;;-1:-1:-1;230:1814:32;;;;;;1428:17;230:1814;;;;;;;;;;1428:17;230:1814;;;;;;;;;;;:::o;:::-;-1:-1:-1;230:1814:32;;;;;;;;;-1:-1:-1;230:1814:32;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;3199:103:6:-;735:10:20;-1:-1:-1;230:1814:32;;;;;;;;;;;;3519:23:6;3515:108;;3199:103::o;3515:108::-;3565:47;;;-1:-1:-1;3565:47:6;735:10:20;3565:47:6;230:1814:32;381:24;230:1814;;;-1:-1:-1;3565:47:6;3199:103;735:10:20;2232:4:6;230:1814:32;;;;;;;;;;;;3519:23:6;3515:108;;3199:103::o;3515:108::-;3565:47;;;2232:4;3565:47;735:10:20;3565:47:6;230:1814:32;2232:4:6;230:1814:32;;;2232:4:6;3565:47;3199:103;-1:-1:-1;230:1814:32;;;2954:6:6;230:1814:32;;;;;;;;735:10:20;230:1814:32;;;;;;;;;;3519:23:6;3515:108;;3199:103;:::o;3515:108::-;3565:47;;;-1:-1:-1;3565:47:6;735:10:20;3565:47:6;230:1814:32;;;;-1:-1:-1;3565:47:6;6179:316;230:1814:32;;;;2954:6:6;230:1814:32;;;;;;;;-1:-1:-1;;;;;230:1814:32;;;;;;;;;;;;;;;;;;2954:6:6;230:1814:32;;;;;;;;-1:-1:-1;;;;;230:1814:32;;;;;;;;;;;-1:-1:-1;;230:1814:32;6347:4:6;230:1814:32;;;735:10:20;;-1:-1:-1;;;;;230:1814:32;;6370:40:6;-1:-1:-1;;6370:40:6;6347:4;6424:11;:::o;6272:217::-;6466:12;;230:1814:32;6466:12:6;:::o;6730:317::-;230:1814:32;;;;2954:6:6;230:1814:32;;;;;;;;-1:-1:-1;;;;;230:1814:32;;;;;;;;;;;;;;;;;;;2954:6:6;230:1814:32;;;;;;;;-1:-1:-1;;;;;230:1814:32;;;;;;;;;;;-1:-1:-1;;230:1814:32;;;735:10:20;;-1:-1:-1;;;;;230:1814:32;;6922:40:6;-1:-1:-1;;6922:40:6;230:1814:32;6976:11:6;:::o;7002:700:10:-;;;;;;;230:1814:32;;;;5263:27:10;;;;5259:117;;-1:-1:-1;;;;;;;230:1814:32;;;;5598:18:10;;;;230:1814:32;;;6032:16:10;;;;5433:13;;230:1814:32;-1:-1:-1;5464:3:10;230:1814:32;;5448:14:10;;;;;17035:82:18;;;;;;;;;;;;;;;;;;;5594:420:10;;;5464:3;6028:81;230:1814:32;6028:81:10;;;5464:3;;;;230:1814:32;5433:13:10;;6028:81;6068:26;:13;;:17;:13;5445:1;230:1814:32;5445:1:10;230:1814:32;;;5445:1:10;230:1814:32;;;6068:26:10;230:1814:32;;6028:81:10;;;;;5594:420;5658:13;;;;:19;:13;;;5445:1;230:1814:32;5445:1:10;230:1814:32;;;5445:1:10;230:1814:32;;;5658:19:10;230:1814:32;5699:19:10;;;5695:129;;230:1814:32;;;;5940:19:10;230:1814:32;;;;;;5940:13:10;;;5445:1;230:1814:32;5445:1:10;230:1814:32;;;5445:1:10;230:1814:32;;;5940:19:10;230:1814:32;5594:420:10;;;;;5695:129;230:1814:32;;-1:-1:-1;;;5749:56:10;;-1:-1:-1;;;;;230:1814:32;;5749:56:10;;;230:1814:32;;;;;;;;;;;;;;;;;;;;;;5749:56:10;5448:14;;;;;;;;;;;230:1814:32;;;6133:15:10;6129:288;230:1814:32;;;17035:82:18;;;;;;;;;230:1814:32;;;;;;;;;;735:10:20;;6279:45:10;;;6129:288;7243:453;;6129:288;7002:700;;;;;:::o;7243:453::-;230:1814:32;;;7328:15:10;230:1814:32;;17035:82:18;;7548:4:10;17035:82:18;;;;;;735:10:20;;7548:4:10;:::i;:::-;7243:453;;;;;;;7324:362;7666:4;735:10:20;;;;7666:4:10;:::i;:::-;7324:362;;6129:288;230:1814:32;;6360:46:10;735:10:20;6360:46:10;;;;;;;:::i;:::-;;;;6129:288;;230:1814:32;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;230:1814:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;230:1814:32;;;;:::o;:::-;;;:::o;2505:1026:14:-;;;;;;2729:14;;2725:800;;2505:1026;;;;;;;:::o;2725:800::-;2767:78;230:1814:32;2767:78:14;230:1814:32;;;;;;;;;;;2767:78:14;;;;;;:::i;:::-;;230:1814:32;2746:1:14;-1:-1:-1;;;;;230:1814:32;;2767:78:14;;2746:1;;2767:78;;;2725:800;-1:-1:-1;2763:752:14;;3129:386;;;:::i;:::-;230:1814:32;;;;3179:18:14;;;-1:-1:-1;;;2746:1:14;3284:41;-1:-1:-1;;;;;230:1814:32;;2767:78:14;230:1814:32;;;5313:52:10;3175:326:14;3372:111;;2767:78;3372:111;;2763:752;-1:-1:-1;;;;;;230:1814:32;-1:-1:-1;;;2924:60:14;2920:194;;2763:752;2725:800;;;;;;;;2920:194;-1:-1:-1;;;2746:1:14;3054:41;-1:-1:-1;;;;;230:1814:32;2767:78:14;230:1814:32;;;5313:52:10;2767:78:14;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;230:1814:32;-1:-1:-1;;;;;230:1814:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;998:959:14:-;;;;;;1197:14;;1193:758;;998:959;;;;;;:::o;1193:758::-;1235:71;230:1814:32;1235:71:14;230:1814:32;;;;;;;;;;;1235:71:14;;;;;;:::i;:::-;;230:1814:32;1214:1:14;-1:-1:-1;;;;;230:1814:32;;1235:71:14;;1214:1;;1235:71;;;1193:758;-1:-1:-1;1231:710:14;;1555:386;;;:::i;1231:710::-;-1:-1:-1;;;;;;230:1814:32;-1:-1:-1;;;1355:55:14;1351:189;;1231:710;1193:758;;;;;;;;1235:71;;;;;;;;;;;;;;;:::i;:::-;;;;"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","MINTER_ROLE()":"d5391393","balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","burn(address,uint256,uint256)":"f5298aca","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","isApprovedForAll(address,address)":"e985e9c5","mint(address,uint256,uint256)":"156e29f6","productSupply(uint256)":"ef8593e7","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","setBaseURI(string)":"55f804b3","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"baseUri\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newUri\",\"type\":\"string\"}],\"name\":\"BaseURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProductMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"}],\"name\":\"productSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newUri\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ProductToken.sol\":\"ProductToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x22933f0f4897ff70a991c3baebfbc2574fd052dc4bae7fcafec45b07c1f23dd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13674cffad18cec55f013056496d7d2e3a34bd7bdbe23d1ef0c7588088c73367\",\"dweb:/ipfs/QmcBkrwxNvCApG48Gyby2L6qCNtuhaFncGpbJt3zuukTmu\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x30afe9013aaeb3ba735284a9310792776f57a3b2db6fc1d99628f2c47287f5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c675b740746031092efcedb2e18179f05fce8ba482de64e982715e4aa16bc90\",\"dweb:/ipfs/QmVdUD89qYudLc88k5AsuQ6VWyz9SE1c6UXrVK32Yqh1YS\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xaf9586854de33dc9d3a7160cad8170fdfb4119d02a44bad90ba16d71d701cc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15a02762b0a51d66e36be135c27de656093fc09292fa743df8484b87d4486ea\",\"dweb:/ipfs/QmbEozFrt5XwC9nzDFuXvN1RF3hQVwKYNi8c2R4bFvYJ2X\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/ProductToken.sol\":{\"keccak256\":\"0x3d162af26f2856dbd274023df75a140842a202225b852af8440553358fb6c226\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://667af662842dbaf16044137e887a985a1e4ac66a88c1738bc64f9490893f5064\",\"dweb:/ipfs/QmQAFSDdwiceKYRNYuNLD1RFFrGTcqLX5xSSbzY5CvQPcY\"]}},\"version\":1}"}},"contracts/USDCFundraiser.sol":{"USDCFundraiser":{"abi":[{"inputs":[{"internalType":"address","name":"_usdcAddress","type":"address"},{"internalType":"address","name":"_beneficiaryWallet","type":"address"},{"internalType":"address","name":"_feeWallet","type":"address"},{"internalType":"uint256","name":"_minimumTarget","type":"uint256"},{"internalType":"uint256","name":"_deadline","type":"uint256"},{"internalType":"bool","name":"_enforceConditions","type":"bool"},{"internalType":"address","name":"_productTokenAddress","type":"address"},{"internalType":"uint256[]","name":"_productIds","type":"uint256[]"},{"internalType":"uint256[]","name":"_productPrices","type":"uint256[]"},{"internalType":"address","name":"_linkToken","type":"address"},{"internalType":"address","name":"_chainlinkRegistrar","type":"address"},{"internalType":"address","name":"_chainlinkRegistry","type":"address"},{"internalType":"bytes4","name":"_chainlinkRegistrarSelector","type":"bytes4"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"message","type":"string"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Debug","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"message","type":"string"},{"indexed":false,"internalType":"bytes","name":"value","type":"bytes"}],"name":"DebugBytes","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"depositor","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"fee","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"EmergencyWithdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newFeePercentage","type":"uint256"}],"name":"FeeUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"forwarder","type":"address"}],"name":"ForwarderChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beneficiary","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FundsReleased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"productId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"}],"name":"ProductPriceSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"depositor","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Refund","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"anonymous":false,"inputs":[],"name":"UpkeepPerformed","type":"event"},{"inputs":[],"name":"beneficiaryWallet","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"productId","type":"uint256"}],"name":"claimRefund","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"deadline","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"productId","type":"uint256"},{"internalType":"uint256","name":"quantity","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"deposits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"emergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"enforceConditions","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feePercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeWallet","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"finalize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"finalized","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getStationUpkeepID","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"registrationParams","type":"bytes"}],"name":"initializeChainlink","outputs":[{"internalType":"uint256","name":"stationUpkeepID","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"minimumTarget","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"productPrices","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"productToken","outputs":[{"internalType":"contract ProductToken","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"productId","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"}],"name":"setProductPrice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokenDeposits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalRaised","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newDeadline","type":"uint256"}],"name":"updateDeadline","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newFeePercentage","type":"uint256"}],"name":"updateFeePercentage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"usdc","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":1223,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_uint256_dyn_fromMemory":{"entryPoint":1243,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":1164,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_uint256_dyn":{"entryPoint":1341,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60806040523461048757611f3a803803806100198161048c565b9283398101906101a08183031261048757610033816104c7565b61003f602083016104c7565b9061004c604084016104c7565b606084015192608085015160a08601518015158091036104875761007260c088016104c7565b60e08801519092906001600160401b0381116104875789610094918a016104db565b61010089015190996001600160401b038211610487576100b5918a016104db565b966100c36101208a016104c7565b966100d16101408b016104c7565b966101806100e26101608d016104c7565b9b0151966001600160e01b0319881688036104875733156104715760008054604051949133906001600160a01b038316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36001600160a81b0319163360ff60a01b191617600055600180556001600160a01b031692831561042f57506001600160a01b03169081156103ea576001600160a01b03169182156103b0578c518b510361036b578c51156103265760018060a01b0319600254161760025560018060a01b0319600454161760045560018060a01b0319600554161760055560065560075560ff80196008541691161760085560fa60095560018060a01b031660018060a01b0319600354161760035560005b86518110156102c557610209818661053d565b5115610280578061021c6001928761053d565b51610227828a61053d565b51600052600f6020526040600020557fb751835a12376750bd69b4b4c0c1d306480284514d2fa88f72edf3eeea8515f66040610263838b61053d565b5161026e848a61053d565b5182519182526020820152a1016101f6565b60405162461bcd60e51b815260206004820152601560248201527f496e76616c69642070726f6475637420707269636500000000000000000000006044820152606490fd5b5060128054601080546001600160a01b03199081166001600160a01b0396871617909155601180549091168589161790556001600160c01b0319169390921692909217604092831c63ffffffff60a01b16179055516119d290816105688239f35b60405162461bcd60e51b815260206004820152601460248201527f4e6f2070726f64756374732070726f76696465640000000000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601660248201527f417272617973206c656e677468206d69736d61746368000000000000000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a5908199959481dd85b1b195d60721b6044820152606490fd5b60405162461bcd60e51b815260206004820152601a60248201527f496e76616c69642062656e65666963696172792077616c6c65740000000000006044820152606490fd5b62461bcd60e51b815260206004820152601460248201527f496e76616c6964205553444320616464726573730000000000000000000000006044820152606490fd5b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b6040519190601f01601f191682016001600160401b038111838210176104b157604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820361048757565b9080601f83011215610487578151916001600160401b0383116104b1578260051b9060208061050b81850161048c565b80968152019282010192831161048757602001905b82821061052d5750505090565b8151815260209182019101610520565b80518210156105515760209160051b010190565b634e487b7160e01b600052603260045260246000fdfe608080604052600436101561001357600080fd5b600090813560e01c90816302f8baa1146116215750806325b4f65f146115f85780632897f6a0146115d557806329dcb0cf146115b757806338eb6a191461158d5780633e413bee146115645780633f4ba83a146114f657806342235da6146114d85780634232d7f8146111fe57806342af18841461117f57806344d3498a1461112a5780634585e33b14610ef05780634bb278f314610d445780635b7baf6414610a2e5780635c975abb14610a0957806366bff1db146109df5780636cad3fb01461094a5780636e04ff0d146108ee578063715018a6146108945780638456cb59146108335780638da5cb5b1461080c57806395ccea6714610646578063a001ecdd14610628578063b3f05b9714610605578063c5c4744c146105e7578063c9788631146105be578063e2bbb15814610255578063f25f4b561461022c578063f2fde38b146101a65763fc7e286d1461016b57600080fd5b346101a35760203660031901126101a3576020906040906001600160a01b036101926116e5565b168152600a83522054604051908152f35b80fd5b50346101a35760203660031901126101a3576101c06116e5565b6101c8611894565b6001600160a01b031680156102185781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b50346101a357806003193601126101a3576005546040516001600160a01b039091168152602090f35b50346101a3576102643661168e565b61026c6118bd565b6102746118df565b80156105795761028960ff600c54161561178b565b818352600f60205260408320541561053c5760ff600854166104f7575b818352600f6020526102bc8160408520546117d7565b916127106102cc600954856117d7565b0491846102d98486611800565b9181602060018060a01b03600254166064604051809481936323b872dd60e01b83523360048401523060248401528c60448401525af180156104ec576103269184916104cd575b50611849565b84610401575b6003546001600160a01b0316803b156103fd57604051630ab714fb60e11b815233600482015260248101869052604481019290925282908290606490829084905af180156103f2576103d9575b509161039e9252600e60205260408520610394828254611887565b9055600b54611887565b600b5560405191825260208201527f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1560403392a26001805580f35b816103e3916116fb565b6103ee578438610379565b8480fd5b6040513d84823e3d90fd5b8280fd5b60025460055460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101889052929350602091839160449183918c91165af19081156104c2578791610493575b501561045857859061032c565b60405162461bcd60e51b8152602060048201526013602482015272119959481d1c985b9cd9995c8819985a5b1959606a1b6044820152606490fd5b6104b5915060203d6020116104bb575b6104ad81836116fb565b810190611733565b3861044b565b503d6104a3565b6040513d89823e3d90fd5b6104e6915060203d6020116104bb576104ad81836116fb565b38610320565b6040513d85823e3d90fd5b6007544211156102a65760405162461bcd60e51b8152602060048201526013602482015272111958591b1a5b99481a185cc81c185cdcd959606a1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601560248201527450726f64756374206e6f7420617661696c61626c6560581b6044820152606490fd5b60405162461bcd60e51b815260206004820152601f60248201527f5175616e74697479206d7573742062652067726561746572207468616e2030006044820152606490fd5b50346101a357806003193601126101a3576004546040516001600160a01b039091168152602090f35b50346101a357806003193601126101a3576020600b54604051908152f35b50346101a357806003193601126101a357602060ff600c54166040519015158152f35b50346101a357806003193601126101a3576020600954604051908152f35b50346101a35760403660031901126101a3576106606116e5565b6024359061066c611894565b6001600160a01b0381169182156107d5576002546040516370a0823160e01b81523060048201526001600160a01b0390911690602081602481855afa9081156107ca578691610793575b5082116107575760405163a9059cbb60e01b81526001600160a01b03939093166004840152602483018290526020908390604490829088905af190811561074c5761072b6020927f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd96959487916107355750611849565b604051908152a280f35b6104e69150843d86116104bb576104ad81836116fb565b6040513d86823e3d90fd5b60405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606490fd5b90506020813d6020116107c2575b816107ae602093836116fb565b810103126107bd5751386106b6565b600080fd5b3d91506107a1565b6040513d88823e3d90fd5b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b50346101a357806003193601126101a357546040516001600160a01b039091168152602090f35b50346101a357806003193601126101a35761084c611894565b6108546118df565b805460ff60a01b1916600160a01b1781556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602090a180f35b50346101a357806003193601126101a3576108ad611894565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346101a3576108fd3661163d565b505060ff600c5416158061093f575b6040519161091b6020846116fb565b825261093b604051928392151583526040602084015260408301906116a4565b0390f35b50600754421161090c565b50346101a35760203660031901126101a357600435610967611894565b6103e881116109a2576020817f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c7692600955604051908152a180f35b60405162461bcd60e51b81526020600482015260156024820152744665652063616e6e6f74206578636565642031302560581b6044820152606490fd5b50346101a35760203660031901126101a35760406020916004358152600e83522054604051908152f35b50346101a357806003193601126101a35760ff6020915460a01c166040519015158152f35b50346101a35760203660031901126101a35760043560ff600c541615610d0f57600b546006541115610cd957600354604051627eeac760e11b815233600482015260248101839052906001600160a01b0316602082604481845afa91821561074c578492610ca5575b508115610c6a57602490838552600e6020526020610ab98460408820546117d7565b916040519384809263ef8593e760e01b82528860048301525afa918215610c5f578592610c2b575b508115610c1757908492910492808352600e602052610b04846040852054611800565b818452600e60205260408420556003546001600160a01b031691823b15610c1357604051637a94c56560e11b8152336004820152602481019290925260448201529082908290606490829084905af180156103f257610bfa575b505060025460405163a9059cbb60e01b815233600482015260248101839052906020908290604490829087906001600160a01b03165af180156104ec57610bac918491610bdb575b5061180d565b6040519081527fbb28353e4598c3b9199101a66e0989549b659a59a54d2c27fbb183f1932c8e6d60203392a280f35b610bf4915060203d6020116104bb576104ad81836116fb565b38610ba6565b81610c04916116fb565b610c0f578138610b5e565b5080fd5b8380fd5b634e487b7160e01b85526012600452602485fd5b9091506020813d602011610c57575b81610c47602093836116fb565b810103126107bd57519038610ae1565b3d9150610c3a565b6040513d87823e3d90fd5b60405162461bcd60e51b8152602060048201526013602482015272139bc81d1bdad95b9cc81d1bc81c99599d5b99606a1b6044820152606490fd5b9091506020813d602011610cd1575b81610cc1602093836116fb565b810103126107bd57519038610a97565b3d9150610cb4565b60405162461bcd60e51b815260206004820152600e60248201526d15185c99d95d081dd85cc81b595d60921b6044820152606490fd5b60405162461bcd60e51b815260206004820152600d60248201526c139bdd08199a5b985b1a5e9959609a1b6044820152606490fd5b50346101a357806003193601126101a357610d5d6118bd565b610d656118df565b60ff600c5416610eb75760085460ff1615610eaf57600754421115610e7357600b5460065411610dab57610d976118ff565b600160ff19600c541617600c556001805580f35b808052600a602052604081205415610e6e57808052600a6020818152604080842054848052928252808420849055600254905163a9059cbb60e01b815260006004820152602481018490528493909290918390604490829087906001600160a01b03165af19081156104ec57610e4b6020927fbb28353e4598c3b9199101a66e0989549b659a59a54d2c27fbb183f1932c8e6d948691610e57575061180d565b604051908152a2610dab565b610bf49150843d81116104bb576104ad81836116fb565b610d97565b60405162461bcd60e51b8152602060048201526014602482015273111958591b1a5b99481b9bdd081c995858da195960621b6044820152606490fd5b610e6e6118ff565b60405162461bcd60e51b8152602060048201526011602482015270105b1c9958591e48199a5b985b1a5e9959607a1b6044820152606490fd5b50346101a357610eff3661163d565b505060ff600c5416158061111f575b610f155780f35b610f1d6118bd565b610f256118df565b60ff600c5416610eb75760085460ff161561111757600754421115610e7357600b546006541161106957610f576118ff565b600160ff19600c541617600c55600180556040517f966a2cf4da2fe388fb461e726e2765451662471d3e61fb50c4191dd71434cb588280a1601454635ab1bd5360e01b8252602090829060049082906001600160a01b03165afa9081156103f2578291611027575b5060135482546001600160a01b039283169284929116833b156103fd576044839283604051968794859363744bfe6160e01b8552600485015260248401525af1801561101a5761100e57505080f35b611017916116fb565b80f35b50604051903d90823e3d90fd5b90506020813d602011611061575b81611042602093836116fb565b81010312610c0f57516001600160a01b0381168103610c0f5738610fbf565b3d9150611035565b808052600a60205260408120541561111257808052600a602052806040812054818052600a60205281604081205560018060a01b0360025416906020604051809363a9059cbb60e01b82528186816004810187876040830192858152015203925af19081156104ec576111066020927fbb28353e4598c3b9199101a66e0989549b659a59a54d2c27fbb183f1932c8e6d948691610e57575061180d565b604051908152a2611069565b610f57565b6111126118ff565b506007544211610f0e565b50346101a3577fb751835a12376750bd69b4b4c0c1d306480284514d2fa88f72edf3eeea8515f6604061115c3661168e565b611164611894565b818552600f602052808386205582519182526020820152a180f35b50346101a35760203660031901126101a35760043561119c611894565b6111ab60ff600c54161561178b565b428111156111b95760075580f35b60405162461bcd60e51b815260206004820152601e60248201527f446561646c696e65206d75737420626520696e207468652066757475726500006044820152606490fd5b50346101a35761120d3661163d565b90611216611894565b60125460105460405163095ea7b360e01b81526001600160a01b039182166004820152670de0b6b3a7640000602482015291602091839160449183918991165af190811561074c5784916114b9575b501561147d57829182918260018060a01b0360105416926112b9602463ffffffff60e01b60125460401b1694836040519485926020840198895284840137810185838201520301601f1981018352826116fb565b51925af16112c561174b565b90156113ba575b60208151918180820193849201010312610c0f575160138190556012805460ff60c01b1916600160c01b1790556011546001600160a01b031680611316575b602082604051908152f35b82809160405160208101906379ea994360e01b8252856024820152602481526113406044826116fb565b51915afa61134c61174b565b901561130b576020818051810103126103fd57602001516001600160a01b038116908190036103fd577f9ecfd97bf22760e90779a4364f3646d6cbb7e6207b75280c803ca569a34234a0602093826bffffffffffffffffffffffff60a01b601454161760145580a23861130b565b7f3c5ad147104e56be34a9176a6692f7df8d2f4b29a5af06bc6b98970d329d65776080825160405190604082526013604083015272149959da5cdd1c985d1a5bdb8819985a5b1959606a1b60608301526020820152a18051156112cc577fd54ba61ed4070561dcc6d272cdd44f051344b2c11b31180228f79dcb0003cf83604051604081526011604082015270526567697374726174696f6e206461746160781b6060820152608060208201528061147560808201856116a4565b0390a16112cc565b60405162461bcd60e51b815260206004820152601460248201527313125392c8185c1c1c9bdd985b0819985a5b195960621b6044820152606490fd5b6114d2915060203d6020116104bb576104ad81836116fb565b38611265565b50346101a357806003193601126101a3576020600654604051908152f35b50346101a357806003193601126101a35761150f611894565b805460ff8160a01c16156115555760ff60a01b191681556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b638dfc202b60e01b8252600482fd5b50346101a357806003193601126101a3576002546040516001600160a01b039091168152602090f35b50346101a35760203660031901126101a35760406020916004358152600f83522054604051908152f35b50346101a357806003193601126101a3576020600754604051908152f35b50346101a357806003193601126101a357602060ff600854166040519015158152f35b50346101a357806003193601126101a3576003546040516001600160a01b039091168152602090f35b905034610c0f5781600319360112610c0f576020906013548152f35b9060206003198301126107bd5760043567ffffffffffffffff81116107bd57826023820112156107bd5780600401359267ffffffffffffffff84116107bd57602484830101116107bd576024019190565b60409060031901126107bd576004359060243590565b919082519283825260005b8481106116d0575050826000602080949584010152601f8019910116010190565b806020809284010151828286010152016116af565b600435906001600160a01b03821682036107bd57565b90601f8019910116810190811067ffffffffffffffff82111761171d57604052565b634e487b7160e01b600052604160045260246000fd5b908160209103126107bd575180151581036107bd5790565b3d15611786573d9067ffffffffffffffff821161171d576040519161177a601f8201601f1916602001846116fb565b82523d6000602084013e565b606090565b1561179257565b60405162461bcd60e51b815260206004820152601760248201527f46756e647261697365722069732066696e616c697a65640000000000000000006044820152606490fd5b818102929181159184041417156117ea57565b634e487b7160e01b600052601160045260246000fd5b919082039182116117ea57565b1561181457565b60405162461bcd60e51b815260206004820152600d60248201526c1499599d5b990819985a5b1959609a1b6044820152606490fd5b1561185057565b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b919082018092116117ea57565b6000546001600160a01b031633036118a857565b63118cdaa760e01b6000523360045260246000fd5b6002600154146118ce576002600155565b633ee5aeb560e01b60005260046000fd5b60ff60005460a01c166118ee57565b63d93c066560e01b60005260046000fd5b60025460048054600b5460405163a9059cbb60e01b81526001600160a01b03928316938101939093526024830152909160209183916044918391600091165af1801561199057611956916000916104cd5750611849565b60018060a01b03600454167f221c08a06b07a64803b3787861a3f276212fcccb51c2e6234077a9b8cb13047a6020600b54604051908152a2565b6040513d6000823e3d90fdfea26469706673582212203a4ca1504cb017f1a4fcd840cbb5ec31bff26ba9b4abd8e2cfbce85dc837607964736f6c634300081b0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x487 JUMPI PUSH2 0x1F3A DUP1 CODESIZE SUB DUP1 PUSH2 0x19 DUP2 PUSH2 0x48C JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH2 0x1A0 DUP2 DUP4 SUB SLT PUSH2 0x487 JUMPI PUSH2 0x33 DUP2 PUSH2 0x4C7 JUMP JUMPDEST PUSH2 0x3F PUSH1 0x20 DUP4 ADD PUSH2 0x4C7 JUMP JUMPDEST SWAP1 PUSH2 0x4C PUSH1 0x40 DUP5 ADD PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MLOAD SWAP3 PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0xA0 DUP7 ADD MLOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x487 JUMPI PUSH2 0x72 PUSH1 0xC0 DUP9 ADD PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0xE0 DUP9 ADD MLOAD SWAP1 SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x487 JUMPI DUP10 PUSH2 0x94 SWAP2 DUP11 ADD PUSH2 0x4DB JUMP JUMPDEST PUSH2 0x100 DUP10 ADD MLOAD SWAP1 SWAP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x487 JUMPI PUSH2 0xB5 SWAP2 DUP11 ADD PUSH2 0x4DB JUMP JUMPDEST SWAP7 PUSH2 0xC3 PUSH2 0x120 DUP11 ADD PUSH2 0x4C7 JUMP JUMPDEST SWAP7 PUSH2 0xD1 PUSH2 0x140 DUP12 ADD PUSH2 0x4C7 JUMP JUMPDEST SWAP7 PUSH2 0x180 PUSH2 0xE2 PUSH2 0x160 DUP14 ADD PUSH2 0x4C7 JUMP JUMPDEST SWAP12 ADD MLOAD SWAP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP9 AND DUP9 SUB PUSH2 0x487 JUMPI CALLER ISZERO PUSH2 0x471 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP5 SWAP2 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND CALLER PUSH1 0xFF PUSH1 0xA0 SHL NOT AND OR PUSH1 0x0 SSTORE PUSH1 0x1 DUP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 ISZERO PUSH2 0x42F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x3EA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x3B0 JUMPI DUP13 MLOAD DUP12 MLOAD SUB PUSH2 0x36B JUMPI DUP13 MLOAD ISZERO PUSH2 0x326 JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE PUSH1 0x6 SSTORE PUSH1 0x7 SSTORE PUSH1 0xFF DUP1 NOT PUSH1 0x8 SLOAD AND SWAP2 AND OR PUSH1 0x8 SSTORE PUSH1 0xFA PUSH1 0x9 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH1 0x0 JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0x2C5 JUMPI PUSH2 0x209 DUP2 DUP7 PUSH2 0x53D JUMP JUMPDEST MLOAD ISZERO PUSH2 0x280 JUMPI DUP1 PUSH2 0x21C PUSH1 0x1 SWAP3 DUP8 PUSH2 0x53D JUMP JUMPDEST MLOAD PUSH2 0x227 DUP3 DUP11 PUSH2 0x53D JUMP JUMPDEST MLOAD PUSH1 0x0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH32 0xB751835A12376750BD69B4B4C0C1D306480284514D2FA88F72EDF3EEEA8515F6 PUSH1 0x40 PUSH2 0x263 DUP4 DUP12 PUSH2 0x53D JUMP JUMPDEST MLOAD PUSH2 0x26E DUP5 DUP11 PUSH2 0x53D JUMP JUMPDEST MLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 ADD PUSH2 0x1F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642070726F647563742070726963650000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x12 DUP1 SLOAD PUSH1 0x10 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x11 DUP1 SLOAD SWAP1 SWAP2 AND DUP6 DUP10 AND OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT AND SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 OR PUSH1 0x40 SWAP3 DUP4 SHR PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL AND OR SWAP1 SSTORE MLOAD PUSH2 0x19D2 SWAP1 DUP2 PUSH2 0x568 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2070726F64756374732070726F7669646564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x417272617973206C656E677468206D69736D6174636800000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A5908199959481DD85B1B195D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642062656E65666963696172792077616C6C6574000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420555344432061646472657373000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x4B1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x487 JUMPI JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x487 JUMPI DUP2 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x4B1 JUMPI DUP3 PUSH1 0x5 SHL SWAP1 PUSH1 0x20 DUP1 PUSH2 0x50B DUP2 DUP6 ADD PUSH2 0x48C JUMP JUMPDEST DUP1 SWAP7 DUP2 MSTORE ADD SWAP3 DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x487 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x52D JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x520 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x551 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x2F8BAA1 EQ PUSH2 0x1621 JUMPI POP DUP1 PUSH4 0x25B4F65F EQ PUSH2 0x15F8 JUMPI DUP1 PUSH4 0x2897F6A0 EQ PUSH2 0x15D5 JUMPI DUP1 PUSH4 0x29DCB0CF EQ PUSH2 0x15B7 JUMPI DUP1 PUSH4 0x38EB6A19 EQ PUSH2 0x158D JUMPI DUP1 PUSH4 0x3E413BEE EQ PUSH2 0x1564 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x14F6 JUMPI DUP1 PUSH4 0x42235DA6 EQ PUSH2 0x14D8 JUMPI DUP1 PUSH4 0x4232D7F8 EQ PUSH2 0x11FE JUMPI DUP1 PUSH4 0x42AF1884 EQ PUSH2 0x117F JUMPI DUP1 PUSH4 0x44D3498A EQ PUSH2 0x112A JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0xEF0 JUMPI DUP1 PUSH4 0x4BB278F3 EQ PUSH2 0xD44 JUMPI DUP1 PUSH4 0x5B7BAF64 EQ PUSH2 0xA2E JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xA09 JUMPI DUP1 PUSH4 0x66BFF1DB EQ PUSH2 0x9DF JUMPI DUP1 PUSH4 0x6CAD3FB0 EQ PUSH2 0x94A JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x8EE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x894 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x833 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x80C JUMPI DUP1 PUSH4 0x95CCEA67 EQ PUSH2 0x646 JUMPI DUP1 PUSH4 0xA001ECDD EQ PUSH2 0x628 JUMPI DUP1 PUSH4 0xB3F05B97 EQ PUSH2 0x605 JUMPI DUP1 PUSH4 0xC5C4744C EQ PUSH2 0x5E7 JUMPI DUP1 PUSH4 0xC9788631 EQ PUSH2 0x5BE JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xF25F4B56 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A6 JUMPI PUSH4 0xFC7E286D EQ PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x192 PUSH2 0x16E5 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xA DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x1C0 PUSH2 0x16E5 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x1894 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x218 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 OR DUP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH2 0x264 CALLDATASIZE PUSH2 0x168E JUMP JUMPDEST PUSH2 0x26C PUSH2 0x18BD JUMP JUMPDEST PUSH2 0x274 PUSH2 0x18DF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x579 JUMPI PUSH2 0x289 PUSH1 0xFF PUSH1 0xC SLOAD AND ISZERO PUSH2 0x178B JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD ISZERO PUSH2 0x53C JUMPI PUSH1 0xFF PUSH1 0x8 SLOAD AND PUSH2 0x4F7 JUMPI JUMPDEST DUP2 DUP4 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH2 0x2BC DUP2 PUSH1 0x40 DUP6 KECCAK256 SLOAD PUSH2 0x17D7 JUMP JUMPDEST SWAP2 PUSH2 0x2710 PUSH2 0x2CC PUSH1 0x9 SLOAD DUP6 PUSH2 0x17D7 JUMP JUMPDEST DIV SWAP2 DUP5 PUSH2 0x2D9 DUP5 DUP7 PUSH2 0x1800 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0x64 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE DUP13 PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x4EC JUMPI PUSH2 0x326 SWAP2 DUP5 SWAP2 PUSH2 0x4CD JUMPI JUMPDEST POP PUSH2 0x1849 JUMP JUMPDEST DUP5 PUSH2 0x401 JUMPI JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x3FD JUMPI PUSH1 0x40 MLOAD PUSH4 0xAB714FB PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x3F2 JUMPI PUSH2 0x3D9 JUMPI JUMPDEST POP SWAP2 PUSH2 0x39E SWAP3 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 PUSH2 0x394 DUP3 DUP3 SLOAD PUSH2 0x1887 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0xB SLOAD PUSH2 0x1887 JUMP JUMPDEST PUSH1 0xB SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 PUSH1 0x40 CALLER SWAP3 LOG2 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST DUP2 PUSH2 0x3E3 SWAP2 PUSH2 0x16FB JUMP JUMPDEST PUSH2 0x3EE JUMPI DUP5 CODESIZE PUSH2 0x379 JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP9 SWAP1 MSTORE SWAP3 SWAP4 POP PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 DUP13 SWAP2 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x4C2 JUMPI DUP8 SWAP2 PUSH2 0x493 JUMPI JUMPDEST POP ISZERO PUSH2 0x458 JUMPI DUP6 SWAP1 PUSH2 0x32C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x119959481D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x4B5 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4BB JUMPI JUMPDEST PUSH2 0x4AD DUP2 DUP4 PUSH2 0x16FB JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1733 JUMP JUMPDEST CODESIZE PUSH2 0x44B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x4E6 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4BB JUMPI PUSH2 0x4AD DUP2 DUP4 PUSH2 0x16FB JUMP JUMPDEST CODESIZE PUSH2 0x320 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD TIMESTAMP GT ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x111958591B1A5B99481A185CC81C185CDCD959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x50726F64756374206E6F7420617661696C61626C65 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175616E74697479206D7573742062652067726561746572207468616E203000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x20 PUSH1 0xB SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0xC SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x660 PUSH2 0x16E5 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x66C PUSH2 0x1894 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x7D5 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x7CA JUMPI DUP7 SWAP2 PUSH2 0x793 JUMPI JUMPDEST POP DUP3 GT PUSH2 0x757 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP9 SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x74C JUMPI PUSH2 0x72B PUSH1 0x20 SWAP3 PUSH32 0x5FAFA99D0643513820BE26656B45130B01E1C03062E1266BF36F88CBD3BD9695 SWAP5 DUP8 SWAP2 PUSH2 0x735 JUMPI POP PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 DUP1 RETURN JUMPDEST PUSH2 0x4E6 SWAP2 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x4BB JUMPI PUSH2 0x4AD DUP2 DUP4 PUSH2 0x16FB JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x7C2 JUMPI JUMPDEST DUP2 PUSH2 0x7AE PUSH1 0x20 SWAP4 DUP4 PUSH2 0x16FB JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x7BD JUMPI MLOAD CODESIZE PUSH2 0x6B6 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x84C PUSH2 0x1894 JUMP JUMPDEST PUSH2 0x854 PUSH2 0x18DF JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x8AD PUSH2 0x1894 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH2 0x8FD CALLDATASIZE PUSH2 0x163D JUMP JUMPDEST POP POP PUSH1 0xFF PUSH1 0xC SLOAD AND ISZERO DUP1 PUSH2 0x93F JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH2 0x91B PUSH1 0x20 DUP5 PUSH2 0x16FB JUMP JUMPDEST DUP3 MSTORE PUSH2 0x93B PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x40 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x16A4 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP PUSH1 0x7 SLOAD TIMESTAMP GT PUSH2 0x90C JUMP JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x967 PUSH2 0x1894 JUMP JUMPDEST PUSH2 0x3E8 DUP2 GT PUSH2 0x9A2 JUMPI PUSH1 0x20 DUP2 PUSH32 0x8C4D35E54A3F2EF1134138FD8EA3DAEE6A3C89E10D2665996BABDF70261E2C76 SWAP3 PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4665652063616E6E6F742065786365656420313025 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x40 PUSH1 0x20 SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xE DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0xFF PUSH1 0x20 SWAP2 SLOAD PUSH1 0xA0 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xFF PUSH1 0xC SLOAD AND ISZERO PUSH2 0xD0F JUMPI PUSH1 0xB SLOAD PUSH1 0x6 SLOAD GT ISZERO PUSH2 0xCD9 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH3 0x7EEAC7 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 PUSH1 0x44 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x74C JUMPI DUP5 SWAP3 PUSH2 0xCA5 JUMPI JUMPDEST POP DUP2 ISZERO PUSH2 0xC6A JUMPI PUSH1 0x24 SWAP1 DUP4 DUP6 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH2 0xAB9 DUP5 PUSH1 0x40 DUP9 KECCAK256 SLOAD PUSH2 0x17D7 JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0xEF8593E7 PUSH1 0xE0 SHL DUP3 MSTORE DUP9 PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xC5F JUMPI DUP6 SWAP3 PUSH2 0xC2B JUMPI JUMPDEST POP DUP2 ISZERO PUSH2 0xC17 JUMPI SWAP1 DUP5 SWAP3 SWAP2 DIV SWAP3 DUP1 DUP4 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH2 0xB04 DUP5 PUSH1 0x40 DUP6 KECCAK256 SLOAD PUSH2 0x1800 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SSTORE PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 EXTCODESIZE ISZERO PUSH2 0xC13 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7A94C565 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x3F2 JUMPI PUSH2 0xBFA JUMPI JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x4EC JUMPI PUSH2 0xBAC SWAP2 DUP5 SWAP2 PUSH2 0xBDB JUMPI JUMPDEST POP PUSH2 0x180D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xBB28353E4598C3B9199101A66E0989549B659A59A54D2C27FBB183F1932C8E6D PUSH1 0x20 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST PUSH2 0xBF4 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4BB JUMPI PUSH2 0x4AD DUP2 DUP4 PUSH2 0x16FB JUMP JUMPDEST CODESIZE PUSH2 0xBA6 JUMP JUMPDEST DUP2 PUSH2 0xC04 SWAP2 PUSH2 0x16FB JUMP JUMPDEST PUSH2 0xC0F JUMPI DUP2 CODESIZE PUSH2 0xB5E JUMP JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xC57 JUMPI JUMPDEST DUP2 PUSH2 0xC47 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x16FB JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x7BD JUMPI MLOAD SWAP1 CODESIZE PUSH2 0xAE1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xC3A JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x139BC81D1BDAD95B9CC81D1BC81C99599D5B99 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xCD1 JUMPI JUMPDEST DUP2 PUSH2 0xCC1 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x16FB JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x7BD JUMPI MLOAD SWAP1 CODESIZE PUSH2 0xA97 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xCB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x15185C99D95D081DD85CC81B595D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x139BDD08199A5B985B1A5E9959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0xD5D PUSH2 0x18BD JUMP JUMPDEST PUSH2 0xD65 PUSH2 0x18DF JUMP JUMPDEST PUSH1 0xFF PUSH1 0xC SLOAD AND PUSH2 0xEB7 JUMPI PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xEAF JUMPI PUSH1 0x7 SLOAD TIMESTAMP GT ISZERO PUSH2 0xE73 JUMPI PUSH1 0xB SLOAD PUSH1 0x6 SLOAD GT PUSH2 0xDAB JUMPI PUSH2 0xD97 PUSH2 0x18FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0xC SLOAD AND OR PUSH1 0xC SSTORE PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST DUP1 DUP1 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO PUSH2 0xE6E JUMPI DUP1 DUP1 MSTORE PUSH1 0xA PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SLOAD DUP5 DUP1 MSTORE SWAP3 DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x2 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE DUP5 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x4EC JUMPI PUSH2 0xE4B PUSH1 0x20 SWAP3 PUSH32 0xBB28353E4598C3B9199101A66E0989549B659A59A54D2C27FBB183F1932C8E6D SWAP5 DUP7 SWAP2 PUSH2 0xE57 JUMPI POP PUSH2 0x180D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 PUSH2 0xDAB JUMP JUMPDEST PUSH2 0xBF4 SWAP2 POP DUP5 RETURNDATASIZE DUP2 GT PUSH2 0x4BB JUMPI PUSH2 0x4AD DUP2 DUP4 PUSH2 0x16FB JUMP JUMPDEST PUSH2 0xD97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x111958591B1A5B99481B9BDD081C995858DA1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xE6E PUSH2 0x18FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x105B1C9958591E48199A5B985B1A5E9959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH2 0xEFF CALLDATASIZE PUSH2 0x163D JUMP JUMPDEST POP POP PUSH1 0xFF PUSH1 0xC SLOAD AND ISZERO DUP1 PUSH2 0x111F JUMPI JUMPDEST PUSH2 0xF15 JUMPI DUP1 RETURN JUMPDEST PUSH2 0xF1D PUSH2 0x18BD JUMP JUMPDEST PUSH2 0xF25 PUSH2 0x18DF JUMP JUMPDEST PUSH1 0xFF PUSH1 0xC SLOAD AND PUSH2 0xEB7 JUMPI PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1117 JUMPI PUSH1 0x7 SLOAD TIMESTAMP GT ISZERO PUSH2 0xE73 JUMPI PUSH1 0xB SLOAD PUSH1 0x6 SLOAD GT PUSH2 0x1069 JUMPI PUSH2 0xF57 PUSH2 0x18FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0xC SLOAD AND OR PUSH1 0xC SSTORE PUSH1 0x1 DUP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x966A2CF4DA2FE388FB461E726E2765451662471D3E61FB50C4191DD71434CB58 DUP3 DUP1 LOG1 PUSH1 0x14 SLOAD PUSH4 0x5AB1BD53 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3F2 JUMPI DUP3 SWAP2 PUSH2 0x1027 JUMPI JUMPDEST POP PUSH1 0x13 SLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP5 SWAP3 SWAP2 AND DUP4 EXTCODESIZE ISZERO PUSH2 0x3FD JUMPI PUSH1 0x44 DUP4 SWAP3 DUP4 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP5 DUP6 SWAP4 PUSH4 0x744BFE61 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x101A JUMPI PUSH2 0x100E JUMPI POP POP DUP1 RETURN JUMPDEST PUSH2 0x1017 SWAP2 PUSH2 0x16FB JUMP JUMPDEST DUP1 RETURN JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1061 JUMPI JUMPDEST DUP2 PUSH2 0x1042 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x16FB JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xC0F JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0xC0F JUMPI CODESIZE PUSH2 0xFBF JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1035 JUMP JUMPDEST DUP1 DUP1 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO PUSH2 0x1112 JUMPI DUP1 DUP1 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 DUP1 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE DUP2 PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND SWAP1 PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 SWAP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP3 MSTORE DUP2 DUP7 DUP2 PUSH1 0x4 DUP2 ADD DUP8 DUP8 PUSH1 0x40 DUP4 ADD SWAP3 DUP6 DUP2 MSTORE ADD MSTORE SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x4EC JUMPI PUSH2 0x1106 PUSH1 0x20 SWAP3 PUSH32 0xBB28353E4598C3B9199101A66E0989549B659A59A54D2C27FBB183F1932C8E6D SWAP5 DUP7 SWAP2 PUSH2 0xE57 JUMPI POP PUSH2 0x180D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 PUSH2 0x1069 JUMP JUMPDEST PUSH2 0xF57 JUMP JUMPDEST PUSH2 0x1112 PUSH2 0x18FF JUMP JUMPDEST POP PUSH1 0x7 SLOAD TIMESTAMP GT PUSH2 0xF0E JUMP JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH32 0xB751835A12376750BD69B4B4C0C1D306480284514D2FA88F72EDF3EEEA8515F6 PUSH1 0x40 PUSH2 0x115C CALLDATASIZE PUSH2 0x168E JUMP JUMPDEST PUSH2 0x1164 PUSH2 0x1894 JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE DUP1 DUP4 DUP7 KECCAK256 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x119C PUSH2 0x1894 JUMP JUMPDEST PUSH2 0x11AB PUSH1 0xFF PUSH1 0xC SLOAD AND ISZERO PUSH2 0x178B JUMP JUMPDEST TIMESTAMP DUP2 GT ISZERO PUSH2 0x11B9 JUMPI PUSH1 0x7 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446561646C696E65206D75737420626520696E20746865206675747572650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH2 0x120D CALLDATASIZE PUSH2 0x163D JUMP JUMPDEST SWAP1 PUSH2 0x1216 PUSH2 0x1894 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x24 DUP3 ADD MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 DUP10 SWAP2 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x74C JUMPI DUP5 SWAP2 PUSH2 0x14B9 JUMPI JUMPDEST POP ISZERO PUSH2 0x147D JUMPI DUP3 SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x10 SLOAD AND SWAP3 PUSH2 0x12B9 PUSH1 0x24 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL PUSH1 0x12 SLOAD PUSH1 0x40 SHL AND SWAP5 DUP4 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP3 PUSH1 0x20 DUP5 ADD SWAP9 DUP10 MSTORE DUP5 DUP5 ADD CALLDATACOPY DUP2 ADD DUP6 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x16FB JUMP JUMPDEST MLOAD SWAP3 GAS CALL PUSH2 0x12C5 PUSH2 0x174B JUMP JUMPDEST SWAP1 ISZERO PUSH2 0x13BA JUMPI JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 DUP2 DUP1 DUP3 ADD SWAP4 DUP5 SWAP3 ADD ADD SUB SLT PUSH2 0xC0F JUMPI MLOAD PUSH1 0x13 DUP2 SWAP1 SSTORE PUSH1 0x12 DUP1 SLOAD PUSH1 0xFF PUSH1 0xC0 SHL NOT AND PUSH1 0x1 PUSH1 0xC0 SHL OR SWAP1 SSTORE PUSH1 0x11 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x1316 JUMPI JUMPDEST PUSH1 0x20 DUP3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP1 SWAP2 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH4 0x79EA9943 PUSH1 0xE0 SHL DUP3 MSTORE DUP6 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x24 DUP2 MSTORE PUSH2 0x1340 PUSH1 0x44 DUP3 PUSH2 0x16FB JUMP JUMPDEST MLOAD SWAP2 GAS STATICCALL PUSH2 0x134C PUSH2 0x174B JUMP JUMPDEST SWAP1 ISZERO PUSH2 0x130B JUMPI PUSH1 0x20 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0x3FD JUMPI PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x3FD JUMPI PUSH32 0x9ECFD97BF22760E90779A4364F3646D6CBB7E6207B75280C803CA569A34234A0 PUSH1 0x20 SWAP4 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x14 SLOAD AND OR PUSH1 0x14 SSTORE DUP1 LOG2 CODESIZE PUSH2 0x130B JUMP JUMPDEST PUSH32 0x3C5AD147104E56BE34A9176A6692F7DF8D2F4B29A5AF06BC6B98970D329D6577 PUSH1 0x80 DUP3 MLOAD PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 MSTORE PUSH1 0x13 PUSH1 0x40 DUP4 ADD MSTORE PUSH19 0x149959DA5CDD1C985D1A5BDB8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 MLOAD ISZERO PUSH2 0x12CC JUMPI PUSH32 0xD54BA61ED4070561DCC6D272CDD44F051344B2C11B31180228F79DCB0003CF83 PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 MSTORE PUSH1 0x11 PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x526567697374726174696F6E2064617461 PUSH1 0x78 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE DUP1 PUSH2 0x1475 PUSH1 0x80 DUP3 ADD DUP6 PUSH2 0x16A4 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH2 0x12CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x13125392C8185C1C1C9BDD985B0819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x14D2 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4BB JUMPI PUSH2 0x4AD DUP2 DUP4 PUSH2 0x16FB JUMP JUMPDEST CODESIZE PUSH2 0x1265 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x150F PUSH2 0x1894 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND ISZERO PUSH2 0x1555 JUMPI PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x40 PUSH1 0x20 SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xF DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x8 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0xC0F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xC0F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x13 SLOAD DUP2 MSTORE RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x7BD JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x7BD JUMPI DUP3 PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x7BD JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x7BD JUMPI PUSH1 0x24 DUP5 DUP4 ADD ADD GT PUSH2 0x7BD JUMPI PUSH1 0x24 ADD SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x7BD JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x16D0 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x16AF JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x7BD JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x171D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x7BD JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x7BD JUMPI SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1786 JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x171D JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x177A PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x16FB JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1792 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E647261697365722069732066696E616C697A6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x17EA JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x17EA JUMPI JUMP JUMPDEST ISZERO PUSH2 0x1814 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x1499599D5B990819985A5B1959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1850 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x17EA JUMPI JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x18A8 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x18CE JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x0 SLOAD PUSH1 0xA0 SHR AND PUSH2 0x18EE JUMPI JUMP JUMPDEST PUSH4 0xD93C0665 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 PUSH1 0x0 SWAP2 AND GAS CALL DUP1 ISZERO PUSH2 0x1990 JUMPI PUSH2 0x1956 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x4CD JUMPI POP PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND PUSH32 0x221C08A06B07A64803B3787861A3F276212FCCCB51C2E6234077A9B8CB13047A PUSH1 0x20 PUSH1 0xB SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE 0x4C LOG1 POP 0x4C 0xB0 OR CALL LOG4 0xFC 0xD8 BLOCKHASH 0xCB 0xB5 0xEC BALANCE 0xBF CALLCODE PUSH12 0xA9B4ABD8E2CFBCE85DC83760 PUSH26 0x64736F6C634300081B0033000000000000000000000000000000 ","sourceMap":"683:10129:33:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;683:10129:33;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;683:10129:33;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;683:10129:33;;;;;;3106:10;1273:26:8;1269:95;;-1:-1:-1;683:10129:33;;;;;;3106:10;;-1:-1:-1;;;;;683:10129:33;;;3052:40:8;;-1:-1:-1;3052:40:8;-1:-1:-1;;;;;;683:10129:33;3106:10;-1:-1:-1;;;;683:10129:33;;-1:-1:-1;683:10129:33;;;;-1:-1:-1;;;;;683:10129:33;;3136:26;;683:10129;;-1:-1:-1;;;;;;683:10129:33;;3205:32;;683:10129;;-1:-1:-1;;;;;683:10129:33;;3286:24;;683:10129;;;;;;3351:43;683:10129;;;;3439:22;683:10129;;;;;;;;3505:27;683:10129;;;3505:27;683:10129;;;;;;;3542:38;683:10129;;;3542:38;683:10129;;;;;;;3590:22;683:10129;;;3590:22;683:10129;3622:30;683:10129;3662:20;683:10129;;;;3692:38;683:10129;;;;;3692:38;683:10129;3756:3;3740:19;683:10129;;;;;;;;;;;;;3789:49;683:10129;;;3789:49;683:10129;-1:-1:-1;3930:3:33;683:10129;;3906:22;;;;;3957:17;;;;:::i;:::-;683:10129;3957:21;683:10129;;4050:17;;683:10129;4050:17;;;:::i;:::-;683:10129;4032:14;;;;:::i;:::-;683:10129;-1:-1:-1;683:10129:33;4018:13;683:10129;;;-1:-1:-1;683:10129:33;;4086:50;683:10129;4102:14;;;;:::i;:::-;683:10129;4118:17;;;;:::i;:::-;683:10129;;;;;;;;;;4086:50;683:10129;3891:13;;683:10129;;;-1:-1:-1;;;683:10129:33;;;3542:38;683:10129;;;;;;;;;;;;;;;;3906:22;-1:-1:-1;4157:23:33;683:10129;;4190:41;683:10129;;-1:-1:-1;;;;;;683:10129:33;;;-1:-1:-1;;;;;683:10129:33;;;;;;;4241:39;683:10129;;;;;;;;;;;-1:-1:-1;;;;;;683:10129:33;;;;;;;;;;;;;-1:-1:-1;;;683:10129:33;;;;;;;;;;;;;;;-1:-1:-1;;;683:10129:33;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;683:10129:33;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;683:10129:33;;;;;;;;;;;;-1:-1:-1;;;683:10129:33;;;;;;;;;;-1:-1:-1;;;683:10129:33;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;683:10129:33;;;;;;;;;;;;;;;;;;;;1269:95:8;1322:31;;;-1:-1:-1;1322:31:8;-1:-1:-1;1322:31:8;683:10129:33;;-1:-1:-1;1322:31:8;683:10129:33;-1:-1:-1;683:10129:33;;;;;;;;;-1:-1:-1;;683:10129:33;;;-1:-1:-1;;;;;683:10129:33;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;683:10129:33;;;;;-1:-1:-1;683:10129:33;;;;-1:-1:-1;;;;;683:10129:33;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;683:10129:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":5861,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":5939,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes_calldata":{"entryPoint":5693,"id":null,"parameterSlots":1,"returnSlots":2},"abi_decode_uint256t_uint256":{"entryPoint":5774,"id":null,"parameterSlots":1,"returnSlots":2},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_bytes":{"entryPoint":5796,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint256":{"entryPoint":6279,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":6103,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":6144,"id":null,"parameterSlots":2,"returnSlots":1},"extract_returndata":{"entryPoint":5963,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":5883,"id":null,"parameterSlots":2,"returnSlots":0},"fun_checkOwner":{"entryPoint":6292,"id":622,"parameterSlots":0,"returnSlots":0},"fun_nonReentrantBefore":{"entryPoint":6333,"id":3851,"parameterSlots":0,"returnSlots":0},"fun_releaseFunds":{"entryPoint":6399,"id":8698,"parameterSlots":0,"returnSlots":0},"fun_requireNotPaused":{"entryPoint":6367,"id":3756,"parameterSlots":0,"returnSlots":0},"require_helper_stringliteral_0e10":{"entryPoint":6027,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_25ad":{"entryPoint":6217,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_940e":{"entryPoint":6157,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b600090813560e01c90816302f8baa1146116215750806325b4f65f146115f85780632897f6a0146115d557806329dcb0cf146115b757806338eb6a191461158d5780633e413bee146115645780633f4ba83a146114f657806342235da6146114d85780634232d7f8146111fe57806342af18841461117f57806344d3498a1461112a5780634585e33b14610ef05780634bb278f314610d445780635b7baf6414610a2e5780635c975abb14610a0957806366bff1db146109df5780636cad3fb01461094a5780636e04ff0d146108ee578063715018a6146108945780638456cb59146108335780638da5cb5b1461080c57806395ccea6714610646578063a001ecdd14610628578063b3f05b9714610605578063c5c4744c146105e7578063c9788631146105be578063e2bbb15814610255578063f25f4b561461022c578063f2fde38b146101a65763fc7e286d1461016b57600080fd5b346101a35760203660031901126101a3576020906040906001600160a01b036101926116e5565b168152600a83522054604051908152f35b80fd5b50346101a35760203660031901126101a3576101c06116e5565b6101c8611894565b6001600160a01b031680156102185781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b50346101a357806003193601126101a3576005546040516001600160a01b039091168152602090f35b50346101a3576102643661168e565b61026c6118bd565b6102746118df565b80156105795761028960ff600c54161561178b565b818352600f60205260408320541561053c5760ff600854166104f7575b818352600f6020526102bc8160408520546117d7565b916127106102cc600954856117d7565b0491846102d98486611800565b9181602060018060a01b03600254166064604051809481936323b872dd60e01b83523360048401523060248401528c60448401525af180156104ec576103269184916104cd575b50611849565b84610401575b6003546001600160a01b0316803b156103fd57604051630ab714fb60e11b815233600482015260248101869052604481019290925282908290606490829084905af180156103f2576103d9575b509161039e9252600e60205260408520610394828254611887565b9055600b54611887565b600b5560405191825260208201527f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1560403392a26001805580f35b816103e3916116fb565b6103ee578438610379565b8480fd5b6040513d84823e3d90fd5b8280fd5b60025460055460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101889052929350602091839160449183918c91165af19081156104c2578791610493575b501561045857859061032c565b60405162461bcd60e51b8152602060048201526013602482015272119959481d1c985b9cd9995c8819985a5b1959606a1b6044820152606490fd5b6104b5915060203d6020116104bb575b6104ad81836116fb565b810190611733565b3861044b565b503d6104a3565b6040513d89823e3d90fd5b6104e6915060203d6020116104bb576104ad81836116fb565b38610320565b6040513d85823e3d90fd5b6007544211156102a65760405162461bcd60e51b8152602060048201526013602482015272111958591b1a5b99481a185cc81c185cdcd959606a1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601560248201527450726f64756374206e6f7420617661696c61626c6560581b6044820152606490fd5b60405162461bcd60e51b815260206004820152601f60248201527f5175616e74697479206d7573742062652067726561746572207468616e2030006044820152606490fd5b50346101a357806003193601126101a3576004546040516001600160a01b039091168152602090f35b50346101a357806003193601126101a3576020600b54604051908152f35b50346101a357806003193601126101a357602060ff600c54166040519015158152f35b50346101a357806003193601126101a3576020600954604051908152f35b50346101a35760403660031901126101a3576106606116e5565b6024359061066c611894565b6001600160a01b0381169182156107d5576002546040516370a0823160e01b81523060048201526001600160a01b0390911690602081602481855afa9081156107ca578691610793575b5082116107575760405163a9059cbb60e01b81526001600160a01b03939093166004840152602483018290526020908390604490829088905af190811561074c5761072b6020927f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd96959487916107355750611849565b604051908152a280f35b6104e69150843d86116104bb576104ad81836116fb565b6040513d86823e3d90fd5b60405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606490fd5b90506020813d6020116107c2575b816107ae602093836116fb565b810103126107bd5751386106b6565b600080fd5b3d91506107a1565b6040513d88823e3d90fd5b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b50346101a357806003193601126101a357546040516001600160a01b039091168152602090f35b50346101a357806003193601126101a35761084c611894565b6108546118df565b805460ff60a01b1916600160a01b1781556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602090a180f35b50346101a357806003193601126101a3576108ad611894565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346101a3576108fd3661163d565b505060ff600c5416158061093f575b6040519161091b6020846116fb565b825261093b604051928392151583526040602084015260408301906116a4565b0390f35b50600754421161090c565b50346101a35760203660031901126101a357600435610967611894565b6103e881116109a2576020817f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c7692600955604051908152a180f35b60405162461bcd60e51b81526020600482015260156024820152744665652063616e6e6f74206578636565642031302560581b6044820152606490fd5b50346101a35760203660031901126101a35760406020916004358152600e83522054604051908152f35b50346101a357806003193601126101a35760ff6020915460a01c166040519015158152f35b50346101a35760203660031901126101a35760043560ff600c541615610d0f57600b546006541115610cd957600354604051627eeac760e11b815233600482015260248101839052906001600160a01b0316602082604481845afa91821561074c578492610ca5575b508115610c6a57602490838552600e6020526020610ab98460408820546117d7565b916040519384809263ef8593e760e01b82528860048301525afa918215610c5f578592610c2b575b508115610c1757908492910492808352600e602052610b04846040852054611800565b818452600e60205260408420556003546001600160a01b031691823b15610c1357604051637a94c56560e11b8152336004820152602481019290925260448201529082908290606490829084905af180156103f257610bfa575b505060025460405163a9059cbb60e01b815233600482015260248101839052906020908290604490829087906001600160a01b03165af180156104ec57610bac918491610bdb575b5061180d565b6040519081527fbb28353e4598c3b9199101a66e0989549b659a59a54d2c27fbb183f1932c8e6d60203392a280f35b610bf4915060203d6020116104bb576104ad81836116fb565b38610ba6565b81610c04916116fb565b610c0f578138610b5e565b5080fd5b8380fd5b634e487b7160e01b85526012600452602485fd5b9091506020813d602011610c57575b81610c47602093836116fb565b810103126107bd57519038610ae1565b3d9150610c3a565b6040513d87823e3d90fd5b60405162461bcd60e51b8152602060048201526013602482015272139bc81d1bdad95b9cc81d1bc81c99599d5b99606a1b6044820152606490fd5b9091506020813d602011610cd1575b81610cc1602093836116fb565b810103126107bd57519038610a97565b3d9150610cb4565b60405162461bcd60e51b815260206004820152600e60248201526d15185c99d95d081dd85cc81b595d60921b6044820152606490fd5b60405162461bcd60e51b815260206004820152600d60248201526c139bdd08199a5b985b1a5e9959609a1b6044820152606490fd5b50346101a357806003193601126101a357610d5d6118bd565b610d656118df565b60ff600c5416610eb75760085460ff1615610eaf57600754421115610e7357600b5460065411610dab57610d976118ff565b600160ff19600c541617600c556001805580f35b808052600a602052604081205415610e6e57808052600a6020818152604080842054848052928252808420849055600254905163a9059cbb60e01b815260006004820152602481018490528493909290918390604490829087906001600160a01b03165af19081156104ec57610e4b6020927fbb28353e4598c3b9199101a66e0989549b659a59a54d2c27fbb183f1932c8e6d948691610e57575061180d565b604051908152a2610dab565b610bf49150843d81116104bb576104ad81836116fb565b610d97565b60405162461bcd60e51b8152602060048201526014602482015273111958591b1a5b99481b9bdd081c995858da195960621b6044820152606490fd5b610e6e6118ff565b60405162461bcd60e51b8152602060048201526011602482015270105b1c9958591e48199a5b985b1a5e9959607a1b6044820152606490fd5b50346101a357610eff3661163d565b505060ff600c5416158061111f575b610f155780f35b610f1d6118bd565b610f256118df565b60ff600c5416610eb75760085460ff161561111757600754421115610e7357600b546006541161106957610f576118ff565b600160ff19600c541617600c55600180556040517f966a2cf4da2fe388fb461e726e2765451662471d3e61fb50c4191dd71434cb588280a1601454635ab1bd5360e01b8252602090829060049082906001600160a01b03165afa9081156103f2578291611027575b5060135482546001600160a01b039283169284929116833b156103fd576044839283604051968794859363744bfe6160e01b8552600485015260248401525af1801561101a5761100e57505080f35b611017916116fb565b80f35b50604051903d90823e3d90fd5b90506020813d602011611061575b81611042602093836116fb565b81010312610c0f57516001600160a01b0381168103610c0f5738610fbf565b3d9150611035565b808052600a60205260408120541561111257808052600a602052806040812054818052600a60205281604081205560018060a01b0360025416906020604051809363a9059cbb60e01b82528186816004810187876040830192858152015203925af19081156104ec576111066020927fbb28353e4598c3b9199101a66e0989549b659a59a54d2c27fbb183f1932c8e6d948691610e57575061180d565b604051908152a2611069565b610f57565b6111126118ff565b506007544211610f0e565b50346101a3577fb751835a12376750bd69b4b4c0c1d306480284514d2fa88f72edf3eeea8515f6604061115c3661168e565b611164611894565b818552600f602052808386205582519182526020820152a180f35b50346101a35760203660031901126101a35760043561119c611894565b6111ab60ff600c54161561178b565b428111156111b95760075580f35b60405162461bcd60e51b815260206004820152601e60248201527f446561646c696e65206d75737420626520696e207468652066757475726500006044820152606490fd5b50346101a35761120d3661163d565b90611216611894565b60125460105460405163095ea7b360e01b81526001600160a01b039182166004820152670de0b6b3a7640000602482015291602091839160449183918991165af190811561074c5784916114b9575b501561147d57829182918260018060a01b0360105416926112b9602463ffffffff60e01b60125460401b1694836040519485926020840198895284840137810185838201520301601f1981018352826116fb565b51925af16112c561174b565b90156113ba575b60208151918180820193849201010312610c0f575160138190556012805460ff60c01b1916600160c01b1790556011546001600160a01b031680611316575b602082604051908152f35b82809160405160208101906379ea994360e01b8252856024820152602481526113406044826116fb565b51915afa61134c61174b565b901561130b576020818051810103126103fd57602001516001600160a01b038116908190036103fd577f9ecfd97bf22760e90779a4364f3646d6cbb7e6207b75280c803ca569a34234a0602093826bffffffffffffffffffffffff60a01b601454161760145580a23861130b565b7f3c5ad147104e56be34a9176a6692f7df8d2f4b29a5af06bc6b98970d329d65776080825160405190604082526013604083015272149959da5cdd1c985d1a5bdb8819985a5b1959606a1b60608301526020820152a18051156112cc577fd54ba61ed4070561dcc6d272cdd44f051344b2c11b31180228f79dcb0003cf83604051604081526011604082015270526567697374726174696f6e206461746160781b6060820152608060208201528061147560808201856116a4565b0390a16112cc565b60405162461bcd60e51b815260206004820152601460248201527313125392c8185c1c1c9bdd985b0819985a5b195960621b6044820152606490fd5b6114d2915060203d6020116104bb576104ad81836116fb565b38611265565b50346101a357806003193601126101a3576020600654604051908152f35b50346101a357806003193601126101a35761150f611894565b805460ff8160a01c16156115555760ff60a01b191681556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b638dfc202b60e01b8252600482fd5b50346101a357806003193601126101a3576002546040516001600160a01b039091168152602090f35b50346101a35760203660031901126101a35760406020916004358152600f83522054604051908152f35b50346101a357806003193601126101a3576020600754604051908152f35b50346101a357806003193601126101a357602060ff600854166040519015158152f35b50346101a357806003193601126101a3576003546040516001600160a01b039091168152602090f35b905034610c0f5781600319360112610c0f576020906013548152f35b9060206003198301126107bd5760043567ffffffffffffffff81116107bd57826023820112156107bd5780600401359267ffffffffffffffff84116107bd57602484830101116107bd576024019190565b60409060031901126107bd576004359060243590565b919082519283825260005b8481106116d0575050826000602080949584010152601f8019910116010190565b806020809284010151828286010152016116af565b600435906001600160a01b03821682036107bd57565b90601f8019910116810190811067ffffffffffffffff82111761171d57604052565b634e487b7160e01b600052604160045260246000fd5b908160209103126107bd575180151581036107bd5790565b3d15611786573d9067ffffffffffffffff821161171d576040519161177a601f8201601f1916602001846116fb565b82523d6000602084013e565b606090565b1561179257565b60405162461bcd60e51b815260206004820152601760248201527f46756e647261697365722069732066696e616c697a65640000000000000000006044820152606490fd5b818102929181159184041417156117ea57565b634e487b7160e01b600052601160045260246000fd5b919082039182116117ea57565b1561181457565b60405162461bcd60e51b815260206004820152600d60248201526c1499599d5b990819985a5b1959609a1b6044820152606490fd5b1561185057565b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b919082018092116117ea57565b6000546001600160a01b031633036118a857565b63118cdaa760e01b6000523360045260246000fd5b6002600154146118ce576002600155565b633ee5aeb560e01b60005260046000fd5b60ff60005460a01c166118ee57565b63d93c066560e01b60005260046000fd5b60025460048054600b5460405163a9059cbb60e01b81526001600160a01b03928316938101939093526024830152909160209183916044918391600091165af1801561199057611956916000916104cd5750611849565b60018060a01b03600454167f221c08a06b07a64803b3787861a3f276212fcccb51c2e6234077a9b8cb13047a6020600b54604051908152a2565b6040513d6000823e3d90fdfea26469706673582212203a4ca1504cb017f1a4fcd840cbb5ec31bff26ba9b4abd8e2cfbce85dc837607964736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x2F8BAA1 EQ PUSH2 0x1621 JUMPI POP DUP1 PUSH4 0x25B4F65F EQ PUSH2 0x15F8 JUMPI DUP1 PUSH4 0x2897F6A0 EQ PUSH2 0x15D5 JUMPI DUP1 PUSH4 0x29DCB0CF EQ PUSH2 0x15B7 JUMPI DUP1 PUSH4 0x38EB6A19 EQ PUSH2 0x158D JUMPI DUP1 PUSH4 0x3E413BEE EQ PUSH2 0x1564 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x14F6 JUMPI DUP1 PUSH4 0x42235DA6 EQ PUSH2 0x14D8 JUMPI DUP1 PUSH4 0x4232D7F8 EQ PUSH2 0x11FE JUMPI DUP1 PUSH4 0x42AF1884 EQ PUSH2 0x117F JUMPI DUP1 PUSH4 0x44D3498A EQ PUSH2 0x112A JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0xEF0 JUMPI DUP1 PUSH4 0x4BB278F3 EQ PUSH2 0xD44 JUMPI DUP1 PUSH4 0x5B7BAF64 EQ PUSH2 0xA2E JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xA09 JUMPI DUP1 PUSH4 0x66BFF1DB EQ PUSH2 0x9DF JUMPI DUP1 PUSH4 0x6CAD3FB0 EQ PUSH2 0x94A JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x8EE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x894 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x833 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x80C JUMPI DUP1 PUSH4 0x95CCEA67 EQ PUSH2 0x646 JUMPI DUP1 PUSH4 0xA001ECDD EQ PUSH2 0x628 JUMPI DUP1 PUSH4 0xB3F05B97 EQ PUSH2 0x605 JUMPI DUP1 PUSH4 0xC5C4744C EQ PUSH2 0x5E7 JUMPI DUP1 PUSH4 0xC9788631 EQ PUSH2 0x5BE JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xF25F4B56 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A6 JUMPI PUSH4 0xFC7E286D EQ PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x192 PUSH2 0x16E5 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xA DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x1C0 PUSH2 0x16E5 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x1894 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x218 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 OR DUP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH2 0x264 CALLDATASIZE PUSH2 0x168E JUMP JUMPDEST PUSH2 0x26C PUSH2 0x18BD JUMP JUMPDEST PUSH2 0x274 PUSH2 0x18DF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x579 JUMPI PUSH2 0x289 PUSH1 0xFF PUSH1 0xC SLOAD AND ISZERO PUSH2 0x178B JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD ISZERO PUSH2 0x53C JUMPI PUSH1 0xFF PUSH1 0x8 SLOAD AND PUSH2 0x4F7 JUMPI JUMPDEST DUP2 DUP4 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH2 0x2BC DUP2 PUSH1 0x40 DUP6 KECCAK256 SLOAD PUSH2 0x17D7 JUMP JUMPDEST SWAP2 PUSH2 0x2710 PUSH2 0x2CC PUSH1 0x9 SLOAD DUP6 PUSH2 0x17D7 JUMP JUMPDEST DIV SWAP2 DUP5 PUSH2 0x2D9 DUP5 DUP7 PUSH2 0x1800 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0x64 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE DUP13 PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x4EC JUMPI PUSH2 0x326 SWAP2 DUP5 SWAP2 PUSH2 0x4CD JUMPI JUMPDEST POP PUSH2 0x1849 JUMP JUMPDEST DUP5 PUSH2 0x401 JUMPI JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x3FD JUMPI PUSH1 0x40 MLOAD PUSH4 0xAB714FB PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x3F2 JUMPI PUSH2 0x3D9 JUMPI JUMPDEST POP SWAP2 PUSH2 0x39E SWAP3 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 PUSH2 0x394 DUP3 DUP3 SLOAD PUSH2 0x1887 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0xB SLOAD PUSH2 0x1887 JUMP JUMPDEST PUSH1 0xB SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 PUSH1 0x40 CALLER SWAP3 LOG2 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST DUP2 PUSH2 0x3E3 SWAP2 PUSH2 0x16FB JUMP JUMPDEST PUSH2 0x3EE JUMPI DUP5 CODESIZE PUSH2 0x379 JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP9 SWAP1 MSTORE SWAP3 SWAP4 POP PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 DUP13 SWAP2 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x4C2 JUMPI DUP8 SWAP2 PUSH2 0x493 JUMPI JUMPDEST POP ISZERO PUSH2 0x458 JUMPI DUP6 SWAP1 PUSH2 0x32C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x119959481D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x4B5 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4BB JUMPI JUMPDEST PUSH2 0x4AD DUP2 DUP4 PUSH2 0x16FB JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1733 JUMP JUMPDEST CODESIZE PUSH2 0x44B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x4E6 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4BB JUMPI PUSH2 0x4AD DUP2 DUP4 PUSH2 0x16FB JUMP JUMPDEST CODESIZE PUSH2 0x320 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD TIMESTAMP GT ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x111958591B1A5B99481A185CC81C185CDCD959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x50726F64756374206E6F7420617661696C61626C65 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5175616E74697479206D7573742062652067726561746572207468616E203000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x20 PUSH1 0xB SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0xC SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x660 PUSH2 0x16E5 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x66C PUSH2 0x1894 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x7D5 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x7CA JUMPI DUP7 SWAP2 PUSH2 0x793 JUMPI JUMPDEST POP DUP3 GT PUSH2 0x757 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP9 SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x74C JUMPI PUSH2 0x72B PUSH1 0x20 SWAP3 PUSH32 0x5FAFA99D0643513820BE26656B45130B01E1C03062E1266BF36F88CBD3BD9695 SWAP5 DUP8 SWAP2 PUSH2 0x735 JUMPI POP PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 DUP1 RETURN JUMPDEST PUSH2 0x4E6 SWAP2 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x4BB JUMPI PUSH2 0x4AD DUP2 DUP4 PUSH2 0x16FB JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x7C2 JUMPI JUMPDEST DUP2 PUSH2 0x7AE PUSH1 0x20 SWAP4 DUP4 PUSH2 0x16FB JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x7BD JUMPI MLOAD CODESIZE PUSH2 0x6B6 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x84C PUSH2 0x1894 JUMP JUMPDEST PUSH2 0x854 PUSH2 0x18DF JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x8AD PUSH2 0x1894 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH2 0x8FD CALLDATASIZE PUSH2 0x163D JUMP JUMPDEST POP POP PUSH1 0xFF PUSH1 0xC SLOAD AND ISZERO DUP1 PUSH2 0x93F JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH2 0x91B PUSH1 0x20 DUP5 PUSH2 0x16FB JUMP JUMPDEST DUP3 MSTORE PUSH2 0x93B PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x40 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x16A4 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP PUSH1 0x7 SLOAD TIMESTAMP GT PUSH2 0x90C JUMP JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x967 PUSH2 0x1894 JUMP JUMPDEST PUSH2 0x3E8 DUP2 GT PUSH2 0x9A2 JUMPI PUSH1 0x20 DUP2 PUSH32 0x8C4D35E54A3F2EF1134138FD8EA3DAEE6A3C89E10D2665996BABDF70261E2C76 SWAP3 PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4665652063616E6E6F742065786365656420313025 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x40 PUSH1 0x20 SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xE DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0xFF PUSH1 0x20 SWAP2 SLOAD PUSH1 0xA0 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xFF PUSH1 0xC SLOAD AND ISZERO PUSH2 0xD0F JUMPI PUSH1 0xB SLOAD PUSH1 0x6 SLOAD GT ISZERO PUSH2 0xCD9 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH3 0x7EEAC7 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 PUSH1 0x44 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x74C JUMPI DUP5 SWAP3 PUSH2 0xCA5 JUMPI JUMPDEST POP DUP2 ISZERO PUSH2 0xC6A JUMPI PUSH1 0x24 SWAP1 DUP4 DUP6 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH2 0xAB9 DUP5 PUSH1 0x40 DUP9 KECCAK256 SLOAD PUSH2 0x17D7 JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0xEF8593E7 PUSH1 0xE0 SHL DUP3 MSTORE DUP9 PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xC5F JUMPI DUP6 SWAP3 PUSH2 0xC2B JUMPI JUMPDEST POP DUP2 ISZERO PUSH2 0xC17 JUMPI SWAP1 DUP5 SWAP3 SWAP2 DIV SWAP3 DUP1 DUP4 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH2 0xB04 DUP5 PUSH1 0x40 DUP6 KECCAK256 SLOAD PUSH2 0x1800 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SSTORE PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 EXTCODESIZE ISZERO PUSH2 0xC13 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7A94C565 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x3F2 JUMPI PUSH2 0xBFA JUMPI JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x4EC JUMPI PUSH2 0xBAC SWAP2 DUP5 SWAP2 PUSH2 0xBDB JUMPI JUMPDEST POP PUSH2 0x180D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xBB28353E4598C3B9199101A66E0989549B659A59A54D2C27FBB183F1932C8E6D PUSH1 0x20 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST PUSH2 0xBF4 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4BB JUMPI PUSH2 0x4AD DUP2 DUP4 PUSH2 0x16FB JUMP JUMPDEST CODESIZE PUSH2 0xBA6 JUMP JUMPDEST DUP2 PUSH2 0xC04 SWAP2 PUSH2 0x16FB JUMP JUMPDEST PUSH2 0xC0F JUMPI DUP2 CODESIZE PUSH2 0xB5E JUMP JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xC57 JUMPI JUMPDEST DUP2 PUSH2 0xC47 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x16FB JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x7BD JUMPI MLOAD SWAP1 CODESIZE PUSH2 0xAE1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xC3A JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x139BC81D1BDAD95B9CC81D1BC81C99599D5B99 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xCD1 JUMPI JUMPDEST DUP2 PUSH2 0xCC1 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x16FB JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x7BD JUMPI MLOAD SWAP1 CODESIZE PUSH2 0xA97 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xCB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x15185C99D95D081DD85CC81B595D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x139BDD08199A5B985B1A5E9959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0xD5D PUSH2 0x18BD JUMP JUMPDEST PUSH2 0xD65 PUSH2 0x18DF JUMP JUMPDEST PUSH1 0xFF PUSH1 0xC SLOAD AND PUSH2 0xEB7 JUMPI PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xEAF JUMPI PUSH1 0x7 SLOAD TIMESTAMP GT ISZERO PUSH2 0xE73 JUMPI PUSH1 0xB SLOAD PUSH1 0x6 SLOAD GT PUSH2 0xDAB JUMPI PUSH2 0xD97 PUSH2 0x18FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0xC SLOAD AND OR PUSH1 0xC SSTORE PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST DUP1 DUP1 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO PUSH2 0xE6E JUMPI DUP1 DUP1 MSTORE PUSH1 0xA PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SLOAD DUP5 DUP1 MSTORE SWAP3 DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x2 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE DUP5 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x4EC JUMPI PUSH2 0xE4B PUSH1 0x20 SWAP3 PUSH32 0xBB28353E4598C3B9199101A66E0989549B659A59A54D2C27FBB183F1932C8E6D SWAP5 DUP7 SWAP2 PUSH2 0xE57 JUMPI POP PUSH2 0x180D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 PUSH2 0xDAB JUMP JUMPDEST PUSH2 0xBF4 SWAP2 POP DUP5 RETURNDATASIZE DUP2 GT PUSH2 0x4BB JUMPI PUSH2 0x4AD DUP2 DUP4 PUSH2 0x16FB JUMP JUMPDEST PUSH2 0xD97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x111958591B1A5B99481B9BDD081C995858DA1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xE6E PUSH2 0x18FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x105B1C9958591E48199A5B985B1A5E9959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH2 0xEFF CALLDATASIZE PUSH2 0x163D JUMP JUMPDEST POP POP PUSH1 0xFF PUSH1 0xC SLOAD AND ISZERO DUP1 PUSH2 0x111F JUMPI JUMPDEST PUSH2 0xF15 JUMPI DUP1 RETURN JUMPDEST PUSH2 0xF1D PUSH2 0x18BD JUMP JUMPDEST PUSH2 0xF25 PUSH2 0x18DF JUMP JUMPDEST PUSH1 0xFF PUSH1 0xC SLOAD AND PUSH2 0xEB7 JUMPI PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1117 JUMPI PUSH1 0x7 SLOAD TIMESTAMP GT ISZERO PUSH2 0xE73 JUMPI PUSH1 0xB SLOAD PUSH1 0x6 SLOAD GT PUSH2 0x1069 JUMPI PUSH2 0xF57 PUSH2 0x18FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0xC SLOAD AND OR PUSH1 0xC SSTORE PUSH1 0x1 DUP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x966A2CF4DA2FE388FB461E726E2765451662471D3E61FB50C4191DD71434CB58 DUP3 DUP1 LOG1 PUSH1 0x14 SLOAD PUSH4 0x5AB1BD53 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3F2 JUMPI DUP3 SWAP2 PUSH2 0x1027 JUMPI JUMPDEST POP PUSH1 0x13 SLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP5 SWAP3 SWAP2 AND DUP4 EXTCODESIZE ISZERO PUSH2 0x3FD JUMPI PUSH1 0x44 DUP4 SWAP3 DUP4 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP5 DUP6 SWAP4 PUSH4 0x744BFE61 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x101A JUMPI PUSH2 0x100E JUMPI POP POP DUP1 RETURN JUMPDEST PUSH2 0x1017 SWAP2 PUSH2 0x16FB JUMP JUMPDEST DUP1 RETURN JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1061 JUMPI JUMPDEST DUP2 PUSH2 0x1042 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x16FB JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xC0F JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0xC0F JUMPI CODESIZE PUSH2 0xFBF JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1035 JUMP JUMPDEST DUP1 DUP1 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO PUSH2 0x1112 JUMPI DUP1 DUP1 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 DUP1 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE DUP2 PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND SWAP1 PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 SWAP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP3 MSTORE DUP2 DUP7 DUP2 PUSH1 0x4 DUP2 ADD DUP8 DUP8 PUSH1 0x40 DUP4 ADD SWAP3 DUP6 DUP2 MSTORE ADD MSTORE SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x4EC JUMPI PUSH2 0x1106 PUSH1 0x20 SWAP3 PUSH32 0xBB28353E4598C3B9199101A66E0989549B659A59A54D2C27FBB183F1932C8E6D SWAP5 DUP7 SWAP2 PUSH2 0xE57 JUMPI POP PUSH2 0x180D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 PUSH2 0x1069 JUMP JUMPDEST PUSH2 0xF57 JUMP JUMPDEST PUSH2 0x1112 PUSH2 0x18FF JUMP JUMPDEST POP PUSH1 0x7 SLOAD TIMESTAMP GT PUSH2 0xF0E JUMP JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH32 0xB751835A12376750BD69B4B4C0C1D306480284514D2FA88F72EDF3EEEA8515F6 PUSH1 0x40 PUSH2 0x115C CALLDATASIZE PUSH2 0x168E JUMP JUMPDEST PUSH2 0x1164 PUSH2 0x1894 JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE DUP1 DUP4 DUP7 KECCAK256 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x119C PUSH2 0x1894 JUMP JUMPDEST PUSH2 0x11AB PUSH1 0xFF PUSH1 0xC SLOAD AND ISZERO PUSH2 0x178B JUMP JUMPDEST TIMESTAMP DUP2 GT ISZERO PUSH2 0x11B9 JUMPI PUSH1 0x7 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446561646C696E65206D75737420626520696E20746865206675747572650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH2 0x120D CALLDATASIZE PUSH2 0x163D JUMP JUMPDEST SWAP1 PUSH2 0x1216 PUSH2 0x1894 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x24 DUP3 ADD MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 DUP10 SWAP2 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x74C JUMPI DUP5 SWAP2 PUSH2 0x14B9 JUMPI JUMPDEST POP ISZERO PUSH2 0x147D JUMPI DUP3 SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x10 SLOAD AND SWAP3 PUSH2 0x12B9 PUSH1 0x24 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL PUSH1 0x12 SLOAD PUSH1 0x40 SHL AND SWAP5 DUP4 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP3 PUSH1 0x20 DUP5 ADD SWAP9 DUP10 MSTORE DUP5 DUP5 ADD CALLDATACOPY DUP2 ADD DUP6 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x16FB JUMP JUMPDEST MLOAD SWAP3 GAS CALL PUSH2 0x12C5 PUSH2 0x174B JUMP JUMPDEST SWAP1 ISZERO PUSH2 0x13BA JUMPI JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 DUP2 DUP1 DUP3 ADD SWAP4 DUP5 SWAP3 ADD ADD SUB SLT PUSH2 0xC0F JUMPI MLOAD PUSH1 0x13 DUP2 SWAP1 SSTORE PUSH1 0x12 DUP1 SLOAD PUSH1 0xFF PUSH1 0xC0 SHL NOT AND PUSH1 0x1 PUSH1 0xC0 SHL OR SWAP1 SSTORE PUSH1 0x11 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x1316 JUMPI JUMPDEST PUSH1 0x20 DUP3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP1 SWAP2 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH4 0x79EA9943 PUSH1 0xE0 SHL DUP3 MSTORE DUP6 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x24 DUP2 MSTORE PUSH2 0x1340 PUSH1 0x44 DUP3 PUSH2 0x16FB JUMP JUMPDEST MLOAD SWAP2 GAS STATICCALL PUSH2 0x134C PUSH2 0x174B JUMP JUMPDEST SWAP1 ISZERO PUSH2 0x130B JUMPI PUSH1 0x20 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0x3FD JUMPI PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x3FD JUMPI PUSH32 0x9ECFD97BF22760E90779A4364F3646D6CBB7E6207B75280C803CA569A34234A0 PUSH1 0x20 SWAP4 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x14 SLOAD AND OR PUSH1 0x14 SSTORE DUP1 LOG2 CODESIZE PUSH2 0x130B JUMP JUMPDEST PUSH32 0x3C5AD147104E56BE34A9176A6692F7DF8D2F4B29A5AF06BC6B98970D329D6577 PUSH1 0x80 DUP3 MLOAD PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 MSTORE PUSH1 0x13 PUSH1 0x40 DUP4 ADD MSTORE PUSH19 0x149959DA5CDD1C985D1A5BDB8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 MLOAD ISZERO PUSH2 0x12CC JUMPI PUSH32 0xD54BA61ED4070561DCC6D272CDD44F051344B2C11B31180228F79DCB0003CF83 PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 MSTORE PUSH1 0x11 PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x526567697374726174696F6E2064617461 PUSH1 0x78 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE DUP1 PUSH2 0x1475 PUSH1 0x80 DUP3 ADD DUP6 PUSH2 0x16A4 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH2 0x12CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x13125392C8185C1C1C9BDD985B0819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x14D2 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4BB JUMPI PUSH2 0x4AD DUP2 DUP4 PUSH2 0x16FB JUMP JUMPDEST CODESIZE PUSH2 0x1265 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH2 0x150F PUSH2 0x1894 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND ISZERO PUSH2 0x1555 JUMPI PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x40 PUSH1 0x20 SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xF DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x8 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A3 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0xC0F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xC0F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x13 SLOAD DUP2 MSTORE RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x7BD JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x7BD JUMPI DUP3 PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x7BD JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x7BD JUMPI PUSH1 0x24 DUP5 DUP4 ADD ADD GT PUSH2 0x7BD JUMPI PUSH1 0x24 ADD SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x7BD JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x16D0 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x16AF JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x7BD JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x171D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x7BD JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x7BD JUMPI SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1786 JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x171D JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x177A PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x16FB JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1792 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E647261697365722069732066696E616C697A6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x17EA JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x17EA JUMPI JUMP JUMPDEST ISZERO PUSH2 0x1814 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x1499599D5B990819985A5B1959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1850 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x17EA JUMPI JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x18A8 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x18CE JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x0 SLOAD PUSH1 0xA0 SHR AND PUSH2 0x18EE JUMPI JUMP JUMPDEST PUSH4 0xD93C0665 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 PUSH1 0x0 SWAP2 AND GAS CALL DUP1 ISZERO PUSH2 0x1990 JUMPI PUSH2 0x1956 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x4CD JUMPI POP PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND PUSH32 0x221C08A06B07A64803B3787861A3F276212FCCCB51C2E6234077A9B8CB13047A PUSH1 0x20 PUSH1 0xB SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE 0x4C LOG1 POP 0x4C 0xB0 OR CALL LOG4 0xFC 0xD8 BLOCKHASH 0xCB 0xB5 0xEC BALANCE 0xBF CALLCODE PUSH12 0xA9B4ABD8E2CFBCE85DC83760 PUSH26 0x64736F6C634300081B0033000000000000000000000000000000 ","sourceMap":"683:10129:33:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;683:10129:33;;;;;;;;-1:-1:-1;;;;;683:10129:33;;:::i;:::-;;;;1094:43;683:10129;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;683:10129:33;;;;;;:::i;:::-;1500:62:8;;:::i;:::-;-1:-1:-1;;;;;683:10129:33;2627:22:8;;2623:91;;683:10129:33;;-1:-1:-1;;;;;;683:10129:33;;;;;;-1:-1:-1;;;;;683:10129:33;3052:40:8;683:10129:33;;3052:40:8;683:10129:33;;2623:91:8;-1:-1:-1;;;2672:31:8;;683:10129:33;;;;;2672:31:8;;683:10129:33;;;;;;;;;;;;;882:24;683:10129;;;-1:-1:-1;;;;;683:10129:33;;;;;;;;;;;;;;;;:::i;:::-;2466:103:23;;:::i;:::-;1439:72:22;;:::i;:::-;4469:12:33;;683:10129;;4527:46;683:10129;4536:9;683:10129;;4535:10;4527:46;:::i;:::-;683:10129;;;4591:13;683:10129;;;;;;4591:28;683:10129;;;4668:17;683:10129;;4664:107;;683:10129;;;;4591:13;683:10129;;4803:35;683:10129;;;;;4803:35;:::i;:::-;683:10129;4894:5;4863:27;4877:13;683:10129;4863:27;;:::i;:::-;683:10129;4929:17;;;;;;:::i;:::-;683:10129;;;;;;;;4965:4;683:10129;;4965:57;683:10129;;;;;;;;;4965:57;;4983:10;683:10129;4965:57;;683:10129;5003:4;683:10129;;;;;;;;;4965:57;;;;;;4957:85;4965:57;;;;;683:10129;4957:85;;:::i;:::-;5065:7;5061:99;;683:10129;5204:12;683:10129;-1:-1:-1;;;;;683:10129:33;5204:50;;;;;683:10129;;-1:-1:-1;;;5204:50:33;;4983:10;683:10129;5204:50;;683:10129;;;;;;;;;;;;;;;;;;;;;;;;5204:50;;;;;;;;683:10129;;;5369:24;683:10129;;5322:13;683:10129;;;;;5322:37;683:10129;;;5322:37;:::i;:::-;683:10129;;5369:24;683:10129;5369:24;:::i;:::-;;683:10129;;;;;;;;;;5409:37;683:10129;4983:10;5409:37;;1857:1:23;683:10129:33;;;;5204:50;;;;;:::i;:::-;683:10129;;5204:50;;;;683:10129;;;;5204:50;683:10129;;;;;;;;;5204:50;683:10129;;;5061:99;4965:4;683:10129;5110:9;683:10129;;;-1:-1:-1;;;5096:29:33;;-1:-1:-1;;;;;683:10129:33;;;;5096:29;;683:10129;;;;;;;;;-1:-1:-1;683:10129:33;;;;;;;;;;;5096:29;;;;;;;;;;;5061:99;683:10129;;;;5061:99;;;;683:10129;;;-1:-1:-1;;;683:10129:33;;;;;;;;;;;;-1:-1:-1;;;683:10129:33;;;;4965:57;;683:10129;5096:29;;;;683:10129;5096:29;683:10129;5096:29;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;683:10129;;;;;;;;;4965:57;;;;683:10129;4965:57;683:10129;4965:57;;;;;;;:::i;:::-;;;;;683:10129;;;;;;;;;4664:107;4728:8;683:10129;4709:15;:27;683:10129;4664:107;683:10129;;;-1:-1:-1;;;683:10129:33;;;;;;;;;;;;-1:-1:-1;;;683:10129:33;;;;;;;;;;-1:-1:-1;;;683:10129:33;;;;;;;;;;;;-1:-1:-1;;;683:10129:33;;;;;;;;;;-1:-1:-1;;;683:10129:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;683:10129:33;;;;;;;;;;;;;;;;;;;;;;1143:26;683:10129;;;;;;;;;;;;;;;;;;;;;;1175:21;683:10129;;;;;;;;;;;;;;;;;;;;;;;;1010:28;683:10129;;;;;;;;;;;;;;-1:-1:-1;;683:10129:33;;;;;;:::i;:::-;;;1500:62:8;;;:::i;:::-;-1:-1:-1;;;;;683:10129:33;;;6931:16;;683:10129;;6995:4;683:10129;;;-1:-1:-1;;;6995:29:33;;7018:4;683:10129;6995:29;;683:10129;-1:-1:-1;;;;;683:10129:33;;;;;;;;;6995:29;;;;;;;;;;;683:10129;6985:39;;;683:10129;;;;-1:-1:-1;;;7067:25:33;;-1:-1:-1;;;;;683:10129:33;;;;;7067:25;;683:10129;;;;;;;;;;;;;;;;;7067:25;;;;;;;7059:53;683:10129;7067:25;7127:29;7067:25;;;;;7059:53;;:::i;:::-;683:10129;;;;;7127:29;683:10129;;7067:25;;;;;;;;;;;;;;:::i;:::-;683:10129;;;;;;;;;;;;-1:-1:-1;;;683:10129:33;;;;;;;;;;;;-1:-1:-1;;;683:10129:33;;;;;;;6995:29;;;683:10129;6995:29;;683:10129;6995:29;;;;;;683:10129;6995:29;;;:::i;:::-;;;683:10129;;;;;6995:29;;;683:10129;-1:-1:-1;683:10129:33;;6995:29;;;-1:-1:-1;6995:29:33;;;683:10129;;;;;;;;;;;;-1:-1:-1;;;683:10129:33;;;;;;;;;;;;-1:-1:-1;;;683:10129:33;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;683:10129:33;;;;;;;;;;;;;;;;;;;;;1500:62:8;;:::i;:::-;1439:72:22;;:::i;:::-;683:10129:33;;-1:-1:-1;;;;683:10129:33;-1:-1:-1;;;683:10129:33;;;;;735:10:20;683:10129:33;;2551:20:22;;683:10129:33;;2551:20:22;683:10129:33;;;;;;;;;;;;;;;1500:62:8;;:::i;:::-;683:10129:33;;-1:-1:-1;;;;;;683:10129:33;;;;;;-1:-1:-1;;;;;683:10129:33;3052:40:8;683:10129:33;;3052:40:8;683:10129:33;;;;;;;;;;:::i;:::-;;;;8954:9;683:10129;;8953:10;:40;;;683:10129;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;8953:40;683:10129;8985:8;683:10129;8967:15;:26;8953:40;;683:10129;;;;;;;-1:-1:-1;;683:10129:33;;;;;;1500:62:8;;:::i;:::-;6573:4:33;6553:24;;683:10129;;;;6660:28;683:10129;6613:32;683:10129;;;;;;6660:28;683:10129;;;;;-1:-1:-1;;;683:10129:33;;;;;;;;;;;;-1:-1:-1;;;683:10129:33;;;;;;;;;;;;;;-1:-1:-1;;683:10129:33;;;;;;;;;;;1238:48;683:10129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;683:10129:33;;;;;;;7688:9;683:10129;;;;;7733:11;683:10129;7747:13;683:10129;-1:-1:-1;683:10129:33;;;7816:12;683:10129;;;-1:-1:-1;;;7816:45:33;;7839:10;683:10129;7816:45;;683:10129;;;;;;;;-1:-1:-1;;;;;683:10129:33;;;;;;7816:45;;;;;;;;;;;683:10129;7879:11;;;683:10129;;7995:37;683:10129;;;;7957:13;683:10129;;;7957:34;683:10129;;;;;7957:34;:::i;:::-;683:10129;;;;;;;;;;7995:37;;;683:10129;7995:37;;683:10129;7995:37;;;;;;;;;;;683:10129;7956:76;683:10129;;;;;;;;;;;;;7957:13;683:10129;;8069:39;683:10129;;;;;8069:39;:::i;:::-;683:10129;;;7957:13;683:10129;;;;;;7816:12;683:10129;-1:-1:-1;;;;;683:10129:33;;8158:49;;;;;683:10129;;-1:-1:-1;;;8158:49:33;;7839:10;683:10129;8158:49;;683:10129;;;;;;;;;;;;;;;;;;;;;;;8158:49;;;;;;;;683:10129;-1:-1:-1;;8266:4:33;683:10129;;;-1:-1:-1;;;8266:39:33;;7839:10;683:10129;8266:39;;683:10129;;;;;;;;;;;;;;;;7839:10;;-1:-1:-1;;;;;683:10129:33;8266:39;;;;;;8258:65;8266:39;;;;;683:10129;8258:65;;:::i;:::-;683:10129;;;;;8338:32;683:10129;7839:10;8338:32;;683:10129;;8266:39;;;;683:10129;8266:39;683:10129;8266:39;;;;;;;:::i;:::-;;;;8158:49;;;;;:::i;:::-;683:10129;;8158:49;;;;683:10129;;;;8158:49;683:10129;;;;-1:-1:-1;;;683:10129:33;;;;;7995:37;683:10129;;7995:37;;;;683:10129;7995:37;;683:10129;7995:37;;;;;;683:10129;7995:37;;;:::i;:::-;;;683:10129;;;;;7995:37;;;;;;;-1:-1:-1;7995:37:33;;;683:10129;;;;;;;;;;;;-1:-1:-1;;;683:10129:33;;;;;;;;;;;;-1:-1:-1;;;683:10129:33;;;;;;;7816:45;;;;683:10129;7816:45;;683:10129;7816:45;;;;;;683:10129;7816:45;;;:::i;:::-;;;683:10129;;;;;7816:45;;;;;;;-1:-1:-1;7816:45:33;;683:10129;;;-1:-1:-1;;;683:10129:33;;;;;;;;;;;;-1:-1:-1;;;683:10129:33;;;;;;;;;;-1:-1:-1;;;683:10129:33;;;;;;;;;;;;-1:-1:-1;;;683:10129:33;;;;;;;;;;;;;;;;;;;;2466:103:23;;:::i;:::-;1439:72:22;;:::i;:::-;683:10129:33;5532:9;683:10129;;;;5577:17;683:10129;;;;;;5636:8;683:10129;5618:15;:26;683:10129;;;5687:11;683:10129;5702:13;683:10129;-1:-1:-1;5702:13:33;;5683:138;;:::i;:::-;5898:4;683:10129;;5532:9;683:10129;;;5532:9;683:10129;5898:4;683:10129;;;;5683:138;683:10129;;;6186:8;683:10129;;;;;;6186:23;;;683:10129;;;6186:8;683:10129;;;;;;;;;;;;;;;;;;;;;6321:4;683:10129;;;-1:-1:-1;;;6321:32:33;;-1:-1:-1;683:10129:33;6321:32;;683:10129;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;683:10129:33;6321:32;;;;;;;6313:58;683:10129;6321:32;6390:25;6321:32;;;;;6313:58;;:::i;:::-;683:10129;;;;;6390:25;6154:30;;6321:32;;;;;;;;;;;;;;:::i;6186:23::-;5683:138;;683:10129;;;-1:-1:-1;;;683:10129:33;;;;;;;;;;;;-1:-1:-1;;;683:10129:33;;;;;;;5573:304;;;:::i;683:10129::-;;;-1:-1:-1;;;683:10129:33;;;;;;;;;;;;-1:-1:-1;;;683:10129:33;;;;;;;;;;;;;;;:::i;:::-;;;;9165:9;683:10129;;9164:10;:40;;;683:10129;9160:146;;683:10129;;9160:146;2466:103:23;;:::i;:::-;1439:72:22;;:::i;:::-;683:10129:33;9165:9;683:10129;;;;5577:17;683:10129;;;;;;5636:8;683:10129;5618:15;:26;683:10129;;;5687:11;683:10129;5702:13;683:10129;-1:-1:-1;5702:13:33;;5683:138;;:::i;:::-;5898:4;683:10129;;9165:9;683:10129;;;9165:9;683:10129;5898:4;683:10129;;;;9249:17;;;;8498:11;683:10129;-1:-1:-1;;;8498:25:33;;;;683:10129;;;;;;-1:-1:-1;;;;;683:10129:33;8498:25;;;;;;;;;;;5573:304;-1:-1:-1;8679:17:33;683:10129;;;-1:-1:-1;;;;;683:10129:33;;;;;;;;8656:50;;;;;;683:10129;;;;;;;;;;;;;8656:50;;683:10129;8656:50;;683:10129;;;;;8656:50;;;;;;;;9160:146;;683:10129;;8656:50;;;;:::i;:::-;683:10129;;8656:50;683:10129;;;;;;;;;;;8498:25;;;;;;;;;;;;;;;;;:::i;:::-;;;683:10129;;;;;-1:-1:-1;;;;;683:10129:33;;;;;;8498:25;;;;;;-1:-1:-1;8498:25:33;;5683:138;683:10129;;;6186:8;683:10129;;;;;;6186:23;;;683:10129;;;6186:8;683:10129;;;;;;;;;;6186:8;683:10129;;;;;;;;;;;;6321:4;683:10129;;;;;;;;;;;6321:32;;;;;683:10129;6321:32;;683:10129;;;;;;;;;;;6321:32;;;;;;;;;6313:58;683:10129;6321:32;6390:25;6321:32;;;;;6313:58;;:::i;:::-;683:10129;;;;;6390:25;6154:30;;6186:23;5683:138;;5573:304;;;:::i;9164:40::-;683:10129;9196:8;683:10129;9178:15;:26;9164:40;;683:10129;;;;;7575:33;683:10129;;;;:::i;:::-;1500:62:8;;:::i;:::-;683:10129:33;;;7528:13;683:10129;;;;;;;;;;;;;;;;7575:33;683:10129;;;;;;;;;-1:-1:-1;;683:10129:33;;;;;;1500:62:8;;:::i;:::-;7267:46:33;683:10129;7276:9;683:10129;;7275:10;7267:46;:::i;:::-;7345:15;7331:29;;683:10129;;;7405:22;683:10129;;;;;;-1:-1:-1;;;683:10129:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1500:62:8;;;:::i;:::-;9502:10:33;683:10129;9522:19;683:10129;;;-1:-1:-1;;;9495:56:33;;-1:-1:-1;;;;;683:10129:33;;;;9495:56;;683:10129;9543:7;683:10129;;;;;;;;;9495:56;;683:10129;;;;;9495:56;;;;;;;;;;;683:10129;;;;;;;;;;;;;;;9522:19;683:10129;;;;;;;;9502:10;683:10129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10470:58;;;;;;:::i;:::-;10542:8;;10538:216;;683:10129;;;;10770:33;;;;;;;;;;683:10129;;;;;9733:35;683:10129;;;9502:10;683:10129;;-1:-1:-1;;;;683:10129:33;-1:-1:-1;;;683:10129:33;;;9824:18;683:10129;-1:-1:-1;;;;;683:10129:33;;9820:442;;683:10129;;;;;;;;;9820:442;683:10129;;;;;;9960:65;;;;;;;;;683:10129;9960:65;;683:10129;;9960:65;;;9495:56;9960:65;;:::i;:::-;9930:96;;;;;;:::i;:::-;10040:212;;9820:442;10040:212;683:10129;;;;10091:33;;683:10129;;;;;10091:33;683:10129;-1:-1:-1;;;;;683:10129:33;;;;;;;;10210:27;683:10129;;;;;;10142:45;683:10129;;;10142:45;683:10129;10210:27;;10040:212;9820:442;;10538:216;10571:47;;683:10129;;;;;;;;;;;;;-1:-1:-1;;;683:10129:33;;;;;;;;10571:47;683:10129;;10632:112;10538:216;10632:112;10686:43;683:10129;;;;;;;;;;-1:-1:-1;;;683:10129:33;;;;10571:47;683:10129;;;;;;10571:47;683:10129;;;;:::i;:::-;10686:43;;;10538:216;;683:10129;;;-1:-1:-1;;;683:10129:33;;;;;;;;;;;;-1:-1:-1;;;9495:56:33;683:10129;;;;;;9495:56;;;;683:10129;9495:56;683:10129;9495:56;;;;;;;:::i;:::-;;;;683:10129;;;;;;;;;;;;;;912:28;683:10129;;;;;;;;;;;;;;;;;;;;1500:62:8;;:::i;:::-;683:10129:33;;;;;;;2264:9:22;2260:62;;-1:-1:-1;;;;683:10129:33;;;;;735:10:20;683:10129:33;;2798:22:22;;683:10129:33;;2798:22:22;683:10129:33;;2260:62:22;-1:-1:-1;;;2296:15:22;;683:10129:33;2296:15:22;;683:10129:33;;;;;;;;;;;;;782:18;683:10129;;;-1:-1:-1;;;;;683:10129:33;;;;;;;;;;;;;;;-1:-1:-1;;683:10129:33;;;;;;;;;;;1321:48;683:10129;;;;;;;;;;;;;;;;;;;;;;;;946:23;683:10129;;;;;;;;;;;;;;;;;;;;;;975:29;683:10129;;;;;;;;;;;;;;;;;;;;;;;806:32;683:10129;;;-1:-1:-1;;;;;683:10129:33;;;;;;;;;;;;;;;;;;;;;;;;1727:17;683:10129;;;;;;;-1:-1:-1;;683:10129:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;683:10129:33;;;;;;;;;-1:-1:-1;683:10129:33;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;683:10129:33;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;683:10129:33;;;;;-1:-1:-1;683:10129:33;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;683:10129:33;;;;;:::i;:::-;;;;-1:-1:-1;683:10129:33;;;;:::o;:::-;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;683:10129:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;683:10129:33;;;;;;;;;;;;-1:-1:-1;;;683:10129:33;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;683:10129:33;;;;;;;;;;;;-1:-1:-1;;;683:10129:33;;;;;;;;;;;;;;;;;:::o;1796:162:8:-;1710:6;683:10129:33;-1:-1:-1;;;;;683:10129:33;735:10:20;1855:23:8;1851:101;;1796:162::o;1851:101::-;1901:40;;;1710:6;1901:40;735:10:20;1901:40:8;683:10129:33;;1710:6:8;1901:40;2575:307:23;1899:1;2702:7;683:10129:33;2702:18:23;2698:86;;1899:1;2702:7;683:10129:33;2575:307:23:o;2698:86::-;2743:30;;;-1:-1:-1;2743:30:23;;-1:-1:-1;2743:30:23;2002:128:22;683:10129:33;1920:7:22;683:10129:33;;;;2063:61:22;;2002:128::o;2063:61::-;2098:15;;;1920:7;2098:15;;1920:7;2098:15;5915:183:33;5966:4;683:10129;5980:17;683:10129;;5999:11;683:10129;;;-1:-1:-1;;;5966:45:33;;-1:-1:-1;;;;;683:10129:33;;;5966:45;;;683:10129;;;;;;;;;;5966:45;;683:10129;;;;;;-1:-1:-1;;683:10129:33;5966:45;;;;;;5958:73;5966:45;-1:-1:-1;5966:45:33;;;5958:73;;:::i;:::-;683:10129;;;;;5980:17;683:10129;;6046:45;5966;5999:11;683:10129;;;;;;6046:45;5915:183::o;5966:45::-;683:10129;;;-1:-1:-1;683:10129:33;;;;"},"methodIdentifiers":{"beneficiaryWallet()":"c9788631","checkUpkeep(bytes)":"6e04ff0d","claimRefund(uint256)":"5b7baf64","deadline()":"29dcb0cf","deposit(uint256,uint256)":"e2bbb158","deposits(address)":"fc7e286d","emergencyWithdraw(address,uint256)":"95ccea67","enforceConditions()":"2897f6a0","feePercentage()":"a001ecdd","feeWallet()":"f25f4b56","finalize()":"4bb278f3","finalized()":"b3f05b97","getStationUpkeepID()":"02f8baa1","initializeChainlink(bytes)":"4232d7f8","minimumTarget()":"42235da6","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","performUpkeep(bytes)":"4585e33b","productPrices(uint256)":"38eb6a19","productToken()":"25b4f65f","renounceOwnership()":"715018a6","setProductPrice(uint256,uint256)":"44d3498a","tokenDeposits(uint256)":"66bff1db","totalRaised()":"c5c4744c","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a","updateDeadline(uint256)":"42af1884","updateFeePercentage(uint256)":"6cad3fb0","usdc()":"3e413bee"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdcAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_beneficiaryWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_feeWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minimumTarget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_enforceConditions\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_productTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_productIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_productPrices\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"_linkToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_chainlinkRegistrar\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_chainlinkRegistry\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"_chainlinkRegistrarSelector\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Debug\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"DebugBytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFeePercentage\",\"type\":\"uint256\"}],\"name\":\"FeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"ForwarderChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"ProductPriceSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Refund\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"UpkeepPerformed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"beneficiaryWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"}],\"name\":\"claimRefund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enforceConditions\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStationUpkeepID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"registrationParams\",\"type\":\"bytes\"}],\"name\":\"initializeChainlink\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stationUpkeepID\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumTarget\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"productPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"productToken\",\"outputs\":[{\"internalType\":\"contract ProductToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"setProductPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newDeadline\",\"type\":\"uint256\"}],\"name\":\"updateDeadline\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFeePercentage\",\"type\":\"uint256\"}],\"name\":\"updateFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdc\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/USDCFundraiser.sol\":\"USDCFundraiser\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"keccak256\":\"0x8c97744adc25cf30d1a2509bff6c0ddc9b36feb75f8e38c85d5c62b8ec773159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c53c8736dacbf8c517c63937d556c3e4873a62f509c5d84b89e32fc5c9c6c2c\",\"dweb:/ipfs/QmeR6RSce5dTDcPgbwBnG7E8U89716bqsUcv1NeWnX5RJf\"]},\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":{\"keccak256\":\"0xce623f3e7fa4addf240032d2817b2b489ac08e79fae14a5cc5850ed3f1acddf8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0546b2739f3989b897c5cb591d01211e2db22e1a8578f68117f1a8a692abd85c\",\"dweb:/ipfs/QmW6guw8uUk2Dq49PWdjeZeEvnDDRg3CVX2BVcVNcT6QNL\"]},\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e35eb46dfadf12396e92dd970547209dfd99f0ae5b1ec7b5a3e81617f620a1\",\"dweb:/ipfs/Qmanoi2CDi9MwkP44HosagvewfMEvCMN1YthGRmCexVjwY\"]},\"@chainlink/contracts/src/v0.8/automation/interfaces/IAutomationForwarder.sol\":{\"keccak256\":\"0x5b97b0a8a8d89b77b572e2c41d8fabbad9c4a9920ab698f8c898d2cc9c1a0eb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1026a62312dc859f63d2d063b0eb10addcf5ffe011ce01b1d39013adb0ea2f0f\",\"dweb:/ipfs/QmeRcnHW9wqtsuXWNb5RUDp48nW5MZYBf7CdoXzyUY5F3T\"]},\"@chainlink/contracts/src/v0.8/automation/interfaces/IAutomationRegistryConsumer.sol\":{\"keccak256\":\"0x3e4f465acb278a1a1aac6a038f5d3b21794fd3ff37e2544944f4b42fc07a327b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b98c402fe45fb6282ddf03541ca9db944ed7b23c7bbfa4a5a09b2cb961f45eff\",\"dweb:/ipfs/QmNn3dopG84uqmw6TG33uHtyFfARGj3XSNMu5YyVcj12hS\"]},\"@chainlink/contracts/src/v0.8/shared/interfaces/ITypeAndVersion.sol\":{\"keccak256\":\"0xf5827cb463c01d055021684d04f9186391c2d9ac850e0d0819f76140e4fc84ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a19c7bae07330e6d7904a0a21cf0ab0067ef096b66c1653a2e012801a931c5b9\",\"dweb:/ipfs/QmckpvSuLx8UL8zfVzAtN6ZRxyXHUSVqqz2JwYZ2jrK58h\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x22933f0f4897ff70a991c3baebfbc2574fd052dc4bae7fcafec45b07c1f23dd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13674cffad18cec55f013056496d7d2e3a34bd7bdbe23d1ef0c7588088c73367\",\"dweb:/ipfs/QmcBkrwxNvCApG48Gyby2L6qCNtuhaFncGpbJt3zuukTmu\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x30afe9013aaeb3ba735284a9310792776f57a3b2db6fc1d99628f2c47287f5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c675b740746031092efcedb2e18179f05fce8ba482de64e982715e4aa16bc90\",\"dweb:/ipfs/QmVdUD89qYudLc88k5AsuQ6VWyz9SE1c6UXrVK32Yqh1YS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xaf9586854de33dc9d3a7160cad8170fdfb4119d02a44bad90ba16d71d701cc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15a02762b0a51d66e36be135c27de656093fc09292fa743df8484b87d4486ea\",\"dweb:/ipfs/QmbEozFrt5XwC9nzDFuXvN1RF3hQVwKYNi8c2R4bFvYJ2X\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/ProductToken.sol\":{\"keccak256\":\"0x3d162af26f2856dbd274023df75a140842a202225b852af8440553358fb6c226\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://667af662842dbaf16044137e887a985a1e4ac66a88c1738bc64f9490893f5064\",\"dweb:/ipfs/QmQAFSDdwiceKYRNYuNLD1RFFrGTcqLX5xSSbzY5CvQPcY\"]},\"contracts/USDCFundraiser.sol\":{\"keccak256\":\"0x76532bc52563a209b4ea7af63fb5971e1b2a66d0df6c24b5c07e50cfff1e29db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8fc2994d54dc926a4a4146e34205ec8036caf44b1d01bc3fdfadd94ba61c0c8\",\"dweb:/ipfs/QmV2fhfjxGTJMCLHfqDY9gbfd9DKmvnjphNAy6RP4gRxjV\"]},\"contracts/interfaces/IAutomationRegistrar.sol\":{\"keccak256\":\"0xb7687c4b4f73bdf5594a13323c0dc2c22f5a200bea664f23d20dc8cbfdc8e885\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e71d2507d24aabeafe24e8087bc0bd4c1955df1da08918823adf8325bb46f445\",\"dweb:/ipfs/QmUnXKDX9A9XuE7uBKjbTtPuMvzRTpLa5FfQZ3zPR8Rwpr\"]}},\"version\":1}"}},"contracts/interfaces/IAutomationRegistrar.sol":{"IAutomationRegistrar":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onTokenTransfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes","name":"encryptedEmail","type":"bytes"},{"internalType":"address","name":"upkeepContract","type":"address"},{"internalType":"uint32","name":"gasLimit","type":"uint32"},{"internalType":"address","name":"adminAddress","type":"address"},{"internalType":"uint8","name":"triggerType","type":"uint8"},{"internalType":"bytes","name":"checkData","type":"bytes"},{"internalType":"bytes","name":"triggerConfig","type":"bytes"},{"internalType":"bytes","name":"offchainConfig","type":"bytes"},{"internalType":"uint96","name":"amount","type":"uint96"},{"internalType":"address","name":"sender","type":"address"}],"name":"register","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onTokenTransfer(address,uint256,bytes)":"a4c0ed36","register(string,bytes,address,uint32,address,uint8,bytes,bytes,bytes,uint96,address)":"856853e6"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"encryptedEmail\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"upkeepContract\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"gasLimit\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"adminAddress\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"triggerType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"triggerConfig\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"offchainConfig\",\"type\":\"bytes\"},{\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAutomationRegistrar.sol\":\"IAutomationRegistrar\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IAutomationRegistrar.sol\":{\"keccak256\":\"0xb7687c4b4f73bdf5594a13323c0dc2c22f5a200bea664f23d20dc8cbfdc8e885\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e71d2507d24aabeafe24e8087bc0bd4c1955df1da08918823adf8325bb46f445\",\"dweb:/ipfs/QmUnXKDX9A9XuE7uBKjbTtPuMvzRTpLa5FfQZ3zPR8Rwpr\"]}},\"version\":1}"}},"contracts/interfaces/IAutomationRegistry.sol":{"IAutomationRegistry":{"abi":[{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"cancelUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"getUpkeep","outputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"uint32","name":"executeGas","type":"uint32"},{"internalType":"bytes","name":"checkData","type":"bytes"},{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"address","name":"lastKeeper","type":"address"},{"internalType":"address","name":"admin","type":"address"},{"internalType":"uint64","name":"maxValidBlocknumber","type":"uint64"},{"internalType":"uint96","name":"amountSpent","type":"uint96"},{"internalType":"bool","name":"paused","type":"bool"},{"internalType":"bytes","name":"offchainConfig","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes","name":"encryptedEmail","type":"bytes"},{"internalType":"address","name":"upkeepContract","type":"address"},{"internalType":"uint32","name":"gasLimit","type":"uint32"},{"internalType":"address","name":"adminAddress","type":"address"},{"internalType":"bytes","name":"checkData","type":"bytes"},{"internalType":"uint96","name":"amount","type":"uint96"},{"internalType":"uint8","name":"source","type":"uint8"}],"name":"register","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"withdrawFunds","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"cancelUpkeep(uint256)":"c8048022","getUpkeep(uint256)":"c7c3a19a","register(string,bytes,address,uint32,address,bytes,uint96,uint8)":"c4110e5c","withdrawFunds(uint256,address)":"744bfe61"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"cancelUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getUpkeep\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"executeGas\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"},{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"lastKeeper\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"maxValidBlocknumber\",\"type\":\"uint64\"},{\"internalType\":\"uint96\",\"name\":\"amountSpent\",\"type\":\"uint96\"},{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"offchainConfig\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"encryptedEmail\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"upkeepContract\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"gasLimit\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"adminAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"},{\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"},{\"internalType\":\"uint8\",\"name\":\"source\",\"type\":\"uint8\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAutomationRegistry.sol\":\"IAutomationRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IAutomationRegistry.sol\":{\"keccak256\":\"0x76efce5abf9fa065146e011762f38fb5e1b9c220972f0ea669ba3056e3d052c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02a38f3503bb3c1a389f8063ab4f4f864ae668f5fa8fa10642923aa863a85275\",\"dweb:/ipfs/QmTEcpAgBWDPFKaYV2c5YPTf8VNijmGLmVHZfsnYS7YVaD\"]}},\"version\":1}"}},"contracts/mocks/MockAutomationRegistrar.sol":{"MockAutomationRegistrar":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"name","type":"string"},{"indexed":false,"internalType":"bytes","name":"encryptedEmail","type":"bytes"},{"indexed":false,"internalType":"address","name":"upkeepContract","type":"address"},{"indexed":false,"internalType":"uint32","name":"gasLimit","type":"uint32"},{"indexed":false,"internalType":"address","name":"adminAddress","type":"address"},{"indexed":false,"internalType":"bytes","name":"checkData","type":"bytes"},{"indexed":false,"internalType":"uint96","name":"amount","type":"uint96"},{"indexed":false,"internalType":"uint8","name":"source","type":"uint8"}],"name":"RegistrationRequested","type":"event"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes","name":"encryptedEmail","type":"bytes"},{"internalType":"address","name":"upkeepContract","type":"address"},{"internalType":"uint32","name":"gasLimit","type":"uint32"},{"internalType":"address","name":"adminAddress","type":"address"},{"internalType":"bytes","name":"checkData","type":"bytes"},{"internalType":"uint96","name":"amount","type":"uint96"},{"internalType":"uint8","name":"source","type":"uint8"}],"name":"register","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608080604052346015576102a6908161001b8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c63c4110e5c1461002757600080fd5b3461019a5761010036600319011261019a5760043567ffffffffffffffff811161019a573660238201121561019a5761006a90369060248160040135910161019f565b60243567ffffffffffffffff811161019a5761008a903690600401610211565b906044356001600160a01b038116919082900361019a576064359163ffffffff831680930361019a576084356001600160a01b038116949085900361019a5760a43567ffffffffffffffff811161019a576100e9903690600401610211565b9060c435926bffffffffffffffffffffffff841680940361019a5760e4359260ff841680940361019a577fea3d9a7b7ea302e8330a22297188500bda7e831aea0b89bfeb7ab2ee773131029761015697610164610181956040519a8b9a6101008c526101008c019061022f565b908a820360208c015261022f565b9360408901526060880152608087015285820360a087015261022f565b9160c084015260e08301520390a1602060405160018152f35b600080fd5b92919267ffffffffffffffff82116101fb57601f19601f8301169160405192603f601f19910116830183811067ffffffffffffffff8211176101fb5760405282948184528183011161019a578281602093846000960137010152565b634e487b7160e01b600052604160045260246000fd5b9080601f8301121561019a5781602061022c9335910161019f565b90565b919082519283825260005b84811061025b575050826000602080949584010152601f8019910116010190565b8060208092840101518282860101520161023a56fea26469706673582212200e2d5354478ad6079acb0c2419de6e94026202d856ae6fe052924dac685e7d8e64736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x15 JUMPI PUSH2 0x2A6 SWAP1 DUP2 PUSH2 0x1B DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0xC4110E5C EQ PUSH2 0x27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x19A JUMPI PUSH2 0x100 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19A JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x19A JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x19A JUMPI PUSH2 0x6A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x19F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x19A JUMPI PUSH2 0x8A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x211 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x19A JUMPI PUSH1 0x64 CALLDATALOAD SWAP2 PUSH4 0xFFFFFFFF DUP4 AND DUP1 SWAP4 SUB PUSH2 0x19A JUMPI PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP5 SWAP1 DUP6 SWAP1 SUB PUSH2 0x19A JUMPI PUSH1 0xA4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x19A JUMPI PUSH2 0xE9 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x211 JUMP JUMPDEST SWAP1 PUSH1 0xC4 CALLDATALOAD SWAP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND DUP1 SWAP5 SUB PUSH2 0x19A JUMPI PUSH1 0xE4 CALLDATALOAD SWAP3 PUSH1 0xFF DUP5 AND DUP1 SWAP5 SUB PUSH2 0x19A JUMPI PUSH32 0xEA3D9A7B7EA302E8330A22297188500BDA7E831AEA0B89BFEB7AB2EE77313102 SWAP8 PUSH2 0x156 SWAP8 PUSH2 0x164 PUSH2 0x181 SWAP6 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 PUSH2 0x100 DUP13 MSTORE PUSH2 0x100 DUP13 ADD SWAP1 PUSH2 0x22F JUMP JUMPDEST SWAP1 DUP11 DUP3 SUB PUSH1 0x20 DUP13 ADD MSTORE PUSH2 0x22F JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP10 ADD MSTORE PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0x80 DUP8 ADD MSTORE DUP6 DUP3 SUB PUSH1 0xA0 DUP8 ADD MSTORE PUSH2 0x22F JUMP JUMPDEST SWAP2 PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP4 ADD MSTORE SUB SWAP1 LOG1 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1FB JUMPI PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x3F PUSH1 0x1F NOT SWAP2 ADD AND DUP4 ADD DUP4 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1FB JUMPI PUSH1 0x40 MSTORE DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x19A JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x19A JUMPI DUP2 PUSH1 0x20 PUSH2 0x22C SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x19F JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x25B JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x23A JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0x2D MSTORE8 SLOAD SELFBALANCE DUP11 0xD6 SMOD SWAP11 0xCB 0xC 0x24 NOT 0xDE PUSH15 0x94026202D856AE6FE052924DAC685E PUSH30 0x8E64736F6C634300081B0033000000000000000000000000000000000000 ","sourceMap":"58:825:36:-:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_available_length_string":{"entryPoint":415,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bytes":{"entryPoint":529,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":559,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c63c4110e5c1461002757600080fd5b3461019a5761010036600319011261019a5760043567ffffffffffffffff811161019a573660238201121561019a5761006a90369060248160040135910161019f565b60243567ffffffffffffffff811161019a5761008a903690600401610211565b906044356001600160a01b038116919082900361019a576064359163ffffffff831680930361019a576084356001600160a01b038116949085900361019a5760a43567ffffffffffffffff811161019a576100e9903690600401610211565b9060c435926bffffffffffffffffffffffff841680940361019a5760e4359260ff841680940361019a577fea3d9a7b7ea302e8330a22297188500bda7e831aea0b89bfeb7ab2ee773131029761015697610164610181956040519a8b9a6101008c526101008c019061022f565b908a820360208c015261022f565b9360408901526060880152608087015285820360a087015261022f565b9160c084015260e08301520390a1602060405160018152f35b600080fd5b92919267ffffffffffffffff82116101fb57601f19601f8301169160405192603f601f19910116830183811067ffffffffffffffff8211176101fb5760405282948184528183011161019a578281602093846000960137010152565b634e487b7160e01b600052604160045260246000fd5b9080601f8301121561019a5781602061022c9335910161019f565b90565b919082519283825260005b84811061025b575050826000602080949584010152601f8019910116010190565b8060208092840101518282860101520161023a56fea26469706673582212200e2d5354478ad6079acb0c2419de6e94026202d856ae6fe052924dac685e7d8e64736f6c634300081b0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0xC4110E5C EQ PUSH2 0x27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x19A JUMPI PUSH2 0x100 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19A JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x19A JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x19A JUMPI PUSH2 0x6A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x19F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x19A JUMPI PUSH2 0x8A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x211 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x19A JUMPI PUSH1 0x64 CALLDATALOAD SWAP2 PUSH4 0xFFFFFFFF DUP4 AND DUP1 SWAP4 SUB PUSH2 0x19A JUMPI PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP5 SWAP1 DUP6 SWAP1 SUB PUSH2 0x19A JUMPI PUSH1 0xA4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x19A JUMPI PUSH2 0xE9 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x211 JUMP JUMPDEST SWAP1 PUSH1 0xC4 CALLDATALOAD SWAP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND DUP1 SWAP5 SUB PUSH2 0x19A JUMPI PUSH1 0xE4 CALLDATALOAD SWAP3 PUSH1 0xFF DUP5 AND DUP1 SWAP5 SUB PUSH2 0x19A JUMPI PUSH32 0xEA3D9A7B7EA302E8330A22297188500BDA7E831AEA0B89BFEB7AB2EE77313102 SWAP8 PUSH2 0x156 SWAP8 PUSH2 0x164 PUSH2 0x181 SWAP6 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 PUSH2 0x100 DUP13 MSTORE PUSH2 0x100 DUP13 ADD SWAP1 PUSH2 0x22F JUMP JUMPDEST SWAP1 DUP11 DUP3 SUB PUSH1 0x20 DUP13 ADD MSTORE PUSH2 0x22F JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP10 ADD MSTORE PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0x80 DUP8 ADD MSTORE DUP6 DUP3 SUB PUSH1 0xA0 DUP8 ADD MSTORE PUSH2 0x22F JUMP JUMPDEST SWAP2 PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP4 ADD MSTORE SUB SWAP1 LOG1 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1FB JUMPI PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x3F PUSH1 0x1F NOT SWAP2 ADD AND DUP4 ADD DUP4 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1FB JUMPI PUSH1 0x40 MSTORE DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x19A JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x19A JUMPI DUP2 PUSH1 0x20 PUSH2 0x22C SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x19F JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x25B JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x23A JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0x2D MSTORE8 SLOAD SELFBALANCE DUP11 0xD6 SMOD SWAP11 0xCB 0xC 0x24 NOT 0xDE PUSH15 0x94026202D856AE6FE052924DAC685E PUSH30 0x8E64736F6C634300081B0033000000000000000000000000000000000000 ","sourceMap":"58:825:36:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;58:825:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;58:825:36;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;58:825:36;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;637:216;58:825;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;637:216;;;58:825;;;870:4;58:825;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;58:825:36;;;;;;:::o;:::-;;;;-1:-1:-1;58:825:36;;;;;-1:-1:-1;58:825:36;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;"},"methodIdentifiers":{"register(string,bytes,address,uint32,address,bytes,uint96,uint8)":"c4110e5c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encryptedEmail\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"upkeepContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"gasLimit\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"adminAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"source\",\"type\":\"uint8\"}],\"name\":\"RegistrationRequested\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"encryptedEmail\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"upkeepContract\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"gasLimit\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"adminAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"},{\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"},{\"internalType\":\"uint8\",\"name\":\"source\",\"type\":\"uint8\"}],\"name\":\"register\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/MockAutomationRegistrar.sol\":\"MockAutomationRegistrar\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/mocks/MockAutomationRegistrar.sol\":{\"keccak256\":\"0xa51de48bbb268001c145a0d7eea65b7f641bce0cae0bc52d3808e57ed5f65a41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c973034984bb449715df3bb9ab9010774c89e3083ff64f525bd65911b323b6f\",\"dweb:/ipfs/QmTD9Fh7XSKb8xT2XgK5hBqa5pvR4Jhq9UXUy1mQYKyoM7\"]}},\"version\":1}"}},"contracts/mocks/MockLINK.sol":{"MockLINK":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052346103c757604080519081016001600160401b038111828210176102d257604090815260098252684d6f636b204c494e4b60b81b602083015280519081016001600160401b038111828210176102d25760405260048152634c494e4b60e01b602082015281516001600160401b0381116102d257600354600181811c911680156103bd575b60208210146102b257601f8111610358575b50602092601f82116001146102f357928192936000926102e8575b50508160011b916000199060031b1c1916176003555b80516001600160401b0381116102d257600454600181811c911680156102c8575b60208210146102b257601f811161024d575b50602091601f82116001146101e9579181926000926101de575b50508160011b916000199060031b1c1916176004555b33156101c85760025469d3c21bcecceda100000081018091116101b2576002556000338152806020526040812069d3c21bcecceda100000081540190556040519069d3c21bcecceda100000082527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203393a36040516106f590816103cd8239f35b634e487b7160e01b600052601160045260246000fd5b63ec442f0560e01b600052600060045260246000fd5b015190503880610119565b601f198216926004600052806000209160005b8581106102355750836001951061021c575b505050811b0160045561012f565b015160001960f88460031b161c1916905538808061020e565b919260206001819286850151815501940192016101fc565b60046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f830160051c810191602084106102a8575b601f0160051c01905b81811061029c57506100ff565b6000815560010161028f565b9091508190610286565b634e487b7160e01b600052602260045260246000fd5b90607f16906100ed565b634e487b7160e01b600052604160045260246000fd5b0151905038806100b6565b601f198216936003600052806000209160005b8681106103405750836001959610610327575b505050811b016003556100cc565b015160001960f88460031b161c19169055388080610319565b91926020600181928685015181550194019201610306565b60036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f830160051c810191602084106103b3575b601f0160051c01905b8181106103a7575061009b565b6000815560010161039a565b9091508190610391565b90607f1690610089565b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816306fdde03146104c857508063095ea7b31461044257806318160ddd1461042457806323b872dd14610337578063313ce5671461031b57806340c10f191461026f57806370a082311461023557806395d89b4114610114578063a9059cbb146100e35763dd62ed3e1461008d57600080fd5b346100de5760403660031901126100de576100a66105e4565b6100ae6105fa565b6001600160a01b039182166000908152600160209081526040808320949093168252928352819020549051908152f35b600080fd5b346100de5760403660031901126100de576101096100ff6105e4565b6024359033610610565b602060405160018152f35b346100de5760003660031901126100de5760405160006004548060011c9060018116801561022b575b602083108114610217578285529081156101fb57506001146101a4575b50819003601f01601f191681019067ffffffffffffffff82118183101761018e5761018a8291826040528261059b565b0390f35b634e487b7160e01b600052604160045260246000fd5b905060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b6000905b8282106101e55750602091508201018261015a565b60018160209254838588010152019101906101d0565b90506020925060ff191682840152151560051b8201018261015a565b634e487b7160e01b84526022600452602484fd5b91607f169161013d565b346100de5760203660031901126100de576001600160a01b036102566105e4565b1660005260006020526020604060002054604051908152f35b346100de5760403660031901126100de576102886105e4565b602435906001600160a01b0316801561030557600254918083018093116102ef576020926002557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600093849284845283825260408420818154019055604051908152a380f35b634e487b7160e01b600052601160045260246000fd5b63ec442f0560e01b600052600060045260246000fd5b346100de5760003660031901126100de57602060405160128152f35b346100de5760603660031901126100de576103506105e4565b6103586105fa565b6001600160a01b0382166000818152600160208181526040808420338552909152909120549193604435939290918101610398575b506101099350610610565b8381106104075784156103f15733156103db57610109946000526001602052604060002060018060a01b033316600052602052836040600020910390558461038d565b634a1406b160e11b600052600060045260246000fd5b63e602df0560e01b600052600060045260246000fd5b8390637dc7a0d960e11b6000523360045260245260445260646000fd5b346100de5760003660031901126100de576020600254604051908152f35b346100de5760403660031901126100de5761045b6105e4565b6024359033156103f1576001600160a01b03169081156103db57336000526001602052604060002082600052602052806040600020556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346100de5760003660031901126100de5760006003548060011c90600181168015610591575b602083108114610217578285529081156101fb575060011461053a5750819003601f01601f191681019067ffffffffffffffff82118183101761018e5761018a8291826040528261059b565b905060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b6000905b82821061057b5750602091508201018261015a565b6001816020925483858801015201910190610566565b91607f16916104ee565b91909160208152825180602083015260005b8181106105ce575060409293506000838284010152601f8019910116010190565b80602080928701015160408286010152016105ad565b600435906001600160a01b03821682036100de57565b602435906001600160a01b03821682036100de57565b6001600160a01b03169081156106a9576001600160a01b031691821561030557600082815280602052604081205482811061068f5791604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815280845220818154019055604051908152a3565b916064928463391434e360e21b8452600452602452604452fd5b634b637e8f60e11b600052600060045260246000fdfea2646970667358221220fd3064bb8a58d5b60064c1a0d2edec7b52ea2c00f6e76d788893fa7ef9c55f6064736f6c634300081b0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x3C7 JUMPI PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR PUSH2 0x2D2 JUMPI PUSH1 0x40 SWAP1 DUP2 MSTORE PUSH1 0x9 DUP3 MSTORE PUSH9 0x4D6F636B204C494E4B PUSH1 0xB8 SHL PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR PUSH2 0x2D2 JUMPI PUSH1 0x40 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0x4C494E4B PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2D2 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x3BD JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x2B2 JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x358 JUMPI JUMPDEST POP PUSH1 0x20 SWAP3 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x2F3 JUMPI SWAP3 DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x2E8 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2D2 JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x2C8 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x2B2 JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x24D JUMPI JUMPDEST POP PUSH1 0x20 SWAP2 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1E9 JUMPI SWAP2 DUP2 SWAP3 PUSH1 0x0 SWAP3 PUSH2 0x1DE JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST CALLER ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x2 SLOAD PUSH10 0xD3C21BCECCEDA1000000 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1B2 JUMPI PUSH1 0x2 SSTORE PUSH1 0x0 CALLER DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH10 0xD3C21BCECCEDA1000000 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 PUSH10 0xD3C21BCECCEDA1000000 DUP3 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 CALLER SWAP4 LOG3 PUSH1 0x40 MLOAD PUSH2 0x6F5 SWAP1 DUP2 PUSH2 0x3CD DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x119 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP3 PUSH1 0x4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT PUSH2 0x235 JUMPI POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0x21C JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH2 0x12F JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x20E JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x1FC JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x2A8 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x29C JUMPI POP PUSH2 0xFF JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x28F JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x286 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0xED JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xB6 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP4 PUSH1 0x3 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT PUSH2 0x340 JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x327 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH2 0xCC JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x319 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x306 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x3B3 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x3A7 JUMPI POP PUSH2 0x9B JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x39A JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x391 JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0x89 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x4C8 JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x442 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xE3 JUMPI PUSH4 0xDD62ED3E EQ PUSH2 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0xA6 PUSH2 0x5E4 JUMP JUMPDEST PUSH2 0xAE PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP4 AND DUP3 MSTORE SWAP3 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x109 PUSH2 0xFF PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x610 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x4 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x22B JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x217 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1FB JUMPI POP PUSH1 0x1 EQ PUSH2 0x1A4 JUMPI JUMPDEST POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x18E JUMPI PUSH2 0x18A DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x59B JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1E5 JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x15A JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x1D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP3 PUSH2 0x15A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x13D JUMP JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x256 PUSH2 0x5E4 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x288 PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x305 JUMPI PUSH1 0x2 SLOAD SWAP2 DUP1 DUP4 ADD DUP1 SWAP4 GT PUSH2 0x2EF JUMPI PUSH1 0x20 SWAP3 PUSH1 0x2 SSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 SWAP4 DUP5 SWAP3 DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x350 PUSH2 0x5E4 JUMP JUMPDEST PUSH2 0x358 PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 CALLER DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD SWAP2 SWAP4 PUSH1 0x44 CALLDATALOAD SWAP4 SWAP3 SWAP1 SWAP2 DUP2 ADD PUSH2 0x398 JUMPI JUMPDEST POP PUSH2 0x109 SWAP4 POP PUSH2 0x610 JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0x407 JUMPI DUP5 ISZERO PUSH2 0x3F1 JUMPI CALLER ISZERO PUSH2 0x3DB JUMPI PUSH2 0x109 SWAP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP5 PUSH2 0x38D JUMP JUMPDEST PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xE602DF05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP4 SWAP1 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x45B PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x3F1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x3DB JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x0 PUSH1 0x3 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x591 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x217 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1FB JUMPI POP PUSH1 0x1 EQ PUSH2 0x53A JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x18E JUMPI PUSH2 0x18A DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x59B JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x57B JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x15A JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x566 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x4EE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x5CE JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xDE JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xDE JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x6A9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x68F JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST SWAP2 PUSH1 0x64 SWAP3 DUP5 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH4 0x4B637E8F PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT ADDRESS PUSH5 0xBB8A58D5B6 STOP PUSH5 0xC1A0D2EDEC PUSH28 0x52EA2C00F6E76D788893FA7EF9C55F6064736F6C634300081B003300 ","sourceMap":"115:219:37:-:0;;;;;;;;;;;;-1:-1:-1;;;;;115:219:37;;;;;;;;;;;;;;;-1:-1:-1;;;115:219:37;;;;;;;;;-1:-1:-1;;;;;115:219:37;;;;;;;;;;;;;-1:-1:-1;;;115:219:37;;;;;;-1:-1:-1;;;;;115:219:37;;;;1667:13:15;115:219:37;;;;;;;;;;;-1:-1:-1;115:219:37;;;;;;;;;;;-1:-1:-1;115:219:37;;;;;;;;;;;;;;-1:-1:-1;115:219:37;;;;;;;;;;;;;1667:13:15;115:219:37;;;;;1667:13:15;115:219:37;;;;-1:-1:-1;;;;;115:219:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;115:219:37;;;;;;;;;;;;;1667:13:15;115:219:37;;;;;;;;205:10;7528:21:15;7524:91;;6233:21;115:219:37;217:16;115:219;;;;;;;6233:21:15;115:219:37;-1:-1:-1;205:10:37;115:219;;;;;;;;217:16;115:219;;;;;;;;217:16;115:219;;7083:25:15;115:219:37;205:10;7083:25:15;;115:219:37;;;;;;;;;;;;;-1:-1:-1;115:219:37;;;;;-1:-1:-1;115:219:37;7524:91:15;7572:32;;;-1:-1:-1;7572:32:15;-1:-1:-1;115:219:37;;;-1:-1:-1;7572:32:15;115:219:37;;;;-1:-1:-1;115:219:37;;;;;;;;;;;-1:-1:-1;115:219:37;;-1:-1:-1;115:219:37;;-1:-1:-1;115:219:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1667:13:15;115:219:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;115:219:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;115:219:37;;;;;;;;;-1:-1:-1;115:219:37;;;;;;;;-1:-1:-1;115:219:37;;;;;-1:-1:-1;115:219:37;;;;;;;;;;;;-1:-1:-1;115:219:37;;;;;-1:-1:-1;115:219:37;;;;;-1:-1:-1;115:219:37;;;;;;;;;;1667:13:15;-1:-1:-1;115:219:37;;-1:-1:-1;115:219:37;;-1:-1:-1;115:219:37;;;;;;;;;;;;;;;;;;;;;1667:13:15;115:219:37;;;;;;;;;;1667:13:15;115:219:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1667:13:15;-1:-1:-1;115:219:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;115:219:37;;;;;;;;;-1:-1:-1;115:219:37;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":1508,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_3370":{"entryPoint":1530,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_string":{"entryPoint":1435,"id":null,"parameterSlots":2,"returnSlots":1},"fun_transfer":{"entryPoint":1552,"id":2319,"parameterSlots":3,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b60003560e01c90816306fdde03146104c857508063095ea7b31461044257806318160ddd1461042457806323b872dd14610337578063313ce5671461031b57806340c10f191461026f57806370a082311461023557806395d89b4114610114578063a9059cbb146100e35763dd62ed3e1461008d57600080fd5b346100de5760403660031901126100de576100a66105e4565b6100ae6105fa565b6001600160a01b039182166000908152600160209081526040808320949093168252928352819020549051908152f35b600080fd5b346100de5760403660031901126100de576101096100ff6105e4565b6024359033610610565b602060405160018152f35b346100de5760003660031901126100de5760405160006004548060011c9060018116801561022b575b602083108114610217578285529081156101fb57506001146101a4575b50819003601f01601f191681019067ffffffffffffffff82118183101761018e5761018a8291826040528261059b565b0390f35b634e487b7160e01b600052604160045260246000fd5b905060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b6000905b8282106101e55750602091508201018261015a565b60018160209254838588010152019101906101d0565b90506020925060ff191682840152151560051b8201018261015a565b634e487b7160e01b84526022600452602484fd5b91607f169161013d565b346100de5760203660031901126100de576001600160a01b036102566105e4565b1660005260006020526020604060002054604051908152f35b346100de5760403660031901126100de576102886105e4565b602435906001600160a01b0316801561030557600254918083018093116102ef576020926002557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600093849284845283825260408420818154019055604051908152a380f35b634e487b7160e01b600052601160045260246000fd5b63ec442f0560e01b600052600060045260246000fd5b346100de5760003660031901126100de57602060405160128152f35b346100de5760603660031901126100de576103506105e4565b6103586105fa565b6001600160a01b0382166000818152600160208181526040808420338552909152909120549193604435939290918101610398575b506101099350610610565b8381106104075784156103f15733156103db57610109946000526001602052604060002060018060a01b033316600052602052836040600020910390558461038d565b634a1406b160e11b600052600060045260246000fd5b63e602df0560e01b600052600060045260246000fd5b8390637dc7a0d960e11b6000523360045260245260445260646000fd5b346100de5760003660031901126100de576020600254604051908152f35b346100de5760403660031901126100de5761045b6105e4565b6024359033156103f1576001600160a01b03169081156103db57336000526001602052604060002082600052602052806040600020556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346100de5760003660031901126100de5760006003548060011c90600181168015610591575b602083108114610217578285529081156101fb575060011461053a5750819003601f01601f191681019067ffffffffffffffff82118183101761018e5761018a8291826040528261059b565b905060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b6000905b82821061057b5750602091508201018261015a565b6001816020925483858801015201910190610566565b91607f16916104ee565b91909160208152825180602083015260005b8181106105ce575060409293506000838284010152601f8019910116010190565b80602080928701015160408286010152016105ad565b600435906001600160a01b03821682036100de57565b602435906001600160a01b03821682036100de57565b6001600160a01b03169081156106a9576001600160a01b031691821561030557600082815280602052604081205482811061068f5791604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815280845220818154019055604051908152a3565b916064928463391434e360e21b8452600452602452604452fd5b634b637e8f60e11b600052600060045260246000fdfea2646970667358221220fd3064bb8a58d5b60064c1a0d2edec7b52ea2c00f6e76d788893fa7ef9c55f6064736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x4C8 JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x442 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xE3 JUMPI PUSH4 0xDD62ED3E EQ PUSH2 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0xA6 PUSH2 0x5E4 JUMP JUMPDEST PUSH2 0xAE PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP4 AND DUP3 MSTORE SWAP3 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x109 PUSH2 0xFF PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x610 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x4 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x22B JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x217 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1FB JUMPI POP PUSH1 0x1 EQ PUSH2 0x1A4 JUMPI JUMPDEST POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x18E JUMPI PUSH2 0x18A DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x59B JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1E5 JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x15A JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x1D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP3 PUSH2 0x15A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x13D JUMP JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x256 PUSH2 0x5E4 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x288 PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x305 JUMPI PUSH1 0x2 SLOAD SWAP2 DUP1 DUP4 ADD DUP1 SWAP4 GT PUSH2 0x2EF JUMPI PUSH1 0x20 SWAP3 PUSH1 0x2 SSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 SWAP4 DUP5 SWAP3 DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x350 PUSH2 0x5E4 JUMP JUMPDEST PUSH2 0x358 PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 CALLER DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD SWAP2 SWAP4 PUSH1 0x44 CALLDATALOAD SWAP4 SWAP3 SWAP1 SWAP2 DUP2 ADD PUSH2 0x398 JUMPI JUMPDEST POP PUSH2 0x109 SWAP4 POP PUSH2 0x610 JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0x407 JUMPI DUP5 ISZERO PUSH2 0x3F1 JUMPI CALLER ISZERO PUSH2 0x3DB JUMPI PUSH2 0x109 SWAP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP5 PUSH2 0x38D JUMP JUMPDEST PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xE602DF05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP4 SWAP1 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x45B PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x3F1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x3DB JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x0 PUSH1 0x3 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x591 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x217 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1FB JUMPI POP PUSH1 0x1 EQ PUSH2 0x53A JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x18E JUMPI PUSH2 0x18A DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x59B JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x57B JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x15A JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x566 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x4EE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x5CE JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xDE JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xDE JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x6A9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x68F JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST SWAP2 PUSH1 0x64 SWAP3 DUP5 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH4 0x4B637E8F PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT ADDRESS PUSH5 0xBB8A58D5B6 STOP PUSH5 0xC1A0D2EDEC PUSH28 0x52EA2C00F6E76D788893FA7EF9C55F6064736F6C634300081B003300 ","sourceMap":"115:219:37:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;115:219:37;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;115:219:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;115:219:37;;;;3459:5:15;115:219:37;;:::i;:::-;;;735:10:20;;3459:5:15;:::i;:::-;115:219:37;;;;;;;;;;;;;-1:-1:-1;;115:219:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;115:219:37;;;;;-1:-1:-1;;115:219:37;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;115:219:37;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;115:219:37;;;;-1:-1:-1;;;;;115:219:37;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;115:219:37;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;115:219:37;7528:21:15;;7524:91;;6233:21;115:219:37;;;;;;;;;;;;6233:21:15;115:219:37;7083:25:15;115:219:37;;;;;;;;;;;;;;;;;;;;;;;;7083:25:15;115:219:37;;;;;;;;;;;;;;7524:91:15;7572:32;;;115:219:37;7572:32:15;115:219:37;;;;;7572:32:15;115:219:37;;;;;;-1:-1:-1;;115:219:37;;;;;;;2780:2:15;115:219:37;;;;;;;;;-1:-1:-1;;115:219:37;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;115:219:37;;;;;;;;;;;;;;;735:10:20;115:219:37;;;;;;;;;;;;;;;;;10580:37:15;;10576:310;;115:219:37;4986:5:15;;;;;:::i;10576:310::-;10637:24;;;10633:130;;9813:19;;9809:89;;735:10:20;9911:21:15;9907:90;;4986:5;115:219:37;;;;;;;;;;;;;;735:10:20;115:219:37;-1:-1:-1;115:219:37;;;;;-1:-1:-1;115:219:37;;;;;10576:310:15;;;9907:90;9955:31;;;115:219:37;9955:31:15;115:219:37;;;;;9955:31:15;9809:89;9855:32;;;115:219:37;9855:32:15;115:219:37;;;;;9855:32:15;10633:130;10688:60;;;;;115:219:37;10688:60:15;735:10:20;115:219:37;;;;;;;;10688:60:15;115:219:37;;;;;;-1:-1:-1;;115:219:37;;;;;2927:12:15;115:219:37;;;;;;;;;;;;;-1:-1:-1;;115:219:37;;;;;;:::i;:::-;;;735:10:20;;9813:19:15;9809:89;;-1:-1:-1;;;;;115:219:37;;9911:21:15;;9907:90;;735:10:20;115:219:37;;;;;;;;;-1:-1:-1;115:219:37;;;;;-1:-1:-1;115:219:37;;;;;;;10085:31:15;115:219:37;735:10:20;10085:31:15;;115:219:37;;;;;;;;;;;;;-1:-1:-1;;115:219:37;;;;;1856:5:15;115:219:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;115:219:37;;;;;-1:-1:-1;;115:219:37;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1856:5:15;115:219:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;115:219:37;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;115:219:37;;;;;;:::o;5393:300:15:-;-1:-1:-1;;;;;115:219:37;;5476:18:15;;5472:86;;-1:-1:-1;;;;;115:219:37;;5571:16:15;;5567:86;;5492:1;115:219:37;;;;;;;;;;6340:19:15;;;6336:115;;115:219:37;;;;7083:25:15;115:219:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7083:25:15;5393:300::o;6336:115::-;6386:50;115:219:37;6386:50:15;;;;;;;;115:219:37;;;;;6386:50:15;5472:86;5517:30;;;5492:1;5517:30;5492:1;5517:30;115:219:37;;5492:1:15;5517:30"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","mint(address,uint256)":"40c10f19","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/MockLINK.sol\":\"MockLINK\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/mocks/MockLINK.sol\":{\"keccak256\":\"0xedc830d17e9d3582cb7122b5d14760d98d636e5cc76c58ee0082357706a5a637\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://029e4378dc25979477b9965d21769113df986f179f573f5c76e7d40dbc8d2d9b\",\"dweb:/ipfs/QmRVtakSXirmwLis14rWdV6ACUrDXonr9kERjafk2DS7k3\"]}},\"version\":1}"}},"contracts/test/MockUSDC.sol":{"MockUSDC":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052346103b857604080519081016001600160401b038111828210176102c357604090815260098252684d6f636b205553444360b81b602083015280519081016001600160401b038111828210176102c35760405260048152635553444360e01b602082015281516001600160401b0381116102c357600354600181811c911680156103ae575b60208210146102a357601f8111610349575b50602092601f82116001146102e457928192936000926102d9575b50508160011b916000199060031b1c1916176003555b80516001600160401b0381116102c357600454600181811c911680156102b9575b60208210146102a357601f811161023e575b50602091601f82116001146101da579181926000926101cf575b50508160011b916000199060031b1c1916176004555b33156101b95760025464e8d4a5100081018091116101a3576002556000338152806020526040812064e8d4a5100081540190556040519064e8d4a5100082527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203393a360405161065490816103be8239f35b634e487b7160e01b600052601160045260246000fd5b63ec442f0560e01b600052600060045260246000fd5b015190503880610119565b601f198216926004600052806000209160005b8581106102265750836001951061020d575b505050811b0160045561012f565b015160001960f88460031b161c191690553880806101ff565b919260206001819286850151815501940192016101ed565b60046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f830160051c81019160208410610299575b601f0160051c01905b81811061028d57506100ff565b60008155600101610280565b9091508190610277565b634e487b7160e01b600052602260045260246000fd5b90607f16906100ed565b634e487b7160e01b600052604160045260246000fd5b0151905038806100b6565b601f198216936003600052806000209160005b8681106103315750836001959610610318575b505050811b016003556100cc565b015160001960f88460031b161c1916905538808061030a565b919260206001819286850151815501940192016102f7565b60036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f830160051c810191602084106103a4575b601f0160051c01905b818110610398575061009b565b6000815560010161038b565b9091508190610382565b90607f1690610089565b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816306fdde031461041157508063095ea7b31461038b57806318160ddd1461036d57806323b872dd14610280578063313ce5671461026457806370a082311461022a57806395d89b4114610109578063a9059cbb146100d85763dd62ed3e1461008257600080fd5b346100d35760403660031901126100d35761009b61052d565b6100a3610543565b6001600160a01b039182166000908152600160209081526040808320949093168252928352819020549051908152f35b600080fd5b346100d35760403660031901126100d3576100fe6100f461052d565b6024359033610559565b602060405160018152f35b346100d35760003660031901126100d35760405160006004548060011c90600181168015610220575b60208310811461020c578285529081156101f05750600114610199575b50819003601f01601f191681019067ffffffffffffffff8211818310176101835761017f829182604052826104e4565b0390f35b634e487b7160e01b600052604160045260246000fd5b905060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b6000905b8282106101da5750602091508201018261014f565b60018160209254838588010152019101906101c5565b90506020925060ff191682840152151560051b8201018261014f565b634e487b7160e01b84526022600452602484fd5b91607f1691610132565b346100d35760203660031901126100d3576001600160a01b0361024b61052d565b1660005260006020526020604060002054604051908152f35b346100d35760003660031901126100d357602060405160068152f35b346100d35760603660031901126100d35761029961052d565b6102a1610543565b6001600160a01b03821660008181526001602081815260408084203385529091529091205491936044359392909181016102e1575b506100fe9350610559565b83811061035057841561033a573315610324576100fe946000526001602052604060002060018060a01b03331660005260205283604060002091039055846102d6565b634a1406b160e11b600052600060045260246000fd5b63e602df0560e01b600052600060045260246000fd5b8390637dc7a0d960e11b6000523360045260245260445260646000fd5b346100d35760003660031901126100d3576020600254604051908152f35b346100d35760403660031901126100d3576103a461052d565b60243590331561033a576001600160a01b031690811561032457336000526001602052604060002082600052602052806040600020556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346100d35760003660031901126100d35760006003548060011c906001811680156104da575b60208310811461020c578285529081156101f057506001146104835750819003601f01601f191681019067ffffffffffffffff8211818310176101835761017f829182604052826104e4565b905060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b6000905b8282106104c45750602091508201018261014f565b60018160209254838588010152019101906104af565b91607f1691610437565b91909160208152825180602083015260005b818110610517575060409293506000838284010152601f8019910116010190565b80602080928701015160408286010152016104f6565b600435906001600160a01b03821682036100d357565b602435906001600160a01b03821682036100d357565b6001600160a01b0316908115610608576001600160a01b03169182156105f25760008281528060205260408120548281106105d85791604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815280845220818154019055604051908152a3565b916064928463391434e360e21b8452600452602452604452fd5b63ec442f0560e01b600052600060045260246000fd5b634b637e8f60e11b600052600060045260246000fdfea2646970667358221220bd941579851eb4d4171186ed31594583151012aac1ed98f50083dbfb2f155d7764736f6c634300081b0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x3B8 JUMPI PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR PUSH2 0x2C3 JUMPI PUSH1 0x40 SWAP1 DUP2 MSTORE PUSH1 0x9 DUP3 MSTORE PUSH9 0x4D6F636B2055534443 PUSH1 0xB8 SHL PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR PUSH2 0x2C3 JUMPI PUSH1 0x40 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0x55534443 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2C3 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x3AE JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x2A3 JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x349 JUMPI JUMPDEST POP PUSH1 0x20 SWAP3 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x2E4 JUMPI SWAP3 DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x2D9 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2C3 JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x2B9 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x2A3 JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x23E JUMPI JUMPDEST POP PUSH1 0x20 SWAP2 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1DA JUMPI SWAP2 DUP2 SWAP3 PUSH1 0x0 SWAP3 PUSH2 0x1CF JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST CALLER ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x2 SLOAD PUSH5 0xE8D4A51000 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1A3 JUMPI PUSH1 0x2 SSTORE PUSH1 0x0 CALLER DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH5 0xE8D4A51000 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 PUSH5 0xE8D4A51000 DUP3 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 CALLER SWAP4 LOG3 PUSH1 0x40 MLOAD PUSH2 0x654 SWAP1 DUP2 PUSH2 0x3BE DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x119 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP3 PUSH1 0x4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT PUSH2 0x226 JUMPI POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0x20D JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH2 0x12F JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1FF JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x1ED JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x299 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x28D JUMPI POP PUSH2 0xFF JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x280 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x277 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0xED JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xB6 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP4 PUSH1 0x3 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT PUSH2 0x331 JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x318 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH2 0xCC JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x30A JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x3A4 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x398 JUMPI POP PUSH2 0x9B JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x38B JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x382 JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0x89 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x411 JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xD8 JUMPI PUSH4 0xDD62ED3E EQ PUSH2 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH2 0x9B PUSH2 0x52D JUMP JUMPDEST PUSH2 0xA3 PUSH2 0x543 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP4 AND DUP3 MSTORE SWAP3 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH2 0xFE PUSH2 0xF4 PUSH2 0x52D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x559 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x4 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x220 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x20C JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1F0 JUMPI POP PUSH1 0x1 EQ PUSH2 0x199 JUMPI JUMPDEST POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x183 JUMPI PUSH2 0x17F DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x4E4 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1DA JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x14F JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x1C5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP3 PUSH2 0x14F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x132 JUMP JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x24B PUSH2 0x52D JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x6 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH2 0x299 PUSH2 0x52D JUMP JUMPDEST PUSH2 0x2A1 PUSH2 0x543 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 CALLER DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD SWAP2 SWAP4 PUSH1 0x44 CALLDATALOAD SWAP4 SWAP3 SWAP1 SWAP2 DUP2 ADD PUSH2 0x2E1 JUMPI JUMPDEST POP PUSH2 0xFE SWAP4 POP PUSH2 0x559 JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0x350 JUMPI DUP5 ISZERO PUSH2 0x33A JUMPI CALLER ISZERO PUSH2 0x324 JUMPI PUSH2 0xFE SWAP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP5 PUSH2 0x2D6 JUMP JUMPDEST PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xE602DF05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP4 SWAP1 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH2 0x3A4 PUSH2 0x52D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x33A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x324 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x0 PUSH1 0x3 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x4DA JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x20C JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1F0 JUMPI POP PUSH1 0x1 EQ PUSH2 0x483 JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x183 JUMPI PUSH2 0x17F DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x4E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x4C4 JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x14F JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x4AF JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x437 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x517 JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xD3 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xD3 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x608 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x5F2 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x5D8 JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST SWAP2 PUSH1 0x64 SWAP3 DUP5 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4B637E8F PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD SWAP5 ISZERO PUSH26 0x851EB4D4171186ED31594583151012AAC1ED98F50083DBFB2F15 TSTORE PUSH24 0x64736F6C634300081B003300000000000000000000000000 ","sourceMap":"115:273:38:-:0;;;;;;;;;;;;-1:-1:-1;;;;;115:273:38;;;;;;;;;;;;;;;-1:-1:-1;;;115:273:38;;;;;;;;;-1:-1:-1;;;;;115:273:38;;;;;;;;;;;;;-1:-1:-1;;;115:273:38;;;;;;-1:-1:-1;;;;;115:273:38;;;;1667:13:15;115:273:38;;;;;;;;;;;-1:-1:-1;115:273:38;;;;;;;;;;;-1:-1:-1;115:273:38;;;;;;;;;;;;;;-1:-1:-1;115:273:38;;;;;;;;;;;;;1667:13:15;115:273:38;;;;;1667:13:15;115:273:38;;;;-1:-1:-1;;;;;115:273:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;115:273:38;;;;;;;;;;;;;1667:13:15;115:273:38;;;;;;;;205:10;7528:21:15;7524:91;;6233:21;115:273:38;217:15;115:273;;;;;;;6233:21:15;115:273:38;-1:-1:-1;205:10:38;115:273;;;;;;;;217:15;115:273;;;;;;;;217:15;115:273;;7083:25:15;115:273:38;205:10;7083:25:15;;115:273:38;;;;;;;;;;;;;-1:-1:-1;115:273:38;;;;;-1:-1:-1;115:273:38;7524:91:15;7572:32;;;-1:-1:-1;7572:32:15;-1:-1:-1;115:273:38;;;-1:-1:-1;7572:32:15;115:273:38;;;;-1:-1:-1;115:273:38;;;;;;;;;;;-1:-1:-1;115:273:38;;-1:-1:-1;115:273:38;;-1:-1:-1;115:273:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1667:13:15;115:273:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;115:273:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;115:273:38;;;;;;;;;-1:-1:-1;115:273:38;;;;;;;;-1:-1:-1;115:273:38;;;;;-1:-1:-1;115:273:38;;;;;;;;;;;;-1:-1:-1;115:273:38;;;;;-1:-1:-1;115:273:38;;;;;-1:-1:-1;115:273:38;;;;;;;;;;1667:13:15;-1:-1:-1;115:273:38;;-1:-1:-1;115:273:38;;-1:-1:-1;115:273:38;;;;;;;;;;;;;;;;;;;;;1667:13:15;115:273:38;;;;;;;;;;1667:13:15;115:273:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1667:13:15;-1:-1:-1;115:273:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;115:273:38;;;;;;;;;-1:-1:-1;115:273:38;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":1325,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_3386":{"entryPoint":1347,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_string":{"entryPoint":1252,"id":null,"parameterSlots":2,"returnSlots":1},"fun_transfer":{"entryPoint":1369,"id":2319,"parameterSlots":3,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b60003560e01c90816306fdde031461041157508063095ea7b31461038b57806318160ddd1461036d57806323b872dd14610280578063313ce5671461026457806370a082311461022a57806395d89b4114610109578063a9059cbb146100d85763dd62ed3e1461008257600080fd5b346100d35760403660031901126100d35761009b61052d565b6100a3610543565b6001600160a01b039182166000908152600160209081526040808320949093168252928352819020549051908152f35b600080fd5b346100d35760403660031901126100d3576100fe6100f461052d565b6024359033610559565b602060405160018152f35b346100d35760003660031901126100d35760405160006004548060011c90600181168015610220575b60208310811461020c578285529081156101f05750600114610199575b50819003601f01601f191681019067ffffffffffffffff8211818310176101835761017f829182604052826104e4565b0390f35b634e487b7160e01b600052604160045260246000fd5b905060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b6000905b8282106101da5750602091508201018261014f565b60018160209254838588010152019101906101c5565b90506020925060ff191682840152151560051b8201018261014f565b634e487b7160e01b84526022600452602484fd5b91607f1691610132565b346100d35760203660031901126100d3576001600160a01b0361024b61052d565b1660005260006020526020604060002054604051908152f35b346100d35760003660031901126100d357602060405160068152f35b346100d35760603660031901126100d35761029961052d565b6102a1610543565b6001600160a01b03821660008181526001602081815260408084203385529091529091205491936044359392909181016102e1575b506100fe9350610559565b83811061035057841561033a573315610324576100fe946000526001602052604060002060018060a01b03331660005260205283604060002091039055846102d6565b634a1406b160e11b600052600060045260246000fd5b63e602df0560e01b600052600060045260246000fd5b8390637dc7a0d960e11b6000523360045260245260445260646000fd5b346100d35760003660031901126100d3576020600254604051908152f35b346100d35760403660031901126100d3576103a461052d565b60243590331561033a576001600160a01b031690811561032457336000526001602052604060002082600052602052806040600020556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346100d35760003660031901126100d35760006003548060011c906001811680156104da575b60208310811461020c578285529081156101f057506001146104835750819003601f01601f191681019067ffffffffffffffff8211818310176101835761017f829182604052826104e4565b905060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b6000905b8282106104c45750602091508201018261014f565b60018160209254838588010152019101906104af565b91607f1691610437565b91909160208152825180602083015260005b818110610517575060409293506000838284010152601f8019910116010190565b80602080928701015160408286010152016104f6565b600435906001600160a01b03821682036100d357565b602435906001600160a01b03821682036100d357565b6001600160a01b0316908115610608576001600160a01b03169182156105f25760008281528060205260408120548281106105d85791604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815280845220818154019055604051908152a3565b916064928463391434e360e21b8452600452602452604452fd5b63ec442f0560e01b600052600060045260246000fd5b634b637e8f60e11b600052600060045260246000fdfea2646970667358221220bd941579851eb4d4171186ed31594583151012aac1ed98f50083dbfb2f155d7764736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x411 JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xD8 JUMPI PUSH4 0xDD62ED3E EQ PUSH2 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH2 0x9B PUSH2 0x52D JUMP JUMPDEST PUSH2 0xA3 PUSH2 0x543 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP4 AND DUP3 MSTORE SWAP3 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH2 0xFE PUSH2 0xF4 PUSH2 0x52D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x559 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x4 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x220 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x20C JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1F0 JUMPI POP PUSH1 0x1 EQ PUSH2 0x199 JUMPI JUMPDEST POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x183 JUMPI PUSH2 0x17F DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x4E4 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1DA JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x14F JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x1C5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP3 PUSH2 0x14F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x132 JUMP JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x24B PUSH2 0x52D JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x6 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH2 0x299 PUSH2 0x52D JUMP JUMPDEST PUSH2 0x2A1 PUSH2 0x543 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 CALLER DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD SWAP2 SWAP4 PUSH1 0x44 CALLDATALOAD SWAP4 SWAP3 SWAP1 SWAP2 DUP2 ADD PUSH2 0x2E1 JUMPI JUMPDEST POP PUSH2 0xFE SWAP4 POP PUSH2 0x559 JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0x350 JUMPI DUP5 ISZERO PUSH2 0x33A JUMPI CALLER ISZERO PUSH2 0x324 JUMPI PUSH2 0xFE SWAP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP5 PUSH2 0x2D6 JUMP JUMPDEST PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xE602DF05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP4 SWAP1 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH2 0x3A4 PUSH2 0x52D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x33A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x324 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x0 PUSH1 0x3 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x4DA JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x20C JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1F0 JUMPI POP PUSH1 0x1 EQ PUSH2 0x483 JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x183 JUMPI PUSH2 0x17F DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x4E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x4C4 JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x14F JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x4AF JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x437 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x517 JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xD3 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xD3 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x608 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x5F2 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x5D8 JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST SWAP2 PUSH1 0x64 SWAP3 DUP5 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4B637E8F PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD SWAP5 ISZERO PUSH26 0x851EB4D4171186ED31594583151012AAC1ED98F50083DBFB2F15 TSTORE PUSH24 0x64736F6C634300081B003300000000000000000000000000 ","sourceMap":"115:273:38:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;115:273:38;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;115:273:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;115:273:38;;;;3459:5:15;115:273:38;;:::i;:::-;;;735:10:20;;3459:5:15;:::i;:::-;115:273:38;;;;;;;;;;;;;-1:-1:-1;;115:273:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;115:273:38;;;;;-1:-1:-1;;115:273:38;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;115:273:38;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;115:273:38;;;;-1:-1:-1;;;;;115:273:38;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;115:273:38;;;;;;;354:1;115:273;;;;;;;;;-1:-1:-1;;115:273:38;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;115:273:38;;;;;;;;;;;;;;;735:10:20;115:273:38;;;;;;;;;;;;;;;;;10580:37:15;;10576:310;;115:273:38;4986:5:15;;;;;:::i;10576:310::-;10637:24;;;10633:130;;9813:19;;9809:89;;735:10:20;9911:21:15;9907:90;;4986:5;115:273:38;;;;;;;;;;;;;;735:10:20;115:273:38;-1:-1:-1;115:273:38;;;;;-1:-1:-1;115:273:38;;;;;10576:310:15;;;9907:90;9955:31;;;115:273:38;9955:31:15;115:273:38;;;;;9955:31:15;9809:89;9855:32;;;115:273:38;9855:32:15;115:273:38;;;;;9855:32:15;10633:130;10688:60;;;;;115:273:38;10688:60:15;735:10:20;115:273:38;;;;;;;;10688:60:15;115:273:38;;;;;;-1:-1:-1;;115:273:38;;;;;2927:12:15;115:273:38;;;;;;;;;;;;;-1:-1:-1;;115:273:38;;;;;;:::i;:::-;;;735:10:20;;9813:19:15;9809:89;;-1:-1:-1;;;;;115:273:38;;9911:21:15;;9907:90;;735:10:20;115:273:38;;;;;;;;;-1:-1:-1;115:273:38;;;;;-1:-1:-1;115:273:38;;;;;;;10085:31:15;115:273:38;735:10:20;10085:31:15;;115:273:38;;;;;;;;;;;;;-1:-1:-1;;115:273:38;;;;;1856:5:15;115:273:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;115:273:38;;;;;-1:-1:-1;;115:273:38;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1856:5:15;115:273:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;115:273:38;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;115:273:38;;;;;;:::o;5393:300:15:-;-1:-1:-1;;;;;115:273:38;;5476:18:15;;5472:86;;-1:-1:-1;;;;;115:273:38;;5571:16:15;;5567:86;;5492:1;115:273:38;;;;;;;;;;6340:19:15;;;6336:115;;115:273:38;;;;7083:25:15;115:273:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7083:25:15;5393:300::o;6336:115::-;6386:50;115:273:38;6386:50:15;;;;;;;;115:273:38;;;;;6386:50:15;5567:86;5610:32;;;5492:1;5610:32;5492:1;5610:32;115:273:38;;5492:1:15;5610:32;5472:86;5517:30;;;5492:1;5517:30;5492:1;5517:30;115:273:38;;5492:1:15;5517:30"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/MockUSDC.sol\":\"MockUSDC\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/test/MockUSDC.sol\":{\"keccak256\":\"0x48e0d06a4f3283ecf58b6cafbc10181115df3775c8ab45414e97079efd09b805\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cdf7fb0853c752a0c697a69e0096c0673f320d1bb0107b9ca147de585288fdcd\",\"dweb:/ipfs/QmemrZjq3xtuhjcNJgKQ7w242gtyooHRqgwFVR2s3Lpa4W\"]}},\"version\":1}"}}}}}