{"id":"16b0a745de6f3c865ed5b537e7d71682","_format":"hh-sol-build-info-1","solcVersion":"0.8.27","solcLongVersion":"0.8.27+commit.40a35a09","input":{"language":"Solidity","sources":{"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract AutomationBase {\n  error OnlySimulatedBackend();\n\n  /**\n   * @notice method that allows it to be simulated via eth_call by checking that\n   * the sender is the zero address.\n   */\n  function _preventExecution() internal view {\n    // solhint-disable-next-line avoid-tx-origin\n    if (tx.origin != address(0) && tx.origin != address(0x1111111111111111111111111111111111111111)) {\n      revert OnlySimulatedBackend();\n    }\n  }\n\n  /**\n   * @notice modifier that allows it to be simulated via eth_call by checking\n   * that the sender is the zero address.\n   */\n  modifier cannotExecute() {\n    _preventExecution();\n    _;\n  }\n}\n"},"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {AutomationBase} from \"./AutomationBase.sol\";\nimport {AutomationCompatibleInterface} from \"./interfaces/AutomationCompatibleInterface.sol\";\n\nabstract contract AutomationCompatible is AutomationBase, AutomationCompatibleInterface {}\n"},"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface AutomationCompatibleInterface {\n  /**\n   * @notice method that is simulated by the keepers to see if any work actually\n   * needs to be performed. This method does does not actually need to be\n   * executable, and since it is only ever simulated it can consume lots of gas.\n   * @dev To ensure that it is never called, you may want to add the\n   * cannotExecute modifier from KeeperBase to your implementation of this\n   * method.\n   * @param checkData specified in the upkeep registration so it is always the\n   * same for a registered upkeep. This can easily be broken down into specific\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\n   * same contract and easily differentiated by the contract.\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\n   * performUpkeep or not.\n   * @return performData bytes that the keeper should call performUpkeep with, if\n   * upkeep is needed. If you would like to encode data to decode later, try\n   * `abi.encode`.\n   */\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\n\n  /**\n   * @notice method that is actually executed by the keepers, via the registry.\n   * The data returned by the checkUpkeep simulation will be passed into\n   * this method to actually be executed.\n   * @dev The input to this method should not be trusted, and the caller of the\n   * method should not even be restricted to any single registry. Anyone should\n   * be able call it, and the input should be validated, there is no guarantee\n   * that the data passed in is the performData returned from checkUpkeep. This\n   * could happen due to malicious keepers, racing keepers, or simply a state\n   * change while the performUpkeep transaction is waiting for confirmation.\n   * Always validate the data passed in.\n   * @param performData is the data which was passed back from the checkData\n   * simulation. If it is encoded, it can easily be decoded into other types by\n   * calling `abi.decode`. This data should not be trusted, and should be\n   * validated against the contract's current state.\n   */\n  function performUpkeep(bytes calldata performData) external;\n}\n"},"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"@openzeppelin/contracts/access/IAccessControl.sol\";\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {ERC165Upgradeable} from \"../utils/introspection/ERC165Upgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControl, ERC165Upgradeable {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.AccessControl\n    struct AccessControlStorage {\n        mapping(bytes32 role => RoleData) _roles;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.AccessControl\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant AccessControlStorageLocation = 0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800;\n\n    function _getAccessControlStorage() private pure returns (AccessControlStorage storage $) {\n        assembly {\n            $.slot := AccessControlStorageLocation\n        }\n    }\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        $._roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (!hasRole(role, account)) {\n            $._roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (hasRole(role, account)) {\n            $._roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.22;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC-1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\";\nimport {IERC1155MetadataURI} from \"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\";\nimport {ERC1155Utils} from \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {ERC165Upgradeable} from \"../../utils/introspection/ERC165Upgradeable.sol\";\nimport {Arrays} from \"@openzeppelin/contracts/utils/Arrays.sol\";\nimport {IERC1155Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155Upgradeable is Initializable, ContextUpgradeable, ERC165Upgradeable, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC1155\n    struct ERC1155Storage {\n        mapping(uint256 id => mapping(address account => uint256)) _balances;\n\n        mapping(address account => mapping(address operator => bool)) _operatorApprovals;\n\n        // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n        string _uri;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC1155\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC1155StorageLocation = 0x88be536d5240c274a3b1d3a1be54482fd9caa294f08c62a7cde569f49a3c4500;\n\n    function _getERC1155Storage() private pure returns (ERC1155Storage storage $) {\n        assembly {\n            $.slot := ERC1155StorageLocation\n        }\n    }\n\n    /**\n     * @dev See {_setURI}.\n     */\n    function __ERC1155_init(string memory uri_) internal onlyInitializing {\n        __ERC1155_init_unchained(uri_);\n    }\n\n    function __ERC1155_init_unchained(string memory uri_) internal onlyInitializing {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        ERC1155Storage storage $ = _getERC1155Storage();\n        return $._uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        ERC1155Storage storage $ = _getERC1155Storage();\n        return $._balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        ERC1155Storage storage $ = _getERC1155Storage();\n        return $._operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        ERC1155Storage storage $ = _getERC1155Storage();\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = $._balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    $._balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                $._balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                ERC1155Utils.checkOnERC1155Received(operator, from, to, id, value, data);\n            } else {\n                ERC1155Utils.checkOnERC1155BatchReceived(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        ERC1155Storage storage $ = _getERC1155Storage();\n        $._uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        ERC1155Storage storage $ = _getERC1155Storage();\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        $._operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        assembly (\"memory-safe\") {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165 {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Pausable\n    struct PausableStorage {\n        bool _paused;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Pausable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant PausableStorageLocation = 0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300;\n\n    function _getPausableStorage() private pure returns (PausableStorage storage $) {\n        assembly {\n            $.slot := PausableStorageLocation\n        }\n    }\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    function __Pausable_init() internal onlyInitializing {\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        PausableStorage storage $ = _getPausableStorage();\n        return $._paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard\n    struct ReentrancyGuardStorage {\n        uint256 _status;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ReentrancyGuard\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ReentrancyGuardStorageLocation = 0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00;\n\n    function _getReentrancyGuardStorage() private pure returns (ReentrancyGuardStorage storage $) {\n        assembly {\n            $.slot := ReentrancyGuardStorageLocation\n        }\n    }\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        $._status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if ($._status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        $._status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        $._status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        return $._status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"},"@openzeppelin/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/Clones.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/Clones.sol)\n\npragma solidity ^0.8.20;\n\nimport {Create2} from \"../utils/Create2.sol\";\nimport {Errors} from \"../utils/Errors.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for\n * deploying minimal proxy contracts, also known as \"clones\".\n *\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n *\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n * deterministic method.\n */\nlibrary Clones {\n    error CloneArgumentsTooLong();\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\n     *\n     * This function uses the create opcode, which should never revert.\n     */\n    function clone(address implementation) internal returns (address instance) {\n        return clone(implementation, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-clone-address-}[clone], but with a `value` parameter to send native currency\n     * to the new contract.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function clone(address implementation, uint256 value) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        assembly (\"memory-safe\") {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create(value, 0x09, 0x37)\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\n     * the clone. Using the same `implementation` and `salt` multiple times will revert, since\n     * the clones cannot be deployed twice at the same address.\n     */\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\n        return cloneDeterministic(implementation, salt, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-cloneDeterministic-address-bytes32-}[cloneDeterministic], but with\n     * a `value` parameter to send native currency to the new contract.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function cloneDeterministic(\n        address implementation,\n        bytes32 salt,\n        uint256 value\n    ) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        assembly (\"memory-safe\") {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create2(value, 0x09, 0x37, salt)\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(add(ptr, 0x38), deployer)\n            mstore(add(ptr, 0x24), 0x5af43d82803e903d91602b57fd5bf3ff)\n            mstore(add(ptr, 0x14), implementation)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73)\n            mstore(add(ptr, 0x58), salt)\n            mstore(add(ptr, 0x78), keccak256(add(ptr, 0x0c), 0x37))\n            predicted := and(keccak256(add(ptr, 0x43), 0x55), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt\n    ) internal view returns (address predicted) {\n        return predictDeterministicAddress(implementation, salt, address(this));\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n     * immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n     * access the arguments within the implementation, use {fetchCloneArgs}.\n     *\n     * This function uses the create opcode, which should never revert.\n     */\n    function cloneWithImmutableArgs(address implementation, bytes memory args) internal returns (address instance) {\n        return cloneWithImmutableArgs(implementation, args, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-cloneWithImmutableArgs-address-bytes-}[cloneWithImmutableArgs], but with a `value`\n     * parameter to send native currency to the new contract.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function cloneWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        uint256 value\n    ) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\n        assembly (\"memory-safe\") {\n            instance := create(value, add(bytecode, 0x20), mload(bytecode))\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n     * immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n     * access the arguments within the implementation, use {fetchCloneArgs}.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy the clone. Using the same\n     * `implementation`, `args` and `salt` multiple times will revert, since the clones cannot be deployed twice\n     * at the same address.\n     */\n    function cloneDeterministicWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt\n    ) internal returns (address instance) {\n        return cloneDeterministicWithImmutableArgs(implementation, args, salt, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-cloneDeterministicWithImmutableArgs-address-bytes-bytes32-}[cloneDeterministicWithImmutableArgs],\n     * but with a `value` parameter to send native currency to the new contract.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function cloneDeterministicWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt,\n        uint256 value\n    ) internal returns (address instance) {\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\n        return Create2.deploy(value, salt, bytecode);\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}.\n     */\n    function predictDeterministicAddressWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\n        return Create2.computeAddress(salt, keccak256(bytecode), deployer);\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}.\n     */\n    function predictDeterministicAddressWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt\n    ) internal view returns (address predicted) {\n        return predictDeterministicAddressWithImmutableArgs(implementation, args, salt, address(this));\n    }\n\n    /**\n     * @dev Get the immutable args attached to a clone.\n     *\n     * - If `instance` is a clone that was deployed using `clone` or `cloneDeterministic`, this\n     *   function will return an empty array.\n     * - If `instance` is a clone that was deployed using `cloneWithImmutableArgs` or\n     *   `cloneDeterministicWithImmutableArgs`, this function will return the args array used at\n     *   creation.\n     * - If `instance` is NOT a clone deployed using this library, the behavior is undefined. This\n     *   function should only be used to check addresses that are known to be clones.\n     */\n    function fetchCloneArgs(address instance) internal view returns (bytes memory) {\n        bytes memory result = new bytes(instance.code.length - 45); // revert if length is too short\n        assembly (\"memory-safe\") {\n            extcodecopy(instance, add(result, 32), 45, mload(result))\n        }\n        return result;\n    }\n\n    /**\n     * @dev Helper that prepares the initcode of the proxy with immutable args.\n     *\n     * An assembly variant of this function requires copying the `args` array, which can be efficiently done using\n     * `mcopy`. Unfortunately, that opcode is not available before cancun. A pure solidity implementation using\n     * abi.encodePacked is more expensive but also more portable and easier to review.\n     *\n     * NOTE: https://eips.ethereum.org/EIPS/eip-170[EIP-170] limits the length of the contract code to 24576 bytes.\n     * With the proxy code taking 45 bytes, that limits the length of the immutable args to 24531 bytes.\n     */\n    function _cloneCodeWithImmutableArgs(\n        address implementation,\n        bytes memory args\n    ) private pure returns (bytes memory) {\n        if (args.length > 24531) revert CloneArgumentsTooLong();\n        return\n            abi.encodePacked(\n                hex\"61\",\n                uint16(args.length + 45),\n                hex\"3d81600a3d39f3363d3d373d3d3d363d73\",\n                implementation,\n                hex\"5af43d82803e903d91602b57fd5bf3\",\n                args\n            );\n    }\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.22;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[ERC].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC-1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC-1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC1155/utils/ERC1155Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155Receiver} from \"../IERC1155Receiver.sol\";\nimport {IERC1155Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-1155 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n *\n * _Available since v5.1._\n */\nlibrary ERC1155Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155Received(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155BatchReceived}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155BatchReceived(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            _revert(returndata);\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Arrays.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Arrays.sol)\n// This file was procedurally generated from scripts/generate/templates/Arrays.js.\n\npragma solidity ^0.8.20;\n\nimport {Comparators} from \"./Comparators.sol\";\nimport {SlotDerivation} from \"./SlotDerivation.sol\";\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using SlotDerivation for bytes32;\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Sort an array of uint256 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        uint256[] memory array,\n        function(uint256, uint256) pure returns (bool) comp\n    ) internal pure returns (uint256[] memory) {\n        _quickSort(_begin(array), _end(array), comp);\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of uint256 in increasing order.\n     */\n    function sort(uint256[] memory array) internal pure returns (uint256[] memory) {\n        sort(array, Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of address (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        address[] memory array,\n        function(address, address) pure returns (bool) comp\n    ) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of address in increasing order.\n     */\n    function sort(address[] memory array) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        bytes32[] memory array,\n        function(bytes32, bytes32) pure returns (bool) comp\n    ) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of bytes32 in increasing order.\n     */\n    function sort(bytes32[] memory array) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n     * at end (exclusive). Sorting follows the `comp` comparator.\n     *\n     * Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n     *\n     * IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n     * be used only if the limits are within a memory array.\n     */\n    function _quickSort(uint256 begin, uint256 end, function(uint256, uint256) pure returns (bool) comp) private pure {\n        unchecked {\n            if (end - begin < 0x40) return;\n\n            // Use first element as pivot\n            uint256 pivot = _mload(begin);\n            // Position where the pivot should be at the end of the loop\n            uint256 pos = begin;\n\n            for (uint256 it = begin + 0x20; it < end; it += 0x20) {\n                if (comp(_mload(it), pivot)) {\n                    // If the value stored at the iterator's position comes before the pivot, we increment the\n                    // position of the pivot and move the value there.\n                    pos += 0x20;\n                    _swap(pos, it);\n                }\n            }\n\n            _swap(begin, pos); // Swap pivot into place\n            _quickSort(begin, pos, comp); // Sort the left side of the pivot\n            _quickSort(pos + 0x20, end, comp); // Sort the right side of the pivot\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first element of `array`.\n     */\n    function _begin(uint256[] memory array) private pure returns (uint256 ptr) {\n        assembly (\"memory-safe\") {\n            ptr := add(array, 0x20)\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n     * that comes just after the last element of the array.\n     */\n    function _end(uint256[] memory array) private pure returns (uint256 ptr) {\n        unchecked {\n            return _begin(array) + array.length * 0x20;\n        }\n    }\n\n    /**\n     * @dev Load memory word (as a uint256) at location `ptr`.\n     */\n    function _mload(uint256 ptr) private pure returns (uint256 value) {\n        assembly {\n            value := mload(ptr)\n        }\n    }\n\n    /**\n     * @dev Swaps the elements memory location `ptr1` and `ptr2`.\n     */\n    function _swap(uint256 ptr1, uint256 ptr2) private pure {\n        assembly {\n            let value1 := mload(ptr1)\n            let value2 := mload(ptr2)\n            mstore(ptr1, value2)\n            mstore(ptr2, value1)\n        }\n    }\n\n    /// @dev Helper: low level cast address memory array to uint256 memory array\n    function _castToUint256Array(address[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 memory array to uint256 memory array\n    function _castToUint256Array(bytes32[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast address comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(address, address) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(bytes32, bytes32) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * NOTE: The `array` is expected to be sorted in ascending order, and to\n     * contain no repeated elements.\n     *\n     * IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n     * support for repeated elements in the array. The {lowerBound} function should\n     * be used instead.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value greater or equal than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound].\n     */\n    function lowerBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value strictly greater than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound].\n     */\n    function upperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {lowerBound}, but with an array in memory.\n     */\n    function lowerBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {upperBound}, but with an array in memory.\n     */\n    function upperBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(bytes32[] memory arr, uint256 pos) internal pure returns (bytes32 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(address[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(bytes32[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(uint256[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Comparators.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Comparators.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides a set of functions to compare values.\n *\n * _Available since v5.1._\n */\nlibrary Comparators {\n    function lt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a < b;\n    }\n\n    function gt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a > b;\n    }\n}\n"},"@openzeppelin/contracts/utils/Create2.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Create2.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n * `CREATE2` can be used to compute in advance the address where a smart\n * contract will be deployed, which allows for interesting new mechanisms known\n * as 'counterfactual interactions'.\n *\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n * information.\n */\nlibrary Create2 {\n    /**\n     * @dev There's no code to deploy.\n     */\n    error Create2EmptyBytecode();\n\n    /**\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\n     * will be deployed can be known in advance via {computeAddress}.\n     *\n     * The bytecode for a contract can be obtained from Solidity with\n     * `type(contractName).creationCode`.\n     *\n     * Requirements:\n     *\n     * - `bytecode` must not be empty.\n     * - `salt` must have not been used for `bytecode` already.\n     * - the factory must have a balance of at least `amount`.\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\n     */\n    function deploy(uint256 amount, bytes32 salt, bytes memory bytecode) internal returns (address addr) {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n        if (bytecode.length == 0) {\n            revert Create2EmptyBytecode();\n        }\n        assembly (\"memory-safe\") {\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\n            // if no address was created, and returndata is not empty, bubble revert\n            if and(iszero(addr), not(iszero(returndatasize()))) {\n                let p := mload(0x40)\n                returndatacopy(p, 0, returndatasize())\n                revert(p, returndatasize())\n            }\n        }\n        if (addr == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n     * `bytecodeHash` or `salt` will result in a new destination address.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\n        return computeAddress(salt, bytecodeHash, address(this));\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address addr) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40) // Get free memory pointer\n\n            // |                   | ↓ ptr ...  ↓ ptr + 0x0B (start) ...  ↓ ptr + 0x20 ...  ↓ ptr + 0x40 ...   |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\n            // | salt              |                                      BBBBBBBBBBBBB...BB                   |\n            // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\n            // | 0xFF              |            FF                                                             |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\n            // | keccak(start, 85) |            ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ |\n\n            mstore(add(ptr, 0x40), bytecodeHash)\n            mstore(add(ptr, 0x20), salt)\n            mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\n            let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\n            mstore8(start, 0xff)\n            addr := and(keccak256(start, 85), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Errors.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/SlotDerivation.sol)\n// This file was procedurally generated from scripts/generate/templates/SlotDerivation.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n * corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n * the solidity language / compiler.\n *\n * See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n *\n * Example usage:\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using StorageSlot for bytes32;\n *     using SlotDerivation for bytes32;\n *\n *     // Declare a namespace\n *     string private constant _NAMESPACE = \"<namespace>\"; // eg. OpenZeppelin.Slot\n *\n *     function setValueInNamespace(uint256 key, address newValue) internal {\n *         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n *     }\n *\n *     function getValueInNamespace(uint256 key) internal view returns (address) {\n *         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {StorageSlot}.\n *\n * NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n * upgrade safety will ignore the slots accessed through this library.\n *\n * _Available since v5.1._\n */\nlibrary SlotDerivation {\n    /**\n     * @dev Derive an ERC-7201 slot from a string (namespace).\n     */\n    function erc7201Slot(string memory namespace) internal pure returns (bytes32 slot) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, sub(keccak256(add(namespace, 0x20), mload(namespace)), 1))\n            slot := and(keccak256(0x00, 0x20), not(0xff))\n        }\n    }\n\n    /**\n     * @dev Add an offset to a slot to get the n-th element of a structure or an array.\n     */\n    function offset(bytes32 slot, uint256 pos) internal pure returns (bytes32 result) {\n        unchecked {\n            return bytes32(uint256(slot) + pos);\n        }\n    }\n\n    /**\n     * @dev Derive the location of the first element in an array from the slot where the length is stored.\n     */\n    function deriveArray(bytes32 slot) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, slot)\n            result := keccak256(0x00, 0x20)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, address key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, and(key, shr(96, not(0))))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bool key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, iszero(iszero(key)))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes32 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, uint256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, int256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, string memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"contracts/ProductTokenUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\n/**\n * @title ProductTokenUpgradeable\n * @dev Upgradeable implementation of an ERC1155 token for products with role-based access control\n */\ncontract ProductTokenUpgradeable is \n    Initializable, \n    ERC1155Upgradeable, \n    AccessControlUpgradeable,\n    UUPSUpgradeable\n{\n    using Strings for uint256;\n    \n    // Role definition\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    bytes32 public constant UPGRADER_ROLE = keccak256(\"UPGRADER_ROLE\");\n    \n    // Mapping to track total supply per token ID\n    mapping(uint256 => uint256) private _productSupply;\n\n    // Array to track all product IDs\n    uint256[] private _productIds;\n    \n    // Mapping to track if a product ID exists in the array\n    mapping(uint256 => bool) private _productIdExists;\n    \n    // Base URI for metadata\n    string private _baseUri;\n    \n    // Events\n    event ProductMinted(address indexed to, uint256 indexed productId, uint256 amount);\n    event BaseURIUpdated(string newUri);\n    event ProductBurned(address indexed from, uint256 indexed productId, uint256 amount);\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    /**\n     * @dev Initializer replaces the constructor for upgradeable contracts\n     * @param baseUri Initial base URI for token metadata\n     */\n    function initialize(string memory baseUri) public initializer {\n        __ERC1155_init(\"\");\n        __AccessControl_init();\n        __UUPSUpgradeable_init();\n\n        _baseUri = baseUri;\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(MINTER_ROLE, msg.sender);\n        _grantRole(UPGRADER_ROLE, msg.sender);\n    }\n\n    /**\n     * @dev Mints tokens for a specific product ID to an address\n     * @param to The address that will receive the minted tokens\n     * @param productId The ID of the product to mint\n     * @param amount The amount of tokens to mint\n     * @notice Only accounts with MINTER_ROLE can call this function\n     * @notice If the product ID doesn't exist yet, it will be created\n     */\n    function mint(address to, uint256 productId, uint256 amount) external onlyRole(MINTER_ROLE) {\n        require(productId > 0, \"Invalid product ID\");\n        require(amount > 0, \"Invalid amount\");\n        \n        // Check if the product ID exists in the mapping\n        if (!_productIdExists[productId]) {\n            _productIds.push(productId);\n            _productIdExists[productId] = true;\n        }\n        _productSupply[productId] += amount;\n        _mint(to, productId, amount, \"\");\n        emit ProductMinted(to, productId, amount);\n    }\n\n    /**\n     * @dev Returns the URI for a given token ID\n     * @param tokenId The ID of the token to query\n     * @return The URI string for the token metadata\n     * @notice URI is constructed by concatenating the base URI, the token ID, and '.json'\n     */\n    function uri(uint256 tokenId) public view virtual override returns (string memory) {\n        return string(abi.encodePacked(_baseUri, tokenId.toString(), \".json\"));\n    }\n\n    /**\n     * @dev Updates the base URI for all token metadata\n     * @param newUri New base URI to set\n     * @notice Only accounts with DEFAULT_ADMIN_ROLE can call this function\n     * @notice Empty strings are not allowed as URIs\n     */\n    function setBaseURI(string memory newUri) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        require(bytes(newUri).length > 0, \"Invalid base URI\");\n\n        _baseUri = newUri;\n        emit BaseURIUpdated(newUri);\n    }\n\n    /**\n     * @dev Gets the current supply of tokens for a specific product ID\n     * @param productId ID of the product to query\n     * @return Current total supply of the product tokens\n     * @notice Will revert if the product ID does not exist or is invalid\n     */\n    function productSupply(uint256 productId) public view returns (uint256) {\n        require(productId > 0, \"Invalid product ID\");\n        require(_productIdExists[productId], \"Product ID does not exist\");\n\n        return _productSupply[productId];\n    }\n\n    /**\n     * @dev Returns an array of all existing product IDs\n     * @return Array of product IDs that have been created\n     */\n    function getProductIds() public view returns (uint256[] memory) {\n        return _productIds;\n    }\n\n    /**\n     * @dev Burns tokens from a specific address\n     * @param from Address from which to burn tokens\n     * @param productId ID of the product to burn\n     * @param amount Amount of tokens to burn\n     * @notice Only accounts with MINTER_ROLE can call this function\n     * @notice Will revert if the product ID does not exist or amount exceeds supply\n     * @notice Will revert if the target address has insufficient balance\n     */\n    function burn(address from, uint256 productId, uint256 amount) external onlyRole(MINTER_ROLE) {\n        require(productId > 0, \"Invalid product ID\");\n        require(amount > 0, \"Invalid amount\");\n        \n        // Check if the product ID exists in the mapping\n        require(_productIdExists[productId], \"Product ID does not exist\");\n        require(amount <= _productSupply[productId], \"Burn amount exceeds supply\");\n\n        require(balanceOf(from, productId) >= amount, \"Insufficient balance\");\n        \n        // Update product supply first\n        _productSupply[productId] -= amount;\n        \n        // Call the parent implementation to burn tokens\n        super._burn(from, productId, amount);\n        \n        emit ProductBurned(from, productId, amount);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     * @param interfaceId The interface identifier to check support for\n     * @return bool True if the contract supports the interface\n     * @notice This implementation supports both ERC1155 and AccessControl interfaces\n     */\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        override(ERC1155Upgradeable, AccessControlUpgradeable)\n        returns (bool)\n    {\n        return super.supportsInterface(interfaceId);\n    }\n    \n    /**\n     * @dev Function that should revert when msg.sender is not authorized to upgrade the contract\n     * @param newImplementation Address of the new implementation\n     */\n    function _authorizeUpgrade(address newImplementation) internal override onlyRole(UPGRADER_ROLE) {}\n}\n"},"contracts/USDCFundraiserFactoryUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.27;\n\nimport \"./USDCFundraiserUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/proxy/Clones.sol\";\n\n// Interface for ProductToken minting/burning\ninterface IProductToken {\n    function mint(address to, uint256 productId, uint256 amount) external;\n    function burn(address from, uint256 productId, uint256 amount) external;\n}\n\ncontract USDCFundraiserFactoryUpgradeable is Initializable, OwnableUpgradeable, UUPSUpgradeable {\n    using Clones for address;\n\n    uint256 public constant BASIS_POINTS = 10000; // 100% = 10000 basis points\n    address public usdcAddress;\n    address public productTokenAddress;\n    uint256 public defaultFeePercentage;\n    address public feeWallet;\n    \n    // Implementation contract address for USDCFundraiser\n    address public fundraiserImplementation;\n    \n    // Array to track all deployed fundraisers\n    address[] public deployedFundraisers;\n    mapping(address => bool) public isFundraiser;\n    \n    event FundraiserCreated(address indexed fundraiser, address indexed creator);\n    event ImplementationUpdated(address indexed newImplementation);\n    event ProductTokenUpdated(address indexed newProductToken);\n    event ProductIdMapped(\n        address indexed fundraiser, \n        uint256 indexed originalProductId, \n        uint256 indexed uniqueProductId\n    );\n    \n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize(\n        address _usdcAddress,\n        address _productTokenAddress,\n        uint256 _defaultFeePercentage,\n        address _feeWallet,\n        address _fundraiserImplementation,\n        address _initialOwner\n    ) public initializer {\n        __Ownable_init(_initialOwner);\n        __UUPSUpgradeable_init();\n        \n        require(_usdcAddress != address(0), \"Invalid USDC address\");\n        require(_productTokenAddress != address(0), \"Invalid product token address\");\n        require(_feeWallet != address(0), \"Invalid fee wallet\");\n        require(_fundraiserImplementation != address(0), \"Invalid implementation\");\n        require(_initialOwner != address(0), \"Invalid owner\");\n        \n        usdcAddress = _usdcAddress;\n        productTokenAddress = _productTokenAddress;\n        defaultFeePercentage = _defaultFeePercentage;\n        feeWallet = _feeWallet;\n        fundraiserImplementation = _fundraiserImplementation;\n    }\n\n    /**\n    * @dev Create a new fundraiser campaign\n    * @param beneficiaryWallet The wallet to receive raised funds\n    * @param fundingType The funding type (0: All or Nothing, 1: Limitless)\n    * @param minimumTarget The minimum target amount for the campaign\n    * @param deadline The deadline for the campaign\n    * @param products The array of products for the campaign\n    */\n    function createFundraiser(\n        address beneficiaryWallet,\n        uint256 fundingType,\n        uint256 minimumTarget,\n        uint256 deadline,\n        ProductConfig[] memory products\n    ) external returns (address) {\n        require(beneficiaryWallet != address(0), \"Invalid beneficiary\");\n        require(deadline > block.timestamp, \"Invalid deadline\");\n        require(products.length > 0, \"No products\");\n\n        address campaignAdmin = msg.sender;\n\n        // Deploy minimal proxy clone of the implementation\n        address fundraiserClone = fundraiserImplementation.clone();\n        \n        // Initialize the clone with factory address\n        // Pass original product configs - fundraiser will generate unique IDs internally\n        USDCFundraiserUpgradeable(fundraiserClone).initialize(\n            usdcAddress,\n            beneficiaryWallet,\n            feeWallet,\n            defaultFeePercentage,\n            fundingType,\n            minimumTarget,\n            deadline,\n            productTokenAddress,\n            address(this),  // Pass factory address for minting/burning\n            products,  // Pass original products, not pre-hashed\n            campaignAdmin,\n            owner() // Factory owner becomes the fundraiser owner\n        );\n        \n        // Emit mapping events for frontend after initialization\n        for (uint256 i = 0; i < products.length; i++) {\n            // Get the unique product ID that was generated by the fundraiser\n            uint256 uniqueProductId = USDCFundraiserUpgradeable(fundraiserClone).getUniqueProductId(products[i].productId);\n            \n            // Emit event to help frontend map original ID to unique ID\n            emit ProductIdMapped(fundraiserClone, products[i].productId, uniqueProductId);\n        }\n\n        // Track the deployed fundraiser\n        deployedFundraisers.push(fundraiserClone);\n        isFundraiser[fundraiserClone] = true;\n\n        emit FundraiserCreated(fundraiserClone, msg.sender);\n        return fundraiserClone;\n    }\n\n    /**\n     * @dev Allows authorized fundraisers to mint tokens through the factory\n     * @param to Address to mint tokens to\n     * @param productId Product ID to mint\n     * @param amount Amount to mint\n     * @notice Only fundraisers created by this factory can call this function\n     * @notice Factory must have MINTER_ROLE on ProductToken\n     */\n    function mintForFundraiser(address givenProductTokenAddress, address to, uint256 productId, uint256 amount) external {\n        require(isFundraiser[msg.sender], \"Only fundraisers can mint\");\n        IProductToken(givenProductTokenAddress).mint(to, productId, amount);\n    }\n\n    /**\n     * @dev Allows authorized fundraisers to burn tokens through the factory\n     * @param from Address to burn tokens from\n     * @param productId Product ID to burn\n     * @param amount Amount to burn\n     * @notice Only fundraisers created by this factory can call this function\n     * @notice Factory must have MINTER_ROLE on ProductToken\n     */\n    function burnForFundraiser(address givenProductTokenAddress, address from, uint256 productId, uint256 amount) external {\n        require(isFundraiser[msg.sender], \"Only fundraisers can burn\");\n        IProductToken(givenProductTokenAddress).burn(from, productId, amount);\n    }\n\n    /**\n    * @dev Change the default fee percentage\n    * @param newFeePercentage The new fee percentage (basis points)\n    */\n    function changeDefaultFeePercentage(uint256 newFeePercentage) external onlyOwner {\n        require(newFeePercentage < BASIS_POINTS, \"Fee percentage must be less than 100%\");\n        defaultFeePercentage = newFeePercentage;\n    }\n\n    /**\n    * @dev Change the fee wallet\n    * @param newFeeWallet The new fee wallet address\n    */\n    function changeFeeWallet(address newFeeWallet) external onlyOwner {\n        require(newFeeWallet != address(0), \"Invalid fee wallet\");\n        feeWallet = newFeeWallet;\n    }\n\n    /**\n    * @dev Update the fundraiser implementation\n    * @param newImplementation The new implementation address\n    */\n    function updateFundraiserImplementation(address newImplementation) external onlyOwner {\n        require(newImplementation != address(0), \"Invalid implementation\");\n        fundraiserImplementation = newImplementation;\n        emit ImplementationUpdated(newImplementation);\n    }\n    \n    /**\n     * @dev Updates the product token address\n     * @param newProductToken The address of the new product token contract\n     * @notice Only the owner can update the product token address\n     * @notice This only affects new fundraiser deployments, not existing ones\n     */\n    function updateProductTokenAddress(address newProductToken) external onlyOwner {\n        require(newProductToken != address(0), \"Invalid product token address\");\n        productTokenAddress = newProductToken;\n        emit ProductTokenUpdated(newProductToken);\n    }\n\n    /**\n    * @dev Get the fee wallet\n    * @return The fee wallet address\n    */\n    function getFeeWallet() external view returns (address) {\n        return feeWallet;\n    }\n    \n    /**\n    * @dev Get the deployed fundraisers count\n    * @return The number of deployed fundraisers\n    */\n    function getDeployedFundraisersCount() external view returns (uint256) {\n        return deployedFundraisers.length;\n    }\n    \n    /**\n    * @dev Get a deployed fundraiser by index\n    * @param index The index of the fundraiser to retrieve\n    * @return The address of the deployed fundraiser\n    */\n    function getDeployedFundraiser(uint256 index) external view returns (address) {\n        require(index < deployedFundraisers.length, \"Index out of bounds\");\n        return deployedFundraisers[index];\n    }\n\n    /**\n    * @dev Authorize an upgrade to a new implementation\n    * @param newImplementation The new implementation address\n    */\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\n}"},"contracts/USDCFundraiserUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.27;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\";\nimport \"./ProductTokenUpgradeable.sol\";\n\nstruct ProductConfig {\n    uint256 productId;\n    uint256 price;\n    uint256 supplyLimit;  // 0 means unlimited supply\n}\n\n// Interface for factory minting/burning\ninterface IFactory {\n    function mintForFundraiser(address productTokenAddress, address to, uint256 productId, uint256 amount) external;\n    function burnForFundraiser(address productTokenAddress, address from, uint256 productId, uint256 amount) external;\n}\n\ncontract USDCFundraiserUpgradeable is Initializable, OwnableUpgradeable, PausableUpgradeable, ReentrancyGuardUpgradeable {\n    using SafeERC20 for IERC20;\n    \n    uint256 public constant BASIS_POINTS = 10000; // 100% = 10000 basis points\n    IERC20 public usdc;\n    ProductTokenUpgradeable public productToken;\n    address public factory;  // Factory address for minting/burning\n    address public beneficiaryWallet;\n    address public feeWallet;\n    uint256 public minimumTarget;\n    uint256 public deadline;\n    uint256 public feePercentage; // Stored as basis points (e.g., 250 = 2.5%)\n    \n    uint256 public totalRaised;\n    bool public finalized;\n    mapping(uint256 => uint256) public tokenDeposits; // tokenId => deposit amount\n    uint256[] public productIds;\n    mapping(uint256 => uint256) public productSoldCount;    // productId => current sold count\n\n    uint256 public fundingType; // 0 = all or nothing, 1 = limitless, 2 = flexible\n    mapping(uint256 => ProductConfig) public products;\n    mapping(uint256 => uint256) public uniqueToOriginalProductId; // uniqueProductId => originalProductId\n    address public campaignAdmin;\n\n    modifier onlyAdminOrOwner() {\n        require(msg.sender == owner() || msg.sender == campaignAdmin, \"Not authorized\");\n        _;\n    }\n\n    struct RegistrationParams {\n        string name;\n        bytes encryptedEmail;\n        address upkeepContract;\n        uint32 gasLimit;\n        address adminAddress;\n        uint8 triggerType;\n        bytes checkData;\n        bytes triggerConfig;\n        bytes offchainConfig;\n        uint96 amount;\n    }\n\n    event Deposit(address indexed depositor, uint256 netAmount, uint256 feeAmount);\n    event Finalized(bool success, uint256 totalRaised);\n    event Refund(address indexed depositor, uint256 amount, uint256 productId, uint256 quantity);\n    event ProductAdded(uint256 indexed productId, uint256 price, uint256 supplyLimit);\n    event ProductUpdated(uint256 indexed productId, uint256 oldPrice, uint256 newPrice, uint256 oldSupplyLimit, uint256 newSupplyLimit);\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize(\n        address _usdcAddress,\n        address _beneficiaryWallet,\n        address _feeWallet,\n        uint256 _feePercentage,\n        uint256 _fundingType,\n        uint256 _minimumTarget,\n        uint256 _deadline,\n        address _productTokenAddress,\n        address _factoryAddress,\n        ProductConfig[] memory _products,\n        address _campaignAdmin,\n        address _owner\n    ) public initializer {\n        __Ownable_init(_owner);\n        __Pausable_init();\n        __ReentrancyGuard_init();\n        \n        require(_usdcAddress != address(0), \"Invalid USDC address\");\n        require(_beneficiaryWallet != address(0), \"Invalid beneficiary wallet\");\n        require(_feeWallet != address(0), \"Invalid fee wallet\");\n        require(_productTokenAddress != address(0), \"Invalid product token address\");\n        require(_factoryAddress != address(0), \"Invalid factory address\");\n        require(_deadline > block.timestamp, \"Invalid deadline\");\n        require(_products.length > 0, \"No products provided\");\n        require(_campaignAdmin != address(0), \"Invalid campaign admin\");\n        require(_owner != address(0), \"Invalid owner\");\n        require(_feePercentage < BASIS_POINTS, \"Fee percentage must be less than 100%\");\n\n        usdc = IERC20(_usdcAddress);\n        beneficiaryWallet = _beneficiaryWallet;\n        feeWallet = _feeWallet;\n        feePercentage = _feePercentage;\n        minimumTarget = _minimumTarget;\n        deadline = _deadline;\n        productToken = ProductTokenUpgradeable(_productTokenAddress);\n        factory = _factoryAddress;\n        campaignAdmin = _campaignAdmin;\n        fundingType = _fundingType;\n\n        for (uint256 i = 0; i < _products.length; i++) {\n            require(_products[i].price > 0, \"Invalid product price\");\n            require(_products[i].productId > 0, \"Invalid product ID\");\n            \n            // Generate unique product ID for this campaign\n            uint256 uniqueProductId = uint256(keccak256(\n                abi.encodePacked(address(this), _products[i].productId)\n            ));\n            \n            // Store with unique ID\n            products[uniqueProductId] = ProductConfig({\n                productId: uniqueProductId,\n                price: _products[i].price,\n                supplyLimit: _products[i].supplyLimit\n            });\n            productIds.push(uniqueProductId);\n            \n            // Store reverse mapping\n            uniqueToOriginalProductId[uniqueProductId] = _products[i].productId;\n        }\n    }\n\n    /**\n    * @dev Deposit USDC for a specific product\n    * @param productId The original product ID (not the unique hashed one)\n    * @param quantity The quantity of the product to deposit\n    */\n    function deposit(uint256 productId, uint256 quantity) external nonReentrant whenNotPaused {\n        // Generate unique product ID for this campaign\n        uint256 uniqueProductId = _generateUniqueProductId(productId);\n        \n        ProductConfig memory product = products[uniqueProductId];\n        require(finalized == false, \"Campaign is finalized\");\n        if (fundingType != 1) {\n            require(block.timestamp < deadline, \"Campaign has ended\");\n        }\n        require(product.price > 0, \"Invalid product\");\n        require(quantity > 0, \"Invalid quantity\");\n        \n        // Check supply limit\n        if (product.supplyLimit > 0) {\n            require(productSoldCount[uniqueProductId] + quantity <= product.supplyLimit, \"Exceeds supply limit\");\n        }\n\n        uint256 totalAmount = product.price * quantity;\n        uint256 feeAmount = (totalAmount * feePercentage) / BASIS_POINTS;\n        uint256 netAmount = totalAmount - feeAmount;\n\n        // Transfer USDC from user to contract\n        usdc.safeTransferFrom(msg.sender, address(this), totalAmount);\n\n        // Mint NFT via factory (instead of calling productToken directly)\n        // Only proceed with fees and tracking if mint succeeds\n        try IFactory(factory).mintForFundraiser(address(productToken), msg.sender, uniqueProductId, quantity) {\n            // Mint successful - now safe to update tracking and pay fees\n            \n            // Update counts and totals\n            productSoldCount[uniqueProductId] += quantity;\n            totalRaised += netAmount; // Only count net amount toward target\n            \n            // Pay fee wallet immediately after successful mint\n            if (feeAmount > 0) {\n                usdc.safeTransfer(feeWallet, feeAmount);\n            }\n            \n            emit Deposit(msg.sender, netAmount, feeAmount);\n        } catch Error(string memory reason) {\n            // Mint failed - refund full amount to user (no fees deducted)\n            usdc.safeTransfer(msg.sender, totalAmount);\n            revert(string.concat(\"NFT mint failed: \", reason));\n        } catch (bytes memory /*lowLevelData*/) {\n            // Handle low-level errors - refund full amount\n            usdc.safeTransfer(msg.sender, totalAmount);\n            revert(\"NFT mint failed with low-level error\");\n        }\n    }\n\n    /**\n    * @dev Finalize the campaign\n    */\n    function finalize() public nonReentrant whenNotPaused {\n        require(!finalized, \"Already finalized\");\n        \n        if (fundingType == 0) {\n            // All or Nothing\n            if (totalRaised >= minimumTarget) {\n                // Target met - can finalize immediately, no need to wait for deadline\n                _executeFinalization(true);\n            } else {\n                // Target not met - must wait for deadline\n                require(block.timestamp > deadline, \"Deadline not reached\");\n\n                // target not met and deadline passed - can finalize\n                _executeFinalization(false);\n\n            }\n        } else if (fundingType == 1) {\n            // Limitless - only admin/owner can finalize anytime\n            require(msg.sender == owner() || msg.sender == campaignAdmin, \"Not authorized\");\n            _executeFinalization(true);\n        } else if (fundingType == 2) {\n            // Flexible\n            if (totalRaised >= minimumTarget) {\n                // Target met - can finalize immediately, no need to wait for deadline\n                _executeFinalization(true);\n            } else {\n                // Target not met - must wait for deadline\n                require(block.timestamp > deadline, \"Deadline not reached\");\n                _executeFinalization(true);\n            }\n        }\n    }\n\n    function _executeFinalization(bool releaseFunds) private {\n        finalized = true;\n        \n        if (releaseFunds) {\n            // Fees already paid on each deposit, so just transfer remaining balance to beneficiary\n            uint256 contractBalance = usdc.balanceOf(address(this));\n            \n            if (contractBalance > 0) {\n                usdc.safeTransfer(beneficiaryWallet, contractBalance);\n            }\n        }\n        \n        emit Finalized(releaseFunds, totalRaised);\n    }\n\n    /**\n    * @dev Claim refund for a specific product\n    * @param productId The original product ID (not the unique hashed one)\n    * @param quantity The quantity of the product to refund\n    */\n    function claimRefund(uint256 productId, uint256 quantity) external nonReentrant whenNotPaused {\n        // Generate unique product ID for this campaign\n        uint256 uniqueProductId = _generateUniqueProductId(productId);\n        \n        ProductConfig memory product = products[uniqueProductId];\n        require(product.price > 0, \"Invalid product\");\n        \n        // Funding Type 0: All or Nothing\n        if (fundingType == 0) {\n            // If target met (100% or more), no refunds allowed\n            require(totalRaised < minimumTarget, \"Target met - refunds not available\");\n        } \n        // Funding Type 1: Limitless\n        else if (fundingType == 1) {\n            // If not finalized: refunds allowed\n            // If finalized: refunds not allowed\n            require(finalized == false, \"Campaign finalized - refunds not available\");\n        } \n        // Funding Type 2: Flexible\n        else if (fundingType == 2) {\n            // Before deadline: refunds allowed\n            // After deadline: refunds not allowed\n            require(block.timestamp < deadline, \"Deadline passed - refunds not available\");\n            require(totalRaised < minimumTarget, \"Target met - refunds not available\");\n        } else {\n            revert(\"Invalid funding type\");\n        }\n\n        // Burn the NFTs to get refund (via factory)\n        uint256 balance = productToken.balanceOf(msg.sender, uniqueProductId);\n        require(balance >= quantity, \"Insufficient NFT balance\");\n        \n        IFactory(factory).burnForFundraiser(address(productToken), msg.sender, uniqueProductId, quantity);\n        \n        uint256 fee = (product.price * feePercentage) / BASIS_POINTS;\n        uint256 refundAmount = (product.price - fee) * quantity;\n        usdc.safeTransfer(msg.sender, refundAmount);\n        \n        productSoldCount[uniqueProductId] -= quantity;\n        totalRaised -= refundAmount;\n\n        emit Refund(msg.sender, refundAmount, uniqueProductId, quantity);\n    }\n\n    /**\n    * @dev Add a new product to the campaign\n    * @param product Product configuration with original product ID\n    * @notice The product ID will be converted to a unique ID internally\n    */\n    function addProduct(ProductConfig memory product) external onlyAdminOrOwner {\n        require(product.price > 0, \"Invalid price\");\n        require(product.productId > 0, \"Invalid product ID\");\n\n        // Generate unique product ID for this campaign\n        uint256 uniqueProductId = _generateUniqueProductId(product.productId);\n        \n        require(products[uniqueProductId].price == 0, \"Product already exists\");\n\n        // Store with unique ID\n        products[uniqueProductId] = ProductConfig({\n            productId: uniqueProductId,\n            price: product.price,\n            supplyLimit: product.supplyLimit\n        });\n        productIds.push(uniqueProductId);\n        \n        // Store reverse mapping\n        uniqueToOriginalProductId[uniqueProductId] = product.productId;\n        \n        emit ProductAdded(uniqueProductId, product.price, product.supplyLimit);\n    }\n\n    /**\n    * @dev Update an existing product\n    * @param productId The original product ID (will be converted to unique ID)\n    * @param newPrice New price for the product\n    * @param newSupplyLimit New supply limit (0 for unlimited)\n    */\n    function updateProduct(uint256 productId, uint256 newPrice, uint256 newSupplyLimit) external onlyAdminOrOwner {\n        // Generate unique product ID\n        uint256 uniqueProductId = _generateUniqueProductId(productId);\n    \n        require(products[uniqueProductId].price > 0, \"Product does not exist\");\n        require(newPrice > 0, \"Invalid price\");\n\n        // Prevent price changes after any sales\n        if (newPrice != products[uniqueProductId].price) {\n            require(productSoldCount[uniqueProductId] == 0, \"Cannot change price after sales\");\n        }\n        // Prevent supply limit changes after any sales (unless new supply limit is set to 0 which means unlimited supply)\n        if (newSupplyLimit > 0) {\n            require(newSupplyLimit >= productSoldCount[uniqueProductId], \"Supply limit cannot be less than sold count\");\n        }\n\n        uint256 oldPrice = products[uniqueProductId].price;\n        uint256 oldSupplyLimit = products[uniqueProductId].supplyLimit;\n\n        products[uniqueProductId].price = newPrice;\n        products[uniqueProductId].supplyLimit = newSupplyLimit;\n        \n        emit ProductUpdated(uniqueProductId, oldPrice, newPrice, oldSupplyLimit, newSupplyLimit);\n    }\n\n    /**\n    * @dev Generates a unique product ID by hashing campaign address with original product ID\n    * @param originalProductId The original product ID provided by the user\n    * @return The unique product ID for this campaign\n    */\n    function _generateUniqueProductId(uint256 originalProductId) internal view returns (uint256) {\n        return uint256(keccak256(\n            abi.encodePacked(address(this), originalProductId)\n        ));\n    }\n\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    function getProductIds() external view returns (uint256[] memory) {\n        return productIds;\n    }\n\n    /**\n    * @dev Get product by original product ID\n    * @param productId The original product ID (not the unique hashed one)\n    * @return The product configuration\n    */\n    function getProduct(uint256 productId) external view returns (ProductConfig memory) {\n        uint256 uniqueProductId = _generateUniqueProductId(productId);\n        return products[uniqueProductId];\n    }\n\n    /**\n    * @dev Get unique product ID from original product ID\n    * @param productId The original product ID\n    * @return The unique product ID for this campaign\n    */\n    function getUniqueProductId(uint256 productId) external view returns (uint256) {\n        return _generateUniqueProductId(productId);\n    }\n\n    /**\n    * @dev Get original product ID from unique product ID\n    * @param uniqueProductId The unique product ID\n    * @return The original product ID\n    */\n    function getOriginalProductId(uint256 uniqueProductId) external view returns (uint256) {\n        require(uniqueToOriginalProductId[uniqueProductId] > 0, \"Product does not exist\");\n        return uniqueToOriginalProductId[uniqueProductId];\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}}}},"output":{"sources":{"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol","exportedSymbols":{"AutomationBase":[37]},"id":38,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"AutomationBase","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":37,"linearizedBaseContracts":[37],"name":"AutomationBase","nameLocation":"66:14:0","nodeType":"ContractDefinition","nodes":[{"errorSelector":"b60ac5db","id":3,"name":"OnlySimulatedBackend","nameLocation":"91:20:0","nodeType":"ErrorDefinition","parameters":{"id":2,"nodeType":"ParameterList","parameters":[],"src":"111:2:0"},"src":"85:29:0"},{"body":{"id":27,"nodeType":"Block","src":"291:200:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":21,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":13,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"350:2:0","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":8,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"353:6:0","memberName":"origin","nodeType":"MemberAccess","src":"350:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":11,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"371:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"363:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"363:7:0","typeDescriptions":{}}},"id":12,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"363:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"350:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":14,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"377:2:0","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":15,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"380:6:0","memberName":"origin","nodeType":"MemberAccess","src":"377:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"307831313131313131313131313131313131313131313131313131313131313131313131313131313131","id":18,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"398:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x1111111111111111111111111111111111111111"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"390:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":16,"name":"address","nodeType":"ElementaryTypeName","src":"390:7:0","typeDescriptions":{}}},"id":19,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"390:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"377:64:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"350:91:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":26,"nodeType":"IfStatement","src":"346:141:0","trueBody":{"id":25,"nodeType":"Block","src":"443:44:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":22,"name":"OnlySimulatedBackend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3,"src":"458:20:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":23,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"458:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":24,"nodeType":"RevertStatement","src":"451:29:0"}]}}]},"documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"118:127:0","text":" @notice method that allows it to be simulated via eth_call by checking that\n the sender is the zero address."},"id":28,"implemented":true,"kind":"function","modifiers":[],"name":"_preventExecution","nameLocation":"257:17:0","nodeType":"FunctionDefinition","parameters":{"id":5,"nodeType":"ParameterList","parameters":[],"src":"274:2:0"},"returnParameters":{"id":6,"nodeType":"ParameterList","parameters":[],"src":"291:0:0"},"scope":37,"src":"248:243:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":35,"nodeType":"Block","src":"652:37:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":31,"name":"_preventExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"658:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":32,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"658:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":33,"nodeType":"ExpressionStatement","src":"658:19:0"},{"id":34,"nodeType":"PlaceholderStatement","src":"683:1:0"}]},"documentation":{"id":29,"nodeType":"StructuredDocumentation","src":"495:129:0","text":" @notice modifier that allows it to be simulated via eth_call by checking\n that the sender is the zero address."},"id":36,"name":"cannotExecute","nameLocation":"636:13:0","nodeType":"ModifierDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[],"src":"649:2:0"},"src":"627:62:0","virtual":false,"visibility":"internal"}],"scope":38,"src":"57:634:0","usedErrors":[3],"usedEvents":[]}],"src":"32:660:0"},"id":0},"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol","exportedSymbols":{"AutomationBase":[37],"AutomationCompatible":[48],"AutomationCompatibleInterface":[67]},"id":49,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":39,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:1"},{"absolutePath":"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol","file":"./AutomationBase.sol","id":41,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":49,"sourceUnit":38,"src":"57:52:1","symbolAliases":[{"foreign":{"id":40,"name":"AutomationBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"65:14:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol","file":"./interfaces/AutomationCompatibleInterface.sol","id":43,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":49,"sourceUnit":68,"src":"110:93:1","symbolAliases":[{"foreign":{"id":42,"name":"AutomationCompatibleInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"118:29:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":44,"name":"AutomationBase","nameLocations":["247:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":37,"src":"247:14:1"},"id":45,"nodeType":"InheritanceSpecifier","src":"247:14:1"},{"baseName":{"id":46,"name":"AutomationCompatibleInterface","nameLocations":["263:29:1"],"nodeType":"IdentifierPath","referencedDeclaration":67,"src":"263:29:1"},"id":47,"nodeType":"InheritanceSpecifier","src":"263:29:1"}],"canonicalName":"AutomationCompatible","contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":48,"linearizedBaseContracts":[48,67,37],"name":"AutomationCompatible","nameLocation":"223:20:1","nodeType":"ContractDefinition","nodes":[],"scope":49,"src":"205:90:1","usedErrors":[3],"usedEvents":[]}],"src":"32:264:1"},"id":1},"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol","exportedSymbols":{"AutomationCompatibleInterface":[67]},"id":68,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":50,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"AutomationCompatibleInterface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":67,"linearizedBaseContracts":[67],"name":"AutomationCompatibleInterface","nameLocation":"120:29:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"154:985:2","text":" @notice method that is simulated by the keepers to see if any work actually\n needs to be performed. This method does does not actually need to be\n executable, and since it is only ever simulated it can consume lots of gas.\n @dev To ensure that it is never called, you may want to add the\n cannotExecute modifier from KeeperBase to your implementation of this\n method.\n @param checkData specified in the upkeep registration so it is always the\n same for a registered upkeep. This can easily be broken down into specific\n arguments using `abi.decode`, so multiple upkeeps can be registered on the\n same contract and easily differentiated by the contract.\n @return upkeepNeeded boolean to indicate whether the keeper should call\n performUpkeep or not.\n @return performData bytes that the keeper should call performUpkeep with, if\n upkeep is needed. If you would like to encode data to decode later, try\n `abi.encode`."},"functionSelector":"6e04ff0d","id":60,"implemented":false,"kind":"function","modifiers":[],"name":"checkUpkeep","nameLocation":"1151:11:2","nodeType":"FunctionDefinition","parameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53,"mutability":"mutable","name":"checkData","nameLocation":"1178:9:2","nodeType":"VariableDeclaration","scope":60,"src":"1163:24:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":52,"name":"bytes","nodeType":"ElementaryTypeName","src":"1163:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1162:26:2"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"1212:12:2","nodeType":"VariableDeclaration","scope":60,"src":"1207:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":55,"name":"bool","nodeType":"ElementaryTypeName","src":"1207:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":58,"mutability":"mutable","name":"performData","nameLocation":"1239:11:2","nodeType":"VariableDeclaration","scope":60,"src":"1226:24:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":57,"name":"bytes","nodeType":"ElementaryTypeName","src":"1226:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1206:45:2"},"scope":67,"src":"1142:110:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"1256:1003:2","text":" @notice method that is actually executed by the keepers, via the registry.\n The data returned by the checkUpkeep simulation will be passed into\n this method to actually be executed.\n @dev The input to this method should not be trusted, and the caller of the\n method should not even be restricted to any single registry. Anyone should\n be able call it, and the input should be validated, there is no guarantee\n that the data passed in is the performData returned from checkUpkeep. This\n could happen due to malicious keepers, racing keepers, or simply a state\n change while the performUpkeep transaction is waiting for confirmation.\n Always validate the data passed in.\n @param performData is the data which was passed back from the checkData\n simulation. If it is encoded, it can easily be decoded into other types by\n calling `abi.decode`. This data should not be trusted, and should be\n validated against the contract's current state."},"functionSelector":"4585e33b","id":66,"implemented":false,"kind":"function","modifiers":[],"name":"performUpkeep","nameLocation":"2271:13:2","nodeType":"FunctionDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"performData","nameLocation":"2300:11:2","nodeType":"VariableDeclaration","scope":66,"src":"2285:26:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":62,"name":"bytes","nodeType":"ElementaryTypeName","src":"2285:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2284:28:2"},"returnParameters":{"id":65,"nodeType":"ParameterList","parameters":[],"src":"2321:0:2"},"scope":67,"src":"2262:60:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":68,"src":"110:2214:2","usedErrors":[],"usedEvents":[]}],"src":"32:2293:2"},"id":2},"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","exportedSymbols":{"AccessControlUpgradeable":[430],"ContextUpgradeable":[2118],"ERC165Upgradeable":[2447],"IAccessControl":[2530],"Initializable":[893]},"id":431,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":69,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:3"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"@openzeppelin/contracts/access/IAccessControl.sol","id":71,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":431,"sourceUnit":2531,"src":"134:81:3","symbolAliases":[{"foreign":{"id":70,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"142:14:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":73,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":431,"sourceUnit":2119,"src":"216:67:3","symbolAliases":[{"foreign":{"id":72,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"224:18:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"../utils/introspection/ERC165Upgradeable.sol","id":75,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":431,"sourceUnit":2448,"src":"284:79:3","symbolAliases":[{"foreign":{"id":74,"name":"ERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"292:17:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":77,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":431,"sourceUnit":894,"src":"364:63:3","symbolAliases":[{"foreign":{"id":76,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"372:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":79,"name":"Initializable","nameLocations":["2136:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":893,"src":"2136:13:3"},"id":80,"nodeType":"InheritanceSpecifier","src":"2136:13:3"},{"baseName":{"id":81,"name":"ContextUpgradeable","nameLocations":["2151:18:3"],"nodeType":"IdentifierPath","referencedDeclaration":2118,"src":"2151:18:3"},"id":82,"nodeType":"InheritanceSpecifier","src":"2151:18:3"},{"baseName":{"id":83,"name":"IAccessControl","nameLocations":["2171:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":2530,"src":"2171:14:3"},"id":84,"nodeType":"InheritanceSpecifier","src":"2171:14:3"},{"baseName":{"id":85,"name":"ERC165Upgradeable","nameLocations":["2187:17:3"],"nodeType":"IdentifierPath","referencedDeclaration":2447,"src":"2187:17:3"},"id":86,"nodeType":"InheritanceSpecifier","src":"2187:17:3"}],"canonicalName":"AccessControlUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":78,"nodeType":"StructuredDocumentation","src":"429:1660:3","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":430,"linearizedBaseContracts":[430,2447,7379,2530,2118,893],"name":"AccessControlUpgradeable","nameLocation":"2108:24:3","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControlUpgradeable.RoleData","id":93,"members":[{"constant":false,"id":90,"mutability":"mutable","name":"hasRole","nameLocation":"2270:7:3","nodeType":"VariableDeclaration","scope":93,"src":"2237:40:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":89,"keyName":"account","keyNameLocation":"2253:7:3","keyType":{"id":87,"name":"address","nodeType":"ElementaryTypeName","src":"2245:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2237:32:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":88,"name":"bool","nodeType":"ElementaryTypeName","src":"2264:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":92,"mutability":"mutable","name":"adminRole","nameLocation":"2295:9:3","nodeType":"VariableDeclaration","scope":93,"src":"2287:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":91,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2287:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2218:8:3","nodeType":"StructDefinition","scope":430,"src":"2211:100:3","visibility":"public"},{"constant":true,"functionSelector":"a217fddf","id":96,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2341:18:3","nodeType":"VariableDeclaration","scope":430,"src":"2317:49:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":94,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2317:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":95,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2362:4:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"canonicalName":"AccessControlUpgradeable.AccessControlStorage","documentation":{"id":97,"nodeType":"StructuredDocumentation","src":"2374:71:3","text":"@custom:storage-location erc7201:openzeppelin.storage.AccessControl"},"id":103,"members":[{"constant":false,"id":102,"mutability":"mutable","name":"_roles","nameLocation":"2522:6:3","nodeType":"VariableDeclaration","scope":103,"src":"2488:40:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$93_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"typeName":{"id":101,"keyName":"role","keyNameLocation":"2504:4:3","keyType":{"id":98,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2496:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2488:33:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$93_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":100,"nodeType":"UserDefinedTypeName","pathNode":{"id":99,"name":"RoleData","nameLocations":["2512:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":93,"src":"2512:8:3"},"referencedDeclaration":93,"src":"2512:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$93_storage_ptr","typeString":"struct AccessControlUpgradeable.RoleData"}}},"visibility":"internal"}],"name":"AccessControlStorage","nameLocation":"2457:20:3","nodeType":"StructDefinition","scope":430,"src":"2450:85:3","visibility":"public"},{"constant":true,"id":106,"mutability":"constant","name":"AccessControlStorageLocation","nameLocation":"2683:28:3","nodeType":"VariableDeclaration","scope":430,"src":"2658:122:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":104,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2658:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830326464376263376465633464636565646461373735653538646435343165303861313136633663353338313563306264303238313932663762363236383030","id":105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2714:66:3","typeDescriptions":{"typeIdentifier":"t_rational_1295953201772911215391058989745868821651057887752387839782086074958115661824_by_1","typeString":"int_const 1295...(68 digits omitted)...1824"},"value":"0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800"},"visibility":"private"},{"body":{"id":113,"nodeType":"Block","src":"2877:87:3","statements":[{"AST":{"nativeSrc":"2896:62:3","nodeType":"YulBlock","src":"2896:62:3","statements":[{"nativeSrc":"2910:38:3","nodeType":"YulAssignment","src":"2910:38:3","value":{"name":"AccessControlStorageLocation","nativeSrc":"2920:28:3","nodeType":"YulIdentifier","src":"2920:28:3"},"variableNames":[{"name":"$.slot","nativeSrc":"2910:6:3","nodeType":"YulIdentifier","src":"2910:6:3"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":110,"isOffset":false,"isSlot":true,"src":"2910:6:3","suffix":"slot","valueSize":1},{"declaration":106,"isOffset":false,"isSlot":false,"src":"2920:28:3","valueSize":1}],"id":112,"nodeType":"InlineAssembly","src":"2887:71:3"}]},"id":114,"implemented":true,"kind":"function","modifiers":[],"name":"_getAccessControlStorage","nameLocation":"2796:24:3","nodeType":"FunctionDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[],"src":"2820:2:3"},"returnParameters":{"id":111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":110,"mutability":"mutable","name":"$","nameLocation":"2874:1:3","nodeType":"VariableDeclaration","scope":114,"src":"2845:30:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$103_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":109,"nodeType":"UserDefinedTypeName","pathNode":{"id":108,"name":"AccessControlStorage","nameLocations":["2845:20:3"],"nodeType":"IdentifierPath","referencedDeclaration":103,"src":"2845:20:3"},"referencedDeclaration":103,"src":"2845:20:3","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$103_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"src":"2844:32:3"},"scope":430,"src":"2787:177:3","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":124,"nodeType":"Block","src":"3181:44:3","statements":[{"expression":{"arguments":[{"id":120,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"3202:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":119,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[197,218],"referencedDeclaration":197,"src":"3191:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3191:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":122,"nodeType":"ExpressionStatement","src":"3191:16:3"},{"id":123,"nodeType":"PlaceholderStatement","src":"3217:1:3"}]},"documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"2970:174:3","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":125,"name":"onlyRole","nameLocation":"3158:8:3","nodeType":"ModifierDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"role","nameLocation":"3175:4:3","nodeType":"VariableDeclaration","scope":125,"src":"3167:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3167:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3166:14:3"},"src":"3149:76:3","virtual":false,"visibility":"internal"},{"body":{"id":130,"nodeType":"Block","src":"3289:7:3","statements":[]},"id":131,"implemented":true,"kind":"function","modifiers":[{"id":128,"kind":"modifierInvocation","modifierName":{"id":127,"name":"onlyInitializing","nameLocations":["3272:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":788,"src":"3272:16:3"},"nodeType":"ModifierInvocation","src":"3272:16:3"}],"name":"__AccessControl_init","nameLocation":"3240:20:3","nodeType":"FunctionDefinition","parameters":{"id":126,"nodeType":"ParameterList","parameters":[],"src":"3260:2:3"},"returnParameters":{"id":129,"nodeType":"ParameterList","parameters":[],"src":"3289:0:3"},"scope":430,"src":"3231:65:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":136,"nodeType":"Block","src":"3370:7:3","statements":[]},"id":137,"implemented":true,"kind":"function","modifiers":[{"id":134,"kind":"modifierInvocation","modifierName":{"id":133,"name":"onlyInitializing","nameLocations":["3353:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":788,"src":"3353:16:3"},"nodeType":"ModifierInvocation","src":"3353:16:3"}],"name":"__AccessControl_init_unchained","nameLocation":"3311:30:3","nodeType":"FunctionDefinition","parameters":{"id":132,"nodeType":"ParameterList","parameters":[],"src":"3341:2:3"},"returnParameters":{"id":135,"nodeType":"ParameterList","parameters":[],"src":"3370:0:3"},"scope":430,"src":"3302:75:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2446],"body":{"id":158,"nodeType":"Block","src":"3534:111:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":146,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"3551:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":148,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"3571:14:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$2530_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$2530_$","typeString":"type(contract IAccessControl)"}],"id":147,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3566:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3566:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$2530","typeString":"type(contract IAccessControl)"}},"id":150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3587:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"3566:32:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3551:47:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":154,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"3626:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":152,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3602:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlUpgradeable_$430_$","typeString":"type(contract super AccessControlUpgradeable)"}},"id":153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3608:17:3","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2446,"src":"3602:23:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3602:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3551:87:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":145,"id":157,"nodeType":"Return","src":"3544:94:3"}]},"documentation":{"id":138,"nodeType":"StructuredDocumentation","src":"3382:56:3","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":159,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"3452:17:3","nodeType":"FunctionDefinition","overrides":{"id":142,"nodeType":"OverrideSpecifier","overrides":[],"src":"3510:8:3"},"parameters":{"id":141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":140,"mutability":"mutable","name":"interfaceId","nameLocation":"3477:11:3","nodeType":"VariableDeclaration","scope":159,"src":"3470:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":139,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3470:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3469:20:3"},"returnParameters":{"id":145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":144,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":159,"src":"3528:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":143,"name":"bool","nodeType":"ElementaryTypeName","src":"3528:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3527:6:3"},"scope":430,"src":"3443:202:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2497],"body":{"id":183,"nodeType":"Block","src":"3815:124:3","statements":[{"assignments":[171],"declarations":[{"constant":false,"id":171,"mutability":"mutable","name":"$","nameLocation":"3854:1:3","nodeType":"VariableDeclaration","scope":183,"src":"3825:30:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$103_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":170,"nodeType":"UserDefinedTypeName","pathNode":{"id":169,"name":"AccessControlStorage","nameLocations":["3825:20:3"],"nodeType":"IdentifierPath","referencedDeclaration":103,"src":"3825:20:3"},"referencedDeclaration":103,"src":"3825:20:3","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$103_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":174,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":172,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":114,"src":"3858:24:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$103_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3858:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$103_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3825:59:3"},{"expression":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":175,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"3901:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$103_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":176,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3903:6:3","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":102,"src":"3901:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$93_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":178,"indexExpression":{"id":177,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"3910:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$93_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3916:7:3","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":90,"src":"3901:22:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":181,"indexExpression":{"id":180,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"3924:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:31:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":168,"id":182,"nodeType":"Return","src":"3894:38:3"}]},"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"3651:76:3","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":184,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"3741:7:3","nodeType":"FunctionDefinition","parameters":{"id":165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"role","nameLocation":"3757:4:3","nodeType":"VariableDeclaration","scope":184,"src":"3749:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":161,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3749:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":164,"mutability":"mutable","name":"account","nameLocation":"3771:7:3","nodeType":"VariableDeclaration","scope":184,"src":"3763:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"3763:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3748:31:3"},"returnParameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":184,"src":"3809:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":166,"name":"bool","nodeType":"ElementaryTypeName","src":"3809:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3808:6:3"},"scope":430,"src":"3732:207:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":196,"nodeType":"Block","src":"4204:47:3","statements":[{"expression":{"arguments":[{"id":191,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"4225:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":192,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"4231:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4231:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":190,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[197,218],"referencedDeclaration":218,"src":"4214:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":195,"nodeType":"ExpressionStatement","src":"4214:30:3"}]},"documentation":{"id":185,"nodeType":"StructuredDocumentation","src":"3945:198:3","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":197,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"4157:10:3","nodeType":"FunctionDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"role","nameLocation":"4176:4:3","nodeType":"VariableDeclaration","scope":197,"src":"4168:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":186,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:14:3"},"returnParameters":{"id":189,"nodeType":"ParameterList","parameters":[],"src":"4204:0:3"},"scope":430,"src":"4148:103:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":217,"nodeType":"Block","src":"4454:124:3","statements":[{"condition":{"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4468:23:3","subExpression":{"arguments":[{"id":206,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"4477:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":207,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"4483:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":205,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"4469:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4469:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":216,"nodeType":"IfStatement","src":"4464:108:3","trueBody":{"id":215,"nodeType":"Block","src":"4493:79:3","statements":[{"errorCall":{"arguments":[{"id":211,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"4547:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":212,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"4556:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":210,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"4514:32:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$","typeString":"function (address,bytes32) pure returns (error)"}},"id":213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4514:47:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":214,"nodeType":"RevertStatement","src":"4507:54:3"}]}}]},"documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"4257:119:3","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":218,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"4390:10:3","nodeType":"FunctionDefinition","parameters":{"id":203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":200,"mutability":"mutable","name":"role","nameLocation":"4409:4:3","nodeType":"VariableDeclaration","scope":218,"src":"4401:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":199,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4401:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":202,"mutability":"mutable","name":"account","nameLocation":"4423:7:3","nodeType":"VariableDeclaration","scope":218,"src":"4415:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":201,"name":"address","nodeType":"ElementaryTypeName","src":"4415:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4400:31:3"},"returnParameters":{"id":204,"nodeType":"ParameterList","parameters":[],"src":"4454:0:3"},"scope":430,"src":"4381:197:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2505],"body":{"id":238,"nodeType":"Block","src":"4833:117:3","statements":[{"assignments":[228],"declarations":[{"constant":false,"id":228,"mutability":"mutable","name":"$","nameLocation":"4872:1:3","nodeType":"VariableDeclaration","scope":238,"src":"4843:30:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$103_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":227,"nodeType":"UserDefinedTypeName","pathNode":{"id":226,"name":"AccessControlStorage","nameLocations":["4843:20:3"],"nodeType":"IdentifierPath","referencedDeclaration":103,"src":"4843:20:3"},"referencedDeclaration":103,"src":"4843:20:3","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$103_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":231,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":229,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":114,"src":"4876:24:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$103_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4876:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$103_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4843:59:3"},{"expression":{"expression":{"baseExpression":{"expression":{"id":232,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"4919:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$103_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":233,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4921:6:3","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":102,"src":"4919:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$93_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":235,"indexExpression":{"id":234,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"4928:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4919:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$93_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":236,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4934:9:3","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":92,"src":"4919:24:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":225,"id":237,"nodeType":"Return","src":"4912:31:3"}]},"documentation":{"id":219,"nodeType":"StructuredDocumentation","src":"4584:170:3","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":239,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4768:12:3","nodeType":"FunctionDefinition","parameters":{"id":222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":221,"mutability":"mutable","name":"role","nameLocation":"4789:4:3","nodeType":"VariableDeclaration","scope":239,"src":"4781:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":220,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4781:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4780:14:3"},"returnParameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":224,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":239,"src":"4824:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":223,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4824:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4823:9:3"},"scope":430,"src":"4759:191:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2513],"body":{"id":257,"nodeType":"Block","src":"5340:42:3","statements":[{"expression":{"arguments":[{"id":253,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"5361:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":254,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"5367:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":252,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"5350:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5350:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":256,"nodeType":"ExpressionStatement","src":"5350:25:3"}]},"documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"4956:285:3","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":258,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":248,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"5333:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":247,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"5320:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":250,"kind":"modifierInvocation","modifierName":{"id":246,"name":"onlyRole","nameLocations":["5311:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":125,"src":"5311:8:3"},"nodeType":"ModifierInvocation","src":"5311:28:3"}],"name":"grantRole","nameLocation":"5255:9:3","nodeType":"FunctionDefinition","parameters":{"id":245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":242,"mutability":"mutable","name":"role","nameLocation":"5273:4:3","nodeType":"VariableDeclaration","scope":258,"src":"5265:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":241,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5265:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":244,"mutability":"mutable","name":"account","nameLocation":"5287:7:3","nodeType":"VariableDeclaration","scope":258,"src":"5279:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":243,"name":"address","nodeType":"ElementaryTypeName","src":"5279:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5264:31:3"},"returnParameters":{"id":251,"nodeType":"ParameterList","parameters":[],"src":"5340:0:3"},"scope":430,"src":"5246:136:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2521],"body":{"id":276,"nodeType":"Block","src":"5757:43:3","statements":[{"expression":{"arguments":[{"id":272,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"5779:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":273,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"5785:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":271,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"5767:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5767:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":275,"nodeType":"ExpressionStatement","src":"5767:26:3"}]},"documentation":{"id":259,"nodeType":"StructuredDocumentation","src":"5388:269:3","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":277,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":267,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"5750:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":266,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"5737:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5737:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":269,"kind":"modifierInvocation","modifierName":{"id":265,"name":"onlyRole","nameLocations":["5728:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":125,"src":"5728:8:3"},"nodeType":"ModifierInvocation","src":"5728:28:3"}],"name":"revokeRole","nameLocation":"5671:10:3","nodeType":"FunctionDefinition","parameters":{"id":264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":261,"mutability":"mutable","name":"role","nameLocation":"5690:4:3","nodeType":"VariableDeclaration","scope":277,"src":"5682:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":260,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5682:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":263,"mutability":"mutable","name":"account","nameLocation":"5704:7:3","nodeType":"VariableDeclaration","scope":277,"src":"5696:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":262,"name":"address","nodeType":"ElementaryTypeName","src":"5696:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5681:31:3"},"returnParameters":{"id":270,"nodeType":"ParameterList","parameters":[],"src":"5757:0:3"},"scope":430,"src":"5662:138:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2529],"body":{"id":299,"nodeType":"Block","src":"6427:166:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":285,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"6441:18:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":286,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"6463:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6463:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6441:34:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":293,"nodeType":"IfStatement","src":"6437:102:3","trueBody":{"id":292,"nodeType":"Block","src":"6477:62:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":289,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"6498:28:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":291,"nodeType":"RevertStatement","src":"6491:37:3"}]}},{"expression":{"arguments":[{"id":295,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"6561:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":296,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"6567:18:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":294,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"6549:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6549:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":298,"nodeType":"ExpressionStatement","src":"6549:37:3"}]},"documentation":{"id":278,"nodeType":"StructuredDocumentation","src":"5806:537:3","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":300,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"6357:12:3","nodeType":"FunctionDefinition","parameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":280,"mutability":"mutable","name":"role","nameLocation":"6378:4:3","nodeType":"VariableDeclaration","scope":300,"src":"6370:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":279,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6370:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":282,"mutability":"mutable","name":"callerConfirmation","nameLocation":"6392:18:3","nodeType":"VariableDeclaration","scope":300,"src":"6384:26:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"6384:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6369:42:3"},"returnParameters":{"id":284,"nodeType":"ParameterList","parameters":[],"src":"6427:0:3"},"scope":430,"src":"6348:245:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":335,"nodeType":"Block","src":"6791:245:3","statements":[{"assignments":[310],"declarations":[{"constant":false,"id":310,"mutability":"mutable","name":"$","nameLocation":"6830:1:3","nodeType":"VariableDeclaration","scope":335,"src":"6801:30:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$103_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":309,"nodeType":"UserDefinedTypeName","pathNode":{"id":308,"name":"AccessControlStorage","nameLocations":["6801:20:3"],"nodeType":"IdentifierPath","referencedDeclaration":103,"src":"6801:20:3"},"referencedDeclaration":103,"src":"6801:20:3","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$103_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":313,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":311,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":114,"src":"6834:24:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$103_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6834:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$103_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6801:59:3"},{"assignments":[315],"declarations":[{"constant":false,"id":315,"mutability":"mutable","name":"previousAdminRole","nameLocation":"6878:17:3","nodeType":"VariableDeclaration","scope":335,"src":"6870:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6870:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":319,"initialValue":{"arguments":[{"id":317,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"6911:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":316,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"6898:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6898:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6870:46:3"},{"expression":{"id":327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":320,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"6926:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$103_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":323,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6928:6:3","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":102,"src":"6926:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$93_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":324,"indexExpression":{"id":322,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"6935:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6926:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$93_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":325,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6941:9:3","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":92,"src":"6926:24:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":326,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6953:9:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6926:36:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":328,"nodeType":"ExpressionStatement","src":"6926:36:3"},{"eventCall":{"arguments":[{"id":330,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"6994:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":331,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"7000:17:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":332,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"7019:9:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":329,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"6977:16:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6977:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":334,"nodeType":"EmitStatement","src":"6972:57:3"}]},"documentation":{"id":301,"nodeType":"StructuredDocumentation","src":"6599:114:3","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":336,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"6727:13:3","nodeType":"FunctionDefinition","parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":303,"mutability":"mutable","name":"role","nameLocation":"6749:4:3","nodeType":"VariableDeclaration","scope":336,"src":"6741:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6741:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":305,"mutability":"mutable","name":"adminRole","nameLocation":"6763:9:3","nodeType":"VariableDeclaration","scope":336,"src":"6755:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":304,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6755:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6740:33:3"},"returnParameters":{"id":307,"nodeType":"ParameterList","parameters":[],"src":"6791:0:3"},"scope":430,"src":"6718:318:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":382,"nodeType":"Block","src":"7353:304:3","statements":[{"assignments":[348],"declarations":[{"constant":false,"id":348,"mutability":"mutable","name":"$","nameLocation":"7392:1:3","nodeType":"VariableDeclaration","scope":382,"src":"7363:30:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$103_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":347,"nodeType":"UserDefinedTypeName","pathNode":{"id":346,"name":"AccessControlStorage","nameLocations":["7363:20:3"],"nodeType":"IdentifierPath","referencedDeclaration":103,"src":"7363:20:3"},"referencedDeclaration":103,"src":"7363:20:3","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$103_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":351,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":349,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":114,"src":"7396:24:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$103_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7396:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$103_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7363:59:3"},{"condition":{"id":356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7436:23:3","subExpression":{"arguments":[{"id":353,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"7445:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":354,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"7451:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":352,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"7437:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7437:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":380,"nodeType":"Block","src":"7614:37:3","statements":[{"expression":{"hexValue":"66616c7365","id":378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7635:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":345,"id":379,"nodeType":"Return","src":"7628:12:3"}]},"id":381,"nodeType":"IfStatement","src":"7432:219:3","trueBody":{"id":377,"nodeType":"Block","src":"7461:147:3","statements":[{"expression":{"id":366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":357,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"7475:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$103_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":360,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7477:6:3","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":102,"src":"7475:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$93_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":361,"indexExpression":{"id":359,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"7484:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7475:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$93_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":362,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7490:7:3","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":90,"src":"7475:22:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":364,"indexExpression":{"id":363,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"7498:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7475:31:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7509:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7475:38:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":367,"nodeType":"ExpressionStatement","src":"7475:38:3"},{"eventCall":{"arguments":[{"id":369,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"7544:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":370,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"7550:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":371,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"7559:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7559:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":368,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"7532:11:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7532:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":374,"nodeType":"EmitStatement","src":"7527:45:3"},{"expression":{"hexValue":"74727565","id":375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7593:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":345,"id":376,"nodeType":"Return","src":"7586:11:3"}]}}]},"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"7042:223:3","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":383,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7279:10:3","nodeType":"FunctionDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"mutability":"mutable","name":"role","nameLocation":"7298:4:3","nodeType":"VariableDeclaration","scope":383,"src":"7290:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7290:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"account","nameLocation":"7312:7:3","nodeType":"VariableDeclaration","scope":383,"src":"7304:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"7304:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7289:31:3"},"returnParameters":{"id":345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":383,"src":"7347:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":343,"name":"bool","nodeType":"ElementaryTypeName","src":"7347:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7346:6:3"},"scope":430,"src":"7270:387:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":428,"nodeType":"Block","src":"7978:304:3","statements":[{"assignments":[395],"declarations":[{"constant":false,"id":395,"mutability":"mutable","name":"$","nameLocation":"8017:1:3","nodeType":"VariableDeclaration","scope":428,"src":"7988:30:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$103_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":394,"nodeType":"UserDefinedTypeName","pathNode":{"id":393,"name":"AccessControlStorage","nameLocations":["7988:20:3"],"nodeType":"IdentifierPath","referencedDeclaration":103,"src":"7988:20:3"},"referencedDeclaration":103,"src":"7988:20:3","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$103_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":398,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":396,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":114,"src":"8021:24:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$103_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8021:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$103_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7988:59:3"},{"condition":{"arguments":[{"id":400,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"8069:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":401,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"8075:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":399,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"8061:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8061:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":426,"nodeType":"Block","src":"8239:37:3","statements":[{"expression":{"hexValue":"66616c7365","id":424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8260:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":392,"id":425,"nodeType":"Return","src":"8253:12:3"}]},"id":427,"nodeType":"IfStatement","src":"8057:219:3","trueBody":{"id":423,"nodeType":"Block","src":"8085:148:3","statements":[{"expression":{"id":412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":403,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"8099:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$103_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":406,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8101:6:3","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":102,"src":"8099:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$93_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":407,"indexExpression":{"id":405,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"8108:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8099:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$93_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":408,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8114:7:3","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":90,"src":"8099:22:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":410,"indexExpression":{"id":409,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"8122:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8099:31:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8133:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8099:39:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":413,"nodeType":"ExpressionStatement","src":"8099:39:3"},{"eventCall":{"arguments":[{"id":415,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"8169:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":416,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"8175:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":417,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"8184:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8184:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":414,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"8157:11:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8157:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":420,"nodeType":"EmitStatement","src":"8152:45:3"},{"expression":{"hexValue":"74727565","id":421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8218:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":392,"id":422,"nodeType":"Return","src":"8211:11:3"}]}}]},"documentation":{"id":384,"nodeType":"StructuredDocumentation","src":"7663:226:3","text":" @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":429,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"7903:11:3","nodeType":"FunctionDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":386,"mutability":"mutable","name":"role","nameLocation":"7923:4:3","nodeType":"VariableDeclaration","scope":429,"src":"7915:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":385,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7915:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"account","nameLocation":"7937:7:3","nodeType":"VariableDeclaration","scope":429,"src":"7929:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":387,"name":"address","nodeType":"ElementaryTypeName","src":"7929:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7914:31:3"},"returnParameters":{"id":392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":429,"src":"7972:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":390,"name":"bool","nodeType":"ElementaryTypeName","src":"7972:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7971:6:3"},"scope":430,"src":"7894:388:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":431,"src":"2090:6194:3","usedErrors":[642,645,2457,2460],"usedEvents":[650,2469,2478,2487]}],"src":"108:8177:3"},"id":3},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[2118],"Initializable":[893],"OwnableUpgradeable":[625]},"id":626,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":432,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":434,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":626,"sourceUnit":2119,"src":"128:67:4","symbolAliases":[{"foreign":{"id":433,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"136:18:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":436,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":626,"sourceUnit":894,"src":"196:63:4","symbolAliases":[{"foreign":{"id":435,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"204:13:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":438,"name":"Initializable","nameLocations":["789:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":893,"src":"789:13:4"},"id":439,"nodeType":"InheritanceSpecifier","src":"789:13:4"},{"baseName":{"id":440,"name":"ContextUpgradeable","nameLocations":["804:18:4"],"nodeType":"IdentifierPath","referencedDeclaration":2118,"src":"804:18:4"},"id":441,"nodeType":"InheritanceSpecifier","src":"804:18:4"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":437,"nodeType":"StructuredDocumentation","src":"261:487:4","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":625,"linearizedBaseContracts":[625,2118,893],"name":"OwnableUpgradeable","nameLocation":"767:18:4","nodeType":"ContractDefinition","nodes":[{"canonicalName":"OwnableUpgradeable.OwnableStorage","documentation":{"id":442,"nodeType":"StructuredDocumentation","src":"829:65:4","text":"@custom:storage-location erc7201:openzeppelin.storage.Ownable"},"id":445,"members":[{"constant":false,"id":444,"mutability":"mutable","name":"_owner","nameLocation":"939:6:4","nodeType":"VariableDeclaration","scope":445,"src":"931:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":443,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"OwnableStorage","nameLocation":"906:14:4","nodeType":"StructDefinition","scope":625,"src":"899:53:4","visibility":"public"},{"constant":true,"id":448,"mutability":"constant","name":"OwnableStorageLocation","nameLocation":"1094:22:4","nodeType":"VariableDeclaration","scope":625,"src":"1069:116:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":446,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1069:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030","id":447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1119:66:4","typeDescriptions":{"typeIdentifier":"t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1","typeString":"int_const 6517...(69 digits omitted)...7328"},"value":"0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"},"visibility":"private"},{"body":{"id":455,"nodeType":"Block","src":"1270:81:4","statements":[{"AST":{"nativeSrc":"1289:56:4","nodeType":"YulBlock","src":"1289:56:4","statements":[{"nativeSrc":"1303:32:4","nodeType":"YulAssignment","src":"1303:32:4","value":{"name":"OwnableStorageLocation","nativeSrc":"1313:22:4","nodeType":"YulIdentifier","src":"1313:22:4"},"variableNames":[{"name":"$.slot","nativeSrc":"1303:6:4","nodeType":"YulIdentifier","src":"1303:6:4"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":452,"isOffset":false,"isSlot":true,"src":"1303:6:4","suffix":"slot","valueSize":1},{"declaration":448,"isOffset":false,"isSlot":false,"src":"1313:22:4","valueSize":1}],"id":454,"nodeType":"InlineAssembly","src":"1280:65:4"}]},"id":456,"implemented":true,"kind":"function","modifiers":[],"name":"_getOwnableStorage","nameLocation":"1201:18:4","nodeType":"FunctionDefinition","parameters":{"id":449,"nodeType":"ParameterList","parameters":[],"src":"1219:2:4"},"returnParameters":{"id":453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":452,"mutability":"mutable","name":"$","nameLocation":"1267:1:4","nodeType":"VariableDeclaration","scope":456,"src":"1244:24:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$445_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":451,"nodeType":"UserDefinedTypeName","pathNode":{"id":450,"name":"OwnableStorage","nameLocations":["1244:14:4"],"nodeType":"IdentifierPath","referencedDeclaration":445,"src":"1244:14:4"},"referencedDeclaration":445,"src":"1244:14:4","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$445_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"src":"1243:26:4"},"scope":625,"src":"1192:159:4","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":457,"nodeType":"StructuredDocumentation","src":"1357:85:4","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":461,"name":"OwnableUnauthorizedAccount","nameLocation":"1453:26:4","nodeType":"ErrorDefinition","parameters":{"id":460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":459,"mutability":"mutable","name":"account","nameLocation":"1488:7:4","nodeType":"VariableDeclaration","scope":461,"src":"1480:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":458,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1479:17:4"},"src":"1447:50:4"},{"documentation":{"id":462,"nodeType":"StructuredDocumentation","src":"1503:82:4","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":466,"name":"OwnableInvalidOwner","nameLocation":"1596:19:4","nodeType":"ErrorDefinition","parameters":{"id":465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":464,"mutability":"mutable","name":"owner","nameLocation":"1624:5:4","nodeType":"VariableDeclaration","scope":466,"src":"1616:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":463,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1615:15:4"},"src":"1590:41:4"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":472,"name":"OwnershipTransferred","nameLocation":"1643:20:4","nodeType":"EventDefinition","parameters":{"id":471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":468,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1680:13:4","nodeType":"VariableDeclaration","scope":472,"src":"1664:29:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"1664:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":470,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1711:8:4","nodeType":"VariableDeclaration","scope":472,"src":"1695:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":469,"name":"address","nodeType":"ElementaryTypeName","src":"1695:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:57:4"},"src":"1637:84:4"},{"body":{"id":484,"nodeType":"Block","src":"1919:55:4","statements":[{"expression":{"arguments":[{"id":481,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"1954:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":480,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"1929:24:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:38:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":483,"nodeType":"ExpressionStatement","src":"1929:38:4"}]},"documentation":{"id":473,"nodeType":"StructuredDocumentation","src":"1727:115:4","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":485,"implemented":true,"kind":"function","modifiers":[{"id":478,"kind":"modifierInvocation","modifierName":{"id":477,"name":"onlyInitializing","nameLocations":["1902:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":788,"src":"1902:16:4"},"nodeType":"ModifierInvocation","src":"1902:16:4"}],"name":"__Ownable_init","nameLocation":"1856:14:4","nodeType":"FunctionDefinition","parameters":{"id":476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":475,"mutability":"mutable","name":"initialOwner","nameLocation":"1879:12:4","nodeType":"VariableDeclaration","scope":485,"src":"1871:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":474,"name":"address","nodeType":"ElementaryTypeName","src":"1871:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1870:22:4"},"returnParameters":{"id":479,"nodeType":"ParameterList","parameters":[],"src":"1919:0:4"},"scope":625,"src":"1847:127:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":511,"nodeType":"Block","src":"2062:153:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":492,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"2076:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2092:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"2092:7:4","typeDescriptions":{}}},"id":496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2076:26:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":506,"nodeType":"IfStatement","src":"2072:95:4","trueBody":{"id":505,"nodeType":"Block","src":"2104:63:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2153:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2145:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":499,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:4","typeDescriptions":{}}},"id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":498,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"2125:19:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":504,"nodeType":"RevertStatement","src":"2118:38:4"}]}},{"expression":{"arguments":[{"id":508,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"2195:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":507,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"2176:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":510,"nodeType":"ExpressionStatement","src":"2176:32:4"}]},"id":512,"implemented":true,"kind":"function","modifiers":[{"id":490,"kind":"modifierInvocation","modifierName":{"id":489,"name":"onlyInitializing","nameLocations":["2045:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":788,"src":"2045:16:4"},"nodeType":"ModifierInvocation","src":"2045:16:4"}],"name":"__Ownable_init_unchained","nameLocation":"1989:24:4","nodeType":"FunctionDefinition","parameters":{"id":488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":487,"mutability":"mutable","name":"initialOwner","nameLocation":"2022:12:4","nodeType":"VariableDeclaration","scope":512,"src":"2014:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":486,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2013:22:4"},"returnParameters":{"id":491,"nodeType":"ParameterList","parameters":[],"src":"2062:0:4"},"scope":625,"src":"1980:235:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":519,"nodeType":"Block","src":"2324:41:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":515,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"2334:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":517,"nodeType":"ExpressionStatement","src":"2334:13:4"},{"id":518,"nodeType":"PlaceholderStatement","src":"2357:1:4"}]},"documentation":{"id":513,"nodeType":"StructuredDocumentation","src":"2221:77:4","text":" @dev Throws if called by any account other than the owner."},"id":520,"name":"onlyOwner","nameLocation":"2312:9:4","nodeType":"ModifierDefinition","parameters":{"id":514,"nodeType":"ParameterList","parameters":[],"src":"2321:2:4"},"src":"2303:62:4","virtual":false,"visibility":"internal"},{"body":{"id":535,"nodeType":"Block","src":"2496:89:4","statements":[{"assignments":[528],"declarations":[{"constant":false,"id":528,"mutability":"mutable","name":"$","nameLocation":"2529:1:4","nodeType":"VariableDeclaration","scope":535,"src":"2506:24:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$445_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":527,"nodeType":"UserDefinedTypeName","pathNode":{"id":526,"name":"OwnableStorage","nameLocations":["2506:14:4"],"nodeType":"IdentifierPath","referencedDeclaration":445,"src":"2506:14:4"},"referencedDeclaration":445,"src":"2506:14:4","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$445_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":531,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":529,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"2533:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$445_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2533:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$445_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2506:47:4"},{"expression":{"expression":{"id":532,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"2570:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$445_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":533,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2572:6:4","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":444,"src":"2570:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":525,"id":534,"nodeType":"Return","src":"2563:15:4"}]},"documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"2371:65:4","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":536,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"2450:5:4","nodeType":"FunctionDefinition","parameters":{"id":522,"nodeType":"ParameterList","parameters":[],"src":"2455:2:4"},"returnParameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":536,"src":"2487:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":523,"name":"address","nodeType":"ElementaryTypeName","src":"2487:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2486:9:4"},"scope":625,"src":"2441:144:4","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":552,"nodeType":"Block","src":"2703:117:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":540,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"2717:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:7:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":542,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"2728:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2717:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":551,"nodeType":"IfStatement","src":"2713:101:4","trueBody":{"id":550,"nodeType":"Block","src":"2742:72:4","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":546,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"2790:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2790:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":545,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"2763:26:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2763:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":549,"nodeType":"RevertStatement","src":"2756:47:4"}]}}]},"documentation":{"id":537,"nodeType":"StructuredDocumentation","src":"2591:62:4","text":" @dev Throws if the sender is not the owner."},"id":553,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"2667:11:4","nodeType":"FunctionDefinition","parameters":{"id":538,"nodeType":"ParameterList","parameters":[],"src":"2678:2:4"},"returnParameters":{"id":539,"nodeType":"ParameterList","parameters":[],"src":"2703:0:4"},"scope":625,"src":"2658:162:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":566,"nodeType":"Block","src":"3209:47:4","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3246:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3238:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":560,"name":"address","nodeType":"ElementaryTypeName","src":"3238:7:4","typeDescriptions":{}}},"id":563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3238:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":559,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"3219:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3219:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":565,"nodeType":"ExpressionStatement","src":"3219:30:4"}]},"documentation":{"id":554,"nodeType":"StructuredDocumentation","src":"2826:324:4","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":567,"implemented":true,"kind":"function","modifiers":[{"id":557,"kind":"modifierInvocation","modifierName":{"id":556,"name":"onlyOwner","nameLocations":["3199:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":520,"src":"3199:9:4"},"nodeType":"ModifierInvocation","src":"3199:9:4"}],"name":"renounceOwnership","nameLocation":"3164:17:4","nodeType":"FunctionDefinition","parameters":{"id":555,"nodeType":"ParameterList","parameters":[],"src":"3181:2:4"},"returnParameters":{"id":558,"nodeType":"ParameterList","parameters":[],"src":"3209:0:4"},"scope":625,"src":"3155:101:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":594,"nodeType":"Block","src":"3475:145:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":575,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"3489:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3509:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3501:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:4","typeDescriptions":{}}},"id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3489:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":589,"nodeType":"IfStatement","src":"3485:91:4","trueBody":{"id":588,"nodeType":"Block","src":"3513:63:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3562:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3554:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":582,"name":"address","nodeType":"ElementaryTypeName","src":"3554:7:4","typeDescriptions":{}}},"id":585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":581,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"3534:19:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":587,"nodeType":"RevertStatement","src":"3527:38:4"}]}},{"expression":{"arguments":[{"id":591,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"3604:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":590,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"3585:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3585:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":593,"nodeType":"ExpressionStatement","src":"3585:28:4"}]},"documentation":{"id":568,"nodeType":"StructuredDocumentation","src":"3262:138:4","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":595,"implemented":true,"kind":"function","modifiers":[{"id":573,"kind":"modifierInvocation","modifierName":{"id":572,"name":"onlyOwner","nameLocations":["3465:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":520,"src":"3465:9:4"},"nodeType":"ModifierInvocation","src":"3465:9:4"}],"name":"transferOwnership","nameLocation":"3414:17:4","nodeType":"FunctionDefinition","parameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":570,"mutability":"mutable","name":"newOwner","nameLocation":"3440:8:4","nodeType":"VariableDeclaration","scope":595,"src":"3432:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":569,"name":"address","nodeType":"ElementaryTypeName","src":"3432:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3431:18:4"},"returnParameters":{"id":574,"nodeType":"ParameterList","parameters":[],"src":"3475:0:4"},"scope":625,"src":"3405:215:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":623,"nodeType":"Block","src":"3837:185:4","statements":[{"assignments":[603],"declarations":[{"constant":false,"id":603,"mutability":"mutable","name":"$","nameLocation":"3870:1:4","nodeType":"VariableDeclaration","scope":623,"src":"3847:24:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$445_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":602,"nodeType":"UserDefinedTypeName","pathNode":{"id":601,"name":"OwnableStorage","nameLocations":["3847:14:4"],"nodeType":"IdentifierPath","referencedDeclaration":445,"src":"3847:14:4"},"referencedDeclaration":445,"src":"3847:14:4","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$445_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":606,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":604,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"3874:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$445_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3874:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$445_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3847:47:4"},{"assignments":[608],"declarations":[{"constant":false,"id":608,"mutability":"mutable","name":"oldOwner","nameLocation":"3912:8:4","nodeType":"VariableDeclaration","scope":623,"src":"3904:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":607,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":611,"initialValue":{"expression":{"id":609,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"3923:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$445_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":610,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3925:6:4","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":444,"src":"3923:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3904:27:4"},{"expression":{"id":616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":612,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"3941:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$445_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":614,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3943:6:4","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":444,"src":"3941:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":615,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"3952:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3941:19:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":617,"nodeType":"ExpressionStatement","src":"3941:19:4"},{"eventCall":{"arguments":[{"id":619,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"3996:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":620,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"4006:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":618,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"3975:20:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3975:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":622,"nodeType":"EmitStatement","src":"3970:45:4"}]},"documentation":{"id":596,"nodeType":"StructuredDocumentation","src":"3626:143:4","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":624,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"3783:18:4","nodeType":"FunctionDefinition","parameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"newOwner","nameLocation":"3810:8:4","nodeType":"VariableDeclaration","scope":624,"src":"3802:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":597,"name":"address","nodeType":"ElementaryTypeName","src":"3802:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3801:18:4"},"returnParameters":{"id":600,"nodeType":"ParameterList","parameters":[],"src":"3837:0:4"},"scope":625,"src":"3774:248:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":626,"src":"749:3275:4","usedErrors":[461,466,642,645],"usedEvents":[472,650]}],"src":"102:3923:4"},"id":4},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[893]},"id":894,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":627,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:5"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":628,"nodeType":"StructuredDocumentation","src":"139:2209:5","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":893,"linearizedBaseContracts":[893],"name":"Initializable","nameLocation":"2367:13:5","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":629,"nodeType":"StructuredDocumentation","src":"2387:293:5","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":636,"members":[{"constant":false,"id":632,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:5","nodeType":"VariableDeclaration","scope":636,"src":"2813:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":631,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":635,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:5","nodeType":"VariableDeclaration","scope":636,"src":"2950:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":634,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:5","nodeType":"StructDefinition","scope":893,"src":"2685:290:5","visibility":"public"},{"constant":true,"id":639,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:5","nodeType":"VariableDeclaration","scope":893,"src":"3098:115:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":637,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:5","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":640,"nodeType":"StructuredDocumentation","src":"3220:60:5","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":642,"name":"InvalidInitialization","nameLocation":"3291:21:5","nodeType":"ErrorDefinition","parameters":{"id":641,"nodeType":"ParameterList","parameters":[],"src":"3312:2:5"},"src":"3285:30:5"},{"documentation":{"id":643,"nodeType":"StructuredDocumentation","src":"3321:57:5","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":645,"name":"NotInitializing","nameLocation":"3389:15:5","nodeType":"ErrorDefinition","parameters":{"id":644,"nodeType":"ParameterList","parameters":[],"src":"3404:2:5"},"src":"3383:24:5"},{"anonymous":false,"documentation":{"id":646,"nodeType":"StructuredDocumentation","src":"3413:90:5","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":650,"name":"Initialized","nameLocation":"3514:11:5","nodeType":"EventDefinition","parameters":{"id":649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":648,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:5","nodeType":"VariableDeclaration","scope":650,"src":"3526:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":647,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:5"},"src":"3508:34:5"},{"body":{"id":732,"nodeType":"Block","src":"4092:1079:5","statements":[{"assignments":[655],"declarations":[{"constant":false,"id":655,"mutability":"mutable","name":"$","nameLocation":"4187:1:5","nodeType":"VariableDeclaration","scope":732,"src":"4158:30:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$636_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":654,"nodeType":"UserDefinedTypeName","pathNode":{"id":653,"name":"InitializableStorage","nameLocations":["4158:20:5"],"nodeType":"IdentifierPath","referencedDeclaration":636,"src":"4158:20:5"},"referencedDeclaration":636,"src":"4158:20:5","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$636_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":658,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":656,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"4191:24:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$636_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$636_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:5"},{"assignments":[660],"declarations":[{"constant":false,"id":660,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:5","nodeType":"VariableDeclaration","scope":732,"src":"4279:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":659,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":664,"initialValue":{"id":663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:5","subExpression":{"expression":{"id":661,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"4302:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$636_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":662,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:5","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":635,"src":"4302:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:5"},{"assignments":[666],"declarations":[{"constant":false,"id":666,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:5","nodeType":"VariableDeclaration","scope":732,"src":"4327:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":665,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":669,"initialValue":{"expression":{"id":667,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"4348:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$636_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":668,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:5","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":632,"src":"4348:14:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:5"},{"assignments":[671],"declarations":[{"constant":false,"id":671,"mutability":"mutable","name":"initialSetup","nameLocation":"4709:12:5","nodeType":"VariableDeclaration","scope":732,"src":"4704:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":670,"name":"bool","nodeType":"ElementaryTypeName","src":"4704:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":677,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":672,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"4724:11:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4739:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4724:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":675,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"4744:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4724:34:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4704:54:5"},{"assignments":[679],"declarations":[{"constant":false,"id":679,"mutability":"mutable","name":"construction","nameLocation":"4773:12:5","nodeType":"VariableDeclaration","scope":732,"src":"4768:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":678,"name":"bool","nodeType":"ElementaryTypeName","src":"4768:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":692,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":680,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"4788:11:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4803:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4788:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":685,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4816:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$893","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$893","typeString":"contract Initializable"}],"id":684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4808:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":683,"name":"address","nodeType":"ElementaryTypeName","src":"4808:7:5","typeDescriptions":{}}},"id":686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4808:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:4:5","memberName":"code","nodeType":"MemberAccess","src":"4808:18:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4827:6:5","memberName":"length","nodeType":"MemberAccess","src":"4808:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4837:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4808:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4788:50:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4768:70:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4853:13:5","subExpression":{"id":693,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"4854:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4870:13:5","subExpression":{"id":695,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"4871:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4853:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":702,"nodeType":"IfStatement","src":"4849:91:5","trueBody":{"id":701,"nodeType":"Block","src":"4885:55:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":698,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"4906:21:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4906:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":700,"nodeType":"RevertStatement","src":"4899:30:5"}]}},{"expression":{"id":707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":703,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"4949:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$636_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":705,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4951:12:5","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":632,"src":"4949:14:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4966:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4949:18:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":708,"nodeType":"ExpressionStatement","src":"4949:18:5"},{"condition":{"id":709,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"4981:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":717,"nodeType":"IfStatement","src":"4977:67:5","trueBody":{"id":716,"nodeType":"Block","src":"4997:47:5","statements":[{"expression":{"id":714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":710,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"5011:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$636_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":712,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5013:13:5","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":635,"src":"5011:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5029:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5011:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":715,"nodeType":"ExpressionStatement","src":"5011:22:5"}]}},{"id":718,"nodeType":"PlaceholderStatement","src":"5053:1:5"},{"condition":{"id":719,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"5068:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":731,"nodeType":"IfStatement","src":"5064:101:5","trueBody":{"id":730,"nodeType":"Block","src":"5084:81:5","statements":[{"expression":{"id":724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":720,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"5098:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$636_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":722,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5100:13:5","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":635,"src":"5098:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5116:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5098:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":725,"nodeType":"ExpressionStatement","src":"5098:23:5"},{"eventCall":{"arguments":[{"hexValue":"31","id":727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5152:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":726,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"5140:11:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5140:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":729,"nodeType":"EmitStatement","src":"5135:19:5"}]}}]},"documentation":{"id":651,"nodeType":"StructuredDocumentation","src":"3548:516:5","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":733,"name":"initializer","nameLocation":"4078:11:5","nodeType":"ModifierDefinition","parameters":{"id":652,"nodeType":"ParameterList","parameters":[],"src":"4089:2:5"},"src":"4069:1102:5","virtual":false,"visibility":"internal"},{"body":{"id":779,"nodeType":"Block","src":"6289:392:5","statements":[{"assignments":[740],"declarations":[{"constant":false,"id":740,"mutability":"mutable","name":"$","nameLocation":"6384:1:5","nodeType":"VariableDeclaration","scope":779,"src":"6355:30:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$636_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":739,"nodeType":"UserDefinedTypeName","pathNode":{"id":738,"name":"InitializableStorage","nameLocations":["6355:20:5"],"nodeType":"IdentifierPath","referencedDeclaration":636,"src":"6355:20:5"},"referencedDeclaration":636,"src":"6355:20:5","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$636_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":743,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":741,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"6388:24:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$636_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6388:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$636_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6355:59:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":744,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"6429:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$636_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":745,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6431:13:5","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":635,"src":"6429:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":746,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"6448:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$636_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":747,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6450:12:5","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":632,"src":"6448:14:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":748,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"6466:7:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6448:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6429:44:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":755,"nodeType":"IfStatement","src":"6425:105:5","trueBody":{"id":754,"nodeType":"Block","src":"6475:55:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":751,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"6496:21:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6496:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":753,"nodeType":"RevertStatement","src":"6489:30:5"}]}},{"expression":{"id":760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":756,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"6539:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$636_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":758,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6541:12:5","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":632,"src":"6539:14:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":759,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"6556:7:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6539:24:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":761,"nodeType":"ExpressionStatement","src":"6539:24:5"},{"expression":{"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":762,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"6573:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$636_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":764,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6575:13:5","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":635,"src":"6573:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6591:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6573:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":767,"nodeType":"ExpressionStatement","src":"6573:22:5"},{"id":768,"nodeType":"PlaceholderStatement","src":"6605:1:5"},{"expression":{"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":769,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"6616:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$636_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":771,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6618:13:5","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":635,"src":"6616:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6634:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6616:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":774,"nodeType":"ExpressionStatement","src":"6616:23:5"},{"eventCall":{"arguments":[{"id":776,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"6666:7:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":775,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"6654:11:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6654:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":778,"nodeType":"EmitStatement","src":"6649:25:5"}]},"documentation":{"id":734,"nodeType":"StructuredDocumentation","src":"5177:1068:5","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":780,"name":"reinitializer","nameLocation":"6259:13:5","nodeType":"ModifierDefinition","parameters":{"id":737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":736,"mutability":"mutable","name":"version","nameLocation":"6280:7:5","nodeType":"VariableDeclaration","scope":780,"src":"6273:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":735,"name":"uint64","nodeType":"ElementaryTypeName","src":"6273:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6272:16:5"},"src":"6250:431:5","virtual":false,"visibility":"internal"},{"body":{"id":787,"nodeType":"Block","src":"6919:48:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":783,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"6929:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6929:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":785,"nodeType":"ExpressionStatement","src":"6929:20:5"},{"id":786,"nodeType":"PlaceholderStatement","src":"6959:1:5"}]},"documentation":{"id":781,"nodeType":"StructuredDocumentation","src":"6687:199:5","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":788,"name":"onlyInitializing","nameLocation":"6900:16:5","nodeType":"ModifierDefinition","parameters":{"id":782,"nodeType":"ParameterList","parameters":[],"src":"6916:2:5"},"src":"6891:76:5","virtual":false,"visibility":"internal"},{"body":{"id":800,"nodeType":"Block","src":"7134:89:5","statements":[{"condition":{"id":794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7148:18:5","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":792,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"7149:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7149:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":799,"nodeType":"IfStatement","src":"7144:73:5","trueBody":{"id":798,"nodeType":"Block","src":"7168:49:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":795,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"7189:15:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7189:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":797,"nodeType":"RevertStatement","src":"7182:24:5"}]}}]},"documentation":{"id":789,"nodeType":"StructuredDocumentation","src":"6973:104:5","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":801,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7091:18:5","nodeType":"FunctionDefinition","parameters":{"id":790,"nodeType":"ParameterList","parameters":[],"src":"7109:2:5"},"returnParameters":{"id":791,"nodeType":"ParameterList","parameters":[],"src":"7134:0:5"},"scope":893,"src":"7082:141:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":846,"nodeType":"Block","src":"7758:373:5","statements":[{"assignments":[807],"declarations":[{"constant":false,"id":807,"mutability":"mutable","name":"$","nameLocation":"7853:1:5","nodeType":"VariableDeclaration","scope":846,"src":"7824:30:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$636_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":806,"nodeType":"UserDefinedTypeName","pathNode":{"id":805,"name":"InitializableStorage","nameLocations":["7824:20:5"],"nodeType":"IdentifierPath","referencedDeclaration":636,"src":"7824:20:5"},"referencedDeclaration":636,"src":"7824:20:5","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$636_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":810,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":808,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"7857:24:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$636_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7857:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$636_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7824:59:5"},{"condition":{"expression":{"id":811,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"7898:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$636_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":812,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7900:13:5","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":635,"src":"7898:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":817,"nodeType":"IfStatement","src":"7894:76:5","trueBody":{"id":816,"nodeType":"Block","src":"7915:55:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":813,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"7936:21:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7936:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":815,"nodeType":"RevertStatement","src":"7929:30:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":818,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"7983:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$636_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":819,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7985:12:5","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":632,"src":"7983:14:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8006:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":821,"name":"uint64","nodeType":"ElementaryTypeName","src":"8006:6:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":820,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8001:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8001:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8014:3:5","memberName":"max","nodeType":"MemberAccess","src":"8001:16:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7983:34:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":845,"nodeType":"IfStatement","src":"7979:146:5","trueBody":{"id":844,"nodeType":"Block","src":"8019:106:5","statements":[{"expression":{"id":834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":826,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"8033:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$636_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":828,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8035:12:5","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":632,"src":"8033:14:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8055:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":830,"name":"uint64","nodeType":"ElementaryTypeName","src":"8055:6:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":829,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8050:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8050:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8063:3:5","memberName":"max","nodeType":"MemberAccess","src":"8050:16:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8033:33:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":835,"nodeType":"ExpressionStatement","src":"8033:33:5"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8102:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":838,"name":"uint64","nodeType":"ElementaryTypeName","src":"8102:6:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":837,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8097:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8097:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8110:3:5","memberName":"max","nodeType":"MemberAccess","src":"8097:16:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":836,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"8085:11:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8085:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":843,"nodeType":"EmitStatement","src":"8080:34:5"}]}}]},"documentation":{"id":802,"nodeType":"StructuredDocumentation","src":"7229:475:5","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":847,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7718:20:5","nodeType":"FunctionDefinition","parameters":{"id":803,"nodeType":"ParameterList","parameters":[],"src":"7738:2:5"},"returnParameters":{"id":804,"nodeType":"ParameterList","parameters":[],"src":"7758:0:5"},"scope":893,"src":"7709:422:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":857,"nodeType":"Block","src":"8306:63:5","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":853,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"8323:24:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$636_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8323:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$636_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":855,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8350:12:5","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":632,"src":"8323:39:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":852,"id":856,"nodeType":"Return","src":"8316:46:5"}]},"documentation":{"id":848,"nodeType":"StructuredDocumentation","src":"8137:99:5","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":858,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8250:22:5","nodeType":"FunctionDefinition","parameters":{"id":849,"nodeType":"ParameterList","parameters":[],"src":"8272:2:5"},"returnParameters":{"id":852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":858,"src":"8298:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":850,"name":"uint64","nodeType":"ElementaryTypeName","src":"8298:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8297:8:5"},"scope":893,"src":"8241:128:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":868,"nodeType":"Block","src":"8541:64:5","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":864,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"8558:24:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$636_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8558:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$636_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":866,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8585:13:5","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":635,"src":"8558:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":863,"id":867,"nodeType":"Return","src":"8551:47:5"}]},"documentation":{"id":859,"nodeType":"StructuredDocumentation","src":"8375:105:5","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":869,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8494:15:5","nodeType":"FunctionDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[],"src":"8509:2:5"},"returnParameters":{"id":863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":869,"src":"8535:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":861,"name":"bool","nodeType":"ElementaryTypeName","src":"8535:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8534:6:5"},"scope":893,"src":"8485:120:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":877,"nodeType":"Block","src":"8896:45:5","statements":[{"expression":{"id":875,"name":"INITIALIZABLE_STORAGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"8913:21:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":874,"id":876,"nodeType":"Return","src":"8906:28:5"}]},"documentation":{"id":870,"nodeType":"StructuredDocumentation","src":"8611:203:5","text":" @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."},"id":878,"implemented":true,"kind":"function","modifiers":[],"name":"_initializableStorageSlot","nameLocation":"8828:25:5","nodeType":"FunctionDefinition","parameters":{"id":871,"nodeType":"ParameterList","parameters":[],"src":"8853:2:5"},"returnParameters":{"id":874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":873,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":878,"src":"8887:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":872,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8887:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8886:9:5"},"scope":893,"src":"8819:122:5","stateMutability":"pure","virtual":true,"visibility":"internal"},{"body":{"id":891,"nodeType":"Block","src":"9161:115:5","statements":[{"assignments":[886],"declarations":[{"constant":false,"id":886,"mutability":"mutable","name":"slot","nameLocation":"9179:4:5","nodeType":"VariableDeclaration","scope":891,"src":"9171:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":885,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9171:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":889,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":887,"name":"_initializableStorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"9186:25:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_bytes32_$","typeString":"function () pure returns (bytes32)"}},"id":888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9186:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9171:42:5"},{"AST":{"nativeSrc":"9232:38:5","nodeType":"YulBlock","src":"9232:38:5","statements":[{"nativeSrc":"9246:14:5","nodeType":"YulAssignment","src":"9246:14:5","value":{"name":"slot","nativeSrc":"9256:4:5","nodeType":"YulIdentifier","src":"9256:4:5"},"variableNames":[{"name":"$.slot","nativeSrc":"9246:6:5","nodeType":"YulIdentifier","src":"9246:6:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":883,"isOffset":false,"isSlot":true,"src":"9246:6:5","suffix":"slot","valueSize":1},{"declaration":886,"isOffset":false,"isSlot":false,"src":"9256:4:5","valueSize":1}],"id":890,"nodeType":"InlineAssembly","src":"9223:47:5"}]},"documentation":{"id":879,"nodeType":"StructuredDocumentation","src":"8947:67:5","text":" @dev Returns a pointer to the storage namespace."},"id":892,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"9080:24:5","nodeType":"FunctionDefinition","parameters":{"id":880,"nodeType":"ParameterList","parameters":[],"src":"9104:2:5"},"returnParameters":{"id":884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":883,"mutability":"mutable","name":"$","nameLocation":"9158:1:5","nodeType":"VariableDeclaration","scope":892,"src":"9129:30:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$636_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":882,"nodeType":"UserDefinedTypeName","pathNode":{"id":881,"name":"InitializableStorage","nameLocations":["9129:20:5"],"nodeType":"IdentifierPath","referencedDeclaration":636,"src":"9129:20:5"},"referencedDeclaration":636,"src":"9129:20:5","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$636_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"9128:32:5"},"scope":893,"src":"9071:205:5","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":894,"src":"2349:6929:5","usedErrors":[642,645],"usedEvents":[650]}],"src":"113:9166:5"},"id":5},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"ERC1967Utils":[3481],"IERC1822Proxiable":[2651],"Initializable":[893],"UUPSUpgradeable":[1075]},"id":1076,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":895,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"115:24:6"},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","id":897,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1076,"sourceUnit":2652,"src":"141:88:6","symbolAliases":[{"foreign":{"id":896,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"149:17:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","id":899,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1076,"sourceUnit":3482,"src":"230:84:6","symbolAliases":[{"foreign":{"id":898,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"238:12:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":901,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1076,"sourceUnit":894,"src":"315:50:6","symbolAliases":[{"foreign":{"id":900,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"323:13:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":903,"name":"Initializable","nameLocations":["1023:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":893,"src":"1023:13:6"},"id":904,"nodeType":"InheritanceSpecifier","src":"1023:13:6"},{"baseName":{"id":905,"name":"IERC1822Proxiable","nameLocations":["1038:17:6"],"nodeType":"IdentifierPath","referencedDeclaration":2651,"src":"1038:17:6"},"id":906,"nodeType":"InheritanceSpecifier","src":"1038:17:6"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":902,"nodeType":"StructuredDocumentation","src":"367:618:6","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."},"fullyImplemented":false,"id":1075,"linearizedBaseContracts":[1075,2651,893],"name":"UUPSUpgradeable","nameLocation":"1004:15:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":907,"nodeType":"StructuredDocumentation","src":"1062:61:6","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"id":913,"mutability":"immutable","name":"__self","nameLocation":"1154:6:6","nodeType":"VariableDeclaration","scope":1075,"src":"1128:48:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":908,"name":"address","nodeType":"ElementaryTypeName","src":"1128:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":911,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1171:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1075","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1075","typeString":"contract UUPSUpgradeable"}],"id":910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1163:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":909,"name":"address","nodeType":"ElementaryTypeName","src":"1163:7:6","typeDescriptions":{}}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"documentation":{"id":914,"nodeType":"StructuredDocumentation","src":"1183:631:6","text":" @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."},"functionSelector":"ad3cb1cc","id":917,"mutability":"constant","name":"UPGRADE_INTERFACE_VERSION","nameLocation":"1842:25:6","nodeType":"VariableDeclaration","scope":1075,"src":"1819:58:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":915,"name":"string","nodeType":"ElementaryTypeName","src":"1819:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"352e302e30","id":916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1870:7:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c","typeString":"literal_string \"5.0.0\""},"value":"5.0.0"},"visibility":"public"},{"documentation":{"id":918,"nodeType":"StructuredDocumentation","src":"1884:65:6","text":" @dev The call is from an unauthorized context."},"errorSelector":"e07c8dba","id":920,"name":"UUPSUnauthorizedCallContext","nameLocation":"1960:27:6","nodeType":"ErrorDefinition","parameters":{"id":919,"nodeType":"ParameterList","parameters":[],"src":"1987:2:6"},"src":"1954:36:6"},{"documentation":{"id":921,"nodeType":"StructuredDocumentation","src":"1996:68:6","text":" @dev The storage `slot` is unsupported as a UUID."},"errorSelector":"aa1d49a4","id":925,"name":"UUPSUnsupportedProxiableUUID","nameLocation":"2075:28:6","nodeType":"ErrorDefinition","parameters":{"id":924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":923,"mutability":"mutable","name":"slot","nameLocation":"2112:4:6","nodeType":"VariableDeclaration","scope":925,"src":"2104:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":922,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2104:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2103:14:6"},"src":"2069:49:6"},{"body":{"id":932,"nodeType":"Block","src":"2645:41:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":928,"name":"_checkProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"2655:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2655:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":930,"nodeType":"ExpressionStatement","src":"2655:13:6"},{"id":931,"nodeType":"PlaceholderStatement","src":"2678:1:6"}]},"documentation":{"id":926,"nodeType":"StructuredDocumentation","src":"2124:495:6","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":933,"name":"onlyProxy","nameLocation":"2633:9:6","nodeType":"ModifierDefinition","parameters":{"id":927,"nodeType":"ParameterList","parameters":[],"src":"2642:2:6"},"src":"2624:62:6","virtual":false,"visibility":"internal"},{"body":{"id":940,"nodeType":"Block","src":"2916:48:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":936,"name":"_checkNotDelegated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"2926:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2926:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":938,"nodeType":"ExpressionStatement","src":"2926:20:6"},{"id":939,"nodeType":"PlaceholderStatement","src":"2956:1:6"}]},"documentation":{"id":934,"nodeType":"StructuredDocumentation","src":"2692:195:6","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":941,"name":"notDelegated","nameLocation":"2901:12:6","nodeType":"ModifierDefinition","parameters":{"id":935,"nodeType":"ParameterList","parameters":[],"src":"2913:2:6"},"src":"2892:72:6","virtual":false,"visibility":"internal"},{"body":{"id":946,"nodeType":"Block","src":"3030:7:6","statements":[]},"id":947,"implemented":true,"kind":"function","modifiers":[{"id":944,"kind":"modifierInvocation","modifierName":{"id":943,"name":"onlyInitializing","nameLocations":["3013:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":788,"src":"3013:16:6"},"nodeType":"ModifierInvocation","src":"3013:16:6"}],"name":"__UUPSUpgradeable_init","nameLocation":"2979:22:6","nodeType":"FunctionDefinition","parameters":{"id":942,"nodeType":"ParameterList","parameters":[],"src":"3001:2:6"},"returnParameters":{"id":945,"nodeType":"ParameterList","parameters":[],"src":"3030:0:6"},"scope":1075,"src":"2970:67:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":952,"nodeType":"Block","src":"3113:7:6","statements":[]},"id":953,"implemented":true,"kind":"function","modifiers":[{"id":950,"kind":"modifierInvocation","modifierName":{"id":949,"name":"onlyInitializing","nameLocations":["3096:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":788,"src":"3096:16:6"},"nodeType":"ModifierInvocation","src":"3096:16:6"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"3052:32:6","nodeType":"FunctionDefinition","parameters":{"id":948,"nodeType":"ParameterList","parameters":[],"src":"3084:2:6"},"returnParameters":{"id":951,"nodeType":"ParameterList","parameters":[],"src":"3113:0:6"},"scope":1075,"src":"3043:77:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2650],"body":{"id":964,"nodeType":"Block","src":"3786:56:6","statements":[{"expression":{"expression":{"id":961,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"3803:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$3481_$","typeString":"type(library ERC1967Utils)"}},"id":962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3816:19:6","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":3202,"src":"3803:32:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":960,"id":963,"nodeType":"Return","src":"3796:39:6"}]},"documentation":{"id":954,"nodeType":"StructuredDocumentation","src":"3125:578:6","text":" @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":965,"implemented":true,"kind":"function","modifiers":[{"id":957,"kind":"modifierInvocation","modifierName":{"id":956,"name":"notDelegated","nameLocations":["3755:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":941,"src":"3755:12:6"},"nodeType":"ModifierInvocation","src":"3755:12:6"}],"name":"proxiableUUID","nameLocation":"3717:13:6","nodeType":"FunctionDefinition","parameters":{"id":955,"nodeType":"ParameterList","parameters":[],"src":"3730:2:6"},"returnParameters":{"id":960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":965,"src":"3777:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":958,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3777:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3776:9:6"},"scope":1075,"src":"3708:134:6","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":984,"nodeType":"Block","src":"4266:109:6","statements":[{"expression":{"arguments":[{"id":976,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"4294:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":975,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"4276:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4276:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":978,"nodeType":"ExpressionStatement","src":"4276:36:6"},{"expression":{"arguments":[{"id":980,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"4344:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":981,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"4363:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":979,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"4322:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:46:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":983,"nodeType":"ExpressionStatement","src":"4322:46:6"}]},"documentation":{"id":966,"nodeType":"StructuredDocumentation","src":"3848:308:6","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":985,"implemented":true,"kind":"function","modifiers":[{"id":973,"kind":"modifierInvocation","modifierName":{"id":972,"name":"onlyProxy","nameLocations":["4256:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":933,"src":"4256:9:6"},"nodeType":"ModifierInvocation","src":"4256:9:6"}],"name":"upgradeToAndCall","nameLocation":"4170:16:6","nodeType":"FunctionDefinition","parameters":{"id":971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":968,"mutability":"mutable","name":"newImplementation","nameLocation":"4195:17:6","nodeType":"VariableDeclaration","scope":985,"src":"4187:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":967,"name":"address","nodeType":"ElementaryTypeName","src":"4187:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":970,"mutability":"mutable","name":"data","nameLocation":"4227:4:6","nodeType":"VariableDeclaration","scope":985,"src":"4214:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":969,"name":"bytes","nodeType":"ElementaryTypeName","src":"4214:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4186:46:6"},"returnParameters":{"id":974,"nodeType":"ParameterList","parameters":[],"src":"4266:0:6"},"scope":1075,"src":"4161:214:6","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":1006,"nodeType":"Block","src":"4623:267:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":991,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4658:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1075","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1075","typeString":"contract UUPSUpgradeable"}],"id":990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4650:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":989,"name":"address","nodeType":"ElementaryTypeName","src":"4650:7:6","typeDescriptions":{}}},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4650:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":993,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"4667:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4650:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":995,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"4728:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$3481_$","typeString":"type(library ERC1967Utils)"}},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4741:17:6","memberName":"getImplementation","nodeType":"MemberAccess","referencedDeclaration":3233,"src":"4728:30:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4728:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":998,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"4764:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4728:42:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4650:120:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1005,"nodeType":"IfStatement","src":"4633:251:6","trueBody":{"id":1004,"nodeType":"Block","src":"4823:61:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1001,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"4844:27:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4844:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1003,"nodeType":"RevertStatement","src":"4837:36:6"}]}}]},"documentation":{"id":986,"nodeType":"StructuredDocumentation","src":"4381:192:6","text":" @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC-1967 compliant implementation pointing to self."},"id":1007,"implemented":true,"kind":"function","modifiers":[],"name":"_checkProxy","nameLocation":"4587:11:6","nodeType":"FunctionDefinition","parameters":{"id":987,"nodeType":"ParameterList","parameters":[],"src":"4598:2:6"},"returnParameters":{"id":988,"nodeType":"ParameterList","parameters":[],"src":"4623:0:6"},"scope":1075,"src":"4578:312:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1022,"nodeType":"Block","src":"5059:161:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1013,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5081:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1075","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1075","typeString":"contract UUPSUpgradeable"}],"id":1012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5073:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1011,"name":"address","nodeType":"ElementaryTypeName","src":"5073:7:6","typeDescriptions":{}}},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5073:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1015,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"5090:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5073:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1021,"nodeType":"IfStatement","src":"5069:145:6","trueBody":{"id":1020,"nodeType":"Block","src":"5098:116:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1017,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"5174:27:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5174:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1019,"nodeType":"RevertStatement","src":"5167:36:6"}]}}]},"documentation":{"id":1008,"nodeType":"StructuredDocumentation","src":"4896:106:6","text":" @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."},"id":1023,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNotDelegated","nameLocation":"5016:18:6","nodeType":"FunctionDefinition","parameters":{"id":1009,"nodeType":"ParameterList","parameters":[],"src":"5034:2:6"},"returnParameters":{"id":1010,"nodeType":"ParameterList","parameters":[],"src":"5059:0:6"},"scope":1075,"src":"5007:213:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":1024,"nodeType":"StructuredDocumentation","src":"5226:372:6","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"},"id":1029,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"5612:17:6","nodeType":"FunctionDefinition","parameters":{"id":1027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1026,"mutability":"mutable","name":"newImplementation","nameLocation":"5638:17:6","nodeType":"VariableDeclaration","scope":1029,"src":"5630:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1025,"name":"address","nodeType":"ElementaryTypeName","src":"5630:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5629:27:6"},"returnParameters":{"id":1028,"nodeType":"ParameterList","parameters":[],"src":"5673:0:6"},"scope":1075,"src":"5603:71:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1073,"nodeType":"Block","src":"6117:453:6","statements":[{"clauses":[{"block":{"id":1062,"nodeType":"Block","src":"6207:212:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1045,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"6225:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1046,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"6233:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$3481_$","typeString":"type(library ERC1967Utils)"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6246:19:6","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":3202,"src":"6233:32:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6225:40:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1054,"nodeType":"IfStatement","src":"6221:120:6","trueBody":{"id":1053,"nodeType":"Block","src":"6267:74:6","statements":[{"errorCall":{"arguments":[{"id":1050,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"6321:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1049,"name":"UUPSUnsupportedProxiableUUID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"6292:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$_t_error_$","typeString":"function (bytes32) pure returns (error)"}},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6292:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1052,"nodeType":"RevertStatement","src":"6285:41:6"}]}},{"expression":{"arguments":[{"id":1058,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"6384:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1059,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"6403:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1055,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"6354:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$3481_$","typeString":"type(library ERC1967Utils)"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6367:16:6","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":3296,"src":"6354:29:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6354:54:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1061,"nodeType":"ExpressionStatement","src":"6354:54:6"}]},"errorName":"","id":1063,"nodeType":"TryCatchClause","parameters":{"id":1044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1043,"mutability":"mutable","name":"slot","nameLocation":"6201:4:6","nodeType":"VariableDeclaration","scope":1063,"src":"6193:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1042,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6193:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6192:14:6"},"src":"6184:235:6"},{"block":{"id":1070,"nodeType":"Block","src":"6426:138:6","statements":[{"errorCall":{"arguments":[{"id":1067,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"6535:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1064,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"6493:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$3481_$","typeString":"type(library ERC1967Utils)"}},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6506:28:6","memberName":"ERC1967InvalidImplementation","nodeType":"MemberAccess","referencedDeclaration":3207,"src":"6493:41:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6493:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1069,"nodeType":"RevertStatement","src":"6486:67:6"}]},"errorName":"","id":1071,"nodeType":"TryCatchClause","src":"6420:144:6"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1038,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"6149:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1037,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"6131:17:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$2651_$","typeString":"type(contract IERC1822Proxiable)"}},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6131:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$2651","typeString":"contract IERC1822Proxiable"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6168:13:6","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":2650,"src":"6131:50:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6131:52:6","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1072,"nodeType":"TryStatement","src":"6127:437:6"}]},"documentation":{"id":1030,"nodeType":"StructuredDocumentation","src":"5680:347:6","text":" @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC-1967.\n Emits an {IERC1967-Upgraded} event."},"id":1074,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"6041:21:6","nodeType":"FunctionDefinition","parameters":{"id":1035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1032,"mutability":"mutable","name":"newImplementation","nameLocation":"6071:17:6","nodeType":"VariableDeclaration","scope":1074,"src":"6063:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1031,"name":"address","nodeType":"ElementaryTypeName","src":"6063:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1034,"mutability":"mutable","name":"data","nameLocation":"6103:4:6","nodeType":"VariableDeclaration","scope":1074,"src":"6090:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1033,"name":"bytes","nodeType":"ElementaryTypeName","src":"6090:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6062:46:6"},"returnParameters":{"id":1036,"nodeType":"ParameterList","parameters":[],"src":"6117:0:6"},"scope":1075,"src":"6032:538:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1076,"src":"986:5586:6","usedErrors":[642,645,920,925,3207,3220,4378,5650],"usedEvents":[650,2624]}],"src":"115:6458:6"},"id":6},"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol","exportedSymbols":{"Arrays":[5506],"ContextUpgradeable":[2118],"ERC1155Upgradeable":[2072],"ERC1155Utils":[3826],"ERC165Upgradeable":[2447],"IERC1155":[3614],"IERC1155Errors":[2788],"IERC1155MetadataURI":[3672],"IERC165":[7379],"Initializable":[893]},"id":2073,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1077,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","id":1079,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2073,"sourceUnit":3615,"src":"135:76:7","symbolAliases":[{"foreign":{"id":1078,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"143:8:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","file":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","id":1081,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2073,"sourceUnit":3673,"src":"212:109:7","symbolAliases":[{"foreign":{"id":1080,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"220:19:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","file":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","id":1083,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2073,"sourceUnit":3827,"src":"322:90:7","symbolAliases":[{"foreign":{"id":1082,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3826,"src":"330:12:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":1085,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2073,"sourceUnit":2119,"src":"413:70:7","symbolAliases":[{"foreign":{"id":1084,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"421:18:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":1087,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2073,"sourceUnit":7380,"src":"484:80:7","symbolAliases":[{"foreign":{"id":1086,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7379,"src":"492:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"../../utils/introspection/ERC165Upgradeable.sol","id":1089,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2073,"sourceUnit":2448,"src":"565:82:7","symbolAliases":[{"foreign":{"id":1088,"name":"ERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"573:17:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","file":"@openzeppelin/contracts/utils/Arrays.sol","id":1091,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2073,"sourceUnit":5507,"src":"648:64:7","symbolAliases":[{"foreign":{"id":1090,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5506,"src":"656:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","id":1093,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2073,"sourceUnit":2789,"src":"713:85:7","symbolAliases":[{"foreign":{"id":1092,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"721:14:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":1095,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2073,"sourceUnit":894,"src":"799:66:7","symbolAliases":[{"foreign":{"id":1094,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"807:13:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1097,"name":"Initializable","nameLocations":["1092:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":893,"src":"1092:13:7"},"id":1098,"nodeType":"InheritanceSpecifier","src":"1092:13:7"},{"baseName":{"id":1099,"name":"ContextUpgradeable","nameLocations":["1107:18:7"],"nodeType":"IdentifierPath","referencedDeclaration":2118,"src":"1107:18:7"},"id":1100,"nodeType":"InheritanceSpecifier","src":"1107:18:7"},{"baseName":{"id":1101,"name":"ERC165Upgradeable","nameLocations":["1127:17:7"],"nodeType":"IdentifierPath","referencedDeclaration":2447,"src":"1127:17:7"},"id":1102,"nodeType":"InheritanceSpecifier","src":"1127:17:7"},{"baseName":{"id":1103,"name":"IERC1155","nameLocations":["1146:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":3614,"src":"1146:8:7"},"id":1104,"nodeType":"InheritanceSpecifier","src":"1146:8:7"},{"baseName":{"id":1105,"name":"IERC1155MetadataURI","nameLocations":["1156:19:7"],"nodeType":"IdentifierPath","referencedDeclaration":3672,"src":"1156:19:7"},"id":1106,"nodeType":"InheritanceSpecifier","src":"1156:19:7"},{"baseName":{"id":1107,"name":"IERC1155Errors","nameLocations":["1177:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":2788,"src":"1177:14:7"},"id":1108,"nodeType":"InheritanceSpecifier","src":"1177:14:7"}],"canonicalName":"ERC1155Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1096,"nodeType":"StructuredDocumentation","src":"867:184:7","text":" @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"},"fullyImplemented":true,"id":2072,"linearizedBaseContracts":[2072,2788,3672,3614,2447,7379,2118,893],"name":"ERC1155Upgradeable","nameLocation":"1070:18:7","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1112,"libraryName":{"id":1109,"name":"Arrays","nameLocations":["1204:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":5506,"src":"1204:6:7"},"nodeType":"UsingForDirective","src":"1198:27:7","typeName":{"baseType":{"id":1110,"name":"uint256","nodeType":"ElementaryTypeName","src":"1215:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1111,"nodeType":"ArrayTypeName","src":"1215:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},{"global":false,"id":1116,"libraryName":{"id":1113,"name":"Arrays","nameLocations":["1236:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":5506,"src":"1236:6:7"},"nodeType":"UsingForDirective","src":"1230:27:7","typeName":{"baseType":{"id":1114,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1115,"nodeType":"ArrayTypeName","src":"1247:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},{"canonicalName":"ERC1155Upgradeable.ERC1155Storage","documentation":{"id":1117,"nodeType":"StructuredDocumentation","src":"1263:65:7","text":"@custom:storage-location erc7201:openzeppelin.storage.ERC1155"},"id":1132,"members":[{"constant":false,"id":1123,"mutability":"mutable","name":"_balances","nameLocation":"1424:9:7","nodeType":"VariableDeclaration","scope":1132,"src":"1365:68:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":1122,"keyName":"id","keyNameLocation":"1381:2:7","keyType":{"id":1118,"name":"uint256","nodeType":"ElementaryTypeName","src":"1373:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1365:58:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1121,"keyName":"account","keyNameLocation":"1403:7:7","keyType":{"id":1119,"name":"address","nodeType":"ElementaryTypeName","src":"1395:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1387:35:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1120,"name":"uint256","nodeType":"ElementaryTypeName","src":"1414:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"internal"},{"constant":false,"id":1129,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1506:18:7","nodeType":"VariableDeclaration","scope":1132,"src":"1444:80:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":1128,"keyName":"account","keyNameLocation":"1460:7:7","keyType":{"id":1124,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1444:61:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1127,"keyName":"operator","keyNameLocation":"1487:8:7","keyType":{"id":1125,"name":"address","nodeType":"ElementaryTypeName","src":"1479:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1471:33:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1126,"name":"bool","nodeType":"ElementaryTypeName","src":"1499:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"internal"},{"constant":false,"id":1131,"mutability":"mutable","name":"_uri","nameLocation":"1660:4:7","nodeType":"VariableDeclaration","scope":1132,"src":"1653:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1130,"name":"string","nodeType":"ElementaryTypeName","src":"1653:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"ERC1155Storage","nameLocation":"1340:14:7","nodeType":"StructDefinition","scope":2072,"src":"1333:338:7","visibility":"public"},{"constant":true,"id":1135,"mutability":"constant","name":"ERC1155StorageLocation","nameLocation":"1813:22:7","nodeType":"VariableDeclaration","scope":2072,"src":"1788:116:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1788:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307838386265353336643532343063323734613362316433613162653534343832666439636161323934663038633632613763646535363966343961336334353030","id":1134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1838:66:7","typeDescriptions":{"typeIdentifier":"t_rational_61850824141875340645484003952679861077730695310785076753205161524670616061184_by_1","typeString":"int_const 6185...(69 digits omitted)...1184"},"value":"0x88be536d5240c274a3b1d3a1be54482fd9caa294f08c62a7cde569f49a3c4500"},"visibility":"private"},{"body":{"id":1142,"nodeType":"Block","src":"1989:81:7","statements":[{"AST":{"nativeSrc":"2008:56:7","nodeType":"YulBlock","src":"2008:56:7","statements":[{"nativeSrc":"2022:32:7","nodeType":"YulAssignment","src":"2022:32:7","value":{"name":"ERC1155StorageLocation","nativeSrc":"2032:22:7","nodeType":"YulIdentifier","src":"2032:22:7"},"variableNames":[{"name":"$.slot","nativeSrc":"2022:6:7","nodeType":"YulIdentifier","src":"2022:6:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1139,"isOffset":false,"isSlot":true,"src":"2022:6:7","suffix":"slot","valueSize":1},{"declaration":1135,"isOffset":false,"isSlot":false,"src":"2032:22:7","valueSize":1}],"id":1141,"nodeType":"InlineAssembly","src":"1999:65:7"}]},"id":1143,"implemented":true,"kind":"function","modifiers":[],"name":"_getERC1155Storage","nameLocation":"1920:18:7","nodeType":"FunctionDefinition","parameters":{"id":1136,"nodeType":"ParameterList","parameters":[],"src":"1938:2:7"},"returnParameters":{"id":1140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1139,"mutability":"mutable","name":"$","nameLocation":"1986:1:7","nodeType":"VariableDeclaration","scope":1143,"src":"1963:24:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$1132_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"},"typeName":{"id":1138,"nodeType":"UserDefinedTypeName","pathNode":{"id":1137,"name":"ERC1155Storage","nameLocations":["1963:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":1132,"src":"1963:14:7"},"referencedDeclaration":1132,"src":"1963:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$1132_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"}},"visibility":"internal"}],"src":"1962:26:7"},"scope":2072,"src":"1911:159:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1155,"nodeType":"Block","src":"2189:47:7","statements":[{"expression":{"arguments":[{"id":1152,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"2224:4:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1151,"name":"__ERC1155_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"2199:24:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2199:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1154,"nodeType":"ExpressionStatement","src":"2199:30:7"}]},"documentation":{"id":1144,"nodeType":"StructuredDocumentation","src":"2076:38:7","text":" @dev See {_setURI}."},"id":1156,"implemented":true,"kind":"function","modifiers":[{"id":1149,"kind":"modifierInvocation","modifierName":{"id":1148,"name":"onlyInitializing","nameLocations":["2172:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":788,"src":"2172:16:7"},"nodeType":"ModifierInvocation","src":"2172:16:7"}],"name":"__ERC1155_init","nameLocation":"2128:14:7","nodeType":"FunctionDefinition","parameters":{"id":1147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1146,"mutability":"mutable","name":"uri_","nameLocation":"2157:4:7","nodeType":"VariableDeclaration","scope":1156,"src":"2143:18:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1145,"name":"string","nodeType":"ElementaryTypeName","src":"2143:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2142:20:7"},"returnParameters":{"id":1150,"nodeType":"ParameterList","parameters":[],"src":"2189:0:7"},"scope":2072,"src":"2119:117:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1167,"nodeType":"Block","src":"2322:30:7","statements":[{"expression":{"arguments":[{"id":1164,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"2340:4:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1163,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"2332:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2332:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1166,"nodeType":"ExpressionStatement","src":"2332:13:7"}]},"id":1168,"implemented":true,"kind":"function","modifiers":[{"id":1161,"kind":"modifierInvocation","modifierName":{"id":1160,"name":"onlyInitializing","nameLocations":["2305:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":788,"src":"2305:16:7"},"nodeType":"ModifierInvocation","src":"2305:16:7"}],"name":"__ERC1155_init_unchained","nameLocation":"2251:24:7","nodeType":"FunctionDefinition","parameters":{"id":1159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1158,"mutability":"mutable","name":"uri_","nameLocation":"2290:4:7","nodeType":"VariableDeclaration","scope":1168,"src":"2276:18:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1157,"name":"string","nodeType":"ElementaryTypeName","src":"2276:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2275:20:7"},"returnParameters":{"id":1162,"nodeType":"ParameterList","parameters":[],"src":"2322:0:7"},"scope":2072,"src":"2242:110:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2446,7378],"body":{"id":1198,"nodeType":"Block","src":"2538:197:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1179,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"2567:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1181,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"2587:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155_$3614_$","typeString":"type(contract IERC1155)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155_$3614_$","typeString":"type(contract IERC1155)"}],"id":1180,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2582:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2582:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155_$3614","typeString":"type(contract IERC1155)"}},"id":1183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2597:11:7","memberName":"interfaceId","nodeType":"MemberAccess","src":"2582:26:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2567:41:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1185,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"2624:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1187,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"2644:19:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$3672_$","typeString":"type(contract IERC1155MetadataURI)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$3672_$","typeString":"type(contract IERC1155MetadataURI)"}],"id":1186,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2639:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155MetadataURI_$3672","typeString":"type(contract IERC1155MetadataURI)"}},"id":1189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2665:11:7","memberName":"interfaceId","nodeType":"MemberAccess","src":"2639:37:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2624:52:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2567:109:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1194,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"2716:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1192,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2692:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155Upgradeable_$2072_$","typeString":"type(contract super ERC1155Upgradeable)"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2698:17:7","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2446,"src":"2692:23:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2567:161:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1178,"id":1197,"nodeType":"Return","src":"2548:180:7"}]},"documentation":{"id":1169,"nodeType":"StructuredDocumentation","src":"2358:56:7","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1199,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2428:17:7","nodeType":"FunctionDefinition","overrides":{"id":1175,"nodeType":"OverrideSpecifier","overrides":[{"id":1173,"name":"ERC165Upgradeable","nameLocations":["2495:17:7"],"nodeType":"IdentifierPath","referencedDeclaration":2447,"src":"2495:17:7"},{"id":1174,"name":"IERC165","nameLocations":["2514:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":7379,"src":"2514:7:7"}],"src":"2486:36:7"},"parameters":{"id":1172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1171,"mutability":"mutable","name":"interfaceId","nameLocation":"2453:11:7","nodeType":"VariableDeclaration","scope":1199,"src":"2446:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1170,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2446:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2445:20:7"},"returnParameters":{"id":1178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1199,"src":"2532:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1176,"name":"bool","nodeType":"ElementaryTypeName","src":"2532:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2531:6:7"},"scope":2072,"src":"2419:316:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3671],"body":{"id":1216,"nodeType":"Block","src":"3209:87:7","statements":[{"assignments":[1209],"declarations":[{"constant":false,"id":1209,"mutability":"mutable","name":"$","nameLocation":"3242:1:7","nodeType":"VariableDeclaration","scope":1216,"src":"3219:24:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$1132_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"},"typeName":{"id":1208,"nodeType":"UserDefinedTypeName","pathNode":{"id":1207,"name":"ERC1155Storage","nameLocations":["3219:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":1132,"src":"3219:14:7"},"referencedDeclaration":1132,"src":"3219:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$1132_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"}},"visibility":"internal"}],"id":1212,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1210,"name":"_getERC1155Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"3246:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC1155Storage_$1132_storage_ptr_$","typeString":"function () pure returns (struct ERC1155Upgradeable.ERC1155Storage storage pointer)"}},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3246:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$1132_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3219:47:7"},{"expression":{"expression":{"id":1213,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"3283:1:7","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$1132_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"id":1214,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3285:4:7","memberName":"_uri","nodeType":"MemberAccess","referencedDeclaration":1131,"src":"3283:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1206,"id":1215,"nodeType":"Return","src":"3276:13:7"}]},"documentation":{"id":1200,"nodeType":"StructuredDocumentation","src":"2741:388:7","text":" @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."},"functionSelector":"0e89341c","id":1217,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"3143:3:7","nodeType":"FunctionDefinition","parameters":{"id":1203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1202,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1217,"src":"3147:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1201,"name":"uint256","nodeType":"ElementaryTypeName","src":"3147:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3146:18:7"},"returnParameters":{"id":1206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1217,"src":"3194:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1204,"name":"string","nodeType":"ElementaryTypeName","src":"3194:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3193:15:7"},"scope":2072,"src":"3134:162:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3552],"body":{"id":1240,"nodeType":"Block","src":"3442:105:7","statements":[{"assignments":[1229],"declarations":[{"constant":false,"id":1229,"mutability":"mutable","name":"$","nameLocation":"3475:1:7","nodeType":"VariableDeclaration","scope":1240,"src":"3452:24:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$1132_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"},"typeName":{"id":1228,"nodeType":"UserDefinedTypeName","pathNode":{"id":1227,"name":"ERC1155Storage","nameLocations":["3452:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":1132,"src":"3452:14:7"},"referencedDeclaration":1132,"src":"3452:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$1132_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"}},"visibility":"internal"}],"id":1232,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1230,"name":"_getERC1155Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"3479:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC1155Storage_$1132_storage_ptr_$","typeString":"function () pure returns (struct ERC1155Upgradeable.ERC1155Storage storage pointer)"}},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3479:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$1132_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3452:47:7"},{"expression":{"baseExpression":{"baseExpression":{"expression":{"id":1233,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"3516:1:7","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$1132_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"id":1234,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3518:9:7","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":1123,"src":"3516:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1236,"indexExpression":{"id":1235,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"3528:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3516:15:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1238,"indexExpression":{"id":1237,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"3532:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3516:24:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1226,"id":1239,"nodeType":"Return","src":"3509:31:7"}]},"documentation":{"id":1218,"nodeType":"StructuredDocumentation","src":"3302:49:7","text":" @dev See {IERC1155-balanceOf}."},"functionSelector":"00fdd58e","id":1241,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3365:9:7","nodeType":"FunctionDefinition","parameters":{"id":1223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1220,"mutability":"mutable","name":"account","nameLocation":"3383:7:7","nodeType":"VariableDeclaration","scope":1241,"src":"3375:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1219,"name":"address","nodeType":"ElementaryTypeName","src":"3375:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1222,"mutability":"mutable","name":"id","nameLocation":"3400:2:7","nodeType":"VariableDeclaration","scope":1241,"src":"3392:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1221,"name":"uint256","nodeType":"ElementaryTypeName","src":"3392:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3374:29:7"},"returnParameters":{"id":1226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1241,"src":"3433:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1224,"name":"uint256","nodeType":"ElementaryTypeName","src":"3433:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3432:9:7"},"scope":2072,"src":"3356:191:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3565],"body":{"id":1310,"nodeType":"Block","src":"3846:410:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1254,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"3860:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3869:6:7","memberName":"length","nodeType":"MemberAccess","src":"3860:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1256,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"3879:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3883:6:7","memberName":"length","nodeType":"MemberAccess","src":"3879:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3860:29:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1267,"nodeType":"IfStatement","src":"3856:121:7","trueBody":{"id":1266,"nodeType":"Block","src":"3891:86:7","statements":[{"errorCall":{"arguments":[{"expression":{"id":1260,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"3938:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3942:6:7","memberName":"length","nodeType":"MemberAccess","src":"3938:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1262,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"3950:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3959:6:7","memberName":"length","nodeType":"MemberAccess","src":"3950:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1259,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"3912:25:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3912:54:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1265,"nodeType":"RevertStatement","src":"3905:61:7"}]}},{"assignments":[1272],"declarations":[{"constant":false,"id":1272,"mutability":"mutable","name":"batchBalances","nameLocation":"4004:13:7","nodeType":"VariableDeclaration","scope":1310,"src":"3987:30:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1270,"name":"uint256","nodeType":"ElementaryTypeName","src":"3987:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1271,"nodeType":"ArrayTypeName","src":"3987:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1279,"initialValue":{"arguments":[{"expression":{"id":1276,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"4034:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4043:6:7","memberName":"length","nodeType":"MemberAccess","src":"4034:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4020:13:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1273,"name":"uint256","nodeType":"ElementaryTypeName","src":"4024:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1274,"nodeType":"ArrayTypeName","src":"4024:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4020:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3987:63:7"},{"body":{"id":1306,"nodeType":"Block","src":"4107:112:7","statements":[{"expression":{"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1291,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"4121:13:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1293,"indexExpression":{"id":1292,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"4135:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4121:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":1297,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"4178:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1295,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"4150:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4159:18:7","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":5446,"src":"4150:27:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address[] memory,uint256) pure returns (address)"}},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4150:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1301,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"4205:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1299,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"4182:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4186:18:7","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":5472,"src":"4182:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4182:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1294,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"4140:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4140:68:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4121:87:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1305,"nodeType":"ExpressionStatement","src":"4121:87:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1284,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"4081:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1285,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"4085:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4094:6:7","memberName":"length","nodeType":"MemberAccess","src":"4085:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4081:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1307,"initializationExpression":{"assignments":[1281],"declarations":[{"constant":false,"id":1281,"mutability":"mutable","name":"i","nameLocation":"4074:1:7","nodeType":"VariableDeclaration","scope":1307,"src":"4066:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1280,"name":"uint256","nodeType":"ElementaryTypeName","src":"4066:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1283,"initialValue":{"hexValue":"30","id":1282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4078:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4066:13:7"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"4102:3:7","subExpression":{"id":1288,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"4104:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1290,"nodeType":"ExpressionStatement","src":"4102:3:7"},"nodeType":"ForStatement","src":"4061:158:7"},{"expression":{"id":1308,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"4236:13:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1253,"id":1309,"nodeType":"Return","src":"4229:20:7"}]},"documentation":{"id":1242,"nodeType":"StructuredDocumentation","src":"3553:146:7","text":" @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":1311,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"3713:14:7","nodeType":"FunctionDefinition","parameters":{"id":1249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1245,"mutability":"mutable","name":"accounts","nameLocation":"3754:8:7","nodeType":"VariableDeclaration","scope":1311,"src":"3737:25:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1243,"name":"address","nodeType":"ElementaryTypeName","src":"3737:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1244,"nodeType":"ArrayTypeName","src":"3737:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1248,"mutability":"mutable","name":"ids","nameLocation":"3789:3:7","nodeType":"VariableDeclaration","scope":1311,"src":"3772:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1246,"name":"uint256","nodeType":"ElementaryTypeName","src":"3772:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1247,"nodeType":"ArrayTypeName","src":"3772:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3727:71:7"},"returnParameters":{"id":1253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1311,"src":"3828:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1250,"name":"uint256","nodeType":"ElementaryTypeName","src":"3828:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1251,"nodeType":"ArrayTypeName","src":"3828:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3827:18:7"},"scope":2072,"src":"3704:552:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3573],"body":{"id":1326,"nodeType":"Block","src":"4399:69:7","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1320,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"4428:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4428:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1322,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"4442:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1323,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"4452:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1319,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"4409:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4409:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1325,"nodeType":"ExpressionStatement","src":"4409:52:7"}]},"documentation":{"id":1312,"nodeType":"StructuredDocumentation","src":"4262:57:7","text":" @dev See {IERC1155-setApprovalForAll}."},"functionSelector":"a22cb465","id":1327,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4333:17:7","nodeType":"FunctionDefinition","parameters":{"id":1317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1314,"mutability":"mutable","name":"operator","nameLocation":"4359:8:7","nodeType":"VariableDeclaration","scope":1327,"src":"4351:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1313,"name":"address","nodeType":"ElementaryTypeName","src":"4351:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1316,"mutability":"mutable","name":"approved","nameLocation":"4374:8:7","nodeType":"VariableDeclaration","scope":1327,"src":"4369:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1315,"name":"bool","nodeType":"ElementaryTypeName","src":"4369:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4350:33:7"},"returnParameters":{"id":1318,"nodeType":"ParameterList","parameters":[],"src":"4399:0:7"},"scope":2072,"src":"4324:144:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3583],"body":{"id":1350,"nodeType":"Block","src":"4631:120:7","statements":[{"assignments":[1339],"declarations":[{"constant":false,"id":1339,"mutability":"mutable","name":"$","nameLocation":"4664:1:7","nodeType":"VariableDeclaration","scope":1350,"src":"4641:24:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$1132_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"},"typeName":{"id":1338,"nodeType":"UserDefinedTypeName","pathNode":{"id":1337,"name":"ERC1155Storage","nameLocations":["4641:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":1132,"src":"4641:14:7"},"referencedDeclaration":1132,"src":"4641:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$1132_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"}},"visibility":"internal"}],"id":1342,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1340,"name":"_getERC1155Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"4668:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC1155Storage_$1132_storage_ptr_$","typeString":"function () pure returns (struct ERC1155Upgradeable.ERC1155Storage storage pointer)"}},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4668:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$1132_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4641:47:7"},{"expression":{"baseExpression":{"baseExpression":{"expression":{"id":1343,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"4705:1:7","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$1132_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"id":1344,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4707:18:7","memberName":"_operatorApprovals","nodeType":"MemberAccess","referencedDeclaration":1129,"src":"4705:20:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1346,"indexExpression":{"id":1345,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"4726:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4705:29:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1348,"indexExpression":{"id":1347,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"4735:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4705:39:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1336,"id":1349,"nodeType":"Return","src":"4698:46:7"}]},"documentation":{"id":1328,"nodeType":"StructuredDocumentation","src":"4474:56:7","text":" @dev See {IERC1155-isApprovedForAll}."},"functionSelector":"e985e9c5","id":1351,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4544:16:7","nodeType":"FunctionDefinition","parameters":{"id":1333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1330,"mutability":"mutable","name":"account","nameLocation":"4569:7:7","nodeType":"VariableDeclaration","scope":1351,"src":"4561:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1329,"name":"address","nodeType":"ElementaryTypeName","src":"4561:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1332,"mutability":"mutable","name":"operator","nameLocation":"4586:8:7","nodeType":"VariableDeclaration","scope":1351,"src":"4578:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1331,"name":"address","nodeType":"ElementaryTypeName","src":"4578:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4560:35:7"},"returnParameters":{"id":1336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1335,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1351,"src":"4625:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1334,"name":"bool","nodeType":"ElementaryTypeName","src":"4625:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4624:6:7"},"scope":2072,"src":"4535:216:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3597],"body":{"id":1394,"nodeType":"Block","src":"4931:238:7","statements":[{"assignments":[1366],"declarations":[{"constant":false,"id":1366,"mutability":"mutable","name":"sender","nameLocation":"4949:6:7","nodeType":"VariableDeclaration","scope":1394,"src":"4941:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1365,"name":"address","nodeType":"ElementaryTypeName","src":"4941:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1369,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1367,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"4958:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4958:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4941:29:7"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1370,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"4984:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1371,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"4992:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4984:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5002:31:7","subExpression":{"arguments":[{"id":1374,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"5020:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1375,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"5026:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1373,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"5003:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5003:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4984:49:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1385,"nodeType":"IfStatement","src":"4980:129:7","trueBody":{"id":1384,"nodeType":"Block","src":"5035:74:7","statements":[{"errorCall":{"arguments":[{"id":1380,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"5085:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1381,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"5093:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1379,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2770,"src":"5056:28:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$","typeString":"function (address,address) pure returns (error)"}},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5056:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1383,"nodeType":"RevertStatement","src":"5049:49:7"}]}},{"expression":{"arguments":[{"id":1387,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"5136:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1388,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"5142:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1389,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"5146:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"5150:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1391,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"5157:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1386,"name":"_safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"5118:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5118:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1393,"nodeType":"ExpressionStatement","src":"5118:44:7"}]},"documentation":{"id":1352,"nodeType":"StructuredDocumentation","src":"4757:56:7","text":" @dev See {IERC1155-safeTransferFrom}."},"functionSelector":"f242432a","id":1395,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4827:16:7","nodeType":"FunctionDefinition","parameters":{"id":1363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1354,"mutability":"mutable","name":"from","nameLocation":"4852:4:7","nodeType":"VariableDeclaration","scope":1395,"src":"4844:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1353,"name":"address","nodeType":"ElementaryTypeName","src":"4844:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1356,"mutability":"mutable","name":"to","nameLocation":"4866:2:7","nodeType":"VariableDeclaration","scope":1395,"src":"4858:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1355,"name":"address","nodeType":"ElementaryTypeName","src":"4858:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1358,"mutability":"mutable","name":"id","nameLocation":"4878:2:7","nodeType":"VariableDeclaration","scope":1395,"src":"4870:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1357,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1360,"mutability":"mutable","name":"value","nameLocation":"4890:5:7","nodeType":"VariableDeclaration","scope":1395,"src":"4882:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1359,"name":"uint256","nodeType":"ElementaryTypeName","src":"4882:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1362,"mutability":"mutable","name":"data","nameLocation":"4910:4:7","nodeType":"VariableDeclaration","scope":1395,"src":"4897:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1361,"name":"bytes","nodeType":"ElementaryTypeName","src":"4897:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4843:72:7"},"returnParameters":{"id":1364,"nodeType":"ParameterList","parameters":[],"src":"4931:0:7"},"scope":2072,"src":"4818:351:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3613],"body":{"id":1440,"nodeType":"Block","src":"5425:245:7","statements":[{"assignments":[1412],"declarations":[{"constant":false,"id":1412,"mutability":"mutable","name":"sender","nameLocation":"5443:6:7","nodeType":"VariableDeclaration","scope":1440,"src":"5435:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1411,"name":"address","nodeType":"ElementaryTypeName","src":"5435:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1415,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1413,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"5452:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5452:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5435:29:7"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1416,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"5478:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1417,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"5486:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5478:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5496:31:7","subExpression":{"arguments":[{"id":1420,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"5514:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1421,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"5520:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1419,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"5497:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5497:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5478:49:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1431,"nodeType":"IfStatement","src":"5474:129:7","trueBody":{"id":1430,"nodeType":"Block","src":"5529:74:7","statements":[{"errorCall":{"arguments":[{"id":1426,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"5579:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1427,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"5587:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1425,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2770,"src":"5550:28:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$","typeString":"function (address,address) pure returns (error)"}},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5550:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1429,"nodeType":"RevertStatement","src":"5543:49:7"}]}},{"expression":{"arguments":[{"id":1433,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"5635:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1434,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"5641:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1435,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"5645:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1436,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"5650:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1437,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"5658:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1432,"name":"_safeBatchTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"5612:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5612:51:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1439,"nodeType":"ExpressionStatement","src":"5612:51:7"}]},"documentation":{"id":1396,"nodeType":"StructuredDocumentation","src":"5175:61:7","text":" @dev See {IERC1155-safeBatchTransferFrom}."},"functionSelector":"2eb2c2d6","id":1441,"implemented":true,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"5250:21:7","nodeType":"FunctionDefinition","parameters":{"id":1409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1398,"mutability":"mutable","name":"from","nameLocation":"5289:4:7","nodeType":"VariableDeclaration","scope":1441,"src":"5281:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1397,"name":"address","nodeType":"ElementaryTypeName","src":"5281:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1400,"mutability":"mutable","name":"to","nameLocation":"5311:2:7","nodeType":"VariableDeclaration","scope":1441,"src":"5303:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1399,"name":"address","nodeType":"ElementaryTypeName","src":"5303:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1403,"mutability":"mutable","name":"ids","nameLocation":"5340:3:7","nodeType":"VariableDeclaration","scope":1441,"src":"5323:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1401,"name":"uint256","nodeType":"ElementaryTypeName","src":"5323:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1402,"nodeType":"ArrayTypeName","src":"5323:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1406,"mutability":"mutable","name":"values","nameLocation":"5370:6:7","nodeType":"VariableDeclaration","scope":1441,"src":"5353:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1404,"name":"uint256","nodeType":"ElementaryTypeName","src":"5353:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1405,"nodeType":"ArrayTypeName","src":"5353:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1408,"mutability":"mutable","name":"data","nameLocation":"5399:4:7","nodeType":"VariableDeclaration","scope":1441,"src":"5386:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1407,"name":"bytes","nodeType":"ElementaryTypeName","src":"5386:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5271:138:7"},"returnParameters":{"id":1410,"nodeType":"ParameterList","parameters":[],"src":"5425:0:7"},"scope":2072,"src":"5241:429:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1604,"nodeType":"Block","src":"6478:1237:7","statements":[{"assignments":[1457],"declarations":[{"constant":false,"id":1457,"mutability":"mutable","name":"$","nameLocation":"6511:1:7","nodeType":"VariableDeclaration","scope":1604,"src":"6488:24:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$1132_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"},"typeName":{"id":1456,"nodeType":"UserDefinedTypeName","pathNode":{"id":1455,"name":"ERC1155Storage","nameLocations":["6488:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":1132,"src":"6488:14:7"},"referencedDeclaration":1132,"src":"6488:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$1132_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"}},"visibility":"internal"}],"id":1460,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1458,"name":"_getERC1155Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"6515:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC1155Storage_$1132_storage_ptr_$","typeString":"function () pure returns (struct ERC1155Upgradeable.ERC1155Storage storage pointer)"}},"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6515:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$1132_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6488:47:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1461,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"6549:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6553:6:7","memberName":"length","nodeType":"MemberAccess","src":"6549:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1463,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"6563:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6570:6:7","memberName":"length","nodeType":"MemberAccess","src":"6563:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6549:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1474,"nodeType":"IfStatement","src":"6545:117:7","trueBody":{"id":1473,"nodeType":"Block","src":"6578:84:7","statements":[{"errorCall":{"arguments":[{"expression":{"id":1467,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"6625:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6629:6:7","memberName":"length","nodeType":"MemberAccess","src":"6625:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1469,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"6637:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6644:6:7","memberName":"length","nodeType":"MemberAccess","src":"6637:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1466,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"6599:25:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6599:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1472,"nodeType":"RevertStatement","src":"6592:59:7"}]}},{"assignments":[1476],"declarations":[{"constant":false,"id":1476,"mutability":"mutable","name":"operator","nameLocation":"6680:8:7","nodeType":"VariableDeclaration","scope":1604,"src":"6672:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1475,"name":"address","nodeType":"ElementaryTypeName","src":"6672:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1479,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1477,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"6691:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6691:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6672:31:7"},{"body":{"id":1565,"nodeType":"Block","src":"6755:656:7","statements":[{"assignments":[1492],"declarations":[{"constant":false,"id":1492,"mutability":"mutable","name":"id","nameLocation":"6777:2:7","nodeType":"VariableDeclaration","scope":1565,"src":"6769:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1491,"name":"uint256","nodeType":"ElementaryTypeName","src":"6769:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1497,"initialValue":{"arguments":[{"id":1495,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"6805:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1493,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"6782:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6786:18:7","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":5472,"src":"6782:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6782:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6769:38:7"},{"assignments":[1499],"declarations":[{"constant":false,"id":1499,"mutability":"mutable","name":"value","nameLocation":"6829:5:7","nodeType":"VariableDeclaration","scope":1565,"src":"6821:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1498,"name":"uint256","nodeType":"ElementaryTypeName","src":"6821:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1504,"initialValue":{"arguments":[{"id":1502,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"6863:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1500,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"6837:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6844:18:7","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":5472,"src":"6837:25:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6837:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6821:44:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1505,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"6884:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6892:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1506,"name":"address","nodeType":"ElementaryTypeName","src":"6892:7:7","typeDescriptions":{}}},"id":1509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6892:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6884:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1546,"nodeType":"IfStatement","src":"6880:424:7","trueBody":{"id":1545,"nodeType":"Block","src":"6904:400:7","statements":[{"assignments":[1512],"declarations":[{"constant":false,"id":1512,"mutability":"mutable","name":"fromBalance","nameLocation":"6930:11:7","nodeType":"VariableDeclaration","scope":1545,"src":"6922:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1511,"name":"uint256","nodeType":"ElementaryTypeName","src":"6922:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1519,"initialValue":{"baseExpression":{"baseExpression":{"expression":{"id":1513,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"6944:1:7","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$1132_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"id":1514,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6946:9:7","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":1123,"src":"6944:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1516,"indexExpression":{"id":1515,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"6956:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6944:15:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1518,"indexExpression":{"id":1517,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"6960:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6944:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6922:43:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1520,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"6987:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"7001:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6987:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1531,"nodeType":"IfStatement","src":"6983:129:7","trueBody":{"id":1530,"nodeType":"Block","src":"7008:104:7","statements":[{"errorCall":{"arguments":[{"id":1524,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"7064:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1525,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"7070:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"7083:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1527,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"7090:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1523,"name":"ERC1155InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"7037:26:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256,uint256) pure returns (error)"}},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7037:56:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1529,"nodeType":"RevertStatement","src":"7030:63:7"}]}},{"id":1544,"nodeType":"UncheckedBlock","src":"7129:161:7","statements":[{"expression":{"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":1532,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"7228:1:7","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$1132_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"id":1536,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7230:9:7","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":1123,"src":"7228:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1537,"indexExpression":{"id":1534,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"7240:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7228:15:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1538,"indexExpression":{"id":1535,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"7244:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7228:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1539,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"7252:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"7266:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7252:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7228:43:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1543,"nodeType":"ExpressionStatement","src":"7228:43:7"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1547,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"7322:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7336:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7328:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1548,"name":"address","nodeType":"ElementaryTypeName","src":"7328:7:7","typeDescriptions":{}}},"id":1551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7328:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7322:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1564,"nodeType":"IfStatement","src":"7318:83:7","trueBody":{"id":1563,"nodeType":"Block","src":"7340:61:7","statements":[{"expression":{"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":1553,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"7358:1:7","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$1132_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"id":1557,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7360:9:7","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":1123,"src":"7358:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1558,"indexExpression":{"id":1555,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"7370:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7358:15:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1559,"indexExpression":{"id":1556,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"7374:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7358:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"7381:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7358:28:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1562,"nodeType":"ExpressionStatement","src":"7358:28:7"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1484,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"6734:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1485,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"6738:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6742:6:7","memberName":"length","nodeType":"MemberAccess","src":"6738:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6734:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1566,"initializationExpression":{"assignments":[1481],"declarations":[{"constant":false,"id":1481,"mutability":"mutable","name":"i","nameLocation":"6727:1:7","nodeType":"VariableDeclaration","scope":1566,"src":"6719:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1480,"name":"uint256","nodeType":"ElementaryTypeName","src":"6719:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1483,"initialValue":{"hexValue":"30","id":1482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6731:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6719:13:7"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6750:3:7","subExpression":{"id":1488,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"6752:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1490,"nodeType":"ExpressionStatement","src":"6750:3:7"},"nodeType":"ForStatement","src":"6714:697:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1567,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"7425:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7429:6:7","memberName":"length","nodeType":"MemberAccess","src":"7425:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7439:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7425:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1602,"nodeType":"Block","src":"7633:76:7","statements":[{"eventCall":{"arguments":[{"id":1595,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"7666:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1596,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"7676:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1597,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"7682:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1598,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"7686:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1599,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"7691:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1594,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"7652:13:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7652:46:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1601,"nodeType":"EmitStatement","src":"7647:51:7"}]},"id":1603,"nodeType":"IfStatement","src":"7421:288:7","trueBody":{"id":1593,"nodeType":"Block","src":"7442:185:7","statements":[{"assignments":[1572],"declarations":[{"constant":false,"id":1572,"mutability":"mutable","name":"id","nameLocation":"7464:2:7","nodeType":"VariableDeclaration","scope":1593,"src":"7456:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1571,"name":"uint256","nodeType":"ElementaryTypeName","src":"7456:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1577,"initialValue":{"arguments":[{"hexValue":"30","id":1575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7492:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1573,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"7469:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7473:18:7","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":5472,"src":"7469:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7469:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7456:38:7"},{"assignments":[1579],"declarations":[{"constant":false,"id":1579,"mutability":"mutable","name":"value","nameLocation":"7516:5:7","nodeType":"VariableDeclaration","scope":1593,"src":"7508:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1578,"name":"uint256","nodeType":"ElementaryTypeName","src":"7508:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1584,"initialValue":{"arguments":[{"hexValue":"30","id":1582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7550:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1580,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"7524:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7531:18:7","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":5472,"src":"7524:25:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7524:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7508:44:7"},{"eventCall":{"arguments":[{"id":1586,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"7586:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1587,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"7596:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1588,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"7602:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1589,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"7606:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"7610:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1585,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"7571:14:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7571:45:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1592,"nodeType":"EmitStatement","src":"7566:50:7"}]}}]},"documentation":{"id":1442,"nodeType":"StructuredDocumentation","src":"5676:690:7","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."},"id":1605,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6380:7:7","nodeType":"FunctionDefinition","parameters":{"id":1453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1444,"mutability":"mutable","name":"from","nameLocation":"6396:4:7","nodeType":"VariableDeclaration","scope":1605,"src":"6388:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1443,"name":"address","nodeType":"ElementaryTypeName","src":"6388:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1446,"mutability":"mutable","name":"to","nameLocation":"6410:2:7","nodeType":"VariableDeclaration","scope":1605,"src":"6402:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1445,"name":"address","nodeType":"ElementaryTypeName","src":"6402:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1449,"mutability":"mutable","name":"ids","nameLocation":"6431:3:7","nodeType":"VariableDeclaration","scope":1605,"src":"6414:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1447,"name":"uint256","nodeType":"ElementaryTypeName","src":"6414:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1448,"nodeType":"ArrayTypeName","src":"6414:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1452,"mutability":"mutable","name":"values","nameLocation":"6453:6:7","nodeType":"VariableDeclaration","scope":1605,"src":"6436:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1450,"name":"uint256","nodeType":"ElementaryTypeName","src":"6436:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1451,"nodeType":"ArrayTypeName","src":"6436:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6387:73:7"},"returnParameters":{"id":1454,"nodeType":"ParameterList","parameters":[],"src":"6478:0:7"},"scope":2072,"src":"6371:1344:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1684,"nodeType":"Block","src":"8485:509:7","statements":[{"expression":{"arguments":[{"id":1622,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"8503:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1623,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"8509:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1624,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"8513:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1625,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"8518:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1621,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"8495:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8495:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1627,"nodeType":"ExpressionStatement","src":"8495:30:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1628,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"8539:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8553:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8545:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1629,"name":"address","nodeType":"ElementaryTypeName","src":"8545:7:7","typeDescriptions":{}}},"id":1632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8545:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8539:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1683,"nodeType":"IfStatement","src":"8535:453:7","trueBody":{"id":1682,"nodeType":"Block","src":"8557:431:7","statements":[{"assignments":[1635],"declarations":[{"constant":false,"id":1635,"mutability":"mutable","name":"operator","nameLocation":"8579:8:7","nodeType":"VariableDeclaration","scope":1682,"src":"8571:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1634,"name":"address","nodeType":"ElementaryTypeName","src":"8571:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1638,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1636,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"8590:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8590:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8571:31:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1639,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"8620:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8624:6:7","memberName":"length","nodeType":"MemberAccess","src":"8620:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8634:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8620:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1680,"nodeType":"Block","src":"8866:112:7","statements":[{"expression":{"arguments":[{"id":1672,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"8925:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1673,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"8935:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1674,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"8941:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1675,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"8945:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1676,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"8950:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1677,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"8958:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1669,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3826,"src":"8884:12:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$3826_$","typeString":"type(library ERC1155Utils)"}},"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8897:27:7","memberName":"checkOnERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":3825,"src":"8884:40:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8884:79:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1679,"nodeType":"ExpressionStatement","src":"8884:79:7"}]},"id":1681,"nodeType":"IfStatement","src":"8616:362:7","trueBody":{"id":1668,"nodeType":"Block","src":"8637:223:7","statements":[{"assignments":[1644],"declarations":[{"constant":false,"id":1644,"mutability":"mutable","name":"id","nameLocation":"8663:2:7","nodeType":"VariableDeclaration","scope":1668,"src":"8655:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1643,"name":"uint256","nodeType":"ElementaryTypeName","src":"8655:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1649,"initialValue":{"arguments":[{"hexValue":"30","id":1647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8691:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1645,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"8668:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8672:18:7","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":5472,"src":"8668:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8668:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8655:38:7"},{"assignments":[1651],"declarations":[{"constant":false,"id":1651,"mutability":"mutable","name":"value","nameLocation":"8719:5:7","nodeType":"VariableDeclaration","scope":1668,"src":"8711:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1650,"name":"uint256","nodeType":"ElementaryTypeName","src":"8711:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1656,"initialValue":{"arguments":[{"hexValue":"30","id":1654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8753:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1652,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"8727:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8734:18:7","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":5472,"src":"8727:25:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8727:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8711:44:7"},{"expression":{"arguments":[{"id":1660,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"8809:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1661,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"8819:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1662,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"8825:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1663,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"8829:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1664,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"8833:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1665,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"8840:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1657,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3826,"src":"8773:12:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$3826_$","typeString":"type(library ERC1155Utils)"}},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8786:22:7","memberName":"checkOnERC1155Received","nodeType":"MemberAccess","referencedDeclaration":3751,"src":"8773:35:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8773:72:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1667,"nodeType":"ExpressionStatement","src":"8773:72:7"}]}}]}}]},"documentation":{"id":1606,"nodeType":"StructuredDocumentation","src":"7721:568:7","text":" @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."},"id":1685,"implemented":true,"kind":"function","modifiers":[],"name":"_updateWithAcceptanceCheck","nameLocation":"8303:26:7","nodeType":"FunctionDefinition","parameters":{"id":1619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1608,"mutability":"mutable","name":"from","nameLocation":"8347:4:7","nodeType":"VariableDeclaration","scope":1685,"src":"8339:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1607,"name":"address","nodeType":"ElementaryTypeName","src":"8339:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1610,"mutability":"mutable","name":"to","nameLocation":"8369:2:7","nodeType":"VariableDeclaration","scope":1685,"src":"8361:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1609,"name":"address","nodeType":"ElementaryTypeName","src":"8361:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1613,"mutability":"mutable","name":"ids","nameLocation":"8398:3:7","nodeType":"VariableDeclaration","scope":1685,"src":"8381:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1611,"name":"uint256","nodeType":"ElementaryTypeName","src":"8381:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1612,"nodeType":"ArrayTypeName","src":"8381:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1616,"mutability":"mutable","name":"values","nameLocation":"8428:6:7","nodeType":"VariableDeclaration","scope":1685,"src":"8411:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1614,"name":"uint256","nodeType":"ElementaryTypeName","src":"8411:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1615,"nodeType":"ArrayTypeName","src":"8411:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1618,"mutability":"mutable","name":"data","nameLocation":"8457:4:7","nodeType":"VariableDeclaration","scope":1685,"src":"8444:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1617,"name":"bytes","nodeType":"ElementaryTypeName","src":"8444:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8329:138:7"},"returnParameters":{"id":1620,"nodeType":"ParameterList","parameters":[],"src":"8485:0:7"},"scope":2072,"src":"8294:700:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1750,"nodeType":"Block","src":"9559:355:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1699,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"9573:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9587:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9579:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1700,"name":"address","nodeType":"ElementaryTypeName","src":"9579:7:7","typeDescriptions":{}}},"id":1703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9579:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9573:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1713,"nodeType":"IfStatement","src":"9569:88:7","trueBody":{"id":1712,"nodeType":"Block","src":"9591:66:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9643:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9635:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1706,"name":"address","nodeType":"ElementaryTypeName","src":"9635:7:7","typeDescriptions":{}}},"id":1709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9635:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1705,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"9612:22:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9612:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1711,"nodeType":"RevertStatement","src":"9605:41:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1714,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"9670:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9686:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9678:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1715,"name":"address","nodeType":"ElementaryTypeName","src":"9678:7:7","typeDescriptions":{}}},"id":1718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9678:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9670:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1728,"nodeType":"IfStatement","src":"9666:88:7","trueBody":{"id":1727,"nodeType":"Block","src":"9690:64:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9740:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9732:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1721,"name":"address","nodeType":"ElementaryTypeName","src":"9732:7:7","typeDescriptions":{}}},"id":1724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9732:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1720,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"9711:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9711:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1726,"nodeType":"RevertStatement","src":"9704:39:7"}]}},{"assignments":[1733,1736],"declarations":[{"constant":false,"id":1733,"mutability":"mutable","name":"ids","nameLocation":"9781:3:7","nodeType":"VariableDeclaration","scope":1750,"src":"9764:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1731,"name":"uint256","nodeType":"ElementaryTypeName","src":"9764:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1732,"nodeType":"ArrayTypeName","src":"9764:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1736,"mutability":"mutable","name":"values","nameLocation":"9803:6:7","nodeType":"VariableDeclaration","scope":1750,"src":"9786:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1734,"name":"uint256","nodeType":"ElementaryTypeName","src":"9786:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1735,"nodeType":"ArrayTypeName","src":"9786:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1741,"initialValue":{"arguments":[{"id":1738,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"9832:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"9836:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1737,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"9813:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9813:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"9763:79:7"},{"expression":{"arguments":[{"id":1743,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"9879:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1744,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"9885:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1745,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"9889:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1746,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"9894:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1747,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"9902:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1742,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"9852:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9852:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1749,"nodeType":"ExpressionStatement","src":"9852:55:7"}]},"documentation":{"id":1686,"nodeType":"StructuredDocumentation","src":"9000:446:7","text":" @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":1751,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransferFrom","nameLocation":"9460:17:7","nodeType":"FunctionDefinition","parameters":{"id":1697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1688,"mutability":"mutable","name":"from","nameLocation":"9486:4:7","nodeType":"VariableDeclaration","scope":1751,"src":"9478:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1687,"name":"address","nodeType":"ElementaryTypeName","src":"9478:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1690,"mutability":"mutable","name":"to","nameLocation":"9500:2:7","nodeType":"VariableDeclaration","scope":1751,"src":"9492:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1689,"name":"address","nodeType":"ElementaryTypeName","src":"9492:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1692,"mutability":"mutable","name":"id","nameLocation":"9512:2:7","nodeType":"VariableDeclaration","scope":1751,"src":"9504:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1691,"name":"uint256","nodeType":"ElementaryTypeName","src":"9504:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1694,"mutability":"mutable","name":"value","nameLocation":"9524:5:7","nodeType":"VariableDeclaration","scope":1751,"src":"9516:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1693,"name":"uint256","nodeType":"ElementaryTypeName","src":"9516:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1696,"mutability":"mutable","name":"data","nameLocation":"9544:4:7","nodeType":"VariableDeclaration","scope":1751,"src":"9531:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1695,"name":"bytes","nodeType":"ElementaryTypeName","src":"9531:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9477:72:7"},"returnParameters":{"id":1698,"nodeType":"ParameterList","parameters":[],"src":"9559:0:7"},"scope":2072,"src":"9451:463:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1805,"nodeType":"Block","src":"10494:266:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1767,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"10508:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10522:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10514:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1768,"name":"address","nodeType":"ElementaryTypeName","src":"10514:7:7","typeDescriptions":{}}},"id":1771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10514:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10508:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1781,"nodeType":"IfStatement","src":"10504:88:7","trueBody":{"id":1780,"nodeType":"Block","src":"10526:66:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10578:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10570:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1774,"name":"address","nodeType":"ElementaryTypeName","src":"10570:7:7","typeDescriptions":{}}},"id":1777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10570:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1773,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"10547:22:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10547:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1779,"nodeType":"RevertStatement","src":"10540:41:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1782,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"10605:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10621:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10613:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1783,"name":"address","nodeType":"ElementaryTypeName","src":"10613:7:7","typeDescriptions":{}}},"id":1786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10613:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10605:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1796,"nodeType":"IfStatement","src":"10601:88:7","trueBody":{"id":1795,"nodeType":"Block","src":"10625:64:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10675:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10667:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1789,"name":"address","nodeType":"ElementaryTypeName","src":"10667:7:7","typeDescriptions":{}}},"id":1792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10667:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1788,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"10646:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10646:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1794,"nodeType":"RevertStatement","src":"10639:39:7"}]}},{"expression":{"arguments":[{"id":1798,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"10725:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1799,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"10731:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1800,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"10735:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1801,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"10740:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1802,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"10748:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1797,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"10698:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10698:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1804,"nodeType":"ExpressionStatement","src":"10698:55:7"}]},"documentation":{"id":1752,"nodeType":"StructuredDocumentation","src":"9920:390:7","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."},"id":1806,"implemented":true,"kind":"function","modifiers":[],"name":"_safeBatchTransferFrom","nameLocation":"10324:22:7","nodeType":"FunctionDefinition","parameters":{"id":1765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1754,"mutability":"mutable","name":"from","nameLocation":"10364:4:7","nodeType":"VariableDeclaration","scope":1806,"src":"10356:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1753,"name":"address","nodeType":"ElementaryTypeName","src":"10356:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1756,"mutability":"mutable","name":"to","nameLocation":"10386:2:7","nodeType":"VariableDeclaration","scope":1806,"src":"10378:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1755,"name":"address","nodeType":"ElementaryTypeName","src":"10378:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1759,"mutability":"mutable","name":"ids","nameLocation":"10415:3:7","nodeType":"VariableDeclaration","scope":1806,"src":"10398:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1757,"name":"uint256","nodeType":"ElementaryTypeName","src":"10398:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1758,"nodeType":"ArrayTypeName","src":"10398:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1762,"mutability":"mutable","name":"values","nameLocation":"10445:6:7","nodeType":"VariableDeclaration","scope":1806,"src":"10428:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1760,"name":"uint256","nodeType":"ElementaryTypeName","src":"10428:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1761,"nodeType":"ArrayTypeName","src":"10428:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1764,"mutability":"mutable","name":"data","nameLocation":"10474:4:7","nodeType":"VariableDeclaration","scope":1806,"src":"10461:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1763,"name":"bytes","nodeType":"ElementaryTypeName","src":"10461:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10346:138:7"},"returnParameters":{"id":1766,"nodeType":"ParameterList","parameters":[],"src":"10494:0:7"},"scope":2072,"src":"10315:445:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1824,"nodeType":"Block","src":"11638:89:7","statements":[{"assignments":[1814],"declarations":[{"constant":false,"id":1814,"mutability":"mutable","name":"$","nameLocation":"11671:1:7","nodeType":"VariableDeclaration","scope":1824,"src":"11648:24:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$1132_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"},"typeName":{"id":1813,"nodeType":"UserDefinedTypeName","pathNode":{"id":1812,"name":"ERC1155Storage","nameLocations":["11648:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":1132,"src":"11648:14:7"},"referencedDeclaration":1132,"src":"11648:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$1132_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"}},"visibility":"internal"}],"id":1817,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1815,"name":"_getERC1155Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"11675:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC1155Storage_$1132_storage_ptr_$","typeString":"function () pure returns (struct ERC1155Upgradeable.ERC1155Storage storage pointer)"}},"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11675:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$1132_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"11648:47:7"},{"expression":{"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1818,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"11705:1:7","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$1132_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"id":1820,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11707:4:7","memberName":"_uri","nodeType":"MemberAccess","referencedDeclaration":1131,"src":"11705:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1821,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"11714:6:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"11705:15:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1823,"nodeType":"ExpressionStatement","src":"11705:15:7"}]},"documentation":{"id":1807,"nodeType":"StructuredDocumentation","src":"10766:811:7","text":" @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."},"id":1825,"implemented":true,"kind":"function","modifiers":[],"name":"_setURI","nameLocation":"11591:7:7","nodeType":"FunctionDefinition","parameters":{"id":1810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1809,"mutability":"mutable","name":"newuri","nameLocation":"11613:6:7","nodeType":"VariableDeclaration","scope":1825,"src":"11599:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1808,"name":"string","nodeType":"ElementaryTypeName","src":"11599:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11598:22:7"},"returnParameters":{"id":1811,"nodeType":"ParameterList","parameters":[],"src":"11638:0:7"},"scope":2072,"src":"11582:145:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1876,"nodeType":"Block","src":"12187:264:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1837,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"12201:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12215:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12207:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1838,"name":"address","nodeType":"ElementaryTypeName","src":"12207:7:7","typeDescriptions":{}}},"id":1841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12207:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12201:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1851,"nodeType":"IfStatement","src":"12197:88:7","trueBody":{"id":1850,"nodeType":"Block","src":"12219:66:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12271:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12263:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1844,"name":"address","nodeType":"ElementaryTypeName","src":"12263:7:7","typeDescriptions":{}}},"id":1847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12263:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1843,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"12240:22:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12240:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1849,"nodeType":"RevertStatement","src":"12233:41:7"}]}},{"assignments":[1856,1859],"declarations":[{"constant":false,"id":1856,"mutability":"mutable","name":"ids","nameLocation":"12312:3:7","nodeType":"VariableDeclaration","scope":1876,"src":"12295:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1854,"name":"uint256","nodeType":"ElementaryTypeName","src":"12295:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1855,"nodeType":"ArrayTypeName","src":"12295:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1859,"mutability":"mutable","name":"values","nameLocation":"12334:6:7","nodeType":"VariableDeclaration","scope":1876,"src":"12317:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1857,"name":"uint256","nodeType":"ElementaryTypeName","src":"12317:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1858,"nodeType":"ArrayTypeName","src":"12317:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1864,"initialValue":{"arguments":[{"id":1861,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"12363:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"12367:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1860,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"12344:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12344:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"12294:79:7"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12418:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12410:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1866,"name":"address","nodeType":"ElementaryTypeName","src":"12410:7:7","typeDescriptions":{}}},"id":1869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12410:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1870,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"12422:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1871,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"12426:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1872,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"12431:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1873,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"12439:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1865,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"12383:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12383:61:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1875,"nodeType":"ExpressionStatement","src":"12383:61:7"}]},"documentation":{"id":1826,"nodeType":"StructuredDocumentation","src":"11733:367:7","text":" @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":1877,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"12114:5:7","nodeType":"FunctionDefinition","parameters":{"id":1835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1828,"mutability":"mutable","name":"to","nameLocation":"12128:2:7","nodeType":"VariableDeclaration","scope":1877,"src":"12120:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1827,"name":"address","nodeType":"ElementaryTypeName","src":"12120:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1830,"mutability":"mutable","name":"id","nameLocation":"12140:2:7","nodeType":"VariableDeclaration","scope":1877,"src":"12132:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1829,"name":"uint256","nodeType":"ElementaryTypeName","src":"12132:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1832,"mutability":"mutable","name":"value","nameLocation":"12152:5:7","nodeType":"VariableDeclaration","scope":1877,"src":"12144:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1831,"name":"uint256","nodeType":"ElementaryTypeName","src":"12144:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1834,"mutability":"mutable","name":"data","nameLocation":"12172:4:7","nodeType":"VariableDeclaration","scope":1877,"src":"12159:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1833,"name":"bytes","nodeType":"ElementaryTypeName","src":"12159:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12119:58:7"},"returnParameters":{"id":1836,"nodeType":"ParameterList","parameters":[],"src":"12187:0:7"},"scope":2072,"src":"12105:346:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1917,"nodeType":"Block","src":"12989:175:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1891,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"13003:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13017:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13009:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1892,"name":"address","nodeType":"ElementaryTypeName","src":"13009:7:7","typeDescriptions":{}}},"id":1895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13009:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13003:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1905,"nodeType":"IfStatement","src":"12999:88:7","trueBody":{"id":1904,"nodeType":"Block","src":"13021:66:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13073:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13065:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1898,"name":"address","nodeType":"ElementaryTypeName","src":"13065:7:7","typeDescriptions":{}}},"id":1901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13065:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1897,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"13042:22:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13042:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1903,"nodeType":"RevertStatement","src":"13035:41:7"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13131:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13123:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1907,"name":"address","nodeType":"ElementaryTypeName","src":"13123:7:7","typeDescriptions":{}}},"id":1910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13123:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1911,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"13135:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1912,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"13139:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1913,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"13144:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1914,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"13152:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1906,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"13096:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13096:61:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1916,"nodeType":"ExpressionStatement","src":"13096:61:7"}]},"documentation":{"id":1878,"nodeType":"StructuredDocumentation","src":"12457:420:7","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":1918,"implemented":true,"kind":"function","modifiers":[],"name":"_mintBatch","nameLocation":"12891:10:7","nodeType":"FunctionDefinition","parameters":{"id":1889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1880,"mutability":"mutable","name":"to","nameLocation":"12910:2:7","nodeType":"VariableDeclaration","scope":1918,"src":"12902:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1879,"name":"address","nodeType":"ElementaryTypeName","src":"12902:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1883,"mutability":"mutable","name":"ids","nameLocation":"12931:3:7","nodeType":"VariableDeclaration","scope":1918,"src":"12914:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1881,"name":"uint256","nodeType":"ElementaryTypeName","src":"12914:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1882,"nodeType":"ArrayTypeName","src":"12914:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1886,"mutability":"mutable","name":"values","nameLocation":"12953:6:7","nodeType":"VariableDeclaration","scope":1918,"src":"12936:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1884,"name":"uint256","nodeType":"ElementaryTypeName","src":"12936:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1885,"nodeType":"ArrayTypeName","src":"12936:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1888,"mutability":"mutable","name":"data","nameLocation":"12974:4:7","nodeType":"VariableDeclaration","scope":1918,"src":"12961:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1887,"name":"bytes","nodeType":"ElementaryTypeName","src":"12961:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12901:78:7"},"returnParameters":{"id":1890,"nodeType":"ParameterList","parameters":[],"src":"12989:0:7"},"scope":2072,"src":"12882:282:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1967,"nodeType":"Block","src":"13523:264:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1928,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1921,"src":"13537:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13553:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13545:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1929,"name":"address","nodeType":"ElementaryTypeName","src":"13545:7:7","typeDescriptions":{}}},"id":1932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13545:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13537:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1942,"nodeType":"IfStatement","src":"13533:88:7","trueBody":{"id":1941,"nodeType":"Block","src":"13557:64:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13607:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13599:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1935,"name":"address","nodeType":"ElementaryTypeName","src":"13599:7:7","typeDescriptions":{}}},"id":1938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13599:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1934,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"13578:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13578:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1940,"nodeType":"RevertStatement","src":"13571:39:7"}]}},{"assignments":[1947,1950],"declarations":[{"constant":false,"id":1947,"mutability":"mutable","name":"ids","nameLocation":"13648:3:7","nodeType":"VariableDeclaration","scope":1967,"src":"13631:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1945,"name":"uint256","nodeType":"ElementaryTypeName","src":"13631:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1946,"nodeType":"ArrayTypeName","src":"13631:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1950,"mutability":"mutable","name":"values","nameLocation":"13670:6:7","nodeType":"VariableDeclaration","scope":1967,"src":"13653:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1948,"name":"uint256","nodeType":"ElementaryTypeName","src":"13653:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1949,"nodeType":"ArrayTypeName","src":"13653:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1955,"initialValue":{"arguments":[{"id":1952,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"13699:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1953,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"13703:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1951,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"13680:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13680:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"13630:79:7"},{"expression":{"arguments":[{"id":1957,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1921,"src":"13746:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13760:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13752:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1958,"name":"address","nodeType":"ElementaryTypeName","src":"13752:7:7","typeDescriptions":{}}},"id":1961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13752:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1962,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"13764:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1963,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"13769:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13777:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1956,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"13719:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13719:61:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1966,"nodeType":"ExpressionStatement","src":"13719:61:7"}]},"documentation":{"id":1919,"nodeType":"StructuredDocumentation","src":"13170:283:7","text":" @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."},"id":1968,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"13467:5:7","nodeType":"FunctionDefinition","parameters":{"id":1926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1921,"mutability":"mutable","name":"from","nameLocation":"13481:4:7","nodeType":"VariableDeclaration","scope":1968,"src":"13473:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1920,"name":"address","nodeType":"ElementaryTypeName","src":"13473:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1923,"mutability":"mutable","name":"id","nameLocation":"13495:2:7","nodeType":"VariableDeclaration","scope":1968,"src":"13487:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1922,"name":"uint256","nodeType":"ElementaryTypeName","src":"13487:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1925,"mutability":"mutable","name":"value","nameLocation":"13507:5:7","nodeType":"VariableDeclaration","scope":1968,"src":"13499:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1924,"name":"uint256","nodeType":"ElementaryTypeName","src":"13499:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13472:41:7"},"returnParameters":{"id":1927,"nodeType":"ParameterList","parameters":[],"src":"13523:0:7"},"scope":2072,"src":"13458:329:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2006,"nodeType":"Block","src":"14233:175:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1980,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"14247:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14263:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14255:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1981,"name":"address","nodeType":"ElementaryTypeName","src":"14255:7:7","typeDescriptions":{}}},"id":1984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14255:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14247:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1994,"nodeType":"IfStatement","src":"14243:88:7","trueBody":{"id":1993,"nodeType":"Block","src":"14267:64:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14317:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14309:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1987,"name":"address","nodeType":"ElementaryTypeName","src":"14309:7:7","typeDescriptions":{}}},"id":1990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14309:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1986,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"14288:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14288:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1992,"nodeType":"RevertStatement","src":"14281:39:7"}]}},{"expression":{"arguments":[{"id":1996,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"14367:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14381:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14373:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1997,"name":"address","nodeType":"ElementaryTypeName","src":"14373:7:7","typeDescriptions":{}}},"id":2000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14373:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2001,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"14385:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2002,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"14390:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":2003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14398:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1995,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"14340:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14340:61:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2005,"nodeType":"ExpressionStatement","src":"14340:61:7"}]},"documentation":{"id":1969,"nodeType":"StructuredDocumentation","src":"13793:345:7","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."},"id":2007,"implemented":true,"kind":"function","modifiers":[],"name":"_burnBatch","nameLocation":"14152:10:7","nodeType":"FunctionDefinition","parameters":{"id":1978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1971,"mutability":"mutable","name":"from","nameLocation":"14171:4:7","nodeType":"VariableDeclaration","scope":2007,"src":"14163:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1970,"name":"address","nodeType":"ElementaryTypeName","src":"14163:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1974,"mutability":"mutable","name":"ids","nameLocation":"14194:3:7","nodeType":"VariableDeclaration","scope":2007,"src":"14177:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1972,"name":"uint256","nodeType":"ElementaryTypeName","src":"14177:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1973,"nodeType":"ArrayTypeName","src":"14177:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1977,"mutability":"mutable","name":"values","nameLocation":"14216:6:7","nodeType":"VariableDeclaration","scope":2007,"src":"14199:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1975,"name":"uint256","nodeType":"ElementaryTypeName","src":"14199:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1976,"nodeType":"ArrayTypeName","src":"14199:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"14162:61:7"},"returnParameters":{"id":1979,"nodeType":"ParameterList","parameters":[],"src":"14233:0:7"},"scope":2072,"src":"14143:265:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2054,"nodeType":"Block","src":"14720:281:7","statements":[{"assignments":[2019],"declarations":[{"constant":false,"id":2019,"mutability":"mutable","name":"$","nameLocation":"14753:1:7","nodeType":"VariableDeclaration","scope":2054,"src":"14730:24:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$1132_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"},"typeName":{"id":2018,"nodeType":"UserDefinedTypeName","pathNode":{"id":2017,"name":"ERC1155Storage","nameLocations":["14730:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":1132,"src":"14730:14:7"},"referencedDeclaration":1132,"src":"14730:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$1132_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"}},"visibility":"internal"}],"id":2022,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2020,"name":"_getERC1155Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"14757:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC1155Storage_$1132_storage_ptr_$","typeString":"function () pure returns (struct ERC1155Upgradeable.ERC1155Storage storage pointer)"}},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14757:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$1132_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"14730:47:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2023,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"14791:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14811:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14803:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2024,"name":"address","nodeType":"ElementaryTypeName","src":"14803:7:7","typeDescriptions":{}}},"id":2027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14803:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14791:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2037,"nodeType":"IfStatement","src":"14787:94:7","trueBody":{"id":2036,"nodeType":"Block","src":"14815:66:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14867:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14859:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2030,"name":"address","nodeType":"ElementaryTypeName","src":"14859:7:7","typeDescriptions":{}}},"id":2033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14859:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2029,"name":"ERC1155InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"14836:22:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14836:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2035,"nodeType":"RevertStatement","src":"14829:41:7"}]}},{"expression":{"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":2038,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"14890:1:7","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$1132_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"id":2042,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14892:18:7","memberName":"_operatorApprovals","nodeType":"MemberAccess","referencedDeclaration":1129,"src":"14890:20:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":2043,"indexExpression":{"id":2040,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"14911:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14890:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2044,"indexExpression":{"id":2041,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"14918:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14890:37:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2045,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"14930:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14890:48:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2047,"nodeType":"ExpressionStatement","src":"14890:48:7"},{"eventCall":{"arguments":[{"id":2049,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"14968:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2050,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"14975:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2051,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"14985:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2048,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"14953:14:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14953:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2053,"nodeType":"EmitStatement","src":"14948:46:7"}]},"documentation":{"id":2008,"nodeType":"StructuredDocumentation","src":"14414:208:7","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"id":2055,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"14636:18:7","nodeType":"FunctionDefinition","parameters":{"id":2015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2010,"mutability":"mutable","name":"owner","nameLocation":"14663:5:7","nodeType":"VariableDeclaration","scope":2055,"src":"14655:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2009,"name":"address","nodeType":"ElementaryTypeName","src":"14655:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2012,"mutability":"mutable","name":"operator","nameLocation":"14678:8:7","nodeType":"VariableDeclaration","scope":2055,"src":"14670:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2011,"name":"address","nodeType":"ElementaryTypeName","src":"14670:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2014,"mutability":"mutable","name":"approved","nameLocation":"14693:8:7","nodeType":"VariableDeclaration","scope":2055,"src":"14688:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2013,"name":"bool","nodeType":"ElementaryTypeName","src":"14688:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14654:48:7"},"returnParameters":{"id":2016,"nodeType":"ParameterList","parameters":[],"src":"14720:0:7"},"scope":2072,"src":"14627:374:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2070,"nodeType":"Block","src":"15275:664:7","statements":[{"AST":{"nativeSrc":"15310:623:7","nodeType":"YulBlock","src":"15310:623:7","statements":[{"nativeSrc":"15368:21:7","nodeType":"YulAssignment","src":"15368:21:7","value":{"arguments":[{"kind":"number","nativeSrc":"15384:4:7","nodeType":"YulLiteral","src":"15384:4:7","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"15378:5:7","nodeType":"YulIdentifier","src":"15378:5:7"},"nativeSrc":"15378:11:7","nodeType":"YulFunctionCall","src":"15378:11:7"},"variableNames":[{"name":"array1","nativeSrc":"15368:6:7","nodeType":"YulIdentifier","src":"15368:6:7"}]},{"expression":{"arguments":[{"name":"array1","nativeSrc":"15446:6:7","nodeType":"YulIdentifier","src":"15446:6:7"},{"kind":"number","nativeSrc":"15454:1:7","nodeType":"YulLiteral","src":"15454:1:7","type":"","value":"1"}],"functionName":{"name":"mstore","nativeSrc":"15439:6:7","nodeType":"YulIdentifier","src":"15439:6:7"},"nativeSrc":"15439:17:7","nodeType":"YulFunctionCall","src":"15439:17:7"},"nativeSrc":"15439:17:7","nodeType":"YulExpressionStatement","src":"15439:17:7"},{"expression":{"arguments":[{"arguments":[{"name":"array1","nativeSrc":"15577:6:7","nodeType":"YulIdentifier","src":"15577:6:7"},{"kind":"number","nativeSrc":"15585:4:7","nodeType":"YulLiteral","src":"15585:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15573:3:7","nodeType":"YulIdentifier","src":"15573:3:7"},"nativeSrc":"15573:17:7","nodeType":"YulFunctionCall","src":"15573:17:7"},{"name":"element1","nativeSrc":"15592:8:7","nodeType":"YulIdentifier","src":"15592:8:7"}],"functionName":{"name":"mstore","nativeSrc":"15566:6:7","nodeType":"YulIdentifier","src":"15566:6:7"},"nativeSrc":"15566:35:7","nodeType":"YulFunctionCall","src":"15566:35:7"},"nativeSrc":"15566:35:7","nodeType":"YulExpressionStatement","src":"15566:35:7"},{"nativeSrc":"15692:27:7","nodeType":"YulAssignment","src":"15692:27:7","value":{"arguments":[{"name":"array1","nativeSrc":"15706:6:7","nodeType":"YulIdentifier","src":"15706:6:7"},{"kind":"number","nativeSrc":"15714:4:7","nodeType":"YulLiteral","src":"15714:4:7","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"15702:3:7","nodeType":"YulIdentifier","src":"15702:3:7"},"nativeSrc":"15702:17:7","nodeType":"YulFunctionCall","src":"15702:17:7"},"variableNames":[{"name":"array2","nativeSrc":"15692:6:7","nodeType":"YulIdentifier","src":"15692:6:7"}]},{"expression":{"arguments":[{"name":"array2","nativeSrc":"15739:6:7","nodeType":"YulIdentifier","src":"15739:6:7"},{"kind":"number","nativeSrc":"15747:1:7","nodeType":"YulLiteral","src":"15747:1:7","type":"","value":"1"}],"functionName":{"name":"mstore","nativeSrc":"15732:6:7","nodeType":"YulIdentifier","src":"15732:6:7"},"nativeSrc":"15732:17:7","nodeType":"YulFunctionCall","src":"15732:17:7"},"nativeSrc":"15732:17:7","nodeType":"YulExpressionStatement","src":"15732:17:7"},{"expression":{"arguments":[{"arguments":[{"name":"array2","nativeSrc":"15773:6:7","nodeType":"YulIdentifier","src":"15773:6:7"},{"kind":"number","nativeSrc":"15781:4:7","nodeType":"YulLiteral","src":"15781:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15769:3:7","nodeType":"YulIdentifier","src":"15769:3:7"},"nativeSrc":"15769:17:7","nodeType":"YulFunctionCall","src":"15769:17:7"},{"name":"element2","nativeSrc":"15788:8:7","nodeType":"YulIdentifier","src":"15788:8:7"}],"functionName":{"name":"mstore","nativeSrc":"15762:6:7","nodeType":"YulIdentifier","src":"15762:6:7"},"nativeSrc":"15762:35:7","nodeType":"YulFunctionCall","src":"15762:35:7"},"nativeSrc":"15762:35:7","nodeType":"YulExpressionStatement","src":"15762:35:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15899:4:7","nodeType":"YulLiteral","src":"15899:4:7","type":"","value":"0x40"},{"arguments":[{"name":"array2","nativeSrc":"15909:6:7","nodeType":"YulIdentifier","src":"15909:6:7"},{"kind":"number","nativeSrc":"15917:4:7","nodeType":"YulLiteral","src":"15917:4:7","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"15905:3:7","nodeType":"YulIdentifier","src":"15905:3:7"},"nativeSrc":"15905:17:7","nodeType":"YulFunctionCall","src":"15905:17:7"}],"functionName":{"name":"mstore","nativeSrc":"15892:6:7","nodeType":"YulIdentifier","src":"15892:6:7"},"nativeSrc":"15892:31:7","nodeType":"YulFunctionCall","src":"15892:31:7"},"nativeSrc":"15892:31:7","nodeType":"YulExpressionStatement","src":"15892:31:7"}]},"evmVersion":"paris","externalReferences":[{"declaration":2064,"isOffset":false,"isSlot":false,"src":"15368:6:7","valueSize":1},{"declaration":2064,"isOffset":false,"isSlot":false,"src":"15446:6:7","valueSize":1},{"declaration":2064,"isOffset":false,"isSlot":false,"src":"15577:6:7","valueSize":1},{"declaration":2064,"isOffset":false,"isSlot":false,"src":"15706:6:7","valueSize":1},{"declaration":2067,"isOffset":false,"isSlot":false,"src":"15692:6:7","valueSize":1},{"declaration":2067,"isOffset":false,"isSlot":false,"src":"15739:6:7","valueSize":1},{"declaration":2067,"isOffset":false,"isSlot":false,"src":"15773:6:7","valueSize":1},{"declaration":2067,"isOffset":false,"isSlot":false,"src":"15909:6:7","valueSize":1},{"declaration":2058,"isOffset":false,"isSlot":false,"src":"15592:8:7","valueSize":1},{"declaration":2060,"isOffset":false,"isSlot":false,"src":"15788:8:7","valueSize":1}],"flags":["memory-safe"],"id":2069,"nodeType":"InlineAssembly","src":"15285:648:7"}]},"documentation":{"id":2056,"nodeType":"StructuredDocumentation","src":"15007:105:7","text":" @dev Creates an array in memory with only one value for each of the elements provided."},"id":2071,"implemented":true,"kind":"function","modifiers":[],"name":"_asSingletonArrays","nameLocation":"15126:18:7","nodeType":"FunctionDefinition","parameters":{"id":2061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2058,"mutability":"mutable","name":"element1","nameLocation":"15162:8:7","nodeType":"VariableDeclaration","scope":2071,"src":"15154:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2057,"name":"uint256","nodeType":"ElementaryTypeName","src":"15154:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2060,"mutability":"mutable","name":"element2","nameLocation":"15188:8:7","nodeType":"VariableDeclaration","scope":2071,"src":"15180:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2059,"name":"uint256","nodeType":"ElementaryTypeName","src":"15180:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15144:58:7"},"returnParameters":{"id":2068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2064,"mutability":"mutable","name":"array1","nameLocation":"15242:6:7","nodeType":"VariableDeclaration","scope":2071,"src":"15225:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2062,"name":"uint256","nodeType":"ElementaryTypeName","src":"15225:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2063,"nodeType":"ArrayTypeName","src":"15225:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2067,"mutability":"mutable","name":"array2","nameLocation":"15267:6:7","nodeType":"VariableDeclaration","scope":2071,"src":"15250:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2065,"name":"uint256","nodeType":"ElementaryTypeName","src":"15250:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2066,"nodeType":"ArrayTypeName","src":"15250:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"15224:50:7"},"scope":2072,"src":"15117:822:7","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2073,"src":"1052:14889:7","usedErrors":[642,645,2753,2758,2763,2770,2775,2780,2787],"usedEvents":[650,3511,3526,3535,3542]}],"src":"109:15833:7"},"id":7},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[2118],"Initializable":[893]},"id":2119,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2074,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:8"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":2076,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2119,"sourceUnit":894,"src":"126:63:8","symbolAliases":[{"foreign":{"id":2075,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"134:13:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2078,"name":"Initializable","nameLocations":["728:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":893,"src":"728:13:8"},"id":2079,"nodeType":"InheritanceSpecifier","src":"728:13:8"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2077,"nodeType":"StructuredDocumentation","src":"191:496:8","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2118,"linearizedBaseContracts":[2118,893],"name":"ContextUpgradeable","nameLocation":"706:18:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":2084,"nodeType":"Block","src":"800:7:8","statements":[]},"id":2085,"implemented":true,"kind":"function","modifiers":[{"id":2082,"kind":"modifierInvocation","modifierName":{"id":2081,"name":"onlyInitializing","nameLocations":["783:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":788,"src":"783:16:8"},"nodeType":"ModifierInvocation","src":"783:16:8"}],"name":"__Context_init","nameLocation":"757:14:8","nodeType":"FunctionDefinition","parameters":{"id":2080,"nodeType":"ParameterList","parameters":[],"src":"771:2:8"},"returnParameters":{"id":2083,"nodeType":"ParameterList","parameters":[],"src":"800:0:8"},"scope":2118,"src":"748:59:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2090,"nodeType":"Block","src":"875:7:8","statements":[]},"id":2091,"implemented":true,"kind":"function","modifiers":[{"id":2088,"kind":"modifierInvocation","modifierName":{"id":2087,"name":"onlyInitializing","nameLocations":["858:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":788,"src":"858:16:8"},"nodeType":"ModifierInvocation","src":"858:16:8"}],"name":"__Context_init_unchained","nameLocation":"822:24:8","nodeType":"FunctionDefinition","parameters":{"id":2086,"nodeType":"ParameterList","parameters":[],"src":"846:2:8"},"returnParameters":{"id":2089,"nodeType":"ParameterList","parameters":[],"src":"875:0:8"},"scope":2118,"src":"813:69:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2099,"nodeType":"Block","src":"949:34:8","statements":[{"expression":{"expression":{"id":2096,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:8","memberName":"sender","nodeType":"MemberAccess","src":"966:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2095,"id":2098,"nodeType":"Return","src":"959:17:8"}]},"id":2100,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:8","nodeType":"FunctionDefinition","parameters":{"id":2092,"nodeType":"ParameterList","parameters":[],"src":"906:2:8"},"returnParameters":{"id":2095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2094,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2100,"src":"940:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2093,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:8"},"scope":2118,"src":"887:96:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2108,"nodeType":"Block","src":"1056:32:8","statements":[{"expression":{"expression":{"id":2105,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:8","memberName":"data","nodeType":"MemberAccess","src":"1073:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2104,"id":2107,"nodeType":"Return","src":"1066:15:8"}]},"id":2109,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:8","nodeType":"FunctionDefinition","parameters":{"id":2101,"nodeType":"ParameterList","parameters":[],"src":"1006:2:8"},"returnParameters":{"id":2104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2109,"src":"1040:14:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2102,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:8"},"scope":2118,"src":"989:99:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2116,"nodeType":"Block","src":"1166:25:8","statements":[{"expression":{"hexValue":"30","id":2114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2113,"id":2115,"nodeType":"Return","src":"1176:8:8"}]},"id":2117,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:8","nodeType":"FunctionDefinition","parameters":{"id":2110,"nodeType":"ParameterList","parameters":[],"src":"1123:2:8"},"returnParameters":{"id":2113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2117,"src":"1157:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2111,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:8"},"scope":2118,"src":"1094:97:8","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2119,"src":"688:505:8","usedErrors":[642,645],"usedEvents":[650]}],"src":"101:1093:8"},"id":8},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[2118],"Initializable":[893],"PausableUpgradeable":[2278]},"id":2279,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2120,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:9"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":2122,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2279,"sourceUnit":2119,"src":"128:67:9","symbolAliases":[{"foreign":{"id":2121,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"136:18:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":2124,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2279,"sourceUnit":894,"src":"196:63:9","symbolAliases":[{"foreign":{"id":2123,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"204:13:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2126,"name":"Initializable","nameLocations":["742:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":893,"src":"742:13:9"},"id":2127,"nodeType":"InheritanceSpecifier","src":"742:13:9"},{"baseName":{"id":2128,"name":"ContextUpgradeable","nameLocations":["757:18:9"],"nodeType":"IdentifierPath","referencedDeclaration":2118,"src":"757:18:9"},"id":2129,"nodeType":"InheritanceSpecifier","src":"757:18:9"}],"canonicalName":"PausableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2125,"nodeType":"StructuredDocumentation","src":"261:439:9","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":2278,"linearizedBaseContracts":[2278,2118,893],"name":"PausableUpgradeable","nameLocation":"719:19:9","nodeType":"ContractDefinition","nodes":[{"canonicalName":"PausableUpgradeable.PausableStorage","documentation":{"id":2130,"nodeType":"StructuredDocumentation","src":"782:66:9","text":"@custom:storage-location erc7201:openzeppelin.storage.Pausable"},"id":2133,"members":[{"constant":false,"id":2132,"mutability":"mutable","name":"_paused","nameLocation":"891:7:9","nodeType":"VariableDeclaration","scope":2133,"src":"886:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2131,"name":"bool","nodeType":"ElementaryTypeName","src":"886:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"PausableStorage","nameLocation":"860:15:9","nodeType":"StructDefinition","scope":2278,"src":"853:52:9","visibility":"public"},{"constant":true,"id":2136,"mutability":"constant","name":"PausableStorageLocation","nameLocation":"1048:23:9","nodeType":"VariableDeclaration","scope":2278,"src":"1023:117:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2134,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1023:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307863643565643135633665313837653737653961656538383138346332316634663231383261623538323763623362376530376662656463643633663033333030","id":2135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1074:66:9","typeDescriptions":{"typeIdentifier":"t_rational_92891662540554778686986514950364265630913525426840345632122912437671245656832_by_1","typeString":"int_const 9289...(69 digits omitted)...6832"},"value":"0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300"},"visibility":"private"},{"body":{"id":2143,"nodeType":"Block","src":"1227:82:9","statements":[{"AST":{"nativeSrc":"1246:57:9","nodeType":"YulBlock","src":"1246:57:9","statements":[{"nativeSrc":"1260:33:9","nodeType":"YulAssignment","src":"1260:33:9","value":{"name":"PausableStorageLocation","nativeSrc":"1270:23:9","nodeType":"YulIdentifier","src":"1270:23:9"},"variableNames":[{"name":"$.slot","nativeSrc":"1260:6:9","nodeType":"YulIdentifier","src":"1260:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2140,"isOffset":false,"isSlot":true,"src":"1260:6:9","suffix":"slot","valueSize":1},{"declaration":2136,"isOffset":false,"isSlot":false,"src":"1270:23:9","valueSize":1}],"id":2142,"nodeType":"InlineAssembly","src":"1237:66:9"}]},"id":2144,"implemented":true,"kind":"function","modifiers":[],"name":"_getPausableStorage","nameLocation":"1156:19:9","nodeType":"FunctionDefinition","parameters":{"id":2137,"nodeType":"ParameterList","parameters":[],"src":"1175:2:9"},"returnParameters":{"id":2141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2140,"mutability":"mutable","name":"$","nameLocation":"1224:1:9","nodeType":"VariableDeclaration","scope":2144,"src":"1200:25:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$2133_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":2139,"nodeType":"UserDefinedTypeName","pathNode":{"id":2138,"name":"PausableStorage","nameLocations":["1200:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":2133,"src":"1200:15:9"},"referencedDeclaration":2133,"src":"1200:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$2133_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"src":"1199:27:9"},"scope":2278,"src":"1147:162:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"anonymous":false,"documentation":{"id":2145,"nodeType":"StructuredDocumentation","src":"1315:73:9","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":2149,"name":"Paused","nameLocation":"1399:6:9","nodeType":"EventDefinition","parameters":{"id":2148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2147,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"1414:7:9","nodeType":"VariableDeclaration","scope":2149,"src":"1406:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2146,"name":"address","nodeType":"ElementaryTypeName","src":"1406:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1405:17:9"},"src":"1393:30:9"},{"anonymous":false,"documentation":{"id":2150,"nodeType":"StructuredDocumentation","src":"1429:70:9","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":2154,"name":"Unpaused","nameLocation":"1510:8:9","nodeType":"EventDefinition","parameters":{"id":2153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2152,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"1527:7:9","nodeType":"VariableDeclaration","scope":2154,"src":"1519:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2151,"name":"address","nodeType":"ElementaryTypeName","src":"1519:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1518:17:9"},"src":"1504:32:9"},{"documentation":{"id":2155,"nodeType":"StructuredDocumentation","src":"1542:76:9","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":2157,"name":"EnforcedPause","nameLocation":"1629:13:9","nodeType":"ErrorDefinition","parameters":{"id":2156,"nodeType":"ParameterList","parameters":[],"src":"1642:2:9"},"src":"1623:22:9"},{"documentation":{"id":2158,"nodeType":"StructuredDocumentation","src":"1651:80:9","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":2160,"name":"ExpectedPause","nameLocation":"1742:13:9","nodeType":"ErrorDefinition","parameters":{"id":2159,"nodeType":"ParameterList","parameters":[],"src":"1755:2:9"},"src":"1736:22:9"},{"body":{"id":2167,"nodeType":"Block","src":"1969:47:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2163,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"1979:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1979:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2165,"nodeType":"ExpressionStatement","src":"1979:19:9"},{"id":2166,"nodeType":"PlaceholderStatement","src":"2008:1:9"}]},"documentation":{"id":2161,"nodeType":"StructuredDocumentation","src":"1764:175:9","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":2168,"name":"whenNotPaused","nameLocation":"1953:13:9","nodeType":"ModifierDefinition","parameters":{"id":2162,"nodeType":"ParameterList","parameters":[],"src":"1966:2:9"},"src":"1944:72:9","virtual":false,"visibility":"internal"},{"body":{"id":2175,"nodeType":"Block","src":"2216:44:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2171,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"2226:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2173,"nodeType":"ExpressionStatement","src":"2226:16:9"},{"id":2174,"nodeType":"PlaceholderStatement","src":"2252:1:9"}]},"documentation":{"id":2169,"nodeType":"StructuredDocumentation","src":"2022:167:9","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":2176,"name":"whenPaused","nameLocation":"2203:10:9","nodeType":"ModifierDefinition","parameters":{"id":2170,"nodeType":"ParameterList","parameters":[],"src":"2213:2:9"},"src":"2194:66:9","virtual":false,"visibility":"internal"},{"body":{"id":2181,"nodeType":"Block","src":"2319:7:9","statements":[]},"id":2182,"implemented":true,"kind":"function","modifiers":[{"id":2179,"kind":"modifierInvocation","modifierName":{"id":2178,"name":"onlyInitializing","nameLocations":["2302:16:9"],"nodeType":"IdentifierPath","referencedDeclaration":788,"src":"2302:16:9"},"nodeType":"ModifierInvocation","src":"2302:16:9"}],"name":"__Pausable_init","nameLocation":"2275:15:9","nodeType":"FunctionDefinition","parameters":{"id":2177,"nodeType":"ParameterList","parameters":[],"src":"2290:2:9"},"returnParameters":{"id":2180,"nodeType":"ParameterList","parameters":[],"src":"2319:0:9"},"scope":2278,"src":"2266:60:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2187,"nodeType":"Block","src":"2395:7:9","statements":[]},"id":2188,"implemented":true,"kind":"function","modifiers":[{"id":2185,"kind":"modifierInvocation","modifierName":{"id":2184,"name":"onlyInitializing","nameLocations":["2378:16:9"],"nodeType":"IdentifierPath","referencedDeclaration":788,"src":"2378:16:9"},"nodeType":"ModifierInvocation","src":"2378:16:9"}],"name":"__Pausable_init_unchained","nameLocation":"2341:25:9","nodeType":"FunctionDefinition","parameters":{"id":2183,"nodeType":"ParameterList","parameters":[],"src":"2366:2:9"},"returnParameters":{"id":2186,"nodeType":"ParameterList","parameters":[],"src":"2395:0:9"},"scope":2278,"src":"2332:70:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2203,"nodeType":"Block","src":"2549:92:9","statements":[{"assignments":[2196],"declarations":[{"constant":false,"id":2196,"mutability":"mutable","name":"$","nameLocation":"2583:1:9","nodeType":"VariableDeclaration","scope":2203,"src":"2559:25:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$2133_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":2195,"nodeType":"UserDefinedTypeName","pathNode":{"id":2194,"name":"PausableStorage","nameLocations":["2559:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":2133,"src":"2559:15:9"},"referencedDeclaration":2133,"src":"2559:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$2133_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":2199,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2197,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"2587:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$2133_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2587:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$2133_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2559:49:9"},{"expression":{"expression":{"id":2200,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"2625:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$2133_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":2201,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2627:7:9","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":2132,"src":"2625:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2193,"id":2202,"nodeType":"Return","src":"2618:16:9"}]},"documentation":{"id":2189,"nodeType":"StructuredDocumentation","src":"2407:84:9","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":2204,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"2505:6:9","nodeType":"FunctionDefinition","parameters":{"id":2190,"nodeType":"ParameterList","parameters":[],"src":"2511:2:9"},"returnParameters":{"id":2193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2204,"src":"2543:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2191,"name":"bool","nodeType":"ElementaryTypeName","src":"2543:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2542:6:9"},"scope":2278,"src":"2496:145:9","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2215,"nodeType":"Block","src":"2760:77:9","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":2208,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"2774:6:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2774:8:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2214,"nodeType":"IfStatement","src":"2770:61:9","trueBody":{"id":2213,"nodeType":"Block","src":"2784:47:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2210,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"2805:13:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2805:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2212,"nodeType":"RevertStatement","src":"2798:22:9"}]}}]},"documentation":{"id":2205,"nodeType":"StructuredDocumentation","src":"2647:57:9","text":" @dev Throws if the contract is paused."},"id":2216,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2718:17:9","nodeType":"FunctionDefinition","parameters":{"id":2206,"nodeType":"ParameterList","parameters":[],"src":"2735:2:9"},"returnParameters":{"id":2207,"nodeType":"ParameterList","parameters":[],"src":"2760:0:9"},"scope":2278,"src":"2709:128:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2228,"nodeType":"Block","src":"2957:78:9","statements":[{"condition":{"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2971:9:9","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2220,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"2972:6:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2972:8:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2227,"nodeType":"IfStatement","src":"2967:62:9","trueBody":{"id":2226,"nodeType":"Block","src":"2982:47:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2223,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"3003:13:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3003:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2225,"nodeType":"RevertStatement","src":"2996:22:9"}]}}]},"documentation":{"id":2217,"nodeType":"StructuredDocumentation","src":"2843:61:9","text":" @dev Throws if the contract is not paused."},"id":2229,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2918:14:9","nodeType":"FunctionDefinition","parameters":{"id":2218,"nodeType":"ParameterList","parameters":[],"src":"2932:2:9"},"returnParameters":{"id":2219,"nodeType":"ParameterList","parameters":[],"src":"2957:0:9"},"scope":2278,"src":"2909:126:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2252,"nodeType":"Block","src":"3219:127:9","statements":[{"assignments":[2237],"declarations":[{"constant":false,"id":2237,"mutability":"mutable","name":"$","nameLocation":"3253:1:9","nodeType":"VariableDeclaration","scope":2252,"src":"3229:25:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$2133_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":2236,"nodeType":"UserDefinedTypeName","pathNode":{"id":2235,"name":"PausableStorage","nameLocations":["3229:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":2133,"src":"3229:15:9"},"referencedDeclaration":2133,"src":"3229:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$2133_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":2240,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2238,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"3257:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$2133_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3257:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$2133_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3229:49:9"},{"expression":{"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2241,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"3288:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$2133_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":2243,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3290:7:9","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":2132,"src":"3288:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3300:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3288:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2246,"nodeType":"ExpressionStatement","src":"3288:16:9"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2248,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"3326:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3326:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2247,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"3319:6:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3319:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2251,"nodeType":"EmitStatement","src":"3314:25:9"}]},"documentation":{"id":2230,"nodeType":"StructuredDocumentation","src":"3041:124:9","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":2253,"implemented":true,"kind":"function","modifiers":[{"id":2233,"kind":"modifierInvocation","modifierName":{"id":2232,"name":"whenNotPaused","nameLocations":["3205:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":2168,"src":"3205:13:9"},"nodeType":"ModifierInvocation","src":"3205:13:9"}],"name":"_pause","nameLocation":"3179:6:9","nodeType":"FunctionDefinition","parameters":{"id":2231,"nodeType":"ParameterList","parameters":[],"src":"3185:2:9"},"returnParameters":{"id":2234,"nodeType":"ParameterList","parameters":[],"src":"3219:0:9"},"scope":2278,"src":"3170:176:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2276,"nodeType":"Block","src":"3526:130:9","statements":[{"assignments":[2261],"declarations":[{"constant":false,"id":2261,"mutability":"mutable","name":"$","nameLocation":"3560:1:9","nodeType":"VariableDeclaration","scope":2276,"src":"3536:25:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$2133_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":2260,"nodeType":"UserDefinedTypeName","pathNode":{"id":2259,"name":"PausableStorage","nameLocations":["3536:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":2133,"src":"3536:15:9"},"referencedDeclaration":2133,"src":"3536:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$2133_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":2264,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2262,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"3564:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$2133_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3564:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$2133_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3536:49:9"},{"expression":{"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2265,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"3595:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$2133_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":2267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3597:7:9","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":2132,"src":"3595:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3607:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3595:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2270,"nodeType":"ExpressionStatement","src":"3595:17:9"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2272,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"3636:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3636:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2271,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"3627:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3627:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2275,"nodeType":"EmitStatement","src":"3622:27:9"}]},"documentation":{"id":2254,"nodeType":"StructuredDocumentation","src":"3352:121:9","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":2277,"implemented":true,"kind":"function","modifiers":[{"id":2257,"kind":"modifierInvocation","modifierName":{"id":2256,"name":"whenPaused","nameLocations":["3515:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":2176,"src":"3515:10:9"},"nodeType":"ModifierInvocation","src":"3515:10:9"}],"name":"_unpause","nameLocation":"3487:8:9","nodeType":"FunctionDefinition","parameters":{"id":2255,"nodeType":"ParameterList","parameters":[],"src":"3495:2:9"},"returnParameters":{"id":2258,"nodeType":"ParameterList","parameters":[],"src":"3526:0:9"},"scope":2278,"src":"3478:178:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2279,"src":"701:2957:9","usedErrors":[642,645,2157,2160],"usedEvents":[650,2149,2154]}],"src":"102:3557:9"},"id":9},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","exportedSymbols":{"Initializable":[893],"ReentrancyGuardUpgradeable":[2407]},"id":2408,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2280,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:10"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":2282,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2408,"sourceUnit":894,"src":"134:63:10","symbolAliases":[{"foreign":{"id":2281,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"142:13:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2284,"name":"Initializable","nameLocations":["1142:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":893,"src":"1142:13:10"},"id":2285,"nodeType":"InheritanceSpecifier","src":"1142:13:10"}],"canonicalName":"ReentrancyGuardUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2283,"nodeType":"StructuredDocumentation","src":"199:894:10","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":2407,"linearizedBaseContracts":[2407,893],"name":"ReentrancyGuardUpgradeable","nameLocation":"1112:26:10","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2288,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1935:11:10","nodeType":"VariableDeclaration","scope":2407,"src":"1910:40:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2286,"name":"uint256","nodeType":"ElementaryTypeName","src":"1910:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1949:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":2291,"mutability":"constant","name":"ENTERED","nameLocation":"1981:7:10","nodeType":"VariableDeclaration","scope":2407,"src":"1956:36:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2289,"name":"uint256","nodeType":"ElementaryTypeName","src":"1956:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":2290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1991:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"canonicalName":"ReentrancyGuardUpgradeable.ReentrancyGuardStorage","documentation":{"id":2292,"nodeType":"StructuredDocumentation","src":"1999:73:10","text":"@custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard"},"id":2295,"members":[{"constant":false,"id":2294,"mutability":"mutable","name":"_status","nameLocation":"2125:7:10","nodeType":"VariableDeclaration","scope":2295,"src":"2117:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2293,"name":"uint256","nodeType":"ElementaryTypeName","src":"2117:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ReentrancyGuardStorage","nameLocation":"2084:22:10","nodeType":"StructDefinition","scope":2407,"src":"2077:62:10","visibility":"public"},{"constant":true,"id":2298,"mutability":"constant","name":"ReentrancyGuardStorageLocation","nameLocation":"2289:30:10","nodeType":"VariableDeclaration","scope":2407,"src":"2264:124:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2296,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2264:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839623737396231373432326430646639323232333031386233326234643166613436653037313732336436383137653234383664303033626563633535663030","id":2297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2322:66:10","typeDescriptions":{"typeIdentifier":"t_rational_70319816728846589445362000750570655803700195216363692647688146666176345628416_by_1","typeString":"int_const 7031...(69 digits omitted)...8416"},"value":"0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00"},"visibility":"private"},{"body":{"id":2305,"nodeType":"Block","src":"2489:89:10","statements":[{"AST":{"nativeSrc":"2508:64:10","nodeType":"YulBlock","src":"2508:64:10","statements":[{"nativeSrc":"2522:40:10","nodeType":"YulAssignment","src":"2522:40:10","value":{"name":"ReentrancyGuardStorageLocation","nativeSrc":"2532:30:10","nodeType":"YulIdentifier","src":"2532:30:10"},"variableNames":[{"name":"$.slot","nativeSrc":"2522:6:10","nodeType":"YulIdentifier","src":"2522:6:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2302,"isOffset":false,"isSlot":true,"src":"2522:6:10","suffix":"slot","valueSize":1},{"declaration":2298,"isOffset":false,"isSlot":false,"src":"2532:30:10","valueSize":1}],"id":2304,"nodeType":"InlineAssembly","src":"2499:73:10"}]},"id":2306,"implemented":true,"kind":"function","modifiers":[],"name":"_getReentrancyGuardStorage","nameLocation":"2404:26:10","nodeType":"FunctionDefinition","parameters":{"id":2299,"nodeType":"ParameterList","parameters":[],"src":"2430:2:10"},"returnParameters":{"id":2303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2302,"mutability":"mutable","name":"$","nameLocation":"2486:1:10","nodeType":"VariableDeclaration","scope":2306,"src":"2455:32:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$2295_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":2301,"nodeType":"UserDefinedTypeName","pathNode":{"id":2300,"name":"ReentrancyGuardStorage","nameLocations":["2455:22:10"],"nodeType":"IdentifierPath","referencedDeclaration":2295,"src":"2455:22:10"},"referencedDeclaration":2295,"src":"2455:22:10","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$2295_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"src":"2454:34:10"},"scope":2407,"src":"2395:183:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":2307,"nodeType":"StructuredDocumentation","src":"2584:52:10","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":2309,"name":"ReentrancyGuardReentrantCall","nameLocation":"2647:28:10","nodeType":"ErrorDefinition","parameters":{"id":2308,"nodeType":"ParameterList","parameters":[],"src":"2675:2:10"},"src":"2641:37:10"},{"body":{"id":2317,"nodeType":"Block","src":"2744:51:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2314,"name":"__ReentrancyGuard_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"2754:32:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2754:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2316,"nodeType":"ExpressionStatement","src":"2754:34:10"}]},"id":2318,"implemented":true,"kind":"function","modifiers":[{"id":2312,"kind":"modifierInvocation","modifierName":{"id":2311,"name":"onlyInitializing","nameLocations":["2727:16:10"],"nodeType":"IdentifierPath","referencedDeclaration":788,"src":"2727:16:10"},"nodeType":"ModifierInvocation","src":"2727:16:10"}],"name":"__ReentrancyGuard_init","nameLocation":"2693:22:10","nodeType":"FunctionDefinition","parameters":{"id":2310,"nodeType":"ParameterList","parameters":[],"src":"2715:2:10"},"returnParameters":{"id":2313,"nodeType":"ParameterList","parameters":[],"src":"2744:0:10"},"scope":2407,"src":"2684:111:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2335,"nodeType":"Block","src":"2871:113:10","statements":[{"assignments":[2325],"declarations":[{"constant":false,"id":2325,"mutability":"mutable","name":"$","nameLocation":"2912:1:10","nodeType":"VariableDeclaration","scope":2335,"src":"2881:32:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$2295_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":2324,"nodeType":"UserDefinedTypeName","pathNode":{"id":2323,"name":"ReentrancyGuardStorage","nameLocations":["2881:22:10"],"nodeType":"IdentifierPath","referencedDeclaration":2295,"src":"2881:22:10"},"referencedDeclaration":2295,"src":"2881:22:10","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$2295_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":2328,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2326,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"2916:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$2295_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2916:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$2295_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2881:63:10"},{"expression":{"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2329,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"2954:1:10","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$2295_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":2331,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2956:7:10","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":2294,"src":"2954:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2332,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"2966:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2954:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2334,"nodeType":"ExpressionStatement","src":"2954:23:10"}]},"id":2336,"implemented":true,"kind":"function","modifiers":[{"id":2321,"kind":"modifierInvocation","modifierName":{"id":2320,"name":"onlyInitializing","nameLocations":["2854:16:10"],"nodeType":"IdentifierPath","referencedDeclaration":788,"src":"2854:16:10"},"nodeType":"ModifierInvocation","src":"2854:16:10"}],"name":"__ReentrancyGuard_init_unchained","nameLocation":"2810:32:10","nodeType":"FunctionDefinition","parameters":{"id":2319,"nodeType":"ParameterList","parameters":[],"src":"2842:2:10"},"returnParameters":{"id":2322,"nodeType":"ParameterList","parameters":[],"src":"2871:0:10"},"scope":2407,"src":"2801:183:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2346,"nodeType":"Block","src":"3385:79:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2339,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2372,"src":"3395:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3395:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2341,"nodeType":"ExpressionStatement","src":"3395:21:10"},{"id":2342,"nodeType":"PlaceholderStatement","src":"3426:1:10"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2343,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"3437:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3437:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2345,"nodeType":"ExpressionStatement","src":"3437:20:10"}]},"documentation":{"id":2337,"nodeType":"StructuredDocumentation","src":"2990:366:10","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":2347,"name":"nonReentrant","nameLocation":"3370:12:10","nodeType":"ModifierDefinition","parameters":{"id":2338,"nodeType":"ParameterList","parameters":[],"src":"3382:2:10"},"src":"3361:103:10","virtual":false,"visibility":"internal"},{"body":{"id":2371,"nodeType":"Block","src":"3509:345:10","statements":[{"assignments":[2352],"declarations":[{"constant":false,"id":2352,"mutability":"mutable","name":"$","nameLocation":"3550:1:10","nodeType":"VariableDeclaration","scope":2371,"src":"3519:32:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$2295_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":2351,"nodeType":"UserDefinedTypeName","pathNode":{"id":2350,"name":"ReentrancyGuardStorage","nameLocations":["3519:22:10"],"nodeType":"IdentifierPath","referencedDeclaration":2295,"src":"3519:22:10"},"referencedDeclaration":2295,"src":"3519:22:10","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$2295_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":2355,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2353,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"3554:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$2295_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$2295_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3519:63:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2356,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"3670:1:10","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$2295_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":2357,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3672:7:10","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":2294,"src":"3670:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2358,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2291,"src":"3683:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3670:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2364,"nodeType":"IfStatement","src":"3666:88:10","trueBody":{"id":2363,"nodeType":"Block","src":"3692:62:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2360,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"3713:28:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3713:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2362,"nodeType":"RevertStatement","src":"3706:37:10"}]}},{"expression":{"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2365,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"3828:1:10","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$2295_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":2367,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3830:7:10","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":2294,"src":"3828:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2368,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2291,"src":"3840:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3828:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2370,"nodeType":"ExpressionStatement","src":"3828:19:10"}]},"id":2372,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"3479:19:10","nodeType":"FunctionDefinition","parameters":{"id":2348,"nodeType":"ParameterList","parameters":[],"src":"3498:2:10"},"returnParameters":{"id":2349,"nodeType":"ParameterList","parameters":[],"src":"3509:0:10"},"scope":2407,"src":"3470:384:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2387,"nodeType":"Block","src":"3898:245:10","statements":[{"assignments":[2377],"declarations":[{"constant":false,"id":2377,"mutability":"mutable","name":"$","nameLocation":"3939:1:10","nodeType":"VariableDeclaration","scope":2387,"src":"3908:32:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$2295_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":2376,"nodeType":"UserDefinedTypeName","pathNode":{"id":2375,"name":"ReentrancyGuardStorage","nameLocations":["3908:22:10"],"nodeType":"IdentifierPath","referencedDeclaration":2295,"src":"3908:22:10"},"referencedDeclaration":2295,"src":"3908:22:10","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$2295_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":2380,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2378,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"3943:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$2295_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3943:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$2295_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3908:63:10"},{"expression":{"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2381,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"4113:1:10","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$2295_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":2383,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4115:7:10","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":2294,"src":"4113:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2384,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"4125:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4113:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2386,"nodeType":"ExpressionStatement","src":"4113:23:10"}]},"id":2388,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"3869:18:10","nodeType":"FunctionDefinition","parameters":{"id":2373,"nodeType":"ParameterList","parameters":[],"src":"3887:2:10"},"returnParameters":{"id":2374,"nodeType":"ParameterList","parameters":[],"src":"3898:0:10"},"scope":2407,"src":"3860:283:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2405,"nodeType":"Block","src":"4386:117:10","statements":[{"assignments":[2396],"declarations":[{"constant":false,"id":2396,"mutability":"mutable","name":"$","nameLocation":"4427:1:10","nodeType":"VariableDeclaration","scope":2405,"src":"4396:32:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$2295_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":2395,"nodeType":"UserDefinedTypeName","pathNode":{"id":2394,"name":"ReentrancyGuardStorage","nameLocations":["4396:22:10"],"nodeType":"IdentifierPath","referencedDeclaration":2295,"src":"4396:22:10"},"referencedDeclaration":2295,"src":"4396:22:10","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$2295_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":2399,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2397,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"4431:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$2295_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4431:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$2295_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4396:63:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2400,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"4476:1:10","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$2295_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":2401,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4478:7:10","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":2294,"src":"4476:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2402,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2291,"src":"4489:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4476:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2393,"id":2404,"nodeType":"Return","src":"4469:27:10"}]},"documentation":{"id":2389,"nodeType":"StructuredDocumentation","src":"4149:168:10","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":2406,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"4331:23:10","nodeType":"FunctionDefinition","parameters":{"id":2390,"nodeType":"ParameterList","parameters":[],"src":"4354:2:10"},"returnParameters":{"id":2393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2406,"src":"4380:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2391,"name":"bool","nodeType":"ElementaryTypeName","src":"4380:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4379:6:10"},"scope":2407,"src":"4322:181:10","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2408,"src":"1094:3411:10","usedErrors":[642,645,2309],"usedEvents":[650]}],"src":"109:4397:10"},"id":10},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","exportedSymbols":{"ERC165Upgradeable":[2447],"IERC165":[7379],"Initializable":[893]},"id":2448,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2409,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:11"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":2411,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2448,"sourceUnit":7380,"src":"140:80:11","symbolAliases":[{"foreign":{"id":2410,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7379,"src":"148:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":2413,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2448,"sourceUnit":894,"src":"221:66:11","symbolAliases":[{"foreign":{"id":2412,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"229:13:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2415,"name":"Initializable","nameLocations":["808:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":893,"src":"808:13:11"},"id":2416,"nodeType":"InheritanceSpecifier","src":"808:13:11"},{"baseName":{"id":2417,"name":"IERC165","nameLocations":["823:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":7379,"src":"823:7:11"},"id":2418,"nodeType":"InheritanceSpecifier","src":"823:7:11"}],"canonicalName":"ERC165Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2414,"nodeType":"StructuredDocumentation","src":"289:479:11","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":2447,"linearizedBaseContracts":[2447,7379,893],"name":"ERC165Upgradeable","nameLocation":"787:17:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":2423,"nodeType":"Block","src":"888:7:11","statements":[]},"id":2424,"implemented":true,"kind":"function","modifiers":[{"id":2421,"kind":"modifierInvocation","modifierName":{"id":2420,"name":"onlyInitializing","nameLocations":["871:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":788,"src":"871:16:11"},"nodeType":"ModifierInvocation","src":"871:16:11"}],"name":"__ERC165_init","nameLocation":"846:13:11","nodeType":"FunctionDefinition","parameters":{"id":2419,"nodeType":"ParameterList","parameters":[],"src":"859:2:11"},"returnParameters":{"id":2422,"nodeType":"ParameterList","parameters":[],"src":"888:0:11"},"scope":2447,"src":"837:58:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2429,"nodeType":"Block","src":"962:7:11","statements":[]},"id":2430,"implemented":true,"kind":"function","modifiers":[{"id":2427,"kind":"modifierInvocation","modifierName":{"id":2426,"name":"onlyInitializing","nameLocations":["945:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":788,"src":"945:16:11"},"nodeType":"ModifierInvocation","src":"945:16:11"}],"name":"__ERC165_init_unchained","nameLocation":"910:23:11","nodeType":"FunctionDefinition","parameters":{"id":2425,"nodeType":"ParameterList","parameters":[],"src":"933:2:11"},"returnParameters":{"id":2428,"nodeType":"ParameterList","parameters":[],"src":"962:0:11"},"scope":2447,"src":"901:68:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[7378],"body":{"id":2445,"nodeType":"Block","src":"1117:64:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2438,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"1134:11:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2440,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7379,"src":"1154:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$7379_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$7379_$","typeString":"type(contract IERC165)"}],"id":2439,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1149:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1149:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$7379","typeString":"type(contract IERC165)"}},"id":2442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1163:11:11","memberName":"interfaceId","nodeType":"MemberAccess","src":"1149:25:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1134:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2437,"id":2444,"nodeType":"Return","src":"1127:47:11"}]},"documentation":{"id":2431,"nodeType":"StructuredDocumentation","src":"974:56:11","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2446,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1044:17:11","nodeType":"FunctionDefinition","parameters":{"id":2434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2433,"mutability":"mutable","name":"interfaceId","nameLocation":"1069:11:11","nodeType":"VariableDeclaration","scope":2446,"src":"1062:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2432,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1062:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1061:20:11"},"returnParameters":{"id":2437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2446,"src":"1111:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2435,"name":"bool","nodeType":"ElementaryTypeName","src":"1111:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1110:6:11"},"scope":2447,"src":"1035:146:11","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2448,"src":"769:414:11","usedErrors":[642,645],"usedEvents":[650]}],"src":"114:1070:11"},"id":11},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[2530]},"id":2531,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2449,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":2450,"nodeType":"StructuredDocumentation","src":"135:90:12","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":2530,"linearizedBaseContracts":[2530],"name":"IAccessControl","nameLocation":"236:14:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2451,"nodeType":"StructuredDocumentation","src":"257:56:12","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":2457,"name":"AccessControlUnauthorizedAccount","nameLocation":"324:32:12","nodeType":"ErrorDefinition","parameters":{"id":2456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2453,"mutability":"mutable","name":"account","nameLocation":"365:7:12","nodeType":"VariableDeclaration","scope":2457,"src":"357:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2452,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2455,"mutability":"mutable","name":"neededRole","nameLocation":"382:10:12","nodeType":"VariableDeclaration","scope":2457,"src":"374:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2454,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"356:37:12"},"src":"318:76:12"},{"documentation":{"id":2458,"nodeType":"StructuredDocumentation","src":"400:148:12","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":2460,"name":"AccessControlBadConfirmation","nameLocation":"559:28:12","nodeType":"ErrorDefinition","parameters":{"id":2459,"nodeType":"ParameterList","parameters":[],"src":"587:2:12"},"src":"553:37:12"},{"anonymous":false,"documentation":{"id":2461,"nodeType":"StructuredDocumentation","src":"596:254:12","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":2469,"name":"RoleAdminChanged","nameLocation":"861:16:12","nodeType":"EventDefinition","parameters":{"id":2468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2463,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"894:4:12","nodeType":"VariableDeclaration","scope":2469,"src":"878:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2462,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2465,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"916:17:12","nodeType":"VariableDeclaration","scope":2469,"src":"900:33:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2464,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2467,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"951:12:12","nodeType":"VariableDeclaration","scope":2469,"src":"935:28:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2466,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:87:12"},"src":"855:110:12"},{"anonymous":false,"documentation":{"id":2470,"nodeType":"StructuredDocumentation","src":"971:295:12","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":2478,"name":"RoleGranted","nameLocation":"1277:11:12","nodeType":"EventDefinition","parameters":{"id":2477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2472,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1305:4:12","nodeType":"VariableDeclaration","scope":2478,"src":"1289:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2471,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2474,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1327:7:12","nodeType":"VariableDeclaration","scope":2478,"src":"1311:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2473,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2476,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1352:6:12","nodeType":"VariableDeclaration","scope":2478,"src":"1336:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2475,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:71:12"},"src":"1271:89:12"},{"anonymous":false,"documentation":{"id":2479,"nodeType":"StructuredDocumentation","src":"1366:275:12","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":2487,"name":"RoleRevoked","nameLocation":"1652:11:12","nodeType":"EventDefinition","parameters":{"id":2486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2481,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1680:4:12","nodeType":"VariableDeclaration","scope":2487,"src":"1664:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2480,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1664:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2483,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1702:7:12","nodeType":"VariableDeclaration","scope":2487,"src":"1686:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2482,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2485,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1727:6:12","nodeType":"VariableDeclaration","scope":2487,"src":"1711:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2484,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:71:12"},"src":"1646:89:12"},{"documentation":{"id":2488,"nodeType":"StructuredDocumentation","src":"1741:76:12","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":2497,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1831:7:12","nodeType":"FunctionDefinition","parameters":{"id":2493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2490,"mutability":"mutable","name":"role","nameLocation":"1847:4:12","nodeType":"VariableDeclaration","scope":2497,"src":"1839:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2489,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1839:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2492,"mutability":"mutable","name":"account","nameLocation":"1861:7:12","nodeType":"VariableDeclaration","scope":2497,"src":"1853:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2491,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:31:12"},"returnParameters":{"id":2496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2497,"src":"1893:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2494,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:12"},"scope":2530,"src":"1822:77:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2498,"nodeType":"StructuredDocumentation","src":"1905:184:12","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":2505,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2103:12:12","nodeType":"FunctionDefinition","parameters":{"id":2501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2500,"mutability":"mutable","name":"role","nameLocation":"2124:4:12","nodeType":"VariableDeclaration","scope":2505,"src":"2116:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2499,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2116:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2115:14:12"},"returnParameters":{"id":2504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2505,"src":"2153:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2502,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2152:9:12"},"scope":2530,"src":"2094:68:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2506,"nodeType":"StructuredDocumentation","src":"2168:239:12","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":2513,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2421:9:12","nodeType":"FunctionDefinition","parameters":{"id":2511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2508,"mutability":"mutable","name":"role","nameLocation":"2439:4:12","nodeType":"VariableDeclaration","scope":2513,"src":"2431:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2507,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2431:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2510,"mutability":"mutable","name":"account","nameLocation":"2453:7:12","nodeType":"VariableDeclaration","scope":2513,"src":"2445:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2509,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:31:12"},"returnParameters":{"id":2512,"nodeType":"ParameterList","parameters":[],"src":"2470:0:12"},"scope":2530,"src":"2412:59:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2514,"nodeType":"StructuredDocumentation","src":"2477:223:12","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":2521,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2714:10:12","nodeType":"FunctionDefinition","parameters":{"id":2519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2516,"mutability":"mutable","name":"role","nameLocation":"2733:4:12","nodeType":"VariableDeclaration","scope":2521,"src":"2725:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2515,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2518,"mutability":"mutable","name":"account","nameLocation":"2747:7:12","nodeType":"VariableDeclaration","scope":2521,"src":"2739:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2517,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:31:12"},"returnParameters":{"id":2520,"nodeType":"ParameterList","parameters":[],"src":"2764:0:12"},"scope":2530,"src":"2705:60:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2522,"nodeType":"StructuredDocumentation","src":"2771:491:12","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":2529,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3276:12:12","nodeType":"FunctionDefinition","parameters":{"id":2527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2524,"mutability":"mutable","name":"role","nameLocation":"3297:4:12","nodeType":"VariableDeclaration","scope":2529,"src":"3289:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2523,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2526,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3311:18:12","nodeType":"VariableDeclaration","scope":2529,"src":"3303:26:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2525,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3288:42:12"},"returnParameters":{"id":2528,"nodeType":"ParameterList","parameters":[],"src":"3339:0:12"},"scope":2530,"src":"3267:73:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2531,"src":"226:3116:12","usedErrors":[2457,2460],"usedEvents":[2469,2478,2487]}],"src":"109:3234:12"},"id":12},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","exportedSymbols":{"IERC1363":[2612],"IERC165":[7379],"IERC20":[3904]},"id":2613,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2532,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:13"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","file":"./IERC20.sol","id":2534,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2613,"sourceUnit":2642,"src":"133:36:13","symbolAliases":[{"foreign":{"id":2533,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3904,"src":"141:6:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":2536,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2613,"sourceUnit":2617,"src":"170:38:13","symbolAliases":[{"foreign":{"id":2535,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7379,"src":"178:7:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2538,"name":"IERC20","nameLocations":["590:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":3904,"src":"590:6:13"},"id":2539,"nodeType":"InheritanceSpecifier","src":"590:6:13"},{"baseName":{"id":2540,"name":"IERC165","nameLocations":["598:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":7379,"src":"598:7:13"},"id":2541,"nodeType":"InheritanceSpecifier","src":"598:7:13"}],"canonicalName":"IERC1363","contractDependencies":[],"contractKind":"interface","documentation":{"id":2537,"nodeType":"StructuredDocumentation","src":"210:357:13","text":" @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."},"fullyImplemented":false,"id":2612,"linearizedBaseContracts":[2612,7379,3904],"name":"IERC1363","nameLocation":"578:8:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2542,"nodeType":"StructuredDocumentation","src":"1148:370:13","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"1296ee62","id":2551,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"1532:15:13","nodeType":"FunctionDefinition","parameters":{"id":2547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2544,"mutability":"mutable","name":"to","nameLocation":"1556:2:13","nodeType":"VariableDeclaration","scope":2551,"src":"1548:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2543,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2546,"mutability":"mutable","name":"value","nameLocation":"1568:5:13","nodeType":"VariableDeclaration","scope":2551,"src":"1560:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2545,"name":"uint256","nodeType":"ElementaryTypeName","src":"1560:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1547:27:13"},"returnParameters":{"id":2550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2551,"src":"1593:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2548,"name":"bool","nodeType":"ElementaryTypeName","src":"1593:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1592:6:13"},"scope":2612,"src":"1523:76:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2552,"nodeType":"StructuredDocumentation","src":"1605:453:13","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"4000aea0","id":2563,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"2072:15:13","nodeType":"FunctionDefinition","parameters":{"id":2559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2554,"mutability":"mutable","name":"to","nameLocation":"2096:2:13","nodeType":"VariableDeclaration","scope":2563,"src":"2088:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2553,"name":"address","nodeType":"ElementaryTypeName","src":"2088:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2556,"mutability":"mutable","name":"value","nameLocation":"2108:5:13","nodeType":"VariableDeclaration","scope":2563,"src":"2100:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2555,"name":"uint256","nodeType":"ElementaryTypeName","src":"2100:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2558,"mutability":"mutable","name":"data","nameLocation":"2130:4:13","nodeType":"VariableDeclaration","scope":2563,"src":"2115:19:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2557,"name":"bytes","nodeType":"ElementaryTypeName","src":"2115:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2087:48:13"},"returnParameters":{"id":2562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2563,"src":"2154:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2560,"name":"bool","nodeType":"ElementaryTypeName","src":"2154:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2153:6:13"},"scope":2612,"src":"2063:97:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2564,"nodeType":"StructuredDocumentation","src":"2166:453:13","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"d8fbe994","id":2575,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"2633:19:13","nodeType":"FunctionDefinition","parameters":{"id":2571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2566,"mutability":"mutable","name":"from","nameLocation":"2661:4:13","nodeType":"VariableDeclaration","scope":2575,"src":"2653:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2565,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2568,"mutability":"mutable","name":"to","nameLocation":"2675:2:13","nodeType":"VariableDeclaration","scope":2575,"src":"2667:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2567,"name":"address","nodeType":"ElementaryTypeName","src":"2667:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2570,"mutability":"mutable","name":"value","nameLocation":"2687:5:13","nodeType":"VariableDeclaration","scope":2575,"src":"2679:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2569,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2652:41:13"},"returnParameters":{"id":2574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2575,"src":"2712:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2572,"name":"bool","nodeType":"ElementaryTypeName","src":"2712:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2711:6:13"},"scope":2612,"src":"2624:94:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2576,"nodeType":"StructuredDocumentation","src":"2724:536:13","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"c1d34b89","id":2589,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"3274:19:13","nodeType":"FunctionDefinition","parameters":{"id":2585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2578,"mutability":"mutable","name":"from","nameLocation":"3302:4:13","nodeType":"VariableDeclaration","scope":2589,"src":"3294:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2577,"name":"address","nodeType":"ElementaryTypeName","src":"3294:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2580,"mutability":"mutable","name":"to","nameLocation":"3316:2:13","nodeType":"VariableDeclaration","scope":2589,"src":"3308:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2579,"name":"address","nodeType":"ElementaryTypeName","src":"3308:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2582,"mutability":"mutable","name":"value","nameLocation":"3328:5:13","nodeType":"VariableDeclaration","scope":2589,"src":"3320:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2581,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2584,"mutability":"mutable","name":"data","nameLocation":"3350:4:13","nodeType":"VariableDeclaration","scope":2589,"src":"3335:19:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2583,"name":"bytes","nodeType":"ElementaryTypeName","src":"3335:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3293:62:13"},"returnParameters":{"id":2588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2587,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2589,"src":"3374:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2586,"name":"bool","nodeType":"ElementaryTypeName","src":"3374:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3373:6:13"},"scope":2612,"src":"3265:115:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2590,"nodeType":"StructuredDocumentation","src":"3386:390:13","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"3177029f","id":2599,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"3790:14:13","nodeType":"FunctionDefinition","parameters":{"id":2595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2592,"mutability":"mutable","name":"spender","nameLocation":"3813:7:13","nodeType":"VariableDeclaration","scope":2599,"src":"3805:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2591,"name":"address","nodeType":"ElementaryTypeName","src":"3805:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2594,"mutability":"mutable","name":"value","nameLocation":"3830:5:13","nodeType":"VariableDeclaration","scope":2599,"src":"3822:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2593,"name":"uint256","nodeType":"ElementaryTypeName","src":"3822:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3804:32:13"},"returnParameters":{"id":2598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2599,"src":"3855:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2596,"name":"bool","nodeType":"ElementaryTypeName","src":"3855:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3854:6:13"},"scope":2612,"src":"3781:80:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2600,"nodeType":"StructuredDocumentation","src":"3867:478:13","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"cae9ca51","id":2611,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"4359:14:13","nodeType":"FunctionDefinition","parameters":{"id":2607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2602,"mutability":"mutable","name":"spender","nameLocation":"4382:7:13","nodeType":"VariableDeclaration","scope":2611,"src":"4374:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2601,"name":"address","nodeType":"ElementaryTypeName","src":"4374:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2604,"mutability":"mutable","name":"value","nameLocation":"4399:5:13","nodeType":"VariableDeclaration","scope":2611,"src":"4391:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2603,"name":"uint256","nodeType":"ElementaryTypeName","src":"4391:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2606,"mutability":"mutable","name":"data","nameLocation":"4421:4:13","nodeType":"VariableDeclaration","scope":2611,"src":"4406:19:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2605,"name":"bytes","nodeType":"ElementaryTypeName","src":"4406:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4373:53:13"},"returnParameters":{"id":2610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2611,"src":"4445:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2608,"name":"bool","nodeType":"ElementaryTypeName","src":"4445:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4444:6:13"},"scope":2612,"src":"4350:101:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2613,"src":"568:3885:13","usedErrors":[],"usedEvents":[3838,3847]}],"src":"107:4347:13"},"id":13},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[7379]},"id":2617,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2614,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":2616,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2617,"sourceUnit":7380,"src":"132:59:14","symbolAliases":[{"foreign":{"id":2615,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7379,"src":"140:7:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:86:14"},"id":14},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","exportedSymbols":{"IERC1967":[2637]},"id":2638,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2618,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1967","contractDependencies":[],"contractKind":"interface","documentation":{"id":2619,"nodeType":"StructuredDocumentation","src":"133:101:15","text":" @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."},"fullyImplemented":true,"id":2637,"linearizedBaseContracts":[2637],"name":"IERC1967","nameLocation":"245:8:15","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2620,"nodeType":"StructuredDocumentation","src":"260:68:15","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":2624,"name":"Upgraded","nameLocation":"339:8:15","nodeType":"EventDefinition","parameters":{"id":2623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2622,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"364:14:15","nodeType":"VariableDeclaration","scope":2624,"src":"348:30:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2621,"name":"address","nodeType":"ElementaryTypeName","src":"348:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"347:32:15"},"src":"333:47:15"},{"anonymous":false,"documentation":{"id":2625,"nodeType":"StructuredDocumentation","src":"386:67:15","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":2631,"name":"AdminChanged","nameLocation":"464:12:15","nodeType":"EventDefinition","parameters":{"id":2630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2627,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"485:13:15","nodeType":"VariableDeclaration","scope":2631,"src":"477:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2626,"name":"address","nodeType":"ElementaryTypeName","src":"477:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2629,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"508:8:15","nodeType":"VariableDeclaration","scope":2631,"src":"500:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2628,"name":"address","nodeType":"ElementaryTypeName","src":"500:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"476:41:15"},"src":"458:60:15"},{"anonymous":false,"documentation":{"id":2632,"nodeType":"StructuredDocumentation","src":"524:59:15","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":2636,"name":"BeaconUpgraded","nameLocation":"594:14:15","nodeType":"EventDefinition","parameters":{"id":2635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2634,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"625:6:15","nodeType":"VariableDeclaration","scope":2636,"src":"609:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2633,"name":"address","nodeType":"ElementaryTypeName","src":"609:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"608:24:15"},"src":"588:45:15"}],"scope":2638,"src":"235:400:15","usedErrors":[],"usedEvents":[2624,2631,2636]}],"src":"107:529:15"},"id":15},"@openzeppelin/contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[3904]},"id":2642,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2639,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:16"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":2641,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2642,"sourceUnit":3905,"src":"131:49:16","symbolAliases":[{"foreign":{"id":2640,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3904,"src":"139:6:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"105:76:16"},"id":16},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[2651]},"id":2652,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2643,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822Proxiable","contractDependencies":[],"contractKind":"interface","documentation":{"id":2644,"nodeType":"StructuredDocumentation","src":"139:204:17","text":" @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":2651,"linearizedBaseContracts":[2651],"name":"IERC1822Proxiable","nameLocation":"354:17:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2645,"nodeType":"StructuredDocumentation","src":"378:438:17","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":2650,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"830:13:17","nodeType":"FunctionDefinition","parameters":{"id":2646,"nodeType":"ParameterList","parameters":[],"src":"843:2:17"},"returnParameters":{"id":2649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2650,"src":"869:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2647,"name":"bytes32","nodeType":"ElementaryTypeName","src":"869:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"868:9:17"},"scope":2651,"src":"821:57:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2652,"src":"344:536:17","usedErrors":[],"usedEvents":[]}],"src":"113:768:17"},"id":17},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[2788],"IERC20Errors":[2693],"IERC721Errors":[2741]},"id":2789,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2653,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2654,"nodeType":"StructuredDocumentation","src":"138:141:18","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":2693,"linearizedBaseContracts":[2693],"name":"IERC20Errors","nameLocation":"290:12:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2655,"nodeType":"StructuredDocumentation","src":"309:309:18","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":2663,"name":"ERC20InsufficientBalance","nameLocation":"629:24:18","nodeType":"ErrorDefinition","parameters":{"id":2662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2657,"mutability":"mutable","name":"sender","nameLocation":"662:6:18","nodeType":"VariableDeclaration","scope":2663,"src":"654:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2656,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2659,"mutability":"mutable","name":"balance","nameLocation":"678:7:18","nodeType":"VariableDeclaration","scope":2663,"src":"670:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2658,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2661,"mutability":"mutable","name":"needed","nameLocation":"695:6:18","nodeType":"VariableDeclaration","scope":2663,"src":"687:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2660,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:18"},"src":"623:80:18"},{"documentation":{"id":2664,"nodeType":"StructuredDocumentation","src":"709:152:18","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":2668,"name":"ERC20InvalidSender","nameLocation":"872:18:18","nodeType":"ErrorDefinition","parameters":{"id":2667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2666,"mutability":"mutable","name":"sender","nameLocation":"899:6:18","nodeType":"VariableDeclaration","scope":2668,"src":"891:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2665,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:18"},"src":"866:41:18"},{"documentation":{"id":2669,"nodeType":"StructuredDocumentation","src":"913:159:18","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":2673,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:18","nodeType":"ErrorDefinition","parameters":{"id":2672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2671,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:18","nodeType":"VariableDeclaration","scope":2673,"src":"1104:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2670,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:18"},"src":"1077:45:18"},{"documentation":{"id":2674,"nodeType":"StructuredDocumentation","src":"1128:345:18","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":2682,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:18","nodeType":"ErrorDefinition","parameters":{"id":2681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2676,"mutability":"mutable","name":"spender","nameLocation":"1519:7:18","nodeType":"VariableDeclaration","scope":2682,"src":"1511:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2675,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2678,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:18","nodeType":"VariableDeclaration","scope":2682,"src":"1528:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2677,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2680,"mutability":"mutable","name":"needed","nameLocation":"1555:6:18","nodeType":"VariableDeclaration","scope":2682,"src":"1547:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2679,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:18"},"src":"1478:85:18"},{"documentation":{"id":2683,"nodeType":"StructuredDocumentation","src":"1569:174:18","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":2687,"name":"ERC20InvalidApprover","nameLocation":"1754:20:18","nodeType":"ErrorDefinition","parameters":{"id":2686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2685,"mutability":"mutable","name":"approver","nameLocation":"1783:8:18","nodeType":"VariableDeclaration","scope":2687,"src":"1775:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2684,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:18"},"src":"1748:45:18"},{"documentation":{"id":2688,"nodeType":"StructuredDocumentation","src":"1799:195:18","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":2692,"name":"ERC20InvalidSpender","nameLocation":"2005:19:18","nodeType":"ErrorDefinition","parameters":{"id":2691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2690,"mutability":"mutable","name":"spender","nameLocation":"2033:7:18","nodeType":"VariableDeclaration","scope":2692,"src":"2025:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2689,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:18"},"src":"1999:43:18"}],"scope":2789,"src":"280:1764:18","usedErrors":[2663,2668,2673,2682,2687,2692],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2694,"nodeType":"StructuredDocumentation","src":"2046:143:18","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":2741,"linearizedBaseContracts":[2741],"name":"IERC721Errors","nameLocation":"2200:13:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2695,"nodeType":"StructuredDocumentation","src":"2220:219:18","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":2699,"name":"ERC721InvalidOwner","nameLocation":"2450:18:18","nodeType":"ErrorDefinition","parameters":{"id":2698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2697,"mutability":"mutable","name":"owner","nameLocation":"2477:5:18","nodeType":"VariableDeclaration","scope":2699,"src":"2469:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2696,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:18"},"src":"2444:40:18"},{"documentation":{"id":2700,"nodeType":"StructuredDocumentation","src":"2490:132:18","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":2704,"name":"ERC721NonexistentToken","nameLocation":"2633:22:18","nodeType":"ErrorDefinition","parameters":{"id":2703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2702,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:18","nodeType":"VariableDeclaration","scope":2704,"src":"2656:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2701,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:18"},"src":"2627:46:18"},{"documentation":{"id":2705,"nodeType":"StructuredDocumentation","src":"2679:289:18","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":2713,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:18","nodeType":"ErrorDefinition","parameters":{"id":2712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2707,"mutability":"mutable","name":"sender","nameLocation":"3008:6:18","nodeType":"VariableDeclaration","scope":2713,"src":"3000:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2706,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2709,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:18","nodeType":"VariableDeclaration","scope":2713,"src":"3016:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2708,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2711,"mutability":"mutable","name":"owner","nameLocation":"3041:5:18","nodeType":"VariableDeclaration","scope":2713,"src":"3033:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2710,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:18"},"src":"2973:75:18"},{"documentation":{"id":2714,"nodeType":"StructuredDocumentation","src":"3054:152:18","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":2718,"name":"ERC721InvalidSender","nameLocation":"3217:19:18","nodeType":"ErrorDefinition","parameters":{"id":2717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2716,"mutability":"mutable","name":"sender","nameLocation":"3245:6:18","nodeType":"VariableDeclaration","scope":2718,"src":"3237:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2715,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:18"},"src":"3211:42:18"},{"documentation":{"id":2719,"nodeType":"StructuredDocumentation","src":"3259:159:18","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":2723,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:18","nodeType":"ErrorDefinition","parameters":{"id":2722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2721,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:18","nodeType":"VariableDeclaration","scope":2723,"src":"3451:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2720,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:18"},"src":"3423:46:18"},{"documentation":{"id":2724,"nodeType":"StructuredDocumentation","src":"3475:247:18","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":2730,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:18","nodeType":"ErrorDefinition","parameters":{"id":2729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2726,"mutability":"mutable","name":"operator","nameLocation":"3768:8:18","nodeType":"VariableDeclaration","scope":2730,"src":"3760:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2725,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2728,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:18","nodeType":"VariableDeclaration","scope":2730,"src":"3778:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2727,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:18"},"src":"3727:68:18"},{"documentation":{"id":2731,"nodeType":"StructuredDocumentation","src":"3801:174:18","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":2735,"name":"ERC721InvalidApprover","nameLocation":"3986:21:18","nodeType":"ErrorDefinition","parameters":{"id":2734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2733,"mutability":"mutable","name":"approver","nameLocation":"4016:8:18","nodeType":"VariableDeclaration","scope":2735,"src":"4008:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2732,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:18"},"src":"3980:46:18"},{"documentation":{"id":2736,"nodeType":"StructuredDocumentation","src":"4032:197:18","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":2740,"name":"ERC721InvalidOperator","nameLocation":"4240:21:18","nodeType":"ErrorDefinition","parameters":{"id":2739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2738,"mutability":"mutable","name":"operator","nameLocation":"4270:8:18","nodeType":"VariableDeclaration","scope":2740,"src":"4262:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2737,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:18"},"src":"4234:46:18"}],"scope":2789,"src":"2190:2092:18","usedErrors":[2699,2704,2713,2718,2723,2730,2735,2740],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2742,"nodeType":"StructuredDocumentation","src":"4284:145:18","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":2788,"linearizedBaseContracts":[2788],"name":"IERC1155Errors","nameLocation":"4440:14:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2743,"nodeType":"StructuredDocumentation","src":"4461:361:18","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":2753,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:18","nodeType":"ErrorDefinition","parameters":{"id":2752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2745,"mutability":"mutable","name":"sender","nameLocation":"4868:6:18","nodeType":"VariableDeclaration","scope":2753,"src":"4860:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2744,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2747,"mutability":"mutable","name":"balance","nameLocation":"4884:7:18","nodeType":"VariableDeclaration","scope":2753,"src":"4876:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2746,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2749,"mutability":"mutable","name":"needed","nameLocation":"4901:6:18","nodeType":"VariableDeclaration","scope":2753,"src":"4893:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2748,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2751,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:18","nodeType":"VariableDeclaration","scope":2753,"src":"4909:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2750,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:18"},"src":"4827:99:18"},{"documentation":{"id":2754,"nodeType":"StructuredDocumentation","src":"4932:152:18","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":2758,"name":"ERC1155InvalidSender","nameLocation":"5095:20:18","nodeType":"ErrorDefinition","parameters":{"id":2757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2756,"mutability":"mutable","name":"sender","nameLocation":"5124:6:18","nodeType":"VariableDeclaration","scope":2758,"src":"5116:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2755,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:18"},"src":"5089:43:18"},{"documentation":{"id":2759,"nodeType":"StructuredDocumentation","src":"5138:159:18","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":2763,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:18","nodeType":"ErrorDefinition","parameters":{"id":2762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2761,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:18","nodeType":"VariableDeclaration","scope":2763,"src":"5331:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2760,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:18"},"src":"5302:47:18"},{"documentation":{"id":2764,"nodeType":"StructuredDocumentation","src":"5355:256:18","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":2770,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:18","nodeType":"ErrorDefinition","parameters":{"id":2769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2766,"mutability":"mutable","name":"operator","nameLocation":"5659:8:18","nodeType":"VariableDeclaration","scope":2770,"src":"5651:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2765,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2768,"mutability":"mutable","name":"owner","nameLocation":"5677:5:18","nodeType":"VariableDeclaration","scope":2770,"src":"5669:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2767,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:18"},"src":"5616:68:18"},{"documentation":{"id":2771,"nodeType":"StructuredDocumentation","src":"5690:174:18","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":2775,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:18","nodeType":"ErrorDefinition","parameters":{"id":2774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2773,"mutability":"mutable","name":"approver","nameLocation":"5906:8:18","nodeType":"VariableDeclaration","scope":2775,"src":"5898:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2772,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:18"},"src":"5869:47:18"},{"documentation":{"id":2776,"nodeType":"StructuredDocumentation","src":"5922:197:18","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":2780,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:18","nodeType":"ErrorDefinition","parameters":{"id":2779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2778,"mutability":"mutable","name":"operator","nameLocation":"6161:8:18","nodeType":"VariableDeclaration","scope":2780,"src":"6153:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2777,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:18"},"src":"6124:47:18"},{"documentation":{"id":2781,"nodeType":"StructuredDocumentation","src":"6177:280:18","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":2787,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:18","nodeType":"ErrorDefinition","parameters":{"id":2786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2783,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:18","nodeType":"VariableDeclaration","scope":2787,"src":"6494:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2782,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2785,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:18","nodeType":"VariableDeclaration","scope":2787,"src":"6513:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2784,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:18"},"src":"6462:73:18"}],"scope":2789,"src":"4430:2107:18","usedErrors":[2753,2758,2763,2770,2775,2780,2787],"usedEvents":[]}],"src":"112:6426:18"},"id":18},"@openzeppelin/contracts/proxy/Clones.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/Clones.sol","exportedSymbols":{"Clones":[3187],"Create2":[5637],"Errors":[5659]},"id":3188,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2790,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/Create2.sol","file":"../utils/Create2.sol","id":2792,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3188,"sourceUnit":5638,"src":"126:45:19","symbolAliases":[{"foreign":{"id":2791,"name":"Create2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"134:7:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","file":"../utils/Errors.sol","id":2794,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3188,"sourceUnit":5660,"src":"172:43:19","symbolAliases":[{"foreign":{"id":2793,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"180:6:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Clones","contractDependencies":[],"contractKind":"library","documentation":{"id":2795,"nodeType":"StructuredDocumentation","src":"217:599:19","text":" @dev https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for\n deploying minimal proxy contracts, also known as \"clones\".\n > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n deterministic method."},"fullyImplemented":true,"id":3187,"linearizedBaseContracts":[3187],"name":"Clones","nameLocation":"825:6:19","nodeType":"ContractDefinition","nodes":[{"errorSelector":"94289054","id":2797,"name":"CloneArgumentsTooLong","nameLocation":"844:21:19","nodeType":"ErrorDefinition","parameters":{"id":2796,"nodeType":"ParameterList","parameters":[],"src":"865:2:19"},"src":"838:30:19"},{"body":{"id":2810,"nodeType":"Block","src":"1145:48:19","statements":[{"expression":{"arguments":[{"id":2806,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"1168:14:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":2807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1184:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2805,"name":"clone","nodeType":"Identifier","overloadedDeclarations":[2811,2856],"referencedDeclaration":2856,"src":"1162:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_address_$","typeString":"function (address,uint256) returns (address)"}},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1162:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2804,"id":2809,"nodeType":"Return","src":"1155:31:19"}]},"documentation":{"id":2798,"nodeType":"StructuredDocumentation","src":"874:191:19","text":" @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\n This function uses the create opcode, which should never revert."},"id":2811,"implemented":true,"kind":"function","modifiers":[],"name":"clone","nameLocation":"1079:5:19","nodeType":"FunctionDefinition","parameters":{"id":2801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2800,"mutability":"mutable","name":"implementation","nameLocation":"1093:14:19","nodeType":"VariableDeclaration","scope":2811,"src":"1085:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2799,"name":"address","nodeType":"ElementaryTypeName","src":"1085:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1084:24:19"},"returnParameters":{"id":2804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2803,"mutability":"mutable","name":"instance","nameLocation":"1135:8:19","nodeType":"VariableDeclaration","scope":2811,"src":"1127:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2802,"name":"address","nodeType":"ElementaryTypeName","src":"1127:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1126:18:19"},"scope":3187,"src":"1070:123:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2855,"nodeType":"Block","src":"1675:820:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2823,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1697:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$3187","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$3187","typeString":"library Clones"}],"id":2822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1689:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2821,"name":"address","nodeType":"ElementaryTypeName","src":"1689:7:19","typeDescriptions":{}}},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1689:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1703:7:19","memberName":"balance","nodeType":"MemberAccess","src":"1689:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"1713:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1689:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2840,"nodeType":"IfStatement","src":"1685:123:19","trueBody":{"id":2839,"nodeType":"Block","src":"1720:88:19","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":2833,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1776:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$3187","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$3187","typeString":"library Clones"}],"id":2832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1768:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2831,"name":"address","nodeType":"ElementaryTypeName","src":"1768:7:19","typeDescriptions":{}}},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1768:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1782:7:19","memberName":"balance","nodeType":"MemberAccess","src":"1768:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"1791:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2828,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"1741:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$5659_$","typeString":"type(library Errors)"}},"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1748:19:19","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":5647,"src":"1741:26:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1741:56:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2838,"nodeType":"RevertStatement","src":"1734:63:19"}]}},{"AST":{"nativeSrc":"1842:553:19","nodeType":"YulBlock","src":"1842:553:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2047:4:19","nodeType":"YulLiteral","src":"2047:4:19","type":"","value":"0x00"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2060:4:19","nodeType":"YulLiteral","src":"2060:4:19","type":"","value":"0xe8"},{"arguments":[{"kind":"number","nativeSrc":"2070:4:19","nodeType":"YulLiteral","src":"2070:4:19","type":"","value":"0x60"},{"name":"implementation","nativeSrc":"2076:14:19","nodeType":"YulIdentifier","src":"2076:14:19"}],"functionName":{"name":"shl","nativeSrc":"2066:3:19","nodeType":"YulIdentifier","src":"2066:3:19"},"nativeSrc":"2066:25:19","nodeType":"YulFunctionCall","src":"2066:25:19"}],"functionName":{"name":"shr","nativeSrc":"2056:3:19","nodeType":"YulIdentifier","src":"2056:3:19"},"nativeSrc":"2056:36:19","nodeType":"YulFunctionCall","src":"2056:36:19"},{"kind":"number","nativeSrc":"2094:48:19","nodeType":"YulLiteral","src":"2094:48:19","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"}],"functionName":{"name":"or","nativeSrc":"2053:2:19","nodeType":"YulIdentifier","src":"2053:2:19"},"nativeSrc":"2053:90:19","nodeType":"YulFunctionCall","src":"2053:90:19"}],"functionName":{"name":"mstore","nativeSrc":"2040:6:19","nodeType":"YulIdentifier","src":"2040:6:19"},"nativeSrc":"2040:104:19","nodeType":"YulFunctionCall","src":"2040:104:19"},"nativeSrc":"2040:104:19","nodeType":"YulExpressionStatement","src":"2040:104:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2265:4:19","nodeType":"YulLiteral","src":"2265:4:19","type":"","value":"0x20"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2278:4:19","nodeType":"YulLiteral","src":"2278:4:19","type":"","value":"0x78"},{"name":"implementation","nativeSrc":"2284:14:19","nodeType":"YulIdentifier","src":"2284:14:19"}],"functionName":{"name":"shl","nativeSrc":"2274:3:19","nodeType":"YulIdentifier","src":"2274:3:19"},"nativeSrc":"2274:25:19","nodeType":"YulFunctionCall","src":"2274:25:19"},{"kind":"number","nativeSrc":"2301:32:19","nodeType":"YulLiteral","src":"2301:32:19","type":"","value":"0x5af43d82803e903d91602b57fd5bf3"}],"functionName":{"name":"or","nativeSrc":"2271:2:19","nodeType":"YulIdentifier","src":"2271:2:19"},"nativeSrc":"2271:63:19","nodeType":"YulFunctionCall","src":"2271:63:19"}],"functionName":{"name":"mstore","nativeSrc":"2258:6:19","nodeType":"YulIdentifier","src":"2258:6:19"},"nativeSrc":"2258:77:19","nodeType":"YulFunctionCall","src":"2258:77:19"},"nativeSrc":"2258:77:19","nodeType":"YulExpressionStatement","src":"2258:77:19"},{"nativeSrc":"2348:37:19","nodeType":"YulAssignment","src":"2348:37:19","value":{"arguments":[{"name":"value","nativeSrc":"2367:5:19","nodeType":"YulIdentifier","src":"2367:5:19"},{"kind":"number","nativeSrc":"2374:4:19","nodeType":"YulLiteral","src":"2374:4:19","type":"","value":"0x09"},{"kind":"number","nativeSrc":"2380:4:19","nodeType":"YulLiteral","src":"2380:4:19","type":"","value":"0x37"}],"functionName":{"name":"create","nativeSrc":"2360:6:19","nodeType":"YulIdentifier","src":"2360:6:19"},"nativeSrc":"2360:25:19","nodeType":"YulFunctionCall","src":"2360:25:19"},"variableNames":[{"name":"instance","nativeSrc":"2348:8:19","nodeType":"YulIdentifier","src":"2348:8:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2814,"isOffset":false,"isSlot":false,"src":"2076:14:19","valueSize":1},{"declaration":2814,"isOffset":false,"isSlot":false,"src":"2284:14:19","valueSize":1},{"declaration":2819,"isOffset":false,"isSlot":false,"src":"2348:8:19","valueSize":1},{"declaration":2816,"isOffset":false,"isSlot":false,"src":"2367:5:19","valueSize":1}],"flags":["memory-safe"],"id":2841,"nodeType":"InlineAssembly","src":"1817:578:19"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2842,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"2408:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2428:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2420:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2843,"name":"address","nodeType":"ElementaryTypeName","src":"2420:7:19","typeDescriptions":{}}},"id":2846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2420:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2408:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2854,"nodeType":"IfStatement","src":"2404:85:19","trueBody":{"id":2853,"nodeType":"Block","src":"2432:57:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2848,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"2453:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$5659_$","typeString":"type(library Errors)"}},"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2460:16:19","memberName":"FailedDeployment","nodeType":"MemberAccess","referencedDeclaration":5653,"src":"2453:23:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2453:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2852,"nodeType":"RevertStatement","src":"2446:32:19"}]}}]},"documentation":{"id":2812,"nodeType":"StructuredDocumentation","src":"1199:381:19","text":" @dev Same as {xref-Clones-clone-address-}[clone], but with a `value` parameter to send native currency\n to the new contract.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."},"id":2856,"implemented":true,"kind":"function","modifiers":[],"name":"clone","nameLocation":"1594:5:19","nodeType":"FunctionDefinition","parameters":{"id":2817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2814,"mutability":"mutable","name":"implementation","nameLocation":"1608:14:19","nodeType":"VariableDeclaration","scope":2856,"src":"1600:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2813,"name":"address","nodeType":"ElementaryTypeName","src":"1600:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2816,"mutability":"mutable","name":"value","nameLocation":"1632:5:19","nodeType":"VariableDeclaration","scope":2856,"src":"1624:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2815,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1599:39:19"},"returnParameters":{"id":2820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2819,"mutability":"mutable","name":"instance","nameLocation":"1665:8:19","nodeType":"VariableDeclaration","scope":2856,"src":"1657:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2818,"name":"address","nodeType":"ElementaryTypeName","src":"1657:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1656:18:19"},"scope":3187,"src":"1585:910:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2872,"nodeType":"Block","src":"2972:67:19","statements":[{"expression":{"arguments":[{"id":2867,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"3008:14:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2868,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"3024:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"30","id":2869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3030:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2866,"name":"cloneDeterministic","nodeType":"Identifier","overloadedDeclarations":[2873,2920],"referencedDeclaration":2920,"src":"2989:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$returns$_t_address_$","typeString":"function (address,bytes32,uint256) returns (address)"}},"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2989:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2865,"id":2871,"nodeType":"Return","src":"2982:50:19"}]},"documentation":{"id":2857,"nodeType":"StructuredDocumentation","src":"2501:364:19","text":" @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\n This function uses the create2 opcode and a `salt` to deterministically deploy\n the clone. Using the same `implementation` and `salt` multiple times will revert, since\n the clones cannot be deployed twice at the same address."},"id":2873,"implemented":true,"kind":"function","modifiers":[],"name":"cloneDeterministic","nameLocation":"2879:18:19","nodeType":"FunctionDefinition","parameters":{"id":2862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2859,"mutability":"mutable","name":"implementation","nameLocation":"2906:14:19","nodeType":"VariableDeclaration","scope":2873,"src":"2898:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2858,"name":"address","nodeType":"ElementaryTypeName","src":"2898:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2861,"mutability":"mutable","name":"salt","nameLocation":"2930:4:19","nodeType":"VariableDeclaration","scope":2873,"src":"2922:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2860,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2922:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2897:38:19"},"returnParameters":{"id":2865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2864,"mutability":"mutable","name":"instance","nameLocation":"2962:8:19","nodeType":"VariableDeclaration","scope":2873,"src":"2954:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2863,"name":"address","nodeType":"ElementaryTypeName","src":"2954:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2953:18:19"},"scope":3187,"src":"2870:169:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2919,"nodeType":"Block","src":"3612:827:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2887,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3634:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$3187","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$3187","typeString":"library Clones"}],"id":2886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3626:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2885,"name":"address","nodeType":"ElementaryTypeName","src":"3626:7:19","typeDescriptions":{}}},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3626:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3640:7:19","memberName":"balance","nodeType":"MemberAccess","src":"3626:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"3650:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3626:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2904,"nodeType":"IfStatement","src":"3622:123:19","trueBody":{"id":2903,"nodeType":"Block","src":"3657:88:19","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":2897,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3713:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$3187","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$3187","typeString":"library Clones"}],"id":2896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3705:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2895,"name":"address","nodeType":"ElementaryTypeName","src":"3705:7:19","typeDescriptions":{}}},"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3705:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3719:7:19","memberName":"balance","nodeType":"MemberAccess","src":"3705:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"3728:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2892,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"3678:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$5659_$","typeString":"type(library Errors)"}},"id":2894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3685:19:19","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":5647,"src":"3678:26:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3678:56:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2902,"nodeType":"RevertStatement","src":"3671:63:19"}]}},{"AST":{"nativeSrc":"3779:560:19","nodeType":"YulBlock","src":"3779:560:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3984:4:19","nodeType":"YulLiteral","src":"3984:4:19","type":"","value":"0x00"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3997:4:19","nodeType":"YulLiteral","src":"3997:4:19","type":"","value":"0xe8"},{"arguments":[{"kind":"number","nativeSrc":"4007:4:19","nodeType":"YulLiteral","src":"4007:4:19","type":"","value":"0x60"},{"name":"implementation","nativeSrc":"4013:14:19","nodeType":"YulIdentifier","src":"4013:14:19"}],"functionName":{"name":"shl","nativeSrc":"4003:3:19","nodeType":"YulIdentifier","src":"4003:3:19"},"nativeSrc":"4003:25:19","nodeType":"YulFunctionCall","src":"4003:25:19"}],"functionName":{"name":"shr","nativeSrc":"3993:3:19","nodeType":"YulIdentifier","src":"3993:3:19"},"nativeSrc":"3993:36:19","nodeType":"YulFunctionCall","src":"3993:36:19"},{"kind":"number","nativeSrc":"4031:48:19","nodeType":"YulLiteral","src":"4031:48:19","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"}],"functionName":{"name":"or","nativeSrc":"3990:2:19","nodeType":"YulIdentifier","src":"3990:2:19"},"nativeSrc":"3990:90:19","nodeType":"YulFunctionCall","src":"3990:90:19"}],"functionName":{"name":"mstore","nativeSrc":"3977:6:19","nodeType":"YulIdentifier","src":"3977:6:19"},"nativeSrc":"3977:104:19","nodeType":"YulFunctionCall","src":"3977:104:19"},"nativeSrc":"3977:104:19","nodeType":"YulExpressionStatement","src":"3977:104:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4202:4:19","nodeType":"YulLiteral","src":"4202:4:19","type":"","value":"0x20"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4215:4:19","nodeType":"YulLiteral","src":"4215:4:19","type":"","value":"0x78"},{"name":"implementation","nativeSrc":"4221:14:19","nodeType":"YulIdentifier","src":"4221:14:19"}],"functionName":{"name":"shl","nativeSrc":"4211:3:19","nodeType":"YulIdentifier","src":"4211:3:19"},"nativeSrc":"4211:25:19","nodeType":"YulFunctionCall","src":"4211:25:19"},{"kind":"number","nativeSrc":"4238:32:19","nodeType":"YulLiteral","src":"4238:32:19","type":"","value":"0x5af43d82803e903d91602b57fd5bf3"}],"functionName":{"name":"or","nativeSrc":"4208:2:19","nodeType":"YulIdentifier","src":"4208:2:19"},"nativeSrc":"4208:63:19","nodeType":"YulFunctionCall","src":"4208:63:19"}],"functionName":{"name":"mstore","nativeSrc":"4195:6:19","nodeType":"YulIdentifier","src":"4195:6:19"},"nativeSrc":"4195:77:19","nodeType":"YulFunctionCall","src":"4195:77:19"},"nativeSrc":"4195:77:19","nodeType":"YulExpressionStatement","src":"4195:77:19"},{"nativeSrc":"4285:44:19","nodeType":"YulAssignment","src":"4285:44:19","value":{"arguments":[{"name":"value","nativeSrc":"4305:5:19","nodeType":"YulIdentifier","src":"4305:5:19"},{"kind":"number","nativeSrc":"4312:4:19","nodeType":"YulLiteral","src":"4312:4:19","type":"","value":"0x09"},{"kind":"number","nativeSrc":"4318:4:19","nodeType":"YulLiteral","src":"4318:4:19","type":"","value":"0x37"},{"name":"salt","nativeSrc":"4324:4:19","nodeType":"YulIdentifier","src":"4324:4:19"}],"functionName":{"name":"create2","nativeSrc":"4297:7:19","nodeType":"YulIdentifier","src":"4297:7:19"},"nativeSrc":"4297:32:19","nodeType":"YulFunctionCall","src":"4297:32:19"},"variableNames":[{"name":"instance","nativeSrc":"4285:8:19","nodeType":"YulIdentifier","src":"4285:8:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2876,"isOffset":false,"isSlot":false,"src":"4013:14:19","valueSize":1},{"declaration":2876,"isOffset":false,"isSlot":false,"src":"4221:14:19","valueSize":1},{"declaration":2883,"isOffset":false,"isSlot":false,"src":"4285:8:19","valueSize":1},{"declaration":2878,"isOffset":false,"isSlot":false,"src":"4324:4:19","valueSize":1},{"declaration":2880,"isOffset":false,"isSlot":false,"src":"4305:5:19","valueSize":1}],"flags":["memory-safe"],"id":2905,"nodeType":"InlineAssembly","src":"3754:585:19"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2906,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"4352:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4372:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4364:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2907,"name":"address","nodeType":"ElementaryTypeName","src":"4364:7:19","typeDescriptions":{}}},"id":2910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4364:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4352:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2918,"nodeType":"IfStatement","src":"4348:85:19","trueBody":{"id":2917,"nodeType":"Block","src":"4376:57:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2912,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"4397:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$5659_$","typeString":"type(library Errors)"}},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4404:16:19","memberName":"FailedDeployment","nodeType":"MemberAccess","referencedDeclaration":5653,"src":"4397:23:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4397:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2916,"nodeType":"RevertStatement","src":"4390:32:19"}]}}]},"documentation":{"id":2874,"nodeType":"StructuredDocumentation","src":"3045:415:19","text":" @dev Same as {xref-Clones-cloneDeterministic-address-bytes32-}[cloneDeterministic], but with\n a `value` parameter to send native currency to the new contract.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."},"id":2920,"implemented":true,"kind":"function","modifiers":[],"name":"cloneDeterministic","nameLocation":"3474:18:19","nodeType":"FunctionDefinition","parameters":{"id":2881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2876,"mutability":"mutable","name":"implementation","nameLocation":"3510:14:19","nodeType":"VariableDeclaration","scope":2920,"src":"3502:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2875,"name":"address","nodeType":"ElementaryTypeName","src":"3502:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2878,"mutability":"mutable","name":"salt","nameLocation":"3542:4:19","nodeType":"VariableDeclaration","scope":2920,"src":"3534:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2877,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3534:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2880,"mutability":"mutable","name":"value","nameLocation":"3564:5:19","nodeType":"VariableDeclaration","scope":2920,"src":"3556:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2879,"name":"uint256","nodeType":"ElementaryTypeName","src":"3556:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3492:83:19"},"returnParameters":{"id":2884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2883,"mutability":"mutable","name":"instance","nameLocation":"3602:8:19","nodeType":"VariableDeclaration","scope":2920,"src":"3594:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2882,"name":"address","nodeType":"ElementaryTypeName","src":"3594:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3593:18:19"},"scope":3187,"src":"3465:974:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2933,"nodeType":"Block","src":"4714:537:19","statements":[{"AST":{"nativeSrc":"4749:496:19","nodeType":"YulBlock","src":"4749:496:19","statements":[{"nativeSrc":"4763:22:19","nodeType":"YulVariableDeclaration","src":"4763:22:19","value":{"arguments":[{"kind":"number","nativeSrc":"4780:4:19","nodeType":"YulLiteral","src":"4780:4:19","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"4774:5:19","nodeType":"YulIdentifier","src":"4774:5:19"},"nativeSrc":"4774:11:19","nodeType":"YulFunctionCall","src":"4774:11:19"},"variables":[{"name":"ptr","nativeSrc":"4767:3:19","nodeType":"YulTypedName","src":"4767:3:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4809:3:19","nodeType":"YulIdentifier","src":"4809:3:19"},{"kind":"number","nativeSrc":"4814:4:19","nodeType":"YulLiteral","src":"4814:4:19","type":"","value":"0x38"}],"functionName":{"name":"add","nativeSrc":"4805:3:19","nodeType":"YulIdentifier","src":"4805:3:19"},"nativeSrc":"4805:14:19","nodeType":"YulFunctionCall","src":"4805:14:19"},{"name":"deployer","nativeSrc":"4821:8:19","nodeType":"YulIdentifier","src":"4821:8:19"}],"functionName":{"name":"mstore","nativeSrc":"4798:6:19","nodeType":"YulIdentifier","src":"4798:6:19"},"nativeSrc":"4798:32:19","nodeType":"YulFunctionCall","src":"4798:32:19"},"nativeSrc":"4798:32:19","nodeType":"YulExpressionStatement","src":"4798:32:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4854:3:19","nodeType":"YulIdentifier","src":"4854:3:19"},{"kind":"number","nativeSrc":"4859:4:19","nodeType":"YulLiteral","src":"4859:4:19","type":"","value":"0x24"}],"functionName":{"name":"add","nativeSrc":"4850:3:19","nodeType":"YulIdentifier","src":"4850:3:19"},"nativeSrc":"4850:14:19","nodeType":"YulFunctionCall","src":"4850:14:19"},{"kind":"number","nativeSrc":"4866:34:19","nodeType":"YulLiteral","src":"4866:34:19","type":"","value":"0x5af43d82803e903d91602b57fd5bf3ff"}],"functionName":{"name":"mstore","nativeSrc":"4843:6:19","nodeType":"YulIdentifier","src":"4843:6:19"},"nativeSrc":"4843:58:19","nodeType":"YulFunctionCall","src":"4843:58:19"},"nativeSrc":"4843:58:19","nodeType":"YulExpressionStatement","src":"4843:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4925:3:19","nodeType":"YulIdentifier","src":"4925:3:19"},{"kind":"number","nativeSrc":"4930:4:19","nodeType":"YulLiteral","src":"4930:4:19","type":"","value":"0x14"}],"functionName":{"name":"add","nativeSrc":"4921:3:19","nodeType":"YulIdentifier","src":"4921:3:19"},"nativeSrc":"4921:14:19","nodeType":"YulFunctionCall","src":"4921:14:19"},{"name":"implementation","nativeSrc":"4937:14:19","nodeType":"YulIdentifier","src":"4937:14:19"}],"functionName":{"name":"mstore","nativeSrc":"4914:6:19","nodeType":"YulIdentifier","src":"4914:6:19"},"nativeSrc":"4914:38:19","nodeType":"YulFunctionCall","src":"4914:38:19"},"nativeSrc":"4914:38:19","nodeType":"YulExpressionStatement","src":"4914:38:19"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"4972:3:19","nodeType":"YulIdentifier","src":"4972:3:19"},{"kind":"number","nativeSrc":"4977:42:19","nodeType":"YulLiteral","src":"4977:42:19","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73"}],"functionName":{"name":"mstore","nativeSrc":"4965:6:19","nodeType":"YulIdentifier","src":"4965:6:19"},"nativeSrc":"4965:55:19","nodeType":"YulFunctionCall","src":"4965:55:19"},"nativeSrc":"4965:55:19","nodeType":"YulExpressionStatement","src":"4965:55:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"5044:3:19","nodeType":"YulIdentifier","src":"5044:3:19"},{"kind":"number","nativeSrc":"5049:4:19","nodeType":"YulLiteral","src":"5049:4:19","type":"","value":"0x58"}],"functionName":{"name":"add","nativeSrc":"5040:3:19","nodeType":"YulIdentifier","src":"5040:3:19"},"nativeSrc":"5040:14:19","nodeType":"YulFunctionCall","src":"5040:14:19"},{"name":"salt","nativeSrc":"5056:4:19","nodeType":"YulIdentifier","src":"5056:4:19"}],"functionName":{"name":"mstore","nativeSrc":"5033:6:19","nodeType":"YulIdentifier","src":"5033:6:19"},"nativeSrc":"5033:28:19","nodeType":"YulFunctionCall","src":"5033:28:19"},"nativeSrc":"5033:28:19","nodeType":"YulExpressionStatement","src":"5033:28:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"5085:3:19","nodeType":"YulIdentifier","src":"5085:3:19"},{"kind":"number","nativeSrc":"5090:4:19","nodeType":"YulLiteral","src":"5090:4:19","type":"","value":"0x78"}],"functionName":{"name":"add","nativeSrc":"5081:3:19","nodeType":"YulIdentifier","src":"5081:3:19"},"nativeSrc":"5081:14:19","nodeType":"YulFunctionCall","src":"5081:14:19"},{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"5111:3:19","nodeType":"YulIdentifier","src":"5111:3:19"},{"kind":"number","nativeSrc":"5116:4:19","nodeType":"YulLiteral","src":"5116:4:19","type":"","value":"0x0c"}],"functionName":{"name":"add","nativeSrc":"5107:3:19","nodeType":"YulIdentifier","src":"5107:3:19"},"nativeSrc":"5107:14:19","nodeType":"YulFunctionCall","src":"5107:14:19"},{"kind":"number","nativeSrc":"5123:4:19","nodeType":"YulLiteral","src":"5123:4:19","type":"","value":"0x37"}],"functionName":{"name":"keccak256","nativeSrc":"5097:9:19","nodeType":"YulIdentifier","src":"5097:9:19"},"nativeSrc":"5097:31:19","nodeType":"YulFunctionCall","src":"5097:31:19"}],"functionName":{"name":"mstore","nativeSrc":"5074:6:19","nodeType":"YulIdentifier","src":"5074:6:19"},"nativeSrc":"5074:55:19","nodeType":"YulFunctionCall","src":"5074:55:19"},"nativeSrc":"5074:55:19","nodeType":"YulExpressionStatement","src":"5074:55:19"},{"nativeSrc":"5142:93:19","nodeType":"YulAssignment","src":"5142:93:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"5173:3:19","nodeType":"YulIdentifier","src":"5173:3:19"},{"kind":"number","nativeSrc":"5178:4:19","nodeType":"YulLiteral","src":"5178:4:19","type":"","value":"0x43"}],"functionName":{"name":"add","nativeSrc":"5169:3:19","nodeType":"YulIdentifier","src":"5169:3:19"},"nativeSrc":"5169:14:19","nodeType":"YulFunctionCall","src":"5169:14:19"},{"kind":"number","nativeSrc":"5185:4:19","nodeType":"YulLiteral","src":"5185:4:19","type":"","value":"0x55"}],"functionName":{"name":"keccak256","nativeSrc":"5159:9:19","nodeType":"YulIdentifier","src":"5159:9:19"},"nativeSrc":"5159:31:19","nodeType":"YulFunctionCall","src":"5159:31:19"},{"kind":"number","nativeSrc":"5192:42:19","nodeType":"YulLiteral","src":"5192:42:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"5155:3:19","nodeType":"YulIdentifier","src":"5155:3:19"},"nativeSrc":"5155:80:19","nodeType":"YulFunctionCall","src":"5155:80:19"},"variableNames":[{"name":"predicted","nativeSrc":"5142:9:19","nodeType":"YulIdentifier","src":"5142:9:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2927,"isOffset":false,"isSlot":false,"src":"4821:8:19","valueSize":1},{"declaration":2923,"isOffset":false,"isSlot":false,"src":"4937:14:19","valueSize":1},{"declaration":2930,"isOffset":false,"isSlot":false,"src":"5142:9:19","valueSize":1},{"declaration":2925,"isOffset":false,"isSlot":false,"src":"5056:4:19","valueSize":1}],"flags":["memory-safe"],"id":2932,"nodeType":"InlineAssembly","src":"4724:521:19"}]},"documentation":{"id":2921,"nodeType":"StructuredDocumentation","src":"4445:99:19","text":" @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."},"id":2934,"implemented":true,"kind":"function","modifiers":[],"name":"predictDeterministicAddress","nameLocation":"4558:27:19","nodeType":"FunctionDefinition","parameters":{"id":2928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2923,"mutability":"mutable","name":"implementation","nameLocation":"4603:14:19","nodeType":"VariableDeclaration","scope":2934,"src":"4595:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2922,"name":"address","nodeType":"ElementaryTypeName","src":"4595:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2925,"mutability":"mutable","name":"salt","nameLocation":"4635:4:19","nodeType":"VariableDeclaration","scope":2934,"src":"4627:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2924,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4627:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2927,"mutability":"mutable","name":"deployer","nameLocation":"4657:8:19","nodeType":"VariableDeclaration","scope":2934,"src":"4649:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2926,"name":"address","nodeType":"ElementaryTypeName","src":"4649:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4585:86:19"},"returnParameters":{"id":2931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2930,"mutability":"mutable","name":"predicted","nameLocation":"4703:9:19","nodeType":"VariableDeclaration","scope":2934,"src":"4695:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2929,"name":"address","nodeType":"ElementaryTypeName","src":"4695:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4694:19:19"},"scope":3187,"src":"4549:702:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2953,"nodeType":"Block","src":"5500:88:19","statements":[{"expression":{"arguments":[{"id":2945,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"5545:14:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2946,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"5561:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":2949,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5575:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$3187","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$3187","typeString":"library Clones"}],"id":2948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5567:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2947,"name":"address","nodeType":"ElementaryTypeName","src":"5567:7:19","typeDescriptions":{}}},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5567:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2944,"name":"predictDeterministicAddress","nodeType":"Identifier","overloadedDeclarations":[2934,2954],"referencedDeclaration":2934,"src":"5517:27:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (address,bytes32,address) pure returns (address)"}},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:64:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2943,"id":2952,"nodeType":"Return","src":"5510:71:19"}]},"documentation":{"id":2935,"nodeType":"StructuredDocumentation","src":"5257:99:19","text":" @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."},"id":2954,"implemented":true,"kind":"function","modifiers":[],"name":"predictDeterministicAddress","nameLocation":"5370:27:19","nodeType":"FunctionDefinition","parameters":{"id":2940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2937,"mutability":"mutable","name":"implementation","nameLocation":"5415:14:19","nodeType":"VariableDeclaration","scope":2954,"src":"5407:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2936,"name":"address","nodeType":"ElementaryTypeName","src":"5407:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2939,"mutability":"mutable","name":"salt","nameLocation":"5447:4:19","nodeType":"VariableDeclaration","scope":2954,"src":"5439:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2938,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5439:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5397:60:19"},"returnParameters":{"id":2943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2942,"mutability":"mutable","name":"predicted","nameLocation":"5489:9:19","nodeType":"VariableDeclaration","scope":2954,"src":"5481:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2941,"name":"address","nodeType":"ElementaryTypeName","src":"5481:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5480:19:19"},"scope":3187,"src":"5361:227:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2970,"nodeType":"Block","src":"6094:71:19","statements":[{"expression":{"arguments":[{"id":2965,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"6134:14:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2966,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"6150:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6156:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2964,"name":"cloneWithImmutableArgs","nodeType":"Identifier","overloadedDeclarations":[2971,3025],"referencedDeclaration":3025,"src":"6111:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_address_$","typeString":"function (address,bytes memory,uint256) returns (address)"}},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6111:47:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2963,"id":2969,"nodeType":"Return","src":"6104:54:19"}]},"documentation":{"id":2955,"nodeType":"StructuredDocumentation","src":"5594:384:19","text":" @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n access the arguments within the implementation, use {fetchCloneArgs}.\n This function uses the create opcode, which should never revert."},"id":2971,"implemented":true,"kind":"function","modifiers":[],"name":"cloneWithImmutableArgs","nameLocation":"5992:22:19","nodeType":"FunctionDefinition","parameters":{"id":2960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2957,"mutability":"mutable","name":"implementation","nameLocation":"6023:14:19","nodeType":"VariableDeclaration","scope":2971,"src":"6015:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2956,"name":"address","nodeType":"ElementaryTypeName","src":"6015:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2959,"mutability":"mutable","name":"args","nameLocation":"6052:4:19","nodeType":"VariableDeclaration","scope":2971,"src":"6039:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2958,"name":"bytes","nodeType":"ElementaryTypeName","src":"6039:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6014:43:19"},"returnParameters":{"id":2963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2962,"mutability":"mutable","name":"instance","nameLocation":"6084:8:19","nodeType":"VariableDeclaration","scope":2971,"src":"6076:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2961,"name":"address","nodeType":"ElementaryTypeName","src":"6076:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6075:18:19"},"scope":3187,"src":"5983:182:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3024,"nodeType":"Block","src":"6753:437:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2985,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6775:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$3187","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$3187","typeString":"library Clones"}],"id":2984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6767:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2983,"name":"address","nodeType":"ElementaryTypeName","src":"6767:7:19","typeDescriptions":{}}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6767:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6781:7:19","memberName":"balance","nodeType":"MemberAccess","src":"6767:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2988,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2978,"src":"6791:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6767:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3002,"nodeType":"IfStatement","src":"6763:123:19","trueBody":{"id":3001,"nodeType":"Block","src":"6798:88:19","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":2995,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6854:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$3187","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$3187","typeString":"library Clones"}],"id":2994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6846:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2993,"name":"address","nodeType":"ElementaryTypeName","src":"6846:7:19","typeDescriptions":{}}},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6846:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6860:7:19","memberName":"balance","nodeType":"MemberAccess","src":"6846:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2978,"src":"6869:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2990,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"6819:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$5659_$","typeString":"type(library Errors)"}},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6826:19:19","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":5647,"src":"6819:26:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6819:56:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3000,"nodeType":"RevertStatement","src":"6812:63:19"}]}},{"assignments":[3004],"declarations":[{"constant":false,"id":3004,"mutability":"mutable","name":"bytecode","nameLocation":"6908:8:19","nodeType":"VariableDeclaration","scope":3024,"src":"6895:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3003,"name":"bytes","nodeType":"ElementaryTypeName","src":"6895:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3009,"initialValue":{"arguments":[{"id":3006,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"6947:14:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3007,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"6963:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3005,"name":"_cloneCodeWithImmutableArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"6919:27:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) pure returns (bytes memory)"}},"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6919:49:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6895:73:19"},{"AST":{"nativeSrc":"7003:87:19","nodeType":"YulBlock","src":"7003:87:19","statements":[{"nativeSrc":"7017:63:19","nodeType":"YulAssignment","src":"7017:63:19","value":{"arguments":[{"name":"value","nativeSrc":"7036:5:19","nodeType":"YulIdentifier","src":"7036:5:19"},{"arguments":[{"name":"bytecode","nativeSrc":"7047:8:19","nodeType":"YulIdentifier","src":"7047:8:19"},{"kind":"number","nativeSrc":"7057:4:19","nodeType":"YulLiteral","src":"7057:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7043:3:19","nodeType":"YulIdentifier","src":"7043:3:19"},"nativeSrc":"7043:19:19","nodeType":"YulFunctionCall","src":"7043:19:19"},{"arguments":[{"name":"bytecode","nativeSrc":"7070:8:19","nodeType":"YulIdentifier","src":"7070:8:19"}],"functionName":{"name":"mload","nativeSrc":"7064:5:19","nodeType":"YulIdentifier","src":"7064:5:19"},"nativeSrc":"7064:15:19","nodeType":"YulFunctionCall","src":"7064:15:19"}],"functionName":{"name":"create","nativeSrc":"7029:6:19","nodeType":"YulIdentifier","src":"7029:6:19"},"nativeSrc":"7029:51:19","nodeType":"YulFunctionCall","src":"7029:51:19"},"variableNames":[{"name":"instance","nativeSrc":"7017:8:19","nodeType":"YulIdentifier","src":"7017:8:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3004,"isOffset":false,"isSlot":false,"src":"7047:8:19","valueSize":1},{"declaration":3004,"isOffset":false,"isSlot":false,"src":"7070:8:19","valueSize":1},{"declaration":2981,"isOffset":false,"isSlot":false,"src":"7017:8:19","valueSize":1},{"declaration":2978,"isOffset":false,"isSlot":false,"src":"7036:5:19","valueSize":1}],"flags":["memory-safe"],"id":3010,"nodeType":"InlineAssembly","src":"6978:112:19"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3011,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"7103:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7123:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7115:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3012,"name":"address","nodeType":"ElementaryTypeName","src":"7115:7:19","typeDescriptions":{}}},"id":3015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7115:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7103:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3023,"nodeType":"IfStatement","src":"7099:85:19","trueBody":{"id":3022,"nodeType":"Block","src":"7127:57:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3017,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"7148:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$5659_$","typeString":"type(library Errors)"}},"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7155:16:19","memberName":"FailedDeployment","nodeType":"MemberAccess","referencedDeclaration":5653,"src":"7148:23:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7148:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3021,"nodeType":"RevertStatement","src":"7141:32:19"}]}}]},"documentation":{"id":2972,"nodeType":"StructuredDocumentation","src":"6171:421:19","text":" @dev Same as {xref-Clones-cloneWithImmutableArgs-address-bytes-}[cloneWithImmutableArgs], but with a `value`\n parameter to send native currency to the new contract.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."},"id":3025,"implemented":true,"kind":"function","modifiers":[],"name":"cloneWithImmutableArgs","nameLocation":"6606:22:19","nodeType":"FunctionDefinition","parameters":{"id":2979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2974,"mutability":"mutable","name":"implementation","nameLocation":"6646:14:19","nodeType":"VariableDeclaration","scope":3025,"src":"6638:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2973,"name":"address","nodeType":"ElementaryTypeName","src":"6638:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2976,"mutability":"mutable","name":"args","nameLocation":"6683:4:19","nodeType":"VariableDeclaration","scope":3025,"src":"6670:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2975,"name":"bytes","nodeType":"ElementaryTypeName","src":"6670:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2978,"mutability":"mutable","name":"value","nameLocation":"6705:5:19","nodeType":"VariableDeclaration","scope":3025,"src":"6697:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2977,"name":"uint256","nodeType":"ElementaryTypeName","src":"6697:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6628:88:19"},"returnParameters":{"id":2982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2981,"mutability":"mutable","name":"instance","nameLocation":"6743:8:19","nodeType":"VariableDeclaration","scope":3025,"src":"6735:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2980,"name":"address","nodeType":"ElementaryTypeName","src":"6735:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6734:18:19"},"scope":3187,"src":"6597:593:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3044,"nodeType":"Block","src":"7934:90:19","statements":[{"expression":{"arguments":[{"id":3038,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"7987:14:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3039,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"8003:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3040,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"8009:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"30","id":3041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8015:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3037,"name":"cloneDeterministicWithImmutableArgs","nodeType":"Identifier","overloadedDeclarations":[3045,3074],"referencedDeclaration":3074,"src":"7951:35:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bytes32_$_t_uint256_$returns$_t_address_$","typeString":"function (address,bytes memory,bytes32,uint256) returns (address)"}},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7951:66:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3036,"id":3043,"nodeType":"Return","src":"7944:73:19"}]},"documentation":{"id":3026,"nodeType":"StructuredDocumentation","src":"7196:565:19","text":" @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n access the arguments within the implementation, use {fetchCloneArgs}.\n This function uses the create2 opcode and a `salt` to deterministically deploy the clone. Using the same\n `implementation`, `args` and `salt` multiple times will revert, since the clones cannot be deployed twice\n at the same address."},"id":3045,"implemented":true,"kind":"function","modifiers":[],"name":"cloneDeterministicWithImmutableArgs","nameLocation":"7775:35:19","nodeType":"FunctionDefinition","parameters":{"id":3033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3028,"mutability":"mutable","name":"implementation","nameLocation":"7828:14:19","nodeType":"VariableDeclaration","scope":3045,"src":"7820:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3027,"name":"address","nodeType":"ElementaryTypeName","src":"7820:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3030,"mutability":"mutable","name":"args","nameLocation":"7865:4:19","nodeType":"VariableDeclaration","scope":3045,"src":"7852:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3029,"name":"bytes","nodeType":"ElementaryTypeName","src":"7852:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3032,"mutability":"mutable","name":"salt","nameLocation":"7887:4:19","nodeType":"VariableDeclaration","scope":3045,"src":"7879:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3031,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7879:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7810:87:19"},"returnParameters":{"id":3036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3035,"mutability":"mutable","name":"instance","nameLocation":"7924:8:19","nodeType":"VariableDeclaration","scope":3045,"src":"7916:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3034,"name":"address","nodeType":"ElementaryTypeName","src":"7916:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7915:18:19"},"scope":3187,"src":"7766:258:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3073,"nodeType":"Block","src":"8681:144:19","statements":[{"assignments":[3060],"declarations":[{"constant":false,"id":3060,"mutability":"mutable","name":"bytecode","nameLocation":"8704:8:19","nodeType":"VariableDeclaration","scope":3073,"src":"8691:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3059,"name":"bytes","nodeType":"ElementaryTypeName","src":"8691:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3065,"initialValue":{"arguments":[{"id":3062,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"8743:14:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3063,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"8759:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3061,"name":"_cloneCodeWithImmutableArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"8715:27:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) pure returns (bytes memory)"}},"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8715:49:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"8691:73:19"},{"expression":{"arguments":[{"id":3068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"8796:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3069,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"8803:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3070,"name":"bytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"8809:8:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3066,"name":"Create2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"8781:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Create2_$5637_$","typeString":"type(library Create2)"}},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8789:6:19","memberName":"deploy","nodeType":"MemberAccess","referencedDeclaration":5602,"src":"8781:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (uint256,bytes32,bytes memory) returns (address)"}},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8781:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3058,"id":3072,"nodeType":"Return","src":"8774:44:19"}]},"documentation":{"id":3046,"nodeType":"StructuredDocumentation","src":"8030:455:19","text":" @dev Same as {xref-Clones-cloneDeterministicWithImmutableArgs-address-bytes-bytes32-}[cloneDeterministicWithImmutableArgs],\n but with a `value` parameter to send native currency to the new contract.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."},"id":3074,"implemented":true,"kind":"function","modifiers":[],"name":"cloneDeterministicWithImmutableArgs","nameLocation":"8499:35:19","nodeType":"FunctionDefinition","parameters":{"id":3055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3048,"mutability":"mutable","name":"implementation","nameLocation":"8552:14:19","nodeType":"VariableDeclaration","scope":3074,"src":"8544:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3047,"name":"address","nodeType":"ElementaryTypeName","src":"8544:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3050,"mutability":"mutable","name":"args","nameLocation":"8589:4:19","nodeType":"VariableDeclaration","scope":3074,"src":"8576:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3049,"name":"bytes","nodeType":"ElementaryTypeName","src":"8576:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3052,"mutability":"mutable","name":"salt","nameLocation":"8611:4:19","nodeType":"VariableDeclaration","scope":3074,"src":"8603:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3051,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8603:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3054,"mutability":"mutable","name":"value","nameLocation":"8633:5:19","nodeType":"VariableDeclaration","scope":3074,"src":"8625:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3053,"name":"uint256","nodeType":"ElementaryTypeName","src":"8625:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8534:110:19"},"returnParameters":{"id":3058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3057,"mutability":"mutable","name":"instance","nameLocation":"8671:8:19","nodeType":"VariableDeclaration","scope":3074,"src":"8663:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3056,"name":"address","nodeType":"ElementaryTypeName","src":"8663:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8662:18:19"},"scope":3187,"src":"8490:335:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3104,"nodeType":"Block","src":"9161:166:19","statements":[{"assignments":[3089],"declarations":[{"constant":false,"id":3089,"mutability":"mutable","name":"bytecode","nameLocation":"9184:8:19","nodeType":"VariableDeclaration","scope":3104,"src":"9171:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3088,"name":"bytes","nodeType":"ElementaryTypeName","src":"9171:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3094,"initialValue":{"arguments":[{"id":3091,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"9223:14:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3092,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3079,"src":"9239:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3090,"name":"_cloneCodeWithImmutableArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"9195:27:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) pure returns (bytes memory)"}},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9195:49:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9171:73:19"},{"expression":{"arguments":[{"id":3097,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"9284:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":3099,"name":"bytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3089,"src":"9300:8:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3098,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9290:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9290:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3101,"name":"deployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"9311:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3095,"name":"Create2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"9261:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Create2_$5637_$","typeString":"type(library Create2)"}},"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9269:14:19","memberName":"computeAddress","nodeType":"MemberAccess","referencedDeclaration":5636,"src":"9261:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (bytes32,bytes32,address) pure returns (address)"}},"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9261:59:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3087,"id":3103,"nodeType":"Return","src":"9254:66:19"}]},"documentation":{"id":3075,"nodeType":"StructuredDocumentation","src":"8831:116:19","text":" @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}."},"id":3105,"implemented":true,"kind":"function","modifiers":[],"name":"predictDeterministicAddressWithImmutableArgs","nameLocation":"8961:44:19","nodeType":"FunctionDefinition","parameters":{"id":3084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3077,"mutability":"mutable","name":"implementation","nameLocation":"9023:14:19","nodeType":"VariableDeclaration","scope":3105,"src":"9015:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3076,"name":"address","nodeType":"ElementaryTypeName","src":"9015:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3079,"mutability":"mutable","name":"args","nameLocation":"9060:4:19","nodeType":"VariableDeclaration","scope":3105,"src":"9047:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3078,"name":"bytes","nodeType":"ElementaryTypeName","src":"9047:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3081,"mutability":"mutable","name":"salt","nameLocation":"9082:4:19","nodeType":"VariableDeclaration","scope":3105,"src":"9074:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3080,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9074:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3083,"mutability":"mutable","name":"deployer","nameLocation":"9104:8:19","nodeType":"VariableDeclaration","scope":3105,"src":"9096:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3082,"name":"address","nodeType":"ElementaryTypeName","src":"9096:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9005:113:19"},"returnParameters":{"id":3087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3086,"mutability":"mutable","name":"predicted","nameLocation":"9150:9:19","nodeType":"VariableDeclaration","scope":3105,"src":"9142:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3085,"name":"address","nodeType":"ElementaryTypeName","src":"9142:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9141:19:19"},"scope":3187,"src":"8952:375:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3127,"nodeType":"Block","src":"9637:111:19","statements":[{"expression":{"arguments":[{"id":3118,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"9699:14:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3119,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"9715:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3120,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"9721:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":3123,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9735:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$3187","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$3187","typeString":"library Clones"}],"id":3122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9727:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3121,"name":"address","nodeType":"ElementaryTypeName","src":"9727:7:19","typeDescriptions":{}}},"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9727:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3117,"name":"predictDeterministicAddressWithImmutableArgs","nodeType":"Identifier","overloadedDeclarations":[3105,3128],"referencedDeclaration":3105,"src":"9654:44:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (address,bytes memory,bytes32,address) pure returns (address)"}},"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9654:87:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3116,"id":3126,"nodeType":"Return","src":"9647:94:19"}]},"documentation":{"id":3106,"nodeType":"StructuredDocumentation","src":"9333:116:19","text":" @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}."},"id":3128,"implemented":true,"kind":"function","modifiers":[],"name":"predictDeterministicAddressWithImmutableArgs","nameLocation":"9463:44:19","nodeType":"FunctionDefinition","parameters":{"id":3113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3108,"mutability":"mutable","name":"implementation","nameLocation":"9525:14:19","nodeType":"VariableDeclaration","scope":3128,"src":"9517:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3107,"name":"address","nodeType":"ElementaryTypeName","src":"9517:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3110,"mutability":"mutable","name":"args","nameLocation":"9562:4:19","nodeType":"VariableDeclaration","scope":3128,"src":"9549:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3109,"name":"bytes","nodeType":"ElementaryTypeName","src":"9549:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3112,"mutability":"mutable","name":"salt","nameLocation":"9584:4:19","nodeType":"VariableDeclaration","scope":3128,"src":"9576:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3111,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9576:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9507:87:19"},"returnParameters":{"id":3116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3115,"mutability":"mutable","name":"predicted","nameLocation":"9626:9:19","nodeType":"VariableDeclaration","scope":3128,"src":"9618:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3114,"name":"address","nodeType":"ElementaryTypeName","src":"9618:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9617:19:19"},"scope":3187,"src":"9454:294:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3150,"nodeType":"Block","src":"10441:246:19","statements":[{"assignments":[3137],"declarations":[{"constant":false,"id":3137,"mutability":"mutable","name":"result","nameLocation":"10464:6:19","nodeType":"VariableDeclaration","scope":3150,"src":"10451:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3136,"name":"bytes","nodeType":"ElementaryTypeName","src":"10451:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3146,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3140,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"10483:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10492:4:19","memberName":"code","nodeType":"MemberAccess","src":"10483:13:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10497:6:19","memberName":"length","nodeType":"MemberAccess","src":"10483:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3435","id":3143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10506:2:19","typeDescriptions":{"typeIdentifier":"t_rational_45_by_1","typeString":"int_const 45"},"value":"45"},"src":"10483:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10473:9:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3138,"name":"bytes","nodeType":"ElementaryTypeName","src":"10477:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10473:36:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"10451:58:19"},{"AST":{"nativeSrc":"10577:81:19","nodeType":"YulBlock","src":"10577:81:19","statements":[{"expression":{"arguments":[{"name":"instance","nativeSrc":"10603:8:19","nodeType":"YulIdentifier","src":"10603:8:19"},{"arguments":[{"name":"result","nativeSrc":"10617:6:19","nodeType":"YulIdentifier","src":"10617:6:19"},{"kind":"number","nativeSrc":"10625:2:19","nodeType":"YulLiteral","src":"10625:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10613:3:19","nodeType":"YulIdentifier","src":"10613:3:19"},"nativeSrc":"10613:15:19","nodeType":"YulFunctionCall","src":"10613:15:19"},{"kind":"number","nativeSrc":"10630:2:19","nodeType":"YulLiteral","src":"10630:2:19","type":"","value":"45"},{"arguments":[{"name":"result","nativeSrc":"10640:6:19","nodeType":"YulIdentifier","src":"10640:6:19"}],"functionName":{"name":"mload","nativeSrc":"10634:5:19","nodeType":"YulIdentifier","src":"10634:5:19"},"nativeSrc":"10634:13:19","nodeType":"YulFunctionCall","src":"10634:13:19"}],"functionName":{"name":"extcodecopy","nativeSrc":"10591:11:19","nodeType":"YulIdentifier","src":"10591:11:19"},"nativeSrc":"10591:57:19","nodeType":"YulFunctionCall","src":"10591:57:19"},"nativeSrc":"10591:57:19","nodeType":"YulExpressionStatement","src":"10591:57:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":3131,"isOffset":false,"isSlot":false,"src":"10603:8:19","valueSize":1},{"declaration":3137,"isOffset":false,"isSlot":false,"src":"10617:6:19","valueSize":1},{"declaration":3137,"isOffset":false,"isSlot":false,"src":"10640:6:19","valueSize":1}],"flags":["memory-safe"],"id":3147,"nodeType":"InlineAssembly","src":"10552:106:19"},{"expression":{"id":3148,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"10674:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3135,"id":3149,"nodeType":"Return","src":"10667:13:19"}]},"documentation":{"id":3129,"nodeType":"StructuredDocumentation","src":"9754:603:19","text":" @dev Get the immutable args attached to a clone.\n - If `instance` is a clone that was deployed using `clone` or `cloneDeterministic`, this\n   function will return an empty array.\n - If `instance` is a clone that was deployed using `cloneWithImmutableArgs` or\n   `cloneDeterministicWithImmutableArgs`, this function will return the args array used at\n   creation.\n - If `instance` is NOT a clone deployed using this library, the behavior is undefined. This\n   function should only be used to check addresses that are known to be clones."},"id":3151,"implemented":true,"kind":"function","modifiers":[],"name":"fetchCloneArgs","nameLocation":"10371:14:19","nodeType":"FunctionDefinition","parameters":{"id":3132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3131,"mutability":"mutable","name":"instance","nameLocation":"10394:8:19","nodeType":"VariableDeclaration","scope":3151,"src":"10386:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3130,"name":"address","nodeType":"ElementaryTypeName","src":"10386:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10385:18:19"},"returnParameters":{"id":3135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3134,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3151,"src":"10427:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3133,"name":"bytes","nodeType":"ElementaryTypeName","src":"10427:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10426:14:19"},"scope":3187,"src":"10362:325:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3185,"nodeType":"Block","src":"11476:362:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3161,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"11490:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11495:6:19","memberName":"length","nodeType":"MemberAccess","src":"11490:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3234353331","id":3163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11504:5:19","typeDescriptions":{"typeIdentifier":"t_rational_24531_by_1","typeString":"int_const 24531"},"value":"24531"},"src":"11490:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3168,"nodeType":"IfStatement","src":"11486:55:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3165,"name":"CloneArgumentsTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"11518:21:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11518:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3167,"nodeType":"RevertStatement","src":"11511:30:19"}},{"expression":{"arguments":[{"hexValue":"61","id":3171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"11604:7:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_3ac225168df54212a25c1c01fd35bebfea408fdac2e31ddd6f80a4bbf9a5f1cb","typeString":"literal_string \"a\""},"value":"a"},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3174,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"11636:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11641:6:19","memberName":"length","nodeType":"MemberAccess","src":"11636:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3435","id":3176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11650:2:19","typeDescriptions":{"typeIdentifier":"t_rational_45_by_1","typeString":"int_const 45"},"value":"45"},"src":"11636:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11629:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":3172,"name":"uint16","nodeType":"ElementaryTypeName","src":"11629:6:19","typeDescriptions":{}}},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11629:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"hexValue":"3d81600a3d39f3363d3d373d3d3d363d73","id":3179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"11671:39:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_d24ab45bb33e00f98da9dec50b1e1620d91f81025faf3be3a44e9d69371096d4","typeString":"literal_string hex\"3d81600a3d39f3363d3d373d3d3d363d73\""}},{"id":3180,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3154,"src":"11728:14:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"5af43d82803e903d91602b57fd5bf3","id":3181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"11760:35:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_11a195f66c9175f46895bae2006d40848a680c7068b9fc4af248ff9a54a47e45","typeString":"literal_string hex\"5af43d82803e903d91602b57fd5bf3\""}},{"id":3182,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"11813:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_3ac225168df54212a25c1c01fd35bebfea408fdac2e31ddd6f80a4bbf9a5f1cb","typeString":"literal_string \"a\""},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_stringliteral_d24ab45bb33e00f98da9dec50b1e1620d91f81025faf3be3a44e9d69371096d4","typeString":"literal_string hex\"3d81600a3d39f3363d3d373d3d3d363d73\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_stringliteral_11a195f66c9175f46895bae2006d40848a680c7068b9fc4af248ff9a54a47e45","typeString":"literal_string hex\"5af43d82803e903d91602b57fd5bf3\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3169,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"11570:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11574:12:19","memberName":"encodePacked","nodeType":"MemberAccess","src":"11570:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11570:261:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3160,"id":3184,"nodeType":"Return","src":"11551:280:19"}]},"documentation":{"id":3152,"nodeType":"StructuredDocumentation","src":"10693:640:19","text":" @dev Helper that prepares the initcode of the proxy with immutable args.\n An assembly variant of this function requires copying the `args` array, which can be efficiently done using\n `mcopy`. Unfortunately, that opcode is not available before cancun. A pure solidity implementation using\n abi.encodePacked is more expensive but also more portable and easier to review.\n NOTE: https://eips.ethereum.org/EIPS/eip-170[EIP-170] limits the length of the contract code to 24576 bytes.\n With the proxy code taking 45 bytes, that limits the length of the immutable args to 24531 bytes."},"id":3186,"implemented":true,"kind":"function","modifiers":[],"name":"_cloneCodeWithImmutableArgs","nameLocation":"11347:27:19","nodeType":"FunctionDefinition","parameters":{"id":3157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3154,"mutability":"mutable","name":"implementation","nameLocation":"11392:14:19","nodeType":"VariableDeclaration","scope":3186,"src":"11384:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3153,"name":"address","nodeType":"ElementaryTypeName","src":"11384:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3156,"mutability":"mutable","name":"args","nameLocation":"11429:4:19","nodeType":"VariableDeclaration","scope":3186,"src":"11416:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3155,"name":"bytes","nodeType":"ElementaryTypeName","src":"11416:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11374:65:19"},"returnParameters":{"id":3160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3186,"src":"11462:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3158,"name":"bytes","nodeType":"ElementaryTypeName","src":"11462:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11461:14:19"},"scope":3187,"src":"11338:500:19","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3188,"src":"817:11023:19","usedErrors":[2797],"usedEvents":[]}],"src":"100:11741:19"},"id":19},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","exportedSymbols":{"Address":[4628],"ERC1967Utils":[3481],"IBeacon":[3491],"IERC1967":[2637],"StorageSlot":[5965]},"id":3482,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3189,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"114:24:20"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":3191,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3482,"sourceUnit":3492,"src":"140:46:20","symbolAliases":[{"foreign":{"id":3190,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"148:7:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","file":"../../interfaces/IERC1967.sol","id":3193,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3482,"sourceUnit":2638,"src":"187:55:20","symbolAliases":[{"foreign":{"id":3192,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"195:8:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":3195,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3482,"sourceUnit":4629,"src":"243:48:20","symbolAliases":[{"foreign":{"id":3194,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"251:7:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":3197,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3482,"sourceUnit":5966,"src":"292:56:20","symbolAliases":[{"foreign":{"id":3196,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5965,"src":"300:11:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1967Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":3198,"nodeType":"StructuredDocumentation","src":"350:145:20","text":" @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."},"fullyImplemented":true,"id":3481,"linearizedBaseContracts":[3481],"name":"ERC1967Utils","nameLocation":"504:12:20","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":3199,"nodeType":"StructuredDocumentation","src":"523:170:20","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."},"id":3202,"mutability":"constant","name":"IMPLEMENTATION_SLOT","nameLocation":"789:19:20","nodeType":"VariableDeclaration","scope":3481,"src":"763:114:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3200,"name":"bytes32","nodeType":"ElementaryTypeName","src":"763:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":3201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"811:66:20","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"documentation":{"id":3203,"nodeType":"StructuredDocumentation","src":"884:69:20","text":" @dev The `implementation` of the proxy is invalid."},"errorSelector":"4c9c8ce3","id":3207,"name":"ERC1967InvalidImplementation","nameLocation":"964:28:20","nodeType":"ErrorDefinition","parameters":{"id":3206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3205,"mutability":"mutable","name":"implementation","nameLocation":"1001:14:20","nodeType":"VariableDeclaration","scope":3207,"src":"993:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3204,"name":"address","nodeType":"ElementaryTypeName","src":"993:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"992:24:20"},"src":"958:59:20"},{"documentation":{"id":3208,"nodeType":"StructuredDocumentation","src":"1023:60:20","text":" @dev The `admin` of the proxy is invalid."},"errorSelector":"62e77ba2","id":3212,"name":"ERC1967InvalidAdmin","nameLocation":"1094:19:20","nodeType":"ErrorDefinition","parameters":{"id":3211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3210,"mutability":"mutable","name":"admin","nameLocation":"1122:5:20","nodeType":"VariableDeclaration","scope":3212,"src":"1114:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3209,"name":"address","nodeType":"ElementaryTypeName","src":"1114:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1113:15:20"},"src":"1088:41:20"},{"documentation":{"id":3213,"nodeType":"StructuredDocumentation","src":"1135:61:20","text":" @dev The `beacon` of the proxy is invalid."},"errorSelector":"64ced0ec","id":3217,"name":"ERC1967InvalidBeacon","nameLocation":"1207:20:20","nodeType":"ErrorDefinition","parameters":{"id":3216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3215,"mutability":"mutable","name":"beacon","nameLocation":"1236:6:20","nodeType":"VariableDeclaration","scope":3217,"src":"1228:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3214,"name":"address","nodeType":"ElementaryTypeName","src":"1228:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1227:16:20"},"src":"1201:43:20"},{"documentation":{"id":3218,"nodeType":"StructuredDocumentation","src":"1250:82:20","text":" @dev An upgrade function sees `msg.value > 0` that may be lost."},"errorSelector":"b398979f","id":3220,"name":"ERC1967NonPayable","nameLocation":"1343:17:20","nodeType":"ErrorDefinition","parameters":{"id":3219,"nodeType":"ParameterList","parameters":[],"src":"1360:2:20"},"src":"1337:26:20"},{"body":{"id":3232,"nodeType":"Block","src":"1502:77:20","statements":[{"expression":{"expression":{"arguments":[{"id":3228,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"1546:19:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3226,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5965,"src":"1519:11:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$5965_$","typeString":"type(library StorageSlot)"}},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1531:14:20","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":5876,"src":"1519:26:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$5847_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1519:47:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$5847_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":3230,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1567:5:20","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":5846,"src":"1519:53:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3225,"id":3231,"nodeType":"Return","src":"1512:60:20"}]},"documentation":{"id":3221,"nodeType":"StructuredDocumentation","src":"1369:67:20","text":" @dev Returns the current implementation address."},"id":3233,"implemented":true,"kind":"function","modifiers":[],"name":"getImplementation","nameLocation":"1450:17:20","nodeType":"FunctionDefinition","parameters":{"id":3222,"nodeType":"ParameterList","parameters":[],"src":"1467:2:20"},"returnParameters":{"id":3225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3224,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3233,"src":"1493:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3223,"name":"address","nodeType":"ElementaryTypeName","src":"1493:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1492:9:20"},"scope":3481,"src":"1441:138:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3259,"nodeType":"Block","src":"1734:218:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3239,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"1748:17:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:4:20","memberName":"code","nodeType":"MemberAccess","src":"1748:22:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1771:6:20","memberName":"length","nodeType":"MemberAccess","src":"1748:29:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1781:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1748:34:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3249,"nodeType":"IfStatement","src":"1744:119:20","trueBody":{"id":3248,"nodeType":"Block","src":"1784:79:20","statements":[{"errorCall":{"arguments":[{"id":3245,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"1834:17:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3244,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"1805:28:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":3246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1805:47:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3247,"nodeType":"RevertStatement","src":"1798:54:20"}]}},{"expression":{"id":3257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":3253,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"1899:19:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3250,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5965,"src":"1872:11:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$5965_$","typeString":"type(library StorageSlot)"}},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1884:14:20","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":5876,"src":"1872:26:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$5847_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1872:47:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$5847_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":3255,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1920:5:20","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":5846,"src":"1872:53:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3256,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"1928:17:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1872:73:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3258,"nodeType":"ExpressionStatement","src":"1872:73:20"}]},"documentation":{"id":3234,"nodeType":"StructuredDocumentation","src":"1585:81:20","text":" @dev Stores a new address in the ERC-1967 implementation slot."},"id":3260,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1680:18:20","nodeType":"FunctionDefinition","parameters":{"id":3237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3236,"mutability":"mutable","name":"newImplementation","nameLocation":"1707:17:20","nodeType":"VariableDeclaration","scope":3260,"src":"1699:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3235,"name":"address","nodeType":"ElementaryTypeName","src":"1699:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1698:27:20"},"returnParameters":{"id":3238,"nodeType":"ParameterList","parameters":[],"src":"1734:0:20"},"scope":3481,"src":"1671:281:20","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3295,"nodeType":"Block","src":"2345:263:20","statements":[{"expression":{"arguments":[{"id":3269,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"2374:17:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3268,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"2355:18:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2355:37:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3271,"nodeType":"ExpressionStatement","src":"2355:37:20"},{"eventCall":{"arguments":[{"id":3275,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"2425:17:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3272,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"2407:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$2637_$","typeString":"type(contract IERC1967)"}},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2416:8:20","memberName":"Upgraded","nodeType":"MemberAccess","referencedDeclaration":2624,"src":"2407:17:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2407:36:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3277,"nodeType":"EmitStatement","src":"2402:41:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3278,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"2458:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2463:6:20","memberName":"length","nodeType":"MemberAccess","src":"2458:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2472:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2458:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3293,"nodeType":"Block","src":"2559:43:20","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3290,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"2573:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3292,"nodeType":"ExpressionStatement","src":"2573:18:20"}]},"id":3294,"nodeType":"IfStatement","src":"2454:148:20","trueBody":{"id":3289,"nodeType":"Block","src":"2475:78:20","statements":[{"expression":{"arguments":[{"id":3285,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"2518:17:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3286,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"2537:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3282,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"2489:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$4628_$","typeString":"type(library Address)"}},"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2497:20:20","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":4545,"src":"2489:28:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2489:53:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3288,"nodeType":"ExpressionStatement","src":"2489:53:20"}]}}]},"documentation":{"id":3261,"nodeType":"StructuredDocumentation","src":"1958:301:20","text":" @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."},"id":3296,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeToAndCall","nameLocation":"2273:16:20","nodeType":"FunctionDefinition","parameters":{"id":3266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3263,"mutability":"mutable","name":"newImplementation","nameLocation":"2298:17:20","nodeType":"VariableDeclaration","scope":3296,"src":"2290:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3262,"name":"address","nodeType":"ElementaryTypeName","src":"2290:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3265,"mutability":"mutable","name":"data","nameLocation":"2330:4:20","nodeType":"VariableDeclaration","scope":3296,"src":"2317:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3264,"name":"bytes","nodeType":"ElementaryTypeName","src":"2317:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2289:46:20"},"returnParameters":{"id":3267,"nodeType":"ParameterList","parameters":[],"src":"2345:0:20"},"scope":3481,"src":"2264:344:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":3297,"nodeType":"StructuredDocumentation","src":"2614:145:20","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"id":3300,"mutability":"constant","name":"ADMIN_SLOT","nameLocation":"2855:10:20","nodeType":"VariableDeclaration","scope":3481,"src":"2829:105:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3298,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2829:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":3299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2868:66:20","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":3312,"nodeType":"Block","src":"3339:68:20","statements":[{"expression":{"expression":{"arguments":[{"id":3308,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"3383:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3306,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5965,"src":"3356:11:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$5965_$","typeString":"type(library StorageSlot)"}},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3368:14:20","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":5876,"src":"3356:26:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$5847_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3356:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$5847_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":3310,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3395:5:20","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":5846,"src":"3356:44:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3305,"id":3311,"nodeType":"Return","src":"3349:51:20"}]},"documentation":{"id":3301,"nodeType":"StructuredDocumentation","src":"2941:341:20","text":" @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"id":3313,"implemented":true,"kind":"function","modifiers":[],"name":"getAdmin","nameLocation":"3296:8:20","nodeType":"FunctionDefinition","parameters":{"id":3302,"nodeType":"ParameterList","parameters":[],"src":"3304:2:20"},"returnParameters":{"id":3305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3313,"src":"3330:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3303,"name":"address","nodeType":"ElementaryTypeName","src":"3330:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3329:9:20"},"scope":3481,"src":"3287:120:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3343,"nodeType":"Block","src":"3535:172:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3319,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"3549:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3569:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3561:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3320,"name":"address","nodeType":"ElementaryTypeName","src":"3561:7:20","typeDescriptions":{}}},"id":3323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3561:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3549:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3333,"nodeType":"IfStatement","src":"3545:91:20","trueBody":{"id":3332,"nodeType":"Block","src":"3573:63:20","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":3328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3622:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3614:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3326,"name":"address","nodeType":"ElementaryTypeName","src":"3614:7:20","typeDescriptions":{}}},"id":3329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3614:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3325,"name":"ERC1967InvalidAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"3594:19:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3594:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3331,"nodeType":"RevertStatement","src":"3587:38:20"}]}},{"expression":{"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":3337,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"3672:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3334,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5965,"src":"3645:11:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$5965_$","typeString":"type(library StorageSlot)"}},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3657:14:20","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":5876,"src":"3645:26:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$5847_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3645:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$5847_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":3339,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3684:5:20","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":5846,"src":"3645:44:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3340,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"3692:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3645:55:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3342,"nodeType":"ExpressionStatement","src":"3645:55:20"}]},"documentation":{"id":3314,"nodeType":"StructuredDocumentation","src":"3413:72:20","text":" @dev Stores a new address in the ERC-1967 admin slot."},"id":3344,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"3499:9:20","nodeType":"FunctionDefinition","parameters":{"id":3317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3316,"mutability":"mutable","name":"newAdmin","nameLocation":"3517:8:20","nodeType":"VariableDeclaration","scope":3344,"src":"3509:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3315,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3508:18:20"},"returnParameters":{"id":3318,"nodeType":"ParameterList","parameters":[],"src":"3535:0:20"},"scope":3481,"src":"3490:217:20","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3362,"nodeType":"Block","src":"3875:94:20","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3353,"name":"getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3313,"src":"3912:8:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3912:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3355,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3347,"src":"3924:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3350,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"3890:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$2637_$","typeString":"type(contract IERC1967)"}},"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3899:12:20","memberName":"AdminChanged","nodeType":"MemberAccess","referencedDeclaration":2631,"src":"3890:21:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3890:43:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3357,"nodeType":"EmitStatement","src":"3885:48:20"},{"expression":{"arguments":[{"id":3359,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3347,"src":"3953:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3358,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"3943:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3943:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3361,"nodeType":"ExpressionStatement","src":"3943:19:20"}]},"documentation":{"id":3345,"nodeType":"StructuredDocumentation","src":"3713:109:20","text":" @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."},"id":3363,"implemented":true,"kind":"function","modifiers":[],"name":"changeAdmin","nameLocation":"3836:11:20","nodeType":"FunctionDefinition","parameters":{"id":3348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3347,"mutability":"mutable","name":"newAdmin","nameLocation":"3856:8:20","nodeType":"VariableDeclaration","scope":3363,"src":"3848:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3346,"name":"address","nodeType":"ElementaryTypeName","src":"3848:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3847:18:20"},"returnParameters":{"id":3349,"nodeType":"ParameterList","parameters":[],"src":"3875:0:20"},"scope":3481,"src":"3827:142:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":3364,"nodeType":"StructuredDocumentation","src":"3975:201:20","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"id":3367,"mutability":"constant","name":"BEACON_SLOT","nameLocation":"4272:11:20","nodeType":"VariableDeclaration","scope":3481,"src":"4246:106:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3365,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4246:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":3366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4286:66:20","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":3379,"nodeType":"Block","src":"4468:69:20","statements":[{"expression":{"expression":{"arguments":[{"id":3375,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3367,"src":"4512:11:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3373,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5965,"src":"4485:11:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$5965_$","typeString":"type(library StorageSlot)"}},"id":3374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4497:14:20","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":5876,"src":"4485:26:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$5847_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4485:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$5847_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":3377,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4525:5:20","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":5846,"src":"4485:45:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3372,"id":3378,"nodeType":"Return","src":"4478:52:20"}]},"documentation":{"id":3368,"nodeType":"StructuredDocumentation","src":"4359:51:20","text":" @dev Returns the current beacon."},"id":3380,"implemented":true,"kind":"function","modifiers":[],"name":"getBeacon","nameLocation":"4424:9:20","nodeType":"FunctionDefinition","parameters":{"id":3369,"nodeType":"ParameterList","parameters":[],"src":"4433:2:20"},"returnParameters":{"id":3372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3371,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3380,"src":"4459:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3370,"name":"address","nodeType":"ElementaryTypeName","src":"4459:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4458:9:20"},"scope":3481,"src":"4415:122:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3425,"nodeType":"Block","src":"4667:390:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3386,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"4681:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4691:4:20","memberName":"code","nodeType":"MemberAccess","src":"4681:14:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4696:6:20","memberName":"length","nodeType":"MemberAccess","src":"4681:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4706:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4681:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3396,"nodeType":"IfStatement","src":"4677:95:20","trueBody":{"id":3395,"nodeType":"Block","src":"4709:63:20","statements":[{"errorCall":{"arguments":[{"id":3392,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"4751:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3391,"name":"ERC1967InvalidBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3217,"src":"4730:20:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":3393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4730:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3394,"nodeType":"RevertStatement","src":"4723:38:20"}]}},{"expression":{"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":3400,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3367,"src":"4809:11:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3397,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5965,"src":"4782:11:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$5965_$","typeString":"type(library StorageSlot)"}},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4794:14:20","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":5876,"src":"4782:26:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$5847_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$5847_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":3402,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4822:5:20","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":5846,"src":"4782:45:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3403,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"4830:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4782:57:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3405,"nodeType":"ExpressionStatement","src":"4782:57:20"},{"assignments":[3407],"declarations":[{"constant":false,"id":3407,"mutability":"mutable","name":"beaconImplementation","nameLocation":"4858:20:20","nodeType":"VariableDeclaration","scope":3425,"src":"4850:28:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3406,"name":"address","nodeType":"ElementaryTypeName","src":"4850:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3413,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3409,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"4889:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3408,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"4881:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$3491_$","typeString":"type(contract IBeacon)"}},"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4881:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$3491","typeString":"contract IBeacon"}},"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4900:14:20","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":3490,"src":"4881:33:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4881:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4850:66:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3414,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"4930:20:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4951:4:20","memberName":"code","nodeType":"MemberAccess","src":"4930:25:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4956:6:20","memberName":"length","nodeType":"MemberAccess","src":"4930:32:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4966:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4930:37:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3424,"nodeType":"IfStatement","src":"4926:125:20","trueBody":{"id":3423,"nodeType":"Block","src":"4969:82:20","statements":[{"errorCall":{"arguments":[{"id":3420,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"5019:20:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3419,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"4990:28:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":3421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4990:50:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3422,"nodeType":"RevertStatement","src":"4983:57:20"}]}}]},"documentation":{"id":3381,"nodeType":"StructuredDocumentation","src":"4543:72:20","text":" @dev Stores a new beacon in the ERC-1967 beacon slot."},"id":3426,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"4629:10:20","nodeType":"FunctionDefinition","parameters":{"id":3384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3383,"mutability":"mutable","name":"newBeacon","nameLocation":"4648:9:20","nodeType":"VariableDeclaration","scope":3426,"src":"4640:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3382,"name":"address","nodeType":"ElementaryTypeName","src":"4640:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4639:19:20"},"returnParameters":{"id":3385,"nodeType":"ParameterList","parameters":[],"src":"4667:0:20"},"scope":3481,"src":"4620:437:20","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3465,"nodeType":"Block","src":"5661:263:20","statements":[{"expression":{"arguments":[{"id":3435,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"5682:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3434,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"5671:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5671:21:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3437,"nodeType":"ExpressionStatement","src":"5671:21:20"},{"eventCall":{"arguments":[{"id":3441,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"5731:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3438,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"5707:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$2637_$","typeString":"type(contract IERC1967)"}},"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5716:14:20","memberName":"BeaconUpgraded","nodeType":"MemberAccess","referencedDeclaration":2636,"src":"5707:23:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5707:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3443,"nodeType":"EmitStatement","src":"5702:39:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3444,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"5756:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5761:6:20","memberName":"length","nodeType":"MemberAccess","src":"5756:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5770:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5756:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3463,"nodeType":"Block","src":"5875:43:20","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3460,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"5889:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5889:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3462,"nodeType":"ExpressionStatement","src":"5889:18:20"}]},"id":3464,"nodeType":"IfStatement","src":"5752:166:20","trueBody":{"id":3459,"nodeType":"Block","src":"5773:96:20","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3452,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"5824:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3451,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"5816:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$3491_$","typeString":"type(contract IBeacon)"}},"id":3453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5816:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$3491","typeString":"contract IBeacon"}},"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5835:14:20","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":3490,"src":"5816:33:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5816:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3456,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"5853:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3448,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"5787:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$4628_$","typeString":"type(library Address)"}},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5795:20:20","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":4545,"src":"5787:28:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5787:71:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3458,"nodeType":"ExpressionStatement","src":"5787:71:20"}]}}]},"documentation":{"id":3427,"nodeType":"StructuredDocumentation","src":"5063:514:20","text":" @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."},"id":3466,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeBeaconToAndCall","nameLocation":"5591:22:20","nodeType":"FunctionDefinition","parameters":{"id":3432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3429,"mutability":"mutable","name":"newBeacon","nameLocation":"5622:9:20","nodeType":"VariableDeclaration","scope":3466,"src":"5614:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3428,"name":"address","nodeType":"ElementaryTypeName","src":"5614:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3431,"mutability":"mutable","name":"data","nameLocation":"5646:4:20","nodeType":"VariableDeclaration","scope":3466,"src":"5633:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3430,"name":"bytes","nodeType":"ElementaryTypeName","src":"5633:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5613:38:20"},"returnParameters":{"id":3433,"nodeType":"ParameterList","parameters":[],"src":"5661:0:20"},"scope":3481,"src":"5582:342:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3479,"nodeType":"Block","src":"6149:86:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3470,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6163:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6167:5:20","memberName":"value","nodeType":"MemberAccess","src":"6163:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6175:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6163:13:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3478,"nodeType":"IfStatement","src":"6159:70:20","trueBody":{"id":3477,"nodeType":"Block","src":"6178:51:20","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3474,"name":"ERC1967NonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"6199:17:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6199:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3476,"nodeType":"RevertStatement","src":"6192:26:20"}]}}]},"documentation":{"id":3467,"nodeType":"StructuredDocumentation","src":"5930:178:20","text":" @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."},"id":3480,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNonPayable","nameLocation":"6122:16:20","nodeType":"FunctionDefinition","parameters":{"id":3468,"nodeType":"ParameterList","parameters":[],"src":"6138:2:20"},"returnParameters":{"id":3469,"nodeType":"ParameterList","parameters":[],"src":"6149:0:20"},"scope":3481,"src":"6113:122:20","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":3482,"src":"496:5741:20","usedErrors":[3207,3212,3217,3220],"usedEvents":[]}],"src":"114:6124:20"},"id":20},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[3491]},"id":3492,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3483,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":3484,"nodeType":"StructuredDocumentation","src":"134:79:21","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":3491,"linearizedBaseContracts":[3491],"name":"IBeacon","nameLocation":"224:7:21","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3485,"nodeType":"StructuredDocumentation","src":"238:168:21","text":" @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."},"functionSelector":"5c60da1b","id":3490,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"420:14:21","nodeType":"FunctionDefinition","parameters":{"id":3486,"nodeType":"ParameterList","parameters":[],"src":"434:2:21"},"returnParameters":{"id":3489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3490,"src":"460:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3487,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"459:9:21"},"scope":3491,"src":"411:58:21","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3492,"src":"214:257:21","usedErrors":[],"usedEvents":[]}],"src":"108:364:21"},"id":21},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","exportedSymbols":{"IERC1155":[3614],"IERC165":[7379]},"id":3615,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3493,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"110:24:22"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":3495,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3615,"sourceUnit":7380,"src":"136:62:22","symbolAliases":[{"foreign":{"id":3494,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7379,"src":"144:7:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3497,"name":"IERC165","nameLocations":["359:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":7379,"src":"359:7:22"},"id":3498,"nodeType":"InheritanceSpecifier","src":"359:7:22"}],"canonicalName":"IERC1155","contractDependencies":[],"contractKind":"interface","documentation":{"id":3496,"nodeType":"StructuredDocumentation","src":"200:136:22","text":" @dev Required interface of an ERC-1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[ERC]."},"fullyImplemented":false,"id":3614,"linearizedBaseContracts":[3614,7379],"name":"IERC1155","nameLocation":"347:8:22","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3499,"nodeType":"StructuredDocumentation","src":"373:125:22","text":" @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."},"eventSelector":"c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62","id":3511,"name":"TransferSingle","nameLocation":"509:14:22","nodeType":"EventDefinition","parameters":{"id":3510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3501,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"540:8:22","nodeType":"VariableDeclaration","scope":3511,"src":"524:24:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3500,"name":"address","nodeType":"ElementaryTypeName","src":"524:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3503,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"566:4:22","nodeType":"VariableDeclaration","scope":3511,"src":"550:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3502,"name":"address","nodeType":"ElementaryTypeName","src":"550:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3505,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"588:2:22","nodeType":"VariableDeclaration","scope":3511,"src":"572:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3504,"name":"address","nodeType":"ElementaryTypeName","src":"572:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3507,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"600:2:22","nodeType":"VariableDeclaration","scope":3511,"src":"592:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3506,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3509,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"612:5:22","nodeType":"VariableDeclaration","scope":3511,"src":"604:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3508,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"523:95:22"},"src":"503:116:22"},{"anonymous":false,"documentation":{"id":3512,"nodeType":"StructuredDocumentation","src":"625:144:22","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"eventSelector":"4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb","id":3526,"name":"TransferBatch","nameLocation":"780:13:22","nodeType":"EventDefinition","parameters":{"id":3525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3514,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"819:8:22","nodeType":"VariableDeclaration","scope":3526,"src":"803:24:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3513,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3516,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"853:4:22","nodeType":"VariableDeclaration","scope":3526,"src":"837:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3515,"name":"address","nodeType":"ElementaryTypeName","src":"837:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3518,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"883:2:22","nodeType":"VariableDeclaration","scope":3526,"src":"867:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3517,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3521,"indexed":false,"mutability":"mutable","name":"ids","nameLocation":"905:3:22","nodeType":"VariableDeclaration","scope":3526,"src":"895:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3519,"name":"uint256","nodeType":"ElementaryTypeName","src":"895:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3520,"nodeType":"ArrayTypeName","src":"895:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3524,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"928:6:22","nodeType":"VariableDeclaration","scope":3526,"src":"918:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3522,"name":"uint256","nodeType":"ElementaryTypeName","src":"918:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3523,"nodeType":"ArrayTypeName","src":"918:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"793:147:22"},"src":"774:167:22"},{"anonymous":false,"documentation":{"id":3527,"nodeType":"StructuredDocumentation","src":"947:147:22","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":3535,"name":"ApprovalForAll","nameLocation":"1105:14:22","nodeType":"EventDefinition","parameters":{"id":3534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3529,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1136:7:22","nodeType":"VariableDeclaration","scope":3535,"src":"1120:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3528,"name":"address","nodeType":"ElementaryTypeName","src":"1120:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3531,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1161:8:22","nodeType":"VariableDeclaration","scope":3535,"src":"1145:24:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3530,"name":"address","nodeType":"ElementaryTypeName","src":"1145:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3533,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1176:8:22","nodeType":"VariableDeclaration","scope":3535,"src":"1171:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3532,"name":"bool","nodeType":"ElementaryTypeName","src":"1171:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1119:66:22"},"src":"1099:87:22"},{"anonymous":false,"documentation":{"id":3536,"nodeType":"StructuredDocumentation","src":"1192:343:22","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"eventSelector":"6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b","id":3542,"name":"URI","nameLocation":"1546:3:22","nodeType":"EventDefinition","parameters":{"id":3541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3538,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1557:5:22","nodeType":"VariableDeclaration","scope":3542,"src":"1550:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3537,"name":"string","nodeType":"ElementaryTypeName","src":"1550:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3540,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1580:2:22","nodeType":"VariableDeclaration","scope":3542,"src":"1564:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3539,"name":"uint256","nodeType":"ElementaryTypeName","src":"1564:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:34:22"},"src":"1540:44:22"},{"documentation":{"id":3543,"nodeType":"StructuredDocumentation","src":"1590:90:22","text":" @dev Returns the value of tokens of token type `id` owned by `account`."},"functionSelector":"00fdd58e","id":3552,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1694:9:22","nodeType":"FunctionDefinition","parameters":{"id":3548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3545,"mutability":"mutable","name":"account","nameLocation":"1712:7:22","nodeType":"VariableDeclaration","scope":3552,"src":"1704:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3544,"name":"address","nodeType":"ElementaryTypeName","src":"1704:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3547,"mutability":"mutable","name":"id","nameLocation":"1729:2:22","nodeType":"VariableDeclaration","scope":3552,"src":"1721:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3546,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1703:29:22"},"returnParameters":{"id":3551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3552,"src":"1756:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3549,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1755:9:22"},"scope":3614,"src":"1685:80:22","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3553,"nodeType":"StructuredDocumentation","src":"1771:188:22","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":3565,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"1973:14:22","nodeType":"FunctionDefinition","parameters":{"id":3560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3556,"mutability":"mutable","name":"accounts","nameLocation":"2016:8:22","nodeType":"VariableDeclaration","scope":3565,"src":"1997:27:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3554,"name":"address","nodeType":"ElementaryTypeName","src":"1997:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3555,"nodeType":"ArrayTypeName","src":"1997:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3559,"mutability":"mutable","name":"ids","nameLocation":"2053:3:22","nodeType":"VariableDeclaration","scope":3565,"src":"2034:22:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3557,"name":"uint256","nodeType":"ElementaryTypeName","src":"2034:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3558,"nodeType":"ArrayTypeName","src":"2034:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1987:75:22"},"returnParameters":{"id":3564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3565,"src":"2086:16:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3561,"name":"uint256","nodeType":"ElementaryTypeName","src":"2086:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3562,"nodeType":"ArrayTypeName","src":"2086:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2085:18:22"},"scope":3614,"src":"1964:140:22","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3566,"nodeType":"StructuredDocumentation","src":"2110:254:22","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"functionSelector":"a22cb465","id":3573,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2378:17:22","nodeType":"FunctionDefinition","parameters":{"id":3571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3568,"mutability":"mutable","name":"operator","nameLocation":"2404:8:22","nodeType":"VariableDeclaration","scope":3573,"src":"2396:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3567,"name":"address","nodeType":"ElementaryTypeName","src":"2396:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3570,"mutability":"mutable","name":"approved","nameLocation":"2419:8:22","nodeType":"VariableDeclaration","scope":3573,"src":"2414:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3569,"name":"bool","nodeType":"ElementaryTypeName","src":"2414:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2395:33:22"},"returnParameters":{"id":3572,"nodeType":"ParameterList","parameters":[],"src":"2437:0:22"},"scope":3614,"src":"2369:69:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3574,"nodeType":"StructuredDocumentation","src":"2444:135:22","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":3583,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"2593:16:22","nodeType":"FunctionDefinition","parameters":{"id":3579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3576,"mutability":"mutable","name":"account","nameLocation":"2618:7:22","nodeType":"VariableDeclaration","scope":3583,"src":"2610:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3575,"name":"address","nodeType":"ElementaryTypeName","src":"2610:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3578,"mutability":"mutable","name":"operator","nameLocation":"2635:8:22","nodeType":"VariableDeclaration","scope":3583,"src":"2627:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3577,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2609:35:22"},"returnParameters":{"id":3582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3581,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3583,"src":"2668:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3580,"name":"bool","nodeType":"ElementaryTypeName","src":"2668:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2667:6:22"},"scope":3614,"src":"2584:90:22","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3584,"nodeType":"StructuredDocumentation","src":"2680:927:22","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","id":3597,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3621:16:22","nodeType":"FunctionDefinition","parameters":{"id":3595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3586,"mutability":"mutable","name":"from","nameLocation":"3646:4:22","nodeType":"VariableDeclaration","scope":3597,"src":"3638:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3585,"name":"address","nodeType":"ElementaryTypeName","src":"3638:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3588,"mutability":"mutable","name":"to","nameLocation":"3660:2:22","nodeType":"VariableDeclaration","scope":3597,"src":"3652:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3587,"name":"address","nodeType":"ElementaryTypeName","src":"3652:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3590,"mutability":"mutable","name":"id","nameLocation":"3672:2:22","nodeType":"VariableDeclaration","scope":3597,"src":"3664:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3589,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3592,"mutability":"mutable","name":"value","nameLocation":"3684:5:22","nodeType":"VariableDeclaration","scope":3597,"src":"3676:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3591,"name":"uint256","nodeType":"ElementaryTypeName","src":"3676:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3594,"mutability":"mutable","name":"data","nameLocation":"3706:4:22","nodeType":"VariableDeclaration","scope":3597,"src":"3691:19:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3593,"name":"bytes","nodeType":"ElementaryTypeName","src":"3691:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3637:74:22"},"returnParameters":{"id":3596,"nodeType":"ParameterList","parameters":[],"src":"3720:0:22"},"scope":3614,"src":"3612:109:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3598,"nodeType":"StructuredDocumentation","src":"3727:831:22","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","id":3613,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4572:21:22","nodeType":"FunctionDefinition","parameters":{"id":3611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3600,"mutability":"mutable","name":"from","nameLocation":"4611:4:22","nodeType":"VariableDeclaration","scope":3613,"src":"4603:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3599,"name":"address","nodeType":"ElementaryTypeName","src":"4603:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3602,"mutability":"mutable","name":"to","nameLocation":"4633:2:22","nodeType":"VariableDeclaration","scope":3613,"src":"4625:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3601,"name":"address","nodeType":"ElementaryTypeName","src":"4625:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3605,"mutability":"mutable","name":"ids","nameLocation":"4664:3:22","nodeType":"VariableDeclaration","scope":3613,"src":"4645:22:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3603,"name":"uint256","nodeType":"ElementaryTypeName","src":"4645:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3604,"nodeType":"ArrayTypeName","src":"4645:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3608,"mutability":"mutable","name":"values","nameLocation":"4696:6:22","nodeType":"VariableDeclaration","scope":3613,"src":"4677:25:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3606,"name":"uint256","nodeType":"ElementaryTypeName","src":"4677:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3607,"nodeType":"ArrayTypeName","src":"4677:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3610,"mutability":"mutable","name":"data","nameLocation":"4727:4:22","nodeType":"VariableDeclaration","scope":3613,"src":"4712:19:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3609,"name":"bytes","nodeType":"ElementaryTypeName","src":"4712:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4593:144:22"},"returnParameters":{"id":3612,"nodeType":"ParameterList","parameters":[],"src":"4746:0:22"},"scope":3614,"src":"4563:184:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3615,"src":"337:4412:22","usedErrors":[],"usedEvents":[3511,3526,3535,3542]}],"src":"110:4640:22"},"id":22},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[3656],"IERC165":[7379]},"id":3657,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3616,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:23"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":3618,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3657,"sourceUnit":7380,"src":"144:62:23","symbolAliases":[{"foreign":{"id":3617,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7379,"src":"152:7:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3620,"name":"IERC165","nameLocations":["357:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":7379,"src":"357:7:23"},"id":3621,"nodeType":"InheritanceSpecifier","src":"357:7:23"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":3619,"nodeType":"StructuredDocumentation","src":"208:118:23","text":" @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."},"fullyImplemented":false,"id":3656,"linearizedBaseContracts":[3656,7379],"name":"IERC1155Receiver","nameLocation":"337:16:23","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3622,"nodeType":"StructuredDocumentation","src":"371:827:23","text":" @dev Handles the receipt of a single ERC-1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":3637,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1212:17:23","nodeType":"FunctionDefinition","parameters":{"id":3633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3624,"mutability":"mutable","name":"operator","nameLocation":"1247:8:23","nodeType":"VariableDeclaration","scope":3637,"src":"1239:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3623,"name":"address","nodeType":"ElementaryTypeName","src":"1239:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3626,"mutability":"mutable","name":"from","nameLocation":"1273:4:23","nodeType":"VariableDeclaration","scope":3637,"src":"1265:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3625,"name":"address","nodeType":"ElementaryTypeName","src":"1265:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3628,"mutability":"mutable","name":"id","nameLocation":"1295:2:23","nodeType":"VariableDeclaration","scope":3637,"src":"1287:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3627,"name":"uint256","nodeType":"ElementaryTypeName","src":"1287:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3630,"mutability":"mutable","name":"value","nameLocation":"1315:5:23","nodeType":"VariableDeclaration","scope":3637,"src":"1307:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3629,"name":"uint256","nodeType":"ElementaryTypeName","src":"1307:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3632,"mutability":"mutable","name":"data","nameLocation":"1345:4:23","nodeType":"VariableDeclaration","scope":3637,"src":"1330:19:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3631,"name":"bytes","nodeType":"ElementaryTypeName","src":"1330:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1229:126:23"},"returnParameters":{"id":3636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3635,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3637,"src":"1374:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3634,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1374:6:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1373:8:23"},"scope":3656,"src":"1203:179:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3638,"nodeType":"StructuredDocumentation","src":"1388:995:23","text":" @dev Handles the receipt of a multiple ERC-1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":3655,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2397:22:23","nodeType":"FunctionDefinition","parameters":{"id":3651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3640,"mutability":"mutable","name":"operator","nameLocation":"2437:8:23","nodeType":"VariableDeclaration","scope":3655,"src":"2429:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3639,"name":"address","nodeType":"ElementaryTypeName","src":"2429:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3642,"mutability":"mutable","name":"from","nameLocation":"2463:4:23","nodeType":"VariableDeclaration","scope":3655,"src":"2455:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3641,"name":"address","nodeType":"ElementaryTypeName","src":"2455:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3645,"mutability":"mutable","name":"ids","nameLocation":"2496:3:23","nodeType":"VariableDeclaration","scope":3655,"src":"2477:22:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3643,"name":"uint256","nodeType":"ElementaryTypeName","src":"2477:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3644,"nodeType":"ArrayTypeName","src":"2477:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3648,"mutability":"mutable","name":"values","nameLocation":"2528:6:23","nodeType":"VariableDeclaration","scope":3655,"src":"2509:25:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3646,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3647,"nodeType":"ArrayTypeName","src":"2509:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3650,"mutability":"mutable","name":"data","nameLocation":"2559:4:23","nodeType":"VariableDeclaration","scope":3655,"src":"2544:19:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3649,"name":"bytes","nodeType":"ElementaryTypeName","src":"2544:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2419:150:23"},"returnParameters":{"id":3654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3655,"src":"2588:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3652,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2588:6:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2587:8:23"},"scope":3656,"src":"2388:208:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3657,"src":"327:2271:23","usedErrors":[],"usedEvents":[]}],"src":"118:2481:23"},"id":23},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","exportedSymbols":{"IERC1155":[3614],"IERC1155MetadataURI":[3672]},"id":3673,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3658,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"132:24:24"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"../IERC1155.sol","id":3660,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3673,"sourceUnit":3615,"src":"158:41:24","symbolAliases":[{"foreign":{"id":3659,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"166:8:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3662,"name":"IERC1155","nameLocations":["399:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":3614,"src":"399:8:24"},"id":3663,"nodeType":"InheritanceSpecifier","src":"399:8:24"}],"canonicalName":"IERC1155MetadataURI","contractDependencies":[],"contractKind":"interface","documentation":{"id":3661,"nodeType":"StructuredDocumentation","src":"201:164:24","text":" @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC]."},"fullyImplemented":false,"id":3672,"linearizedBaseContracts":[3672,3614,7379],"name":"IERC1155MetadataURI","nameLocation":"376:19:24","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3664,"nodeType":"StructuredDocumentation","src":"414:192:24","text":" @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."},"functionSelector":"0e89341c","id":3671,"implemented":false,"kind":"function","modifiers":[],"name":"uri","nameLocation":"620:3:24","nodeType":"FunctionDefinition","parameters":{"id":3667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3666,"mutability":"mutable","name":"id","nameLocation":"632:2:24","nodeType":"VariableDeclaration","scope":3671,"src":"624:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3665,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"623:12:24"},"returnParameters":{"id":3670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3671,"src":"659:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3668,"name":"string","nodeType":"ElementaryTypeName","src":"659:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"658:15:24"},"scope":3672,"src":"611:63:24","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3673,"src":"366:310:24","usedErrors":[],"usedEvents":[3511,3526,3535,3542]}],"src":"132:545:24"},"id":24},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","exportedSymbols":{"ERC1155Utils":[3826],"IERC1155Errors":[2788],"IERC1155Receiver":[3656]},"id":3827,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3674,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"120:24:25"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"../IERC1155Receiver.sol","id":3676,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3827,"sourceUnit":3657,"src":"146:57:25","symbolAliases":[{"foreign":{"id":3675,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3656,"src":"154:16:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":3678,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3827,"sourceUnit":2789,"src":"204:70:25","symbolAliases":[{"foreign":{"id":3677,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"212:14:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1155Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":3679,"nodeType":"StructuredDocumentation","src":"276:162:25","text":" @dev Library that provide common ERC-1155 utility functions.\n See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n _Available since v5.1._"},"fullyImplemented":true,"id":3826,"linearizedBaseContracts":[3826],"name":"ERC1155Utils","nameLocation":"447:12:25","nodeType":"ContractDefinition","nodes":[{"body":{"id":3750,"nodeType":"Block","src":"1191:774:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3695,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"1205:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1208:4:25","memberName":"code","nodeType":"MemberAccess","src":"1205:7:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1213:6:25","memberName":"length","nodeType":"MemberAccess","src":"1205:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1222:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1205:18:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3749,"nodeType":"IfStatement","src":"1201:758:25","trueBody":{"id":3748,"nodeType":"Block","src":"1225:734:25","statements":[{"clauses":[{"block":{"id":3726,"nodeType":"Block","src":"1341:221:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3713,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"1363:8:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":3714,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3656,"src":"1375:16:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$3656_$","typeString":"type(contract IERC1155Receiver)"}},"id":3715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1392:17:25","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":3637,"src":"1375:34:25","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"}},"id":3716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1410:8:25","memberName":"selector","nodeType":"MemberAccess","src":"1375:43:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1363:55:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3725,"nodeType":"IfStatement","src":"1359:189:25","trueBody":{"id":3724,"nodeType":"Block","src":"1420:128:25","statements":[{"errorCall":{"arguments":[{"id":3721,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"1526:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3718,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"1488:14:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$2788_$","typeString":"type(contract IERC1155Errors)"}},"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1503:22:25","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":2763,"src":"1488:37:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3723,"nodeType":"RevertStatement","src":"1481:48:25"}]}}]},"errorName":"","id":3727,"nodeType":"TryCatchClause","parameters":{"id":3712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3711,"mutability":"mutable","name":"response","nameLocation":"1331:8:25","nodeType":"VariableDeclaration","scope":3727,"src":"1324:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3710,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1324:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1323:17:25"},"src":"1315:247:25"},{"block":{"id":3745,"nodeType":"Block","src":"1591:358:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3731,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"1613:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1620:6:25","memberName":"length","nodeType":"MemberAccess","src":"1613:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1630:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1613:18:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3743,"nodeType":"Block","src":"1784:151:25","statements":[{"AST":{"nativeSrc":"1831:86:25","nodeType":"YulBlock","src":"1831:86:25","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1868:2:25","nodeType":"YulLiteral","src":"1868:2:25","type":"","value":"32"},{"name":"reason","nativeSrc":"1872:6:25","nodeType":"YulIdentifier","src":"1872:6:25"}],"functionName":{"name":"add","nativeSrc":"1864:3:25","nodeType":"YulIdentifier","src":"1864:3:25"},"nativeSrc":"1864:15:25","nodeType":"YulFunctionCall","src":"1864:15:25"},{"arguments":[{"name":"reason","nativeSrc":"1887:6:25","nodeType":"YulIdentifier","src":"1887:6:25"}],"functionName":{"name":"mload","nativeSrc":"1881:5:25","nodeType":"YulIdentifier","src":"1881:5:25"},"nativeSrc":"1881:13:25","nodeType":"YulFunctionCall","src":"1881:13:25"}],"functionName":{"name":"revert","nativeSrc":"1857:6:25","nodeType":"YulIdentifier","src":"1857:6:25"},"nativeSrc":"1857:38:25","nodeType":"YulFunctionCall","src":"1857:38:25"},"nativeSrc":"1857:38:25","nodeType":"YulExpressionStatement","src":"1857:38:25"}]},"evmVersion":"paris","externalReferences":[{"declaration":3729,"isOffset":false,"isSlot":false,"src":"1872:6:25","valueSize":1},{"declaration":3729,"isOffset":false,"isSlot":false,"src":"1887:6:25","valueSize":1}],"flags":["memory-safe"],"id":3742,"nodeType":"InlineAssembly","src":"1806:111:25"}]},"id":3744,"nodeType":"IfStatement","src":"1609:326:25","trueBody":{"id":3741,"nodeType":"Block","src":"1633:145:25","statements":[{"errorCall":{"arguments":[{"id":3738,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"1756:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3735,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"1718:14:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$2788_$","typeString":"type(contract IERC1155Errors)"}},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1733:22:25","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":2763,"src":"1718:37:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3740,"nodeType":"RevertStatement","src":"1711:48:25"}]}}]},"errorName":"","id":3746,"nodeType":"TryCatchClause","parameters":{"id":3730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3729,"mutability":"mutable","name":"reason","nameLocation":"1583:6:25","nodeType":"VariableDeclaration","scope":3746,"src":"1570:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3728,"name":"bytes","nodeType":"ElementaryTypeName","src":"1570:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1569:21:25"},"src":"1563:386:25"}],"externalCall":{"arguments":[{"id":3704,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"1282:8:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3705,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"1292:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3706,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"1298:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3690,"src":"1302:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3708,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"1309:4:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":3701,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"1260:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3700,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3656,"src":"1243:16:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$3656_$","typeString":"type(contract IERC1155Receiver)"}},"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1243:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$3656","typeString":"contract IERC1155Receiver"}},"id":3703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1264:17:25","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":3637,"src":"1243:38:25","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":3709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1243:71:25","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":3747,"nodeType":"TryStatement","src":"1239:710:25"}]}}]},"documentation":{"id":3680,"nodeType":"StructuredDocumentation","src":"466:535:25","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":3751,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155Received","nameLocation":"1015:22:25","nodeType":"FunctionDefinition","parameters":{"id":3693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3682,"mutability":"mutable","name":"operator","nameLocation":"1055:8:25","nodeType":"VariableDeclaration","scope":3751,"src":"1047:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3681,"name":"address","nodeType":"ElementaryTypeName","src":"1047:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3684,"mutability":"mutable","name":"from","nameLocation":"1081:4:25","nodeType":"VariableDeclaration","scope":3751,"src":"1073:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3683,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3686,"mutability":"mutable","name":"to","nameLocation":"1103:2:25","nodeType":"VariableDeclaration","scope":3751,"src":"1095:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3685,"name":"address","nodeType":"ElementaryTypeName","src":"1095:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3688,"mutability":"mutable","name":"id","nameLocation":"1123:2:25","nodeType":"VariableDeclaration","scope":3751,"src":"1115:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3687,"name":"uint256","nodeType":"ElementaryTypeName","src":"1115:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3690,"mutability":"mutable","name":"value","nameLocation":"1143:5:25","nodeType":"VariableDeclaration","scope":3751,"src":"1135:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3689,"name":"uint256","nodeType":"ElementaryTypeName","src":"1135:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3692,"mutability":"mutable","name":"data","nameLocation":"1171:4:25","nodeType":"VariableDeclaration","scope":3751,"src":"1158:17:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3691,"name":"bytes","nodeType":"ElementaryTypeName","src":"1158:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1037:144:25"},"returnParameters":{"id":3694,"nodeType":"ParameterList","parameters":[],"src":"1191:0:25"},"scope":3826,"src":"1006:959:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3824,"nodeType":"Block","src":"2731:816:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3769,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"2745:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2748:4:25","memberName":"code","nodeType":"MemberAccess","src":"2745:7:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2753:6:25","memberName":"length","nodeType":"MemberAccess","src":"2745:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2762:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2745:18:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3823,"nodeType":"IfStatement","src":"2741:800:25","trueBody":{"id":3822,"nodeType":"Block","src":"2765:776:25","statements":[{"clauses":[{"block":{"id":3800,"nodeType":"Block","src":"2918:226:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3787,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3785,"src":"2940:8:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":3788,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3656,"src":"2952:16:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$3656_$","typeString":"type(contract IERC1155Receiver)"}},"id":3789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2969:22:25","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":3655,"src":"2952:39:25","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"}},"id":3790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2992:8:25","memberName":"selector","nodeType":"MemberAccess","src":"2952:48:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2940:60:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3799,"nodeType":"IfStatement","src":"2936:194:25","trueBody":{"id":3798,"nodeType":"Block","src":"3002:128:25","statements":[{"errorCall":{"arguments":[{"id":3795,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"3108:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3792,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"3070:14:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$2788_$","typeString":"type(contract IERC1155Errors)"}},"id":3794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3085:22:25","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":2763,"src":"3070:37:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3797,"nodeType":"RevertStatement","src":"3063:48:25"}]}}]},"errorName":"","id":3801,"nodeType":"TryCatchClause","parameters":{"id":3786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3785,"mutability":"mutable","name":"response","nameLocation":"2895:8:25","nodeType":"VariableDeclaration","scope":3801,"src":"2888:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3784,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2888:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2870:47:25"},"src":"2862:282:25"},{"block":{"id":3819,"nodeType":"Block","src":"3173:358:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3805,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"3195:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3202:6:25","memberName":"length","nodeType":"MemberAccess","src":"3195:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3212:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3195:18:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3817,"nodeType":"Block","src":"3366:151:25","statements":[{"AST":{"nativeSrc":"3413:86:25","nodeType":"YulBlock","src":"3413:86:25","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3450:2:25","nodeType":"YulLiteral","src":"3450:2:25","type":"","value":"32"},{"name":"reason","nativeSrc":"3454:6:25","nodeType":"YulIdentifier","src":"3454:6:25"}],"functionName":{"name":"add","nativeSrc":"3446:3:25","nodeType":"YulIdentifier","src":"3446:3:25"},"nativeSrc":"3446:15:25","nodeType":"YulFunctionCall","src":"3446:15:25"},{"arguments":[{"name":"reason","nativeSrc":"3469:6:25","nodeType":"YulIdentifier","src":"3469:6:25"}],"functionName":{"name":"mload","nativeSrc":"3463:5:25","nodeType":"YulIdentifier","src":"3463:5:25"},"nativeSrc":"3463:13:25","nodeType":"YulFunctionCall","src":"3463:13:25"}],"functionName":{"name":"revert","nativeSrc":"3439:6:25","nodeType":"YulIdentifier","src":"3439:6:25"},"nativeSrc":"3439:38:25","nodeType":"YulFunctionCall","src":"3439:38:25"},"nativeSrc":"3439:38:25","nodeType":"YulExpressionStatement","src":"3439:38:25"}]},"evmVersion":"paris","externalReferences":[{"declaration":3803,"isOffset":false,"isSlot":false,"src":"3454:6:25","valueSize":1},{"declaration":3803,"isOffset":false,"isSlot":false,"src":"3469:6:25","valueSize":1}],"flags":["memory-safe"],"id":3816,"nodeType":"InlineAssembly","src":"3388:111:25"}]},"id":3818,"nodeType":"IfStatement","src":"3191:326:25","trueBody":{"id":3815,"nodeType":"Block","src":"3215:145:25","statements":[{"errorCall":{"arguments":[{"id":3812,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"3338:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3809,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"3300:14:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$2788_$","typeString":"type(contract IERC1155Errors)"}},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3315:22:25","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":2763,"src":"3300:37:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3300:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3814,"nodeType":"RevertStatement","src":"3293:48:25"}]}}]},"errorName":"","id":3820,"nodeType":"TryCatchClause","parameters":{"id":3804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3803,"mutability":"mutable","name":"reason","nameLocation":"3165:6:25","nodeType":"VariableDeclaration","scope":3820,"src":"3152:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3802,"name":"bytes","nodeType":"ElementaryTypeName","src":"3152:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3151:21:25"},"src":"3145:386:25"}],"externalCall":{"arguments":[{"id":3778,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"2827:8:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3779,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"2837:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3780,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3761,"src":"2843:3:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3781,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"2848:6:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3782,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3766,"src":"2856:4:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":3775,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"2800:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3774,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3656,"src":"2783:16:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$3656_$","typeString":"type(contract IERC1155Receiver)"}},"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2783:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$3656","typeString":"contract IERC1155Receiver"}},"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2804:22:25","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":3655,"src":"2783:43:25","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2783:78:25","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":3821,"nodeType":"TryStatement","src":"2779:752:25"}]}}]},"documentation":{"id":3752,"nodeType":"StructuredDocumentation","src":"1971:545:25","text":" @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155BatchReceived}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":3825,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155BatchReceived","nameLocation":"2530:27:25","nodeType":"FunctionDefinition","parameters":{"id":3767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3754,"mutability":"mutable","name":"operator","nameLocation":"2575:8:25","nodeType":"VariableDeclaration","scope":3825,"src":"2567:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3753,"name":"address","nodeType":"ElementaryTypeName","src":"2567:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3756,"mutability":"mutable","name":"from","nameLocation":"2601:4:25","nodeType":"VariableDeclaration","scope":3825,"src":"2593:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3755,"name":"address","nodeType":"ElementaryTypeName","src":"2593:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3758,"mutability":"mutable","name":"to","nameLocation":"2623:2:25","nodeType":"VariableDeclaration","scope":3825,"src":"2615:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3757,"name":"address","nodeType":"ElementaryTypeName","src":"2615:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3761,"mutability":"mutable","name":"ids","nameLocation":"2652:3:25","nodeType":"VariableDeclaration","scope":3825,"src":"2635:20:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3759,"name":"uint256","nodeType":"ElementaryTypeName","src":"2635:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3760,"nodeType":"ArrayTypeName","src":"2635:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3764,"mutability":"mutable","name":"values","nameLocation":"2682:6:25","nodeType":"VariableDeclaration","scope":3825,"src":"2665:23:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3762,"name":"uint256","nodeType":"ElementaryTypeName","src":"2665:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3763,"nodeType":"ArrayTypeName","src":"2665:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3766,"mutability":"mutable","name":"data","nameLocation":"2711:4:25","nodeType":"VariableDeclaration","scope":3825,"src":"2698:17:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3765,"name":"bytes","nodeType":"ElementaryTypeName","src":"2698:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2557:164:25"},"returnParameters":{"id":3768,"nodeType":"ParameterList","parameters":[],"src":"2731:0:25"},"scope":3826,"src":"2521:1026:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":3827,"src":"439:3110:25","usedErrors":[],"usedEvents":[]}],"src":"120:3430:25"},"id":25},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[3904]},"id":3905,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3828,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:26"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":3829,"nodeType":"StructuredDocumentation","src":"132:71:26","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":3904,"linearizedBaseContracts":[3904],"name":"IERC20","nameLocation":"214:6:26","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3830,"nodeType":"StructuredDocumentation","src":"227:158:26","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":3838,"name":"Transfer","nameLocation":"396:8:26","nodeType":"EventDefinition","parameters":{"id":3837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3832,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:26","nodeType":"VariableDeclaration","scope":3838,"src":"405:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3831,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3834,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:26","nodeType":"VariableDeclaration","scope":3838,"src":"427:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3833,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3836,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:26","nodeType":"VariableDeclaration","scope":3838,"src":"447:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3835,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:26"},"src":"390:72:26"},{"anonymous":false,"documentation":{"id":3839,"nodeType":"StructuredDocumentation","src":"468:148:26","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":3847,"name":"Approval","nameLocation":"627:8:26","nodeType":"EventDefinition","parameters":{"id":3846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3841,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:26","nodeType":"VariableDeclaration","scope":3847,"src":"636:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3840,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3843,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:26","nodeType":"VariableDeclaration","scope":3847,"src":"659:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3842,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3845,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:26","nodeType":"VariableDeclaration","scope":3847,"src":"684:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3844,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:26"},"src":"621:78:26"},{"documentation":{"id":3848,"nodeType":"StructuredDocumentation","src":"705:65:26","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":3853,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:26","nodeType":"FunctionDefinition","parameters":{"id":3849,"nodeType":"ParameterList","parameters":[],"src":"795:2:26"},"returnParameters":{"id":3852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3853,"src":"821:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3850,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:26"},"scope":3904,"src":"775:55:26","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3854,"nodeType":"StructuredDocumentation","src":"836:71:26","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":3861,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:26","nodeType":"FunctionDefinition","parameters":{"id":3857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3856,"mutability":"mutable","name":"account","nameLocation":"939:7:26","nodeType":"VariableDeclaration","scope":3861,"src":"931:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3855,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:26"},"returnParameters":{"id":3860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3861,"src":"971:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3858,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:26"},"scope":3904,"src":"912:68:26","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3862,"nodeType":"StructuredDocumentation","src":"986:213:26","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":3871,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:26","nodeType":"FunctionDefinition","parameters":{"id":3867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3864,"mutability":"mutable","name":"to","nameLocation":"1230:2:26","nodeType":"VariableDeclaration","scope":3871,"src":"1222:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3863,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3866,"mutability":"mutable","name":"value","nameLocation":"1242:5:26","nodeType":"VariableDeclaration","scope":3871,"src":"1234:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3865,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:26"},"returnParameters":{"id":3870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3869,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3871,"src":"1267:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3868,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:26"},"scope":3904,"src":"1204:69:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3872,"nodeType":"StructuredDocumentation","src":"1279:264:26","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":3881,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:26","nodeType":"FunctionDefinition","parameters":{"id":3877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3874,"mutability":"mutable","name":"owner","nameLocation":"1575:5:26","nodeType":"VariableDeclaration","scope":3881,"src":"1567:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3873,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3876,"mutability":"mutable","name":"spender","nameLocation":"1590:7:26","nodeType":"VariableDeclaration","scope":3881,"src":"1582:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3875,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:26"},"returnParameters":{"id":3880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3881,"src":"1622:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3878,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:26"},"scope":3904,"src":"1548:83:26","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3882,"nodeType":"StructuredDocumentation","src":"1637:667:26","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":3891,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:26","nodeType":"FunctionDefinition","parameters":{"id":3887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3884,"mutability":"mutable","name":"spender","nameLocation":"2334:7:26","nodeType":"VariableDeclaration","scope":3891,"src":"2326:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3883,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3886,"mutability":"mutable","name":"value","nameLocation":"2351:5:26","nodeType":"VariableDeclaration","scope":3891,"src":"2343:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3885,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:26"},"returnParameters":{"id":3890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3889,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3891,"src":"2376:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3888,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:26"},"scope":3904,"src":"2309:73:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3892,"nodeType":"StructuredDocumentation","src":"2388:297:26","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":3903,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:26","nodeType":"FunctionDefinition","parameters":{"id":3899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3894,"mutability":"mutable","name":"from","nameLocation":"2720:4:26","nodeType":"VariableDeclaration","scope":3903,"src":"2712:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3893,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3896,"mutability":"mutable","name":"to","nameLocation":"2734:2:26","nodeType":"VariableDeclaration","scope":3903,"src":"2726:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3895,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3898,"mutability":"mutable","name":"value","nameLocation":"2746:5:26","nodeType":"VariableDeclaration","scope":3903,"src":"2738:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3897,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:26"},"returnParameters":{"id":3902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3901,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3903,"src":"2771:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3900,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:26"},"scope":3904,"src":"2690:87:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3905,"src":"204:2575:26","usedErrors":[],"usedEvents":[3838,3847]}],"src":"106:2674:26"},"id":26},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"IERC1363":[2612],"IERC20":[3904],"SafeERC20":[4368]},"id":4369,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3906,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:27"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":3908,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4369,"sourceUnit":3905,"src":"141:37:27","symbolAliases":[{"foreign":{"id":3907,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3904,"src":"149:6:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","file":"../../../interfaces/IERC1363.sol","id":3910,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4369,"sourceUnit":2613,"src":"179:58:27","symbolAliases":[{"foreign":{"id":3909,"name":"IERC1363","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"187:8:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":3911,"nodeType":"StructuredDocumentation","src":"239:458:27","text":" @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":4368,"linearizedBaseContracts":[4368],"name":"SafeERC20","nameLocation":"706:9:27","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3912,"nodeType":"StructuredDocumentation","src":"722:65:27","text":" @dev An operation with an ERC-20 token failed."},"errorSelector":"5274afe7","id":3916,"name":"SafeERC20FailedOperation","nameLocation":"798:24:27","nodeType":"ErrorDefinition","parameters":{"id":3915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3914,"mutability":"mutable","name":"token","nameLocation":"831:5:27","nodeType":"VariableDeclaration","scope":3916,"src":"823:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3913,"name":"address","nodeType":"ElementaryTypeName","src":"823:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"822:15:27"},"src":"792:46:27"},{"documentation":{"id":3917,"nodeType":"StructuredDocumentation","src":"844:71:27","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":3925,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"926:32:27","nodeType":"ErrorDefinition","parameters":{"id":3924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3919,"mutability":"mutable","name":"spender","nameLocation":"967:7:27","nodeType":"VariableDeclaration","scope":3925,"src":"959:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3918,"name":"address","nodeType":"ElementaryTypeName","src":"959:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3921,"mutability":"mutable","name":"currentAllowance","nameLocation":"984:16:27","nodeType":"VariableDeclaration","scope":3925,"src":"976:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3920,"name":"uint256","nodeType":"ElementaryTypeName","src":"976:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3923,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1010:17:27","nodeType":"VariableDeclaration","scope":3925,"src":"1002:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3922,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"958:70:27"},"src":"920:109:27"},{"body":{"id":3948,"nodeType":"Block","src":"1291:88:27","statements":[{"expression":{"arguments":[{"id":3937,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"1321:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":3940,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"1343:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}},"id":3941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1349:8:27","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":3871,"src":"1343:14:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":3942,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3931,"src":"1360:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"1364:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3944,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1359:11:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":3938,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1328:3:27","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1332:10:27","memberName":"encodeCall","nodeType":"MemberAccess","src":"1328:14:27","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1328:43:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3936,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"1301:19:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3904_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":3946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1301:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3947,"nodeType":"ExpressionStatement","src":"1301:71:27"}]},"documentation":{"id":3926,"nodeType":"StructuredDocumentation","src":"1035:179:27","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":3949,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1228:12:27","nodeType":"FunctionDefinition","parameters":{"id":3934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3929,"mutability":"mutable","name":"token","nameLocation":"1248:5:27","nodeType":"VariableDeclaration","scope":3949,"src":"1241:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"},"typeName":{"id":3928,"nodeType":"UserDefinedTypeName","pathNode":{"id":3927,"name":"IERC20","nameLocations":["1241:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":3904,"src":"1241:6:27"},"referencedDeclaration":3904,"src":"1241:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3931,"mutability":"mutable","name":"to","nameLocation":"1263:2:27","nodeType":"VariableDeclaration","scope":3949,"src":"1255:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3930,"name":"address","nodeType":"ElementaryTypeName","src":"1255:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3933,"mutability":"mutable","name":"value","nameLocation":"1275:5:27","nodeType":"VariableDeclaration","scope":3949,"src":"1267:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3932,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1240:41:27"},"returnParameters":{"id":3935,"nodeType":"ParameterList","parameters":[],"src":"1291:0:27"},"scope":4368,"src":"1219:160:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3975,"nodeType":"Block","src":"1708:98:27","statements":[{"expression":{"arguments":[{"id":3963,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3953,"src":"1738:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":3966,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3953,"src":"1760:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}},"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:12:27","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":3903,"src":"1760:18:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":3968,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"1781:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3969,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"1787:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"1791:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3971,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1780:17:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":3964,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1745:3:27","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1749:10:27","memberName":"encodeCall","nodeType":"MemberAccess","src":"1745:14:27","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1745:53:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3962,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"1718:19:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3904_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":3973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:81:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3974,"nodeType":"ExpressionStatement","src":"1718:81:27"}]},"documentation":{"id":3950,"nodeType":"StructuredDocumentation","src":"1385:228:27","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":3976,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1627:16:27","nodeType":"FunctionDefinition","parameters":{"id":3960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3953,"mutability":"mutable","name":"token","nameLocation":"1651:5:27","nodeType":"VariableDeclaration","scope":3976,"src":"1644:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"},"typeName":{"id":3952,"nodeType":"UserDefinedTypeName","pathNode":{"id":3951,"name":"IERC20","nameLocations":["1644:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":3904,"src":"1644:6:27"},"referencedDeclaration":3904,"src":"1644:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3955,"mutability":"mutable","name":"from","nameLocation":"1666:4:27","nodeType":"VariableDeclaration","scope":3976,"src":"1658:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3954,"name":"address","nodeType":"ElementaryTypeName","src":"1658:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3957,"mutability":"mutable","name":"to","nameLocation":"1680:2:27","nodeType":"VariableDeclaration","scope":3976,"src":"1672:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3956,"name":"address","nodeType":"ElementaryTypeName","src":"1672:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3959,"mutability":"mutable","name":"value","nameLocation":"1692:5:27","nodeType":"VariableDeclaration","scope":3976,"src":"1684:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3958,"name":"uint256","nodeType":"ElementaryTypeName","src":"1684:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1643:55:27"},"returnParameters":{"id":3961,"nodeType":"ParameterList","parameters":[],"src":"1708:0:27"},"scope":4368,"src":"1618:188:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4001,"nodeType":"Block","src":"2033:99:27","statements":[{"expression":{"arguments":[{"id":3990,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"2074:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":3993,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"2096:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}},"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2102:8:27","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":3871,"src":"2096:14:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":3995,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"2113:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"2117:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3997,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2112:11:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":3991,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2081:3:27","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2085:10:27","memberName":"encodeCall","nodeType":"MemberAccess","src":"2081:14:27","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2081:43:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3989,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"2050:23:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3904_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2050:75:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3988,"id":4000,"nodeType":"Return","src":"2043:82:27"}]},"documentation":{"id":3977,"nodeType":"StructuredDocumentation","src":"1812:126:27","text":" @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."},"id":4002,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransfer","nameLocation":"1952:15:27","nodeType":"FunctionDefinition","parameters":{"id":3985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3980,"mutability":"mutable","name":"token","nameLocation":"1975:5:27","nodeType":"VariableDeclaration","scope":4002,"src":"1968:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"},"typeName":{"id":3979,"nodeType":"UserDefinedTypeName","pathNode":{"id":3978,"name":"IERC20","nameLocations":["1968:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":3904,"src":"1968:6:27"},"referencedDeclaration":3904,"src":"1968:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3982,"mutability":"mutable","name":"to","nameLocation":"1990:2:27","nodeType":"VariableDeclaration","scope":4002,"src":"1982:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3981,"name":"address","nodeType":"ElementaryTypeName","src":"1982:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3984,"mutability":"mutable","name":"value","nameLocation":"2002:5:27","nodeType":"VariableDeclaration","scope":4002,"src":"1994:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3983,"name":"uint256","nodeType":"ElementaryTypeName","src":"1994:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1967:41:27"},"returnParameters":{"id":3988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3987,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4002,"src":"2027:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3986,"name":"bool","nodeType":"ElementaryTypeName","src":"2027:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2026:6:27"},"scope":4368,"src":"1943:189:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4030,"nodeType":"Block","src":"2381:109:27","statements":[{"expression":{"arguments":[{"id":4018,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"2422:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":4021,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"2444:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}},"id":4022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2450:12:27","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":3903,"src":"2444:18:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":4023,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"2465:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4024,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4010,"src":"2471:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4025,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"2475:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4026,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2464:17:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":4019,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2429:3:27","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2433:10:27","memberName":"encodeCall","nodeType":"MemberAccess","src":"2429:14:27","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2429:53:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4017,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"2398:23:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3904_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:85:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4016,"id":4029,"nodeType":"Return","src":"2391:92:27"}]},"documentation":{"id":4003,"nodeType":"StructuredDocumentation","src":"2138:130:27","text":" @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."},"id":4031,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransferFrom","nameLocation":"2282:19:27","nodeType":"FunctionDefinition","parameters":{"id":4013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4006,"mutability":"mutable","name":"token","nameLocation":"2309:5:27","nodeType":"VariableDeclaration","scope":4031,"src":"2302:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"},"typeName":{"id":4005,"nodeType":"UserDefinedTypeName","pathNode":{"id":4004,"name":"IERC20","nameLocations":["2302:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":3904,"src":"2302:6:27"},"referencedDeclaration":3904,"src":"2302:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4008,"mutability":"mutable","name":"from","nameLocation":"2324:4:27","nodeType":"VariableDeclaration","scope":4031,"src":"2316:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4007,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4010,"mutability":"mutable","name":"to","nameLocation":"2338:2:27","nodeType":"VariableDeclaration","scope":4031,"src":"2330:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4009,"name":"address","nodeType":"ElementaryTypeName","src":"2330:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4012,"mutability":"mutable","name":"value","nameLocation":"2350:5:27","nodeType":"VariableDeclaration","scope":4031,"src":"2342:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4011,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:55:27"},"returnParameters":{"id":4016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4015,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4031,"src":"2375:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4014,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:27"},"scope":4368,"src":"2273:217:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4061,"nodeType":"Block","src":"3232:139:27","statements":[{"assignments":[4043],"declarations":[{"constant":false,"id":4043,"mutability":"mutable","name":"oldAllowance","nameLocation":"3250:12:27","nodeType":"VariableDeclaration","scope":4061,"src":"3242:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4042,"name":"uint256","nodeType":"ElementaryTypeName","src":"3242:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4052,"initialValue":{"arguments":[{"arguments":[{"id":4048,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3289:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$4368","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$4368","typeString":"library SafeERC20"}],"id":4047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3281:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4046,"name":"address","nodeType":"ElementaryTypeName","src":"3281:7:27","typeDescriptions":{}}},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3281:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4050,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"3296:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4044,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"3265:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3271:9:27","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":3881,"src":"3265:15:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:39:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3242:62:27"},{"expression":{"arguments":[{"id":4054,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"3327:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}},{"id":4055,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"3334:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4056,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4043,"src":"3343:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"3358:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3343:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4053,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4152,"src":"3314:12:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3904_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3314:50:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4060,"nodeType":"ExpressionStatement","src":"3314:50:27"}]},"documentation":{"id":4032,"nodeType":"StructuredDocumentation","src":"2496:645:27","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":4062,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"3155:21:27","nodeType":"FunctionDefinition","parameters":{"id":4040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4035,"mutability":"mutable","name":"token","nameLocation":"3184:5:27","nodeType":"VariableDeclaration","scope":4062,"src":"3177:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"},"typeName":{"id":4034,"nodeType":"UserDefinedTypeName","pathNode":{"id":4033,"name":"IERC20","nameLocations":["3177:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":3904,"src":"3177:6:27"},"referencedDeclaration":3904,"src":"3177:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4037,"mutability":"mutable","name":"spender","nameLocation":"3199:7:27","nodeType":"VariableDeclaration","scope":4062,"src":"3191:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4036,"name":"address","nodeType":"ElementaryTypeName","src":"3191:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4039,"mutability":"mutable","name":"value","nameLocation":"3216:5:27","nodeType":"VariableDeclaration","scope":4062,"src":"3208:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4038,"name":"uint256","nodeType":"ElementaryTypeName","src":"3208:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3176:46:27"},"returnParameters":{"id":4041,"nodeType":"ParameterList","parameters":[],"src":"3232:0:27"},"scope":4368,"src":"3146:225:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4104,"nodeType":"Block","src":"4137:370:27","statements":[{"id":4103,"nodeType":"UncheckedBlock","src":"4147:354:27","statements":[{"assignments":[4074],"declarations":[{"constant":false,"id":4074,"mutability":"mutable","name":"currentAllowance","nameLocation":"4179:16:27","nodeType":"VariableDeclaration","scope":4103,"src":"4171:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4073,"name":"uint256","nodeType":"ElementaryTypeName","src":"4171:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4083,"initialValue":{"arguments":[{"arguments":[{"id":4079,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4222:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$4368","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$4368","typeString":"library SafeERC20"}],"id":4078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4214:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4077,"name":"address","nodeType":"ElementaryTypeName","src":"4214:7:27","typeDescriptions":{}}},"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4081,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"4229:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4075,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"4198:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4204:9:27","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":3881,"src":"4198:15:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":4082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4198:39:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4171:66:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4084,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4074,"src":"4255:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4085,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"4274:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4255:36:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4094,"nodeType":"IfStatement","src":"4251:160:27","trueBody":{"id":4093,"nodeType":"Block","src":"4293:118:27","statements":[{"errorCall":{"arguments":[{"id":4088,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"4351:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4089,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4074,"src":"4360:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4090,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"4378:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4087,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"4318:32:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4318:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4092,"nodeType":"RevertStatement","src":"4311:85:27"}]}},{"expression":{"arguments":[{"id":4096,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"4437:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}},{"id":4097,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"4444:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4098,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4074,"src":"4453:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4099,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"4472:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4453:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4095,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4152,"src":"4424:12:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3904_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4424:66:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4102,"nodeType":"ExpressionStatement","src":"4424:66:27"}]}]},"documentation":{"id":4063,"nodeType":"StructuredDocumentation","src":"3377:657:27","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":4105,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"4048:21:27","nodeType":"FunctionDefinition","parameters":{"id":4071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4066,"mutability":"mutable","name":"token","nameLocation":"4077:5:27","nodeType":"VariableDeclaration","scope":4105,"src":"4070:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"},"typeName":{"id":4065,"nodeType":"UserDefinedTypeName","pathNode":{"id":4064,"name":"IERC20","nameLocations":["4070:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":3904,"src":"4070:6:27"},"referencedDeclaration":3904,"src":"4070:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4068,"mutability":"mutable","name":"spender","nameLocation":"4092:7:27","nodeType":"VariableDeclaration","scope":4105,"src":"4084:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4067,"name":"address","nodeType":"ElementaryTypeName","src":"4084:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4070,"mutability":"mutable","name":"requestedDecrease","nameLocation":"4109:17:27","nodeType":"VariableDeclaration","scope":4105,"src":"4101:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4069,"name":"uint256","nodeType":"ElementaryTypeName","src":"4101:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4069:58:27"},"returnParameters":{"id":4072,"nodeType":"ParameterList","parameters":[],"src":"4137:0:27"},"scope":4368,"src":"4039:468:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4151,"nodeType":"Block","src":"5161:303:27","statements":[{"assignments":[4117],"declarations":[{"constant":false,"id":4117,"mutability":"mutable","name":"approvalCall","nameLocation":"5184:12:27","nodeType":"VariableDeclaration","scope":4151,"src":"5171:25:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4116,"name":"bytes","nodeType":"ElementaryTypeName","src":"5171:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4126,"initialValue":{"arguments":[{"expression":{"id":4120,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"5214:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}},"id":4121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5220:7:27","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":3891,"src":"5214:13:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":4122,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"5230:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4113,"src":"5239:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4124,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5229:16:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":4118,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5199:3:27","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5203:10:27","memberName":"encodeCall","nodeType":"MemberAccess","src":"5199:14:27","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5199:47:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5171:75:27"},{"condition":{"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5261:45:27","subExpression":{"arguments":[{"id":4128,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"5286:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}},{"id":4129,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"5293:12:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4127,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"5262:23:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3904_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":4130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5262:44:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4150,"nodeType":"IfStatement","src":"5257:201:27","trueBody":{"id":4149,"nodeType":"Block","src":"5308:150:27","statements":[{"expression":{"arguments":[{"id":4133,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"5342:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":4136,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"5364:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}},"id":4137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5370:7:27","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":3891,"src":"5364:13:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":4138,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"5380:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":4139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5389:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4140,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5379:12:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":4134,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5349:3:27","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5353:10:27","memberName":"encodeCall","nodeType":"MemberAccess","src":"5349:14:27","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5349:43:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4132,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"5322:19:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3904_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5322:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4143,"nodeType":"ExpressionStatement","src":"5322:71:27"},{"expression":{"arguments":[{"id":4145,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"5427:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}},{"id":4146,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"5434:12:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4144,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"5407:19:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3904_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":4147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5407:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4148,"nodeType":"ExpressionStatement","src":"5407:40:27"}]}}]},"documentation":{"id":4106,"nodeType":"StructuredDocumentation","src":"4513:566:27","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."},"id":4152,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"5093:12:27","nodeType":"FunctionDefinition","parameters":{"id":4114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4109,"mutability":"mutable","name":"token","nameLocation":"5113:5:27","nodeType":"VariableDeclaration","scope":4152,"src":"5106:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"},"typeName":{"id":4108,"nodeType":"UserDefinedTypeName","pathNode":{"id":4107,"name":"IERC20","nameLocations":["5106:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":3904,"src":"5106:6:27"},"referencedDeclaration":3904,"src":"5106:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4111,"mutability":"mutable","name":"spender","nameLocation":"5128:7:27","nodeType":"VariableDeclaration","scope":4152,"src":"5120:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4110,"name":"address","nodeType":"ElementaryTypeName","src":"5120:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4113,"mutability":"mutable","name":"value","nameLocation":"5145:5:27","nodeType":"VariableDeclaration","scope":4152,"src":"5137:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4112,"name":"uint256","nodeType":"ElementaryTypeName","src":"5137:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5105:46:27"},"returnParameters":{"id":4115,"nodeType":"ParameterList","parameters":[],"src":"5161:0:27"},"scope":4368,"src":"5084:380:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4194,"nodeType":"Block","src":"5911:219:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":4165,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"5925:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5928:4:27","memberName":"code","nodeType":"MemberAccess","src":"5925:7:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5933:6:27","memberName":"length","nodeType":"MemberAccess","src":"5925:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5943:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5925:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":4183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6011:39:27","subExpression":{"arguments":[{"id":4179,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"6034:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"6038:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4181,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"6045:4:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4177,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4156,"src":"6012:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2612","typeString":"contract IERC1363"}},"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6018:15:27","memberName":"transferAndCall","nodeType":"MemberAccess","referencedDeclaration":2563,"src":"6012:21:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6012:38:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4192,"nodeType":"IfStatement","src":"6007:117:27","trueBody":{"id":4191,"nodeType":"Block","src":"6052:72:27","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":4187,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4156,"src":"6106:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2612","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$2612","typeString":"contract IERC1363"}],"id":4186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6098:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4185,"name":"address","nodeType":"ElementaryTypeName","src":"6098:7:27","typeDescriptions":{}}},"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6098:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4184,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"6073:24:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6073:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4190,"nodeType":"RevertStatement","src":"6066:47:27"}]}},"id":4193,"nodeType":"IfStatement","src":"5921:203:27","trueBody":{"id":4176,"nodeType":"Block","src":"5946:55:27","statements":[{"expression":{"arguments":[{"id":4171,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4156,"src":"5973:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2612","typeString":"contract IERC1363"}},{"id":4172,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"5980:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"5984:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$2612","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4170,"name":"safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"5960:12:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3904_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":4174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5960:30:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4175,"nodeType":"ExpressionStatement","src":"5960:30:27"}]}}]},"documentation":{"id":4153,"nodeType":"StructuredDocumentation","src":"5470:333:27","text":" @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":4195,"implemented":true,"kind":"function","modifiers":[],"name":"transferAndCallRelaxed","nameLocation":"5817:22:27","nodeType":"FunctionDefinition","parameters":{"id":4163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4156,"mutability":"mutable","name":"token","nameLocation":"5849:5:27","nodeType":"VariableDeclaration","scope":4195,"src":"5840:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2612","typeString":"contract IERC1363"},"typeName":{"id":4155,"nodeType":"UserDefinedTypeName","pathNode":{"id":4154,"name":"IERC1363","nameLocations":["5840:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":2612,"src":"5840:8:27"},"referencedDeclaration":2612,"src":"5840:8:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2612","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":4158,"mutability":"mutable","name":"to","nameLocation":"5864:2:27","nodeType":"VariableDeclaration","scope":4195,"src":"5856:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4157,"name":"address","nodeType":"ElementaryTypeName","src":"5856:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4160,"mutability":"mutable","name":"value","nameLocation":"5876:5:27","nodeType":"VariableDeclaration","scope":4195,"src":"5868:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4159,"name":"uint256","nodeType":"ElementaryTypeName","src":"5868:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4162,"mutability":"mutable","name":"data","nameLocation":"5896:4:27","nodeType":"VariableDeclaration","scope":4195,"src":"5883:17:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4161,"name":"bytes","nodeType":"ElementaryTypeName","src":"5883:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5839:62:27"},"returnParameters":{"id":4164,"nodeType":"ParameterList","parameters":[],"src":"5911:0:27"},"scope":4368,"src":"5808:322:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4241,"nodeType":"Block","src":"6649:239:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":4210,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"6663:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6666:4:27","memberName":"code","nodeType":"MemberAccess","src":"6663:7:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6671:6:27","memberName":"length","nodeType":"MemberAccess","src":"6663:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6681:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6663:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":4230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6759:49:27","subExpression":{"arguments":[{"id":4225,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4201,"src":"6786:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4226,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"6792:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"6796:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4228,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4207,"src":"6803:4:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4223,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"6760:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2612","typeString":"contract IERC1363"}},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6766:19:27","memberName":"transferFromAndCall","nodeType":"MemberAccess","referencedDeclaration":2589,"src":"6760:25:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) external returns (bool)"}},"id":4229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6760:48:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4239,"nodeType":"IfStatement","src":"6755:127:27","trueBody":{"id":4238,"nodeType":"Block","src":"6810:72:27","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":4234,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"6864:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2612","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$2612","typeString":"contract IERC1363"}],"id":4233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6856:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4232,"name":"address","nodeType":"ElementaryTypeName","src":"6856:7:27","typeDescriptions":{}}},"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6856:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4231,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"6831:24:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6831:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4237,"nodeType":"RevertStatement","src":"6824:47:27"}]}},"id":4240,"nodeType":"IfStatement","src":"6659:223:27","trueBody":{"id":4222,"nodeType":"Block","src":"6684:65:27","statements":[{"expression":{"arguments":[{"id":4216,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"6715:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2612","typeString":"contract IERC1363"}},{"id":4217,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4201,"src":"6722:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4218,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"6728:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4219,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"6732:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$2612","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4215,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"6698:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3904_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":4220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6698:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4221,"nodeType":"ExpressionStatement","src":"6698:40:27"}]}}]},"documentation":{"id":4196,"nodeType":"StructuredDocumentation","src":"6136:341:27","text":" @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":4242,"implemented":true,"kind":"function","modifiers":[],"name":"transferFromAndCallRelaxed","nameLocation":"6491:26:27","nodeType":"FunctionDefinition","parameters":{"id":4208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4199,"mutability":"mutable","name":"token","nameLocation":"6536:5:27","nodeType":"VariableDeclaration","scope":4242,"src":"6527:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2612","typeString":"contract IERC1363"},"typeName":{"id":4198,"nodeType":"UserDefinedTypeName","pathNode":{"id":4197,"name":"IERC1363","nameLocations":["6527:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":2612,"src":"6527:8:27"},"referencedDeclaration":2612,"src":"6527:8:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2612","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":4201,"mutability":"mutable","name":"from","nameLocation":"6559:4:27","nodeType":"VariableDeclaration","scope":4242,"src":"6551:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4200,"name":"address","nodeType":"ElementaryTypeName","src":"6551:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4203,"mutability":"mutable","name":"to","nameLocation":"6581:2:27","nodeType":"VariableDeclaration","scope":4242,"src":"6573:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4202,"name":"address","nodeType":"ElementaryTypeName","src":"6573:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4205,"mutability":"mutable","name":"value","nameLocation":"6601:5:27","nodeType":"VariableDeclaration","scope":4242,"src":"6593:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4204,"name":"uint256","nodeType":"ElementaryTypeName","src":"6593:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4207,"mutability":"mutable","name":"data","nameLocation":"6629:4:27","nodeType":"VariableDeclaration","scope":4242,"src":"6616:17:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4206,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6517:122:27"},"returnParameters":{"id":4209,"nodeType":"ParameterList","parameters":[],"src":"6649:0:27"},"scope":4368,"src":"6482:406:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4284,"nodeType":"Block","src":"7655:218:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":4255,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"7669:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7672:4:27","memberName":"code","nodeType":"MemberAccess","src":"7669:7:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7677:6:27","memberName":"length","nodeType":"MemberAccess","src":"7669:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7687:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7669:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":4273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7755:38:27","subExpression":{"arguments":[{"id":4269,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"7777:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"7781:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4271,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4252,"src":"7788:4:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4267,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4246,"src":"7756:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2612","typeString":"contract IERC1363"}},"id":4268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7762:14:27","memberName":"approveAndCall","nodeType":"MemberAccess","referencedDeclaration":2611,"src":"7756:20:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":4272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7756:37:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4282,"nodeType":"IfStatement","src":"7751:116:27","trueBody":{"id":4281,"nodeType":"Block","src":"7795:72:27","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":4277,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4246,"src":"7849:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2612","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$2612","typeString":"contract IERC1363"}],"id":4276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7841:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4275,"name":"address","nodeType":"ElementaryTypeName","src":"7841:7:27","typeDescriptions":{}}},"id":4278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7841:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4274,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"7816:24:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":4279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7816:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4280,"nodeType":"RevertStatement","src":"7809:47:27"}]}},"id":4283,"nodeType":"IfStatement","src":"7665:202:27","trueBody":{"id":4266,"nodeType":"Block","src":"7690:55:27","statements":[{"expression":{"arguments":[{"id":4261,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4246,"src":"7717:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2612","typeString":"contract IERC1363"}},{"id":4262,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"7724:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"7728:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$2612","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4260,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4152,"src":"7704:12:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3904_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7704:30:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4265,"nodeType":"ExpressionStatement","src":"7704:30:27"}]}}]},"documentation":{"id":4243,"nodeType":"StructuredDocumentation","src":"6894:654:27","text":" @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."},"id":4285,"implemented":true,"kind":"function","modifiers":[],"name":"approveAndCallRelaxed","nameLocation":"7562:21:27","nodeType":"FunctionDefinition","parameters":{"id":4253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4246,"mutability":"mutable","name":"token","nameLocation":"7593:5:27","nodeType":"VariableDeclaration","scope":4285,"src":"7584:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2612","typeString":"contract IERC1363"},"typeName":{"id":4245,"nodeType":"UserDefinedTypeName","pathNode":{"id":4244,"name":"IERC1363","nameLocations":["7584:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":2612,"src":"7584:8:27"},"referencedDeclaration":2612,"src":"7584:8:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$2612","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":4248,"mutability":"mutable","name":"to","nameLocation":"7608:2:27","nodeType":"VariableDeclaration","scope":4285,"src":"7600:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4247,"name":"address","nodeType":"ElementaryTypeName","src":"7600:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4250,"mutability":"mutable","name":"value","nameLocation":"7620:5:27","nodeType":"VariableDeclaration","scope":4285,"src":"7612:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4249,"name":"uint256","nodeType":"ElementaryTypeName","src":"7612:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4252,"mutability":"mutable","name":"data","nameLocation":"7640:4:27","nodeType":"VariableDeclaration","scope":4285,"src":"7627:17:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4251,"name":"bytes","nodeType":"ElementaryTypeName","src":"7627:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7583:62:27"},"returnParameters":{"id":4254,"nodeType":"ParameterList","parameters":[],"src":"7655:0:27"},"scope":4368,"src":"7553:320:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4325,"nodeType":"Block","src":"8440:650:27","statements":[{"assignments":[4295],"declarations":[{"constant":false,"id":4295,"mutability":"mutable","name":"returnSize","nameLocation":"8458:10:27","nodeType":"VariableDeclaration","scope":4325,"src":"8450:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4294,"name":"uint256","nodeType":"ElementaryTypeName","src":"8450:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4296,"nodeType":"VariableDeclarationStatement","src":"8450:18:27"},{"assignments":[4298],"declarations":[{"constant":false,"id":4298,"mutability":"mutable","name":"returnValue","nameLocation":"8486:11:27","nodeType":"VariableDeclaration","scope":4325,"src":"8478:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4297,"name":"uint256","nodeType":"ElementaryTypeName","src":"8478:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4299,"nodeType":"VariableDeclarationStatement","src":"8478:19:27"},{"AST":{"nativeSrc":"8532:396:27","nodeType":"YulBlock","src":"8532:396:27","statements":[{"nativeSrc":"8546:75:27","nodeType":"YulVariableDeclaration","src":"8546:75:27","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"8566:3:27","nodeType":"YulIdentifier","src":"8566:3:27"},"nativeSrc":"8566:5:27","nodeType":"YulFunctionCall","src":"8566:5:27"},{"name":"token","nativeSrc":"8573:5:27","nodeType":"YulIdentifier","src":"8573:5:27"},{"kind":"number","nativeSrc":"8580:1:27","nodeType":"YulLiteral","src":"8580:1:27","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"8587:4:27","nodeType":"YulIdentifier","src":"8587:4:27"},{"kind":"number","nativeSrc":"8593:4:27","nodeType":"YulLiteral","src":"8593:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8583:3:27","nodeType":"YulIdentifier","src":"8583:3:27"},"nativeSrc":"8583:15:27","nodeType":"YulFunctionCall","src":"8583:15:27"},{"arguments":[{"name":"data","nativeSrc":"8606:4:27","nodeType":"YulIdentifier","src":"8606:4:27"}],"functionName":{"name":"mload","nativeSrc":"8600:5:27","nodeType":"YulIdentifier","src":"8600:5:27"},"nativeSrc":"8600:11:27","nodeType":"YulFunctionCall","src":"8600:11:27"},{"kind":"number","nativeSrc":"8613:1:27","nodeType":"YulLiteral","src":"8613:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"8616:4:27","nodeType":"YulLiteral","src":"8616:4:27","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"8561:4:27","nodeType":"YulIdentifier","src":"8561:4:27"},"nativeSrc":"8561:60:27","nodeType":"YulFunctionCall","src":"8561:60:27"},"variables":[{"name":"success","nativeSrc":"8550:7:27","nodeType":"YulTypedName","src":"8550:7:27","type":""}]},{"body":{"nativeSrc":"8682:157:27","nodeType":"YulBlock","src":"8682:157:27","statements":[{"nativeSrc":"8700:22:27","nodeType":"YulVariableDeclaration","src":"8700:22:27","value":{"arguments":[{"kind":"number","nativeSrc":"8717:4:27","nodeType":"YulLiteral","src":"8717:4:27","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"8711:5:27","nodeType":"YulIdentifier","src":"8711:5:27"},"nativeSrc":"8711:11:27","nodeType":"YulFunctionCall","src":"8711:11:27"},"variables":[{"name":"ptr","nativeSrc":"8704:3:27","nodeType":"YulTypedName","src":"8704:3:27","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8754:3:27","nodeType":"YulIdentifier","src":"8754:3:27"},{"kind":"number","nativeSrc":"8759:1:27","nodeType":"YulLiteral","src":"8759:1:27","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8762:14:27","nodeType":"YulIdentifier","src":"8762:14:27"},"nativeSrc":"8762:16:27","nodeType":"YulFunctionCall","src":"8762:16:27"}],"functionName":{"name":"returndatacopy","nativeSrc":"8739:14:27","nodeType":"YulIdentifier","src":"8739:14:27"},"nativeSrc":"8739:40:27","nodeType":"YulFunctionCall","src":"8739:40:27"},"nativeSrc":"8739:40:27","nodeType":"YulExpressionStatement","src":"8739:40:27"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8803:3:27","nodeType":"YulIdentifier","src":"8803:3:27"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8808:14:27","nodeType":"YulIdentifier","src":"8808:14:27"},"nativeSrc":"8808:16:27","nodeType":"YulFunctionCall","src":"8808:16:27"}],"functionName":{"name":"revert","nativeSrc":"8796:6:27","nodeType":"YulIdentifier","src":"8796:6:27"},"nativeSrc":"8796:29:27","nodeType":"YulFunctionCall","src":"8796:29:27"},"nativeSrc":"8796:29:27","nodeType":"YulExpressionStatement","src":"8796:29:27"}]},"condition":{"arguments":[{"name":"success","nativeSrc":"8673:7:27","nodeType":"YulIdentifier","src":"8673:7:27"}],"functionName":{"name":"iszero","nativeSrc":"8666:6:27","nodeType":"YulIdentifier","src":"8666:6:27"},"nativeSrc":"8666:15:27","nodeType":"YulFunctionCall","src":"8666:15:27"},"nativeSrc":"8663:176:27","nodeType":"YulIf","src":"8663:176:27"},{"nativeSrc":"8852:30:27","nodeType":"YulAssignment","src":"8852:30:27","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8866:14:27","nodeType":"YulIdentifier","src":"8866:14:27"},"nativeSrc":"8866:16:27","nodeType":"YulFunctionCall","src":"8866:16:27"},"variableNames":[{"name":"returnSize","nativeSrc":"8852:10:27","nodeType":"YulIdentifier","src":"8852:10:27"}]},{"nativeSrc":"8895:23:27","nodeType":"YulAssignment","src":"8895:23:27","value":{"arguments":[{"kind":"number","nativeSrc":"8916:1:27","nodeType":"YulLiteral","src":"8916:1:27","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"8910:5:27","nodeType":"YulIdentifier","src":"8910:5:27"},"nativeSrc":"8910:8:27","nodeType":"YulFunctionCall","src":"8910:8:27"},"variableNames":[{"name":"returnValue","nativeSrc":"8895:11:27","nodeType":"YulIdentifier","src":"8895:11:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4291,"isOffset":false,"isSlot":false,"src":"8587:4:27","valueSize":1},{"declaration":4291,"isOffset":false,"isSlot":false,"src":"8606:4:27","valueSize":1},{"declaration":4295,"isOffset":false,"isSlot":false,"src":"8852:10:27","valueSize":1},{"declaration":4298,"isOffset":false,"isSlot":false,"src":"8895:11:27","valueSize":1},{"declaration":4289,"isOffset":false,"isSlot":false,"src":"8573:5:27","valueSize":1}],"flags":["memory-safe"],"id":4300,"nodeType":"InlineAssembly","src":"8507:421:27"},{"condition":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4301,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4295,"src":"8942:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8956:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8942:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4312,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"8994:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9009:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8994:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8942:68:27","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":4306,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4289,"src":"8968:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}],"id":4305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8960:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4304,"name":"address","nodeType":"ElementaryTypeName","src":"8960:7:27","typeDescriptions":{}}},"id":4307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8960:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8975:4:27","memberName":"code","nodeType":"MemberAccess","src":"8960:19:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8980:6:27","memberName":"length","nodeType":"MemberAccess","src":"8960:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8960:31:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4324,"nodeType":"IfStatement","src":"8938:146:27","trueBody":{"id":4323,"nodeType":"Block","src":"9012:72:27","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":4319,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4289,"src":"9066:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}],"id":4318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9058:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4317,"name":"address","nodeType":"ElementaryTypeName","src":"9058:7:27","typeDescriptions":{}}},"id":4320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9058:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4316,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"9033:24:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":4321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9033:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4322,"nodeType":"RevertStatement","src":"9026:47:27"}]}}]},"documentation":{"id":4286,"nodeType":"StructuredDocumentation","src":"7879:486:27","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."},"id":4326,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"8379:19:27","nodeType":"FunctionDefinition","parameters":{"id":4292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4289,"mutability":"mutable","name":"token","nameLocation":"8406:5:27","nodeType":"VariableDeclaration","scope":4326,"src":"8399:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"},"typeName":{"id":4288,"nodeType":"UserDefinedTypeName","pathNode":{"id":4287,"name":"IERC20","nameLocations":["8399:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":3904,"src":"8399:6:27"},"referencedDeclaration":3904,"src":"8399:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4291,"mutability":"mutable","name":"data","nameLocation":"8426:4:27","nodeType":"VariableDeclaration","scope":4326,"src":"8413:17:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4290,"name":"bytes","nodeType":"ElementaryTypeName","src":"8413:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8398:33:27"},"returnParameters":{"id":4293,"nodeType":"ParameterList","parameters":[],"src":"8440:0:27"},"scope":4368,"src":"8370:720:27","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4366,"nodeType":"Block","src":"9681:391:27","statements":[{"assignments":[4338],"declarations":[{"constant":false,"id":4338,"mutability":"mutable","name":"success","nameLocation":"9696:7:27","nodeType":"VariableDeclaration","scope":4366,"src":"9691:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4337,"name":"bool","nodeType":"ElementaryTypeName","src":"9691:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4339,"nodeType":"VariableDeclarationStatement","src":"9691:12:27"},{"assignments":[4341],"declarations":[{"constant":false,"id":4341,"mutability":"mutable","name":"returnSize","nameLocation":"9721:10:27","nodeType":"VariableDeclaration","scope":4366,"src":"9713:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4340,"name":"uint256","nodeType":"ElementaryTypeName","src":"9713:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4342,"nodeType":"VariableDeclarationStatement","src":"9713:18:27"},{"assignments":[4344],"declarations":[{"constant":false,"id":4344,"mutability":"mutable","name":"returnValue","nameLocation":"9749:11:27","nodeType":"VariableDeclaration","scope":4366,"src":"9741:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4343,"name":"uint256","nodeType":"ElementaryTypeName","src":"9741:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4345,"nodeType":"VariableDeclarationStatement","src":"9741:19:27"},{"AST":{"nativeSrc":"9795:174:27","nodeType":"YulBlock","src":"9795:174:27","statements":[{"nativeSrc":"9809:71:27","nodeType":"YulAssignment","src":"9809:71:27","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"9825:3:27","nodeType":"YulIdentifier","src":"9825:3:27"},"nativeSrc":"9825:5:27","nodeType":"YulFunctionCall","src":"9825:5:27"},{"name":"token","nativeSrc":"9832:5:27","nodeType":"YulIdentifier","src":"9832:5:27"},{"kind":"number","nativeSrc":"9839:1:27","nodeType":"YulLiteral","src":"9839:1:27","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"9846:4:27","nodeType":"YulIdentifier","src":"9846:4:27"},{"kind":"number","nativeSrc":"9852:4:27","nodeType":"YulLiteral","src":"9852:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9842:3:27","nodeType":"YulIdentifier","src":"9842:3:27"},"nativeSrc":"9842:15:27","nodeType":"YulFunctionCall","src":"9842:15:27"},{"arguments":[{"name":"data","nativeSrc":"9865:4:27","nodeType":"YulIdentifier","src":"9865:4:27"}],"functionName":{"name":"mload","nativeSrc":"9859:5:27","nodeType":"YulIdentifier","src":"9859:5:27"},"nativeSrc":"9859:11:27","nodeType":"YulFunctionCall","src":"9859:11:27"},{"kind":"number","nativeSrc":"9872:1:27","nodeType":"YulLiteral","src":"9872:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"9875:4:27","nodeType":"YulLiteral","src":"9875:4:27","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"9820:4:27","nodeType":"YulIdentifier","src":"9820:4:27"},"nativeSrc":"9820:60:27","nodeType":"YulFunctionCall","src":"9820:60:27"},"variableNames":[{"name":"success","nativeSrc":"9809:7:27","nodeType":"YulIdentifier","src":"9809:7:27"}]},{"nativeSrc":"9893:30:27","nodeType":"YulAssignment","src":"9893:30:27","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"9907:14:27","nodeType":"YulIdentifier","src":"9907:14:27"},"nativeSrc":"9907:16:27","nodeType":"YulFunctionCall","src":"9907:16:27"},"variableNames":[{"name":"returnSize","nativeSrc":"9893:10:27","nodeType":"YulIdentifier","src":"9893:10:27"}]},{"nativeSrc":"9936:23:27","nodeType":"YulAssignment","src":"9936:23:27","value":{"arguments":[{"kind":"number","nativeSrc":"9957:1:27","nodeType":"YulLiteral","src":"9957:1:27","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"9951:5:27","nodeType":"YulIdentifier","src":"9951:5:27"},"nativeSrc":"9951:8:27","nodeType":"YulFunctionCall","src":"9951:8:27"},"variableNames":[{"name":"returnValue","nativeSrc":"9936:11:27","nodeType":"YulIdentifier","src":"9936:11:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4332,"isOffset":false,"isSlot":false,"src":"9846:4:27","valueSize":1},{"declaration":4332,"isOffset":false,"isSlot":false,"src":"9865:4:27","valueSize":1},{"declaration":4341,"isOffset":false,"isSlot":false,"src":"9893:10:27","valueSize":1},{"declaration":4344,"isOffset":false,"isSlot":false,"src":"9936:11:27","valueSize":1},{"declaration":4338,"isOffset":false,"isSlot":false,"src":"9809:7:27","valueSize":1},{"declaration":4330,"isOffset":false,"isSlot":false,"src":"9832:5:27","valueSize":1}],"flags":["memory-safe"],"id":4346,"nodeType":"InlineAssembly","src":"9770:199:27"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4347,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"9985:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4348,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"9997:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10011:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9997:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4359,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"10048:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10063:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10048:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9997:67:27","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":4353,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"10023:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}],"id":4352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10015:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4351,"name":"address","nodeType":"ElementaryTypeName","src":"10015:7:27","typeDescriptions":{}}},"id":4354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10015:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10030:4:27","memberName":"code","nodeType":"MemberAccess","src":"10015:19:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10035:6:27","memberName":"length","nodeType":"MemberAccess","src":"10015:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10044:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10015:30:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4363,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9996:69:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9985:80:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4336,"id":4365,"nodeType":"Return","src":"9978:87:27"}]},"documentation":{"id":4327,"nodeType":"StructuredDocumentation","src":"9096:491:27","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."},"id":4367,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"9601:23:27","nodeType":"FunctionDefinition","parameters":{"id":4333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4330,"mutability":"mutable","name":"token","nameLocation":"9632:5:27","nodeType":"VariableDeclaration","scope":4367,"src":"9625:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"},"typeName":{"id":4329,"nodeType":"UserDefinedTypeName","pathNode":{"id":4328,"name":"IERC20","nameLocations":["9625:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":3904,"src":"9625:6:27"},"referencedDeclaration":3904,"src":"9625:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4332,"mutability":"mutable","name":"data","nameLocation":"9652:4:27","nodeType":"VariableDeclaration","scope":4367,"src":"9639:17:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4331,"name":"bytes","nodeType":"ElementaryTypeName","src":"9639:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9624:33:27"},"returnParameters":{"id":4336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4335,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4367,"src":"9675:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4334,"name":"bool","nodeType":"ElementaryTypeName","src":"9675:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9674:6:27"},"scope":4368,"src":"9592:480:27","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":4369,"src":"698:9376:27","usedErrors":[3916,3925],"usedEvents":[]}],"src":"115:9960:27"},"id":27},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[4628],"Errors":[5659]},"id":4629,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4370,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:28"},{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","file":"./Errors.sol","id":4372,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4629,"sourceUnit":5660,"src":"127:36:28","symbolAliases":[{"foreign":{"id":4371,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"135:6:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":4373,"nodeType":"StructuredDocumentation","src":"165:67:28","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":4628,"linearizedBaseContracts":[4628],"name":"Address","nameLocation":"241:7:28","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4374,"nodeType":"StructuredDocumentation","src":"255:75:28","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":4378,"name":"AddressEmptyCode","nameLocation":"341:16:28","nodeType":"ErrorDefinition","parameters":{"id":4377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4376,"mutability":"mutable","name":"target","nameLocation":"366:6:28","nodeType":"VariableDeclaration","scope":4378,"src":"358:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4375,"name":"address","nodeType":"ElementaryTypeName","src":"358:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"357:16:28"},"src":"335:39:28"},{"body":{"id":4425,"nodeType":"Block","src":"1361:294:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4388,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1383:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$4628","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$4628","typeString":"library Address"}],"id":4387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1375:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4386,"name":"address","nodeType":"ElementaryTypeName","src":"1375:7:28","typeDescriptions":{}}},"id":4389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1375:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1389:7:28","memberName":"balance","nodeType":"MemberAccess","src":"1375:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4391,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"1399:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1375:30:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4405,"nodeType":"IfStatement","src":"1371:125:28","trueBody":{"id":4404,"nodeType":"Block","src":"1407:89:28","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":4398,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1463:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$4628","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$4628","typeString":"library Address"}],"id":4397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1455:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4396,"name":"address","nodeType":"ElementaryTypeName","src":"1455:7:28","typeDescriptions":{}}},"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:7:28","memberName":"balance","nodeType":"MemberAccess","src":"1455:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4401,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"1478:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4393,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"1428:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$5659_$","typeString":"type(library Errors)"}},"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:19:28","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":5647,"src":"1428:26:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":4402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1428:57:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4403,"nodeType":"RevertStatement","src":"1421:64:28"}]}},{"assignments":[4407,4409],"declarations":[{"constant":false,"id":4407,"mutability":"mutable","name":"success","nameLocation":"1512:7:28","nodeType":"VariableDeclaration","scope":4425,"src":"1507:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4406,"name":"bool","nodeType":"ElementaryTypeName","src":"1507:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4409,"mutability":"mutable","name":"returndata","nameLocation":"1534:10:28","nodeType":"VariableDeclaration","scope":4425,"src":"1521:23:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4408,"name":"bytes","nodeType":"ElementaryTypeName","src":"1521:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4416,"initialValue":{"arguments":[{"hexValue":"","id":4414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1578:2:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":4410,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"1548:9:28","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1558:4:28","memberName":"call","nodeType":"MemberAccess","src":"1548:14:28","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":4412,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"1570:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1548:29:28","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1548:33:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1506:75:28"},{"condition":{"id":4418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1595:8:28","subExpression":{"id":4417,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4407,"src":"1596:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4424,"nodeType":"IfStatement","src":"1591:58:28","trueBody":{"id":4423,"nodeType":"Block","src":"1605:44:28","statements":[{"expression":{"arguments":[{"id":4420,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4409,"src":"1627:10:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4419,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4627,"src":"1619:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":4421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1619:19:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4422,"nodeType":"ExpressionStatement","src":"1619:19:28"}]}}]},"documentation":{"id":4379,"nodeType":"StructuredDocumentation","src":"380:905:28","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":4426,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1299:9:28","nodeType":"FunctionDefinition","parameters":{"id":4384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4381,"mutability":"mutable","name":"recipient","nameLocation":"1325:9:28","nodeType":"VariableDeclaration","scope":4426,"src":"1309:25:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":4380,"name":"address","nodeType":"ElementaryTypeName","src":"1309:15:28","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":4383,"mutability":"mutable","name":"amount","nameLocation":"1344:6:28","nodeType":"VariableDeclaration","scope":4426,"src":"1336:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4382,"name":"uint256","nodeType":"ElementaryTypeName","src":"1336:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1308:43:28"},"returnParameters":{"id":4385,"nodeType":"ParameterList","parameters":[],"src":"1361:0:28"},"scope":4628,"src":"1290:365:28","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4442,"nodeType":"Block","src":"2589:62:28","statements":[{"expression":{"arguments":[{"id":4437,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4429,"src":"2628:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4438,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4431,"src":"2636:4:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":4439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2642:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4436,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"2606:21:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":4440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2606:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4435,"id":4441,"nodeType":"Return","src":"2599:45:28"}]},"documentation":{"id":4427,"nodeType":"StructuredDocumentation","src":"1661:834:28","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":4443,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2509:12:28","nodeType":"FunctionDefinition","parameters":{"id":4432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4429,"mutability":"mutable","name":"target","nameLocation":"2530:6:28","nodeType":"VariableDeclaration","scope":4443,"src":"2522:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4428,"name":"address","nodeType":"ElementaryTypeName","src":"2522:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4431,"mutability":"mutable","name":"data","nameLocation":"2551:4:28","nodeType":"VariableDeclaration","scope":4443,"src":"2538:17:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4430,"name":"bytes","nodeType":"ElementaryTypeName","src":"2538:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2521:35:28"},"returnParameters":{"id":4435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4434,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4443,"src":"2575:12:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4433,"name":"bytes","nodeType":"ElementaryTypeName","src":"2575:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2574:14:28"},"scope":4628,"src":"2500:151:28","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4492,"nodeType":"Block","src":"3088:294:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4457,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3110:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$4628","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$4628","typeString":"library Address"}],"id":4456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3102:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4455,"name":"address","nodeType":"ElementaryTypeName","src":"3102:7:28","typeDescriptions":{}}},"id":4458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3102:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3116:7:28","memberName":"balance","nodeType":"MemberAccess","src":"3102:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"3126:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3102:29:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4474,"nodeType":"IfStatement","src":"3098:123:28","trueBody":{"id":4473,"nodeType":"Block","src":"3133:88:28","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":4467,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3189:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$4628","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$4628","typeString":"library Address"}],"id":4466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3181:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4465,"name":"address","nodeType":"ElementaryTypeName","src":"3181:7:28","typeDescriptions":{}}},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3181:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3195:7:28","memberName":"balance","nodeType":"MemberAccess","src":"3181:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"3204:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4462,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"3154:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$5659_$","typeString":"type(library Errors)"}},"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3161:19:28","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":5647,"src":"3154:26:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":4471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3154:56:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4472,"nodeType":"RevertStatement","src":"3147:63:28"}]}},{"assignments":[4476,4478],"declarations":[{"constant":false,"id":4476,"mutability":"mutable","name":"success","nameLocation":"3236:7:28","nodeType":"VariableDeclaration","scope":4492,"src":"3231:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4475,"name":"bool","nodeType":"ElementaryTypeName","src":"3231:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4478,"mutability":"mutable","name":"returndata","nameLocation":"3258:10:28","nodeType":"VariableDeclaration","scope":4492,"src":"3245:23:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4477,"name":"bytes","nodeType":"ElementaryTypeName","src":"3245:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4485,"initialValue":{"arguments":[{"id":4483,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4448,"src":"3298:4:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4479,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"3272:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3279:4:28","memberName":"call","nodeType":"MemberAccess","src":"3272:11:28","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":4481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"3291:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3272:25:28","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3272:31:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3230:73:28"},{"expression":{"arguments":[{"id":4487,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"3347:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4488,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"3355:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4489,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"3364:10:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4486,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"3320:26:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3320:55:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4454,"id":4491,"nodeType":"Return","src":"3313:62:28"}]},"documentation":{"id":4444,"nodeType":"StructuredDocumentation","src":"2657:313:28","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":4493,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"2984:21:28","nodeType":"FunctionDefinition","parameters":{"id":4451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4446,"mutability":"mutable","name":"target","nameLocation":"3014:6:28","nodeType":"VariableDeclaration","scope":4493,"src":"3006:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4445,"name":"address","nodeType":"ElementaryTypeName","src":"3006:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4448,"mutability":"mutable","name":"data","nameLocation":"3035:4:28","nodeType":"VariableDeclaration","scope":4493,"src":"3022:17:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4447,"name":"bytes","nodeType":"ElementaryTypeName","src":"3022:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4450,"mutability":"mutable","name":"value","nameLocation":"3049:5:28","nodeType":"VariableDeclaration","scope":4493,"src":"3041:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4449,"name":"uint256","nodeType":"ElementaryTypeName","src":"3041:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3005:50:28"},"returnParameters":{"id":4454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4493,"src":"3074:12:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4452,"name":"bytes","nodeType":"ElementaryTypeName","src":"3074:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3073:14:28"},"scope":4628,"src":"2975:407:28","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4518,"nodeType":"Block","src":"3621:154:28","statements":[{"assignments":[4504,4506],"declarations":[{"constant":false,"id":4504,"mutability":"mutable","name":"success","nameLocation":"3637:7:28","nodeType":"VariableDeclaration","scope":4518,"src":"3632:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4503,"name":"bool","nodeType":"ElementaryTypeName","src":"3632:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4506,"mutability":"mutable","name":"returndata","nameLocation":"3659:10:28","nodeType":"VariableDeclaration","scope":4518,"src":"3646:23:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4505,"name":"bytes","nodeType":"ElementaryTypeName","src":"3646:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4511,"initialValue":{"arguments":[{"id":4509,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"3691:4:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4507,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"3673:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3680:10:28","memberName":"staticcall","nodeType":"MemberAccess","src":"3673:17:28","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3673:23:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3631:65:28"},{"expression":{"arguments":[{"id":4513,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"3740:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4514,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4504,"src":"3748:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4515,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4506,"src":"3757:10:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4512,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"3713:26:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3713:55:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4502,"id":4517,"nodeType":"Return","src":"3706:62:28"}]},"documentation":{"id":4494,"nodeType":"StructuredDocumentation","src":"3388:128:28","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":4519,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3530:18:28","nodeType":"FunctionDefinition","parameters":{"id":4499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4496,"mutability":"mutable","name":"target","nameLocation":"3557:6:28","nodeType":"VariableDeclaration","scope":4519,"src":"3549:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4495,"name":"address","nodeType":"ElementaryTypeName","src":"3549:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4498,"mutability":"mutable","name":"data","nameLocation":"3578:4:28","nodeType":"VariableDeclaration","scope":4519,"src":"3565:17:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4497,"name":"bytes","nodeType":"ElementaryTypeName","src":"3565:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3548:35:28"},"returnParameters":{"id":4502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4501,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4519,"src":"3607:12:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4500,"name":"bytes","nodeType":"ElementaryTypeName","src":"3607:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3606:14:28"},"scope":4628,"src":"3521:254:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4544,"nodeType":"Block","src":"4013:156:28","statements":[{"assignments":[4530,4532],"declarations":[{"constant":false,"id":4530,"mutability":"mutable","name":"success","nameLocation":"4029:7:28","nodeType":"VariableDeclaration","scope":4544,"src":"4024:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4529,"name":"bool","nodeType":"ElementaryTypeName","src":"4024:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4532,"mutability":"mutable","name":"returndata","nameLocation":"4051:10:28","nodeType":"VariableDeclaration","scope":4544,"src":"4038:23:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4531,"name":"bytes","nodeType":"ElementaryTypeName","src":"4038:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4537,"initialValue":{"arguments":[{"id":4535,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"4085:4:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4533,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4522,"src":"4065:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4072:12:28","memberName":"delegatecall","nodeType":"MemberAccess","src":"4065:19:28","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":4536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4065:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4023:67:28"},{"expression":{"arguments":[{"id":4539,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4522,"src":"4134:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4540,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"4142:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4541,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"4151:10:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4538,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"4107:26:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4107:55:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4528,"id":4543,"nodeType":"Return","src":"4100:62:28"}]},"documentation":{"id":4520,"nodeType":"StructuredDocumentation","src":"3781:130:28","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":4545,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"3925:20:28","nodeType":"FunctionDefinition","parameters":{"id":4525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4522,"mutability":"mutable","name":"target","nameLocation":"3954:6:28","nodeType":"VariableDeclaration","scope":4545,"src":"3946:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4521,"name":"address","nodeType":"ElementaryTypeName","src":"3946:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4524,"mutability":"mutable","name":"data","nameLocation":"3975:4:28","nodeType":"VariableDeclaration","scope":4545,"src":"3962:17:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4523,"name":"bytes","nodeType":"ElementaryTypeName","src":"3962:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3945:35:28"},"returnParameters":{"id":4528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4545,"src":"3999:12:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4526,"name":"bytes","nodeType":"ElementaryTypeName","src":"3999:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3998:14:28"},"scope":4628,"src":"3916:253:28","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4584,"nodeType":"Block","src":"4595:424:28","statements":[{"condition":{"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4609:8:28","subExpression":{"id":4557,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4550,"src":"4610:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4582,"nodeType":"Block","src":"4669:344:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4564,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"4857:10:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4868:6:28","memberName":"length","nodeType":"MemberAccess","src":"4857:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4878:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4857:22:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":4568,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4548,"src":"4883:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4890:4:28","memberName":"code","nodeType":"MemberAccess","src":"4883:11:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4895:6:28","memberName":"length","nodeType":"MemberAccess","src":"4883:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4905:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4883:23:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4857:49:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4579,"nodeType":"IfStatement","src":"4853:119:28","trueBody":{"id":4578,"nodeType":"Block","src":"4908:64:28","statements":[{"errorCall":{"arguments":[{"id":4575,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4548,"src":"4950:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4574,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4378,"src":"4933:16:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":4576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4933:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4577,"nodeType":"RevertStatement","src":"4926:31:28"}]}},{"expression":{"id":4580,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"4992:10:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4556,"id":4581,"nodeType":"Return","src":"4985:17:28"}]},"id":4583,"nodeType":"IfStatement","src":"4605:408:28","trueBody":{"id":4563,"nodeType":"Block","src":"4619:44:28","statements":[{"expression":{"arguments":[{"id":4560,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"4641:10:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4559,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4627,"src":"4633:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4633:19:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4562,"nodeType":"ExpressionStatement","src":"4633:19:28"}]}}]},"documentation":{"id":4546,"nodeType":"StructuredDocumentation","src":"4175:257:28","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."},"id":4585,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4446:26:28","nodeType":"FunctionDefinition","parameters":{"id":4553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4548,"mutability":"mutable","name":"target","nameLocation":"4490:6:28","nodeType":"VariableDeclaration","scope":4585,"src":"4482:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4547,"name":"address","nodeType":"ElementaryTypeName","src":"4482:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4550,"mutability":"mutable","name":"success","nameLocation":"4511:7:28","nodeType":"VariableDeclaration","scope":4585,"src":"4506:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4549,"name":"bool","nodeType":"ElementaryTypeName","src":"4506:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4552,"mutability":"mutable","name":"returndata","nameLocation":"4541:10:28","nodeType":"VariableDeclaration","scope":4585,"src":"4528:23:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4551,"name":"bytes","nodeType":"ElementaryTypeName","src":"4528:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4472:85:28"},"returnParameters":{"id":4556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4585,"src":"4581:12:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4554,"name":"bytes","nodeType":"ElementaryTypeName","src":"4581:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4580:14:28"},"scope":4628,"src":"4437:582:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4606,"nodeType":"Block","src":"5323:122:28","statements":[{"condition":{"id":4596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5337:8:28","subExpression":{"id":4595,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"5338:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4604,"nodeType":"Block","src":"5397:42:28","statements":[{"expression":{"id":4602,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4590,"src":"5418:10:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4594,"id":4603,"nodeType":"Return","src":"5411:17:28"}]},"id":4605,"nodeType":"IfStatement","src":"5333:106:28","trueBody":{"id":4601,"nodeType":"Block","src":"5347:44:28","statements":[{"expression":{"arguments":[{"id":4598,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4590,"src":"5369:10:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4597,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4627,"src":"5361:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5361:19:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4600,"nodeType":"ExpressionStatement","src":"5361:19:28"}]}}]},"documentation":{"id":4586,"nodeType":"StructuredDocumentation","src":"5025:191:28","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."},"id":4607,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5230:16:28","nodeType":"FunctionDefinition","parameters":{"id":4591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4588,"mutability":"mutable","name":"success","nameLocation":"5252:7:28","nodeType":"VariableDeclaration","scope":4607,"src":"5247:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4587,"name":"bool","nodeType":"ElementaryTypeName","src":"5247:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4590,"mutability":"mutable","name":"returndata","nameLocation":"5274:10:28","nodeType":"VariableDeclaration","scope":4607,"src":"5261:23:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4589,"name":"bytes","nodeType":"ElementaryTypeName","src":"5261:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5246:39:28"},"returnParameters":{"id":4594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4593,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4607,"src":"5309:12:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4592,"name":"bytes","nodeType":"ElementaryTypeName","src":"5309:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5308:14:28"},"scope":4628,"src":"5221:224:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4626,"nodeType":"Block","src":"5614:432:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4613,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"5690:10:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5701:6:28","memberName":"length","nodeType":"MemberAccess","src":"5690:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5710:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5690:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4624,"nodeType":"Block","src":"5989:51:28","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4619,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"6010:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$5659_$","typeString":"type(library Errors)"}},"id":4621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6017:10:28","memberName":"FailedCall","nodeType":"MemberAccess","referencedDeclaration":5650,"src":"6010:17:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6010:19:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4623,"nodeType":"RevertStatement","src":"6003:26:28"}]},"id":4625,"nodeType":"IfStatement","src":"5686:354:28","trueBody":{"id":4618,"nodeType":"Block","src":"5713:270:28","statements":[{"AST":{"nativeSrc":"5840:133:28","nodeType":"YulBlock","src":"5840:133:28","statements":[{"nativeSrc":"5858:40:28","nodeType":"YulVariableDeclaration","src":"5858:40:28","value":{"arguments":[{"name":"returndata","nativeSrc":"5887:10:28","nodeType":"YulIdentifier","src":"5887:10:28"}],"functionName":{"name":"mload","nativeSrc":"5881:5:28","nodeType":"YulIdentifier","src":"5881:5:28"},"nativeSrc":"5881:17:28","nodeType":"YulFunctionCall","src":"5881:17:28"},"variables":[{"name":"returndata_size","nativeSrc":"5862:15:28","nodeType":"YulTypedName","src":"5862:15:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5926:2:28","nodeType":"YulLiteral","src":"5926:2:28","type":"","value":"32"},{"name":"returndata","nativeSrc":"5930:10:28","nodeType":"YulIdentifier","src":"5930:10:28"}],"functionName":{"name":"add","nativeSrc":"5922:3:28","nodeType":"YulIdentifier","src":"5922:3:28"},"nativeSrc":"5922:19:28","nodeType":"YulFunctionCall","src":"5922:19:28"},{"name":"returndata_size","nativeSrc":"5943:15:28","nodeType":"YulIdentifier","src":"5943:15:28"}],"functionName":{"name":"revert","nativeSrc":"5915:6:28","nodeType":"YulIdentifier","src":"5915:6:28"},"nativeSrc":"5915:44:28","nodeType":"YulFunctionCall","src":"5915:44:28"},"nativeSrc":"5915:44:28","nodeType":"YulExpressionStatement","src":"5915:44:28"}]},"evmVersion":"paris","externalReferences":[{"declaration":4610,"isOffset":false,"isSlot":false,"src":"5887:10:28","valueSize":1},{"declaration":4610,"isOffset":false,"isSlot":false,"src":"5930:10:28","valueSize":1}],"flags":["memory-safe"],"id":4617,"nodeType":"InlineAssembly","src":"5815:158:28"}]}}]},"documentation":{"id":4608,"nodeType":"StructuredDocumentation","src":"5451:103:28","text":" @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."},"id":4627,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5568:7:28","nodeType":"FunctionDefinition","parameters":{"id":4611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4610,"mutability":"mutable","name":"returndata","nameLocation":"5589:10:28","nodeType":"VariableDeclaration","scope":4627,"src":"5576:23:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4609,"name":"bytes","nodeType":"ElementaryTypeName","src":"5576:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5575:25:28"},"returnParameters":{"id":4612,"nodeType":"ParameterList","parameters":[],"src":"5614:0:28"},"scope":4628,"src":"5559:487:28","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4629,"src":"233:5815:28","usedErrors":[4378],"usedEvents":[]}],"src":"101:5948:28"},"id":28},"@openzeppelin/contracts/utils/Arrays.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","exportedSymbols":{"Arrays":[5506],"Comparators":[5538],"Math":[9000],"SlotDerivation":[5841],"StorageSlot":[5965]},"id":5507,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4630,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"183:24:29"},{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","file":"./Comparators.sol","id":4632,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5507,"sourceUnit":5539,"src":"209:46:29","symbolAliases":[{"foreign":{"id":4631,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"217:11:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","file":"./SlotDerivation.sol","id":4634,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5507,"sourceUnit":5842,"src":"256:52:29","symbolAliases":[{"foreign":{"id":4633,"name":"SlotDerivation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5841,"src":"264:14:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":4636,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5507,"sourceUnit":5966,"src":"309:46:29","symbolAliases":[{"foreign":{"id":4635,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5965,"src":"317:11:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":4638,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5507,"sourceUnit":9001,"src":"356:37:29","symbolAliases":[{"foreign":{"id":4637,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9000,"src":"364:4:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Arrays","contractDependencies":[],"contractKind":"library","documentation":{"id":4639,"nodeType":"StructuredDocumentation","src":"395:63:29","text":" @dev Collection of functions related to array types."},"fullyImplemented":true,"id":5506,"linearizedBaseContracts":[5506],"name":"Arrays","nameLocation":"467:6:29","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4642,"libraryName":{"id":4640,"name":"SlotDerivation","nameLocations":["486:14:29"],"nodeType":"IdentifierPath","referencedDeclaration":5841,"src":"486:14:29"},"nodeType":"UsingForDirective","src":"480:33:29","typeName":{"id":4641,"name":"bytes32","nodeType":"ElementaryTypeName","src":"505:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":4645,"libraryName":{"id":4643,"name":"StorageSlot","nameLocations":["524:11:29"],"nodeType":"IdentifierPath","referencedDeclaration":5965,"src":"524:11:29"},"nodeType":"UsingForDirective","src":"518:30:29","typeName":{"id":4644,"name":"bytes32","nodeType":"ElementaryTypeName","src":"540:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":4677,"nodeType":"Block","src":"1628:83:29","statements":[{"expression":{"arguments":[{"arguments":[{"id":4667,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"1656:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":4666,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4902,"src":"1649:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":4668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1649:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4670,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"1669:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":4669,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4922,"src":"1664:4:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":4671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:11:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4672,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"1677:4:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":4665,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4891,"src":"1638:10:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1638:44:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4674,"nodeType":"ExpressionStatement","src":"1638:44:29"},{"expression":{"id":4675,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"1699:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":4664,"id":4676,"nodeType":"Return","src":"1692:12:29"}]},"documentation":{"id":4646,"nodeType":"StructuredDocumentation","src":"554:915:29","text":" @dev Sort an array of uint256 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":4678,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1483:4:29","nodeType":"FunctionDefinition","parameters":{"id":4660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4649,"mutability":"mutable","name":"array","nameLocation":"1514:5:29","nodeType":"VariableDeclaration","scope":4678,"src":"1497:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4647,"name":"uint256","nodeType":"ElementaryTypeName","src":"1497:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4648,"nodeType":"ArrayTypeName","src":"1497:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4659,"mutability":"mutable","name":"comp","nameLocation":"1576:4:29","nodeType":"VariableDeclaration","scope":4678,"src":"1529:51:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":4658,"nodeType":"FunctionTypeName","parameterTypes":{"id":4654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4658,"src":"1538:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4650,"name":"uint256","nodeType":"ElementaryTypeName","src":"1538:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4658,"src":"1547:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4652,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1537:18:29"},"returnParameterTypes":{"id":4657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4656,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4658,"src":"1570:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4655,"name":"bool","nodeType":"ElementaryTypeName","src":"1570:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1569:6:29"},"src":"1529:51:29","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"1487:99:29"},"returnParameters":{"id":4664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4678,"src":"1610:16:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4661,"name":"uint256","nodeType":"ElementaryTypeName","src":"1610:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4662,"nodeType":"ArrayTypeName","src":"1610:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1609:18:29"},"scope":5506,"src":"1474:237:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4696,"nodeType":"Block","src":"1894:66:29","statements":[{"expression":{"arguments":[{"id":4689,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"1909:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":4690,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"1916:11:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$5538_$","typeString":"type(library Comparators)"}},"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1928:2:29","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":5523,"src":"1916:14:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":4688,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[4678,4697,4729,4750,4782,4803],"referencedDeclaration":4678,"src":"1904:4:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1904:27:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4693,"nodeType":"ExpressionStatement","src":"1904:27:29"},{"expression":{"id":4694,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"1948:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":4687,"id":4695,"nodeType":"Return","src":"1941:12:29"}]},"documentation":{"id":4679,"nodeType":"StructuredDocumentation","src":"1717:93:29","text":" @dev Variant of {sort} that sorts an array of uint256 in increasing order."},"id":4697,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1824:4:29","nodeType":"FunctionDefinition","parameters":{"id":4683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4682,"mutability":"mutable","name":"array","nameLocation":"1846:5:29","nodeType":"VariableDeclaration","scope":4697,"src":"1829:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4680,"name":"uint256","nodeType":"ElementaryTypeName","src":"1829:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4681,"nodeType":"ArrayTypeName","src":"1829:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1828:24:29"},"returnParameters":{"id":4687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4686,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4697,"src":"1876:16:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4684,"name":"uint256","nodeType":"ElementaryTypeName","src":"1876:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4685,"nodeType":"ArrayTypeName","src":"1876:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1875:18:29"},"scope":5506,"src":"1815:145:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4728,"nodeType":"Block","src":"3040:97:29","statements":[{"expression":{"arguments":[{"arguments":[{"id":4719,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4701,"src":"3075:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":4718,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[4954,4966],"referencedDeclaration":4954,"src":"3055:19:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":4720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3055:26:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":4722,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4711,"src":"3102:4:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}],"id":4721,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[4992,5018],"referencedDeclaration":4992,"src":"3083:18:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (address,address) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":4723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:24:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":4717,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[4678,4697,4729,4750,4782,4803],"referencedDeclaration":4678,"src":"3050:4:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3050:58:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4725,"nodeType":"ExpressionStatement","src":"3050:58:29"},{"expression":{"id":4726,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4701,"src":"3125:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":4716,"id":4727,"nodeType":"Return","src":"3118:12:29"}]},"documentation":{"id":4698,"nodeType":"StructuredDocumentation","src":"1966:915:29","text":" @dev Sort an array of address (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":4729,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"2895:4:29","nodeType":"FunctionDefinition","parameters":{"id":4712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4701,"mutability":"mutable","name":"array","nameLocation":"2926:5:29","nodeType":"VariableDeclaration","scope":4729,"src":"2909:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4699,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4700,"nodeType":"ArrayTypeName","src":"2909:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4711,"mutability":"mutable","name":"comp","nameLocation":"2988:4:29","nodeType":"VariableDeclaration","scope":4729,"src":"2941:51:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":4710,"nodeType":"FunctionTypeName","parameterTypes":{"id":4706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4710,"src":"2950:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4702,"name":"address","nodeType":"ElementaryTypeName","src":"2950:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4705,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4710,"src":"2959:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4704,"name":"address","nodeType":"ElementaryTypeName","src":"2959:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2949:18:29"},"returnParameterTypes":{"id":4709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4710,"src":"2982:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4707,"name":"bool","nodeType":"ElementaryTypeName","src":"2982:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2981:6:29"},"src":"2941:51:29","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"2899:99:29"},"returnParameters":{"id":4716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4729,"src":"3022:16:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4713,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4714,"nodeType":"ArrayTypeName","src":"3022:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3021:18:29"},"scope":5506,"src":"2886:251:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4749,"nodeType":"Block","src":"3320:87:29","statements":[{"expression":{"arguments":[{"arguments":[{"id":4741,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4733,"src":"3355:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":4740,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[4954,4966],"referencedDeclaration":4954,"src":"3335:19:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":4742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3335:26:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":4743,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"3363:11:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$5538_$","typeString":"type(library Comparators)"}},"id":4744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3375:2:29","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":5523,"src":"3363:14:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":4739,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[4678,4697,4729,4750,4782,4803],"referencedDeclaration":4678,"src":"3330:4:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":4745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3330:48:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4746,"nodeType":"ExpressionStatement","src":"3330:48:29"},{"expression":{"id":4747,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4733,"src":"3395:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":4738,"id":4748,"nodeType":"Return","src":"3388:12:29"}]},"documentation":{"id":4730,"nodeType":"StructuredDocumentation","src":"3143:93:29","text":" @dev Variant of {sort} that sorts an array of address in increasing order."},"id":4750,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"3250:4:29","nodeType":"FunctionDefinition","parameters":{"id":4734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4733,"mutability":"mutable","name":"array","nameLocation":"3272:5:29","nodeType":"VariableDeclaration","scope":4750,"src":"3255:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4731,"name":"address","nodeType":"ElementaryTypeName","src":"3255:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4732,"nodeType":"ArrayTypeName","src":"3255:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3254:24:29"},"returnParameters":{"id":4738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4737,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4750,"src":"3302:16:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4735,"name":"address","nodeType":"ElementaryTypeName","src":"3302:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4736,"nodeType":"ArrayTypeName","src":"3302:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3301:18:29"},"scope":5506,"src":"3241:166:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4781,"nodeType":"Block","src":"4487:97:29","statements":[{"expression":{"arguments":[{"arguments":[{"id":4772,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4754,"src":"4522:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":4771,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[4954,4966],"referencedDeclaration":4966,"src":"4502:19:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":4773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4502:26:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":4775,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4764,"src":"4549:4:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}],"id":4774,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[4992,5018],"referencedDeclaration":5018,"src":"4530:18:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (bytes32,bytes32) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4530:24:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":4770,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[4678,4697,4729,4750,4782,4803],"referencedDeclaration":4678,"src":"4497:4:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":4777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4497:58:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4778,"nodeType":"ExpressionStatement","src":"4497:58:29"},{"expression":{"id":4779,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4754,"src":"4572:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":4769,"id":4780,"nodeType":"Return","src":"4565:12:29"}]},"documentation":{"id":4751,"nodeType":"StructuredDocumentation","src":"3413:915:29","text":" @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":4782,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4342:4:29","nodeType":"FunctionDefinition","parameters":{"id":4765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4754,"mutability":"mutable","name":"array","nameLocation":"4373:5:29","nodeType":"VariableDeclaration","scope":4782,"src":"4356:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4752,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4356:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4753,"nodeType":"ArrayTypeName","src":"4356:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4764,"mutability":"mutable","name":"comp","nameLocation":"4435:4:29","nodeType":"VariableDeclaration","scope":4782,"src":"4388:51:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":4763,"nodeType":"FunctionTypeName","parameterTypes":{"id":4759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4763,"src":"4397:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4755,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4397:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4763,"src":"4406:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4757,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4406:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4396:18:29"},"returnParameterTypes":{"id":4762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4763,"src":"4429:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4760,"name":"bool","nodeType":"ElementaryTypeName","src":"4429:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4428:6:29"},"src":"4388:51:29","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"4346:99:29"},"returnParameters":{"id":4769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4768,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4782,"src":"4469:16:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4766,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4767,"nodeType":"ArrayTypeName","src":"4469:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4468:18:29"},"scope":5506,"src":"4333:251:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4802,"nodeType":"Block","src":"4767:87:29","statements":[{"expression":{"arguments":[{"arguments":[{"id":4794,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4786,"src":"4802:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":4793,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[4954,4966],"referencedDeclaration":4966,"src":"4782:19:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":4795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:26:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":4796,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"4810:11:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$5538_$","typeString":"type(library Comparators)"}},"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:2:29","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":5523,"src":"4810:14:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":4792,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[4678,4697,4729,4750,4782,4803],"referencedDeclaration":4678,"src":"4777:4:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4777:48:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4799,"nodeType":"ExpressionStatement","src":"4777:48:29"},{"expression":{"id":4800,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4786,"src":"4842:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":4791,"id":4801,"nodeType":"Return","src":"4835:12:29"}]},"documentation":{"id":4783,"nodeType":"StructuredDocumentation","src":"4590:93:29","text":" @dev Variant of {sort} that sorts an array of bytes32 in increasing order."},"id":4803,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4697:4:29","nodeType":"FunctionDefinition","parameters":{"id":4787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4786,"mutability":"mutable","name":"array","nameLocation":"4719:5:29","nodeType":"VariableDeclaration","scope":4803,"src":"4702:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4784,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4702:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4785,"nodeType":"ArrayTypeName","src":"4702:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4701:24:29"},"returnParameters":{"id":4791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4790,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4803,"src":"4749:16:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4788,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4749:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4789,"nodeType":"ArrayTypeName","src":"4749:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4748:18:29"},"scope":5506,"src":"4688:166:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4890,"nodeType":"Block","src":"5470:889:29","statements":[{"id":4889,"nodeType":"UncheckedBlock","src":"5480:873:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4821,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"5508:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4822,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"5514:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5508:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30783430","id":4824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5522:4:29","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"src":"5508:18:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4827,"nodeType":"IfStatement","src":"5504:31:29","trueBody":{"functionReturnParameters":4820,"id":4826,"nodeType":"Return","src":"5528:7:29"}},{"assignments":[4829],"declarations":[{"constant":false,"id":4829,"mutability":"mutable","name":"pivot","nameLocation":"5599:5:29","nodeType":"VariableDeclaration","scope":4889,"src":"5591:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4828,"name":"uint256","nodeType":"ElementaryTypeName","src":"5591:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4833,"initialValue":{"arguments":[{"id":4831,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"5614:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4830,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4932,"src":"5607:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5607:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5591:29:29"},{"assignments":[4835],"declarations":[{"constant":false,"id":4835,"mutability":"mutable","name":"pos","nameLocation":"5715:3:29","nodeType":"VariableDeclaration","scope":4889,"src":"5707:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4834,"name":"uint256","nodeType":"ElementaryTypeName","src":"5707:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4837,"initialValue":{"id":4836,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"5721:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5707:19:29"},{"body":{"id":4868,"nodeType":"Block","src":"5795:331:29","statements":[{"condition":{"arguments":[{"arguments":[{"id":4853,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"5829:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4852,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4932,"src":"5822:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5822:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4855,"name":"pivot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4829,"src":"5834:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4851,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"5817:4:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}},"id":4856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5817:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4867,"nodeType":"IfStatement","src":"5813:299:29","trueBody":{"id":4866,"nodeType":"Block","src":"5842:270:29","statements":[{"expression":{"id":4859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4857,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4835,"src":"6046:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":4858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6053:4:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6046:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4860,"nodeType":"ExpressionStatement","src":"6046:11:29"},{"expression":{"arguments":[{"id":4862,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4835,"src":"6085:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4863,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"6090:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4861,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4942,"src":"6079:5:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":4864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6079:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4865,"nodeType":"ExpressionStatement","src":"6079:14:29"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4844,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"5773:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4845,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"5778:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5773:8:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4869,"initializationExpression":{"assignments":[4839],"declarations":[{"constant":false,"id":4839,"mutability":"mutable","name":"it","nameLocation":"5754:2:29","nodeType":"VariableDeclaration","scope":4869,"src":"5746:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4838,"name":"uint256","nodeType":"ElementaryTypeName","src":"5746:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4843,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4840,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"5759:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":4841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5767:4:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5759:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5746:25:29"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":4849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4847,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"5783:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":4848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5789:4:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5783:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4850,"nodeType":"ExpressionStatement","src":"5783:10:29"},"nodeType":"ForStatement","src":"5741:385:29"},{"expression":{"arguments":[{"id":4871,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"6146:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4872,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4835,"src":"6153:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4870,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4942,"src":"6140:5:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":4873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:17:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4874,"nodeType":"ExpressionStatement","src":"6140:17:29"},{"expression":{"arguments":[{"id":4876,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"6207:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4877,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4835,"src":"6214:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4878,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"6219:4:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":4875,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4891,"src":"6196:10:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":4879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:28:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4880,"nodeType":"ExpressionStatement","src":"6196:28:29"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4882,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4835,"src":"6284:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":4883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6290:4:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6284:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4885,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"6296:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4886,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"6301:4:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":4881,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4891,"src":"6273:10:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":4887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6273:33:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4888,"nodeType":"ExpressionStatement","src":"6273:33:29"}]}]},"documentation":{"id":4804,"nodeType":"StructuredDocumentation","src":"4860:491:29","text":" @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n at end (exclusive). Sorting follows the `comp` comparator.\n Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n be used only if the limits are within a memory array."},"id":4891,"implemented":true,"kind":"function","modifiers":[],"name":"_quickSort","nameLocation":"5365:10:29","nodeType":"FunctionDefinition","parameters":{"id":4819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4806,"mutability":"mutable","name":"begin","nameLocation":"5384:5:29","nodeType":"VariableDeclaration","scope":4891,"src":"5376:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4805,"name":"uint256","nodeType":"ElementaryTypeName","src":"5376:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4808,"mutability":"mutable","name":"end","nameLocation":"5399:3:29","nodeType":"VariableDeclaration","scope":4891,"src":"5391:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4807,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4818,"mutability":"mutable","name":"comp","nameLocation":"5451:4:29","nodeType":"VariableDeclaration","scope":4891,"src":"5404:51:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":4817,"nodeType":"FunctionTypeName","parameterTypes":{"id":4813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4810,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4817,"src":"5413:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4809,"name":"uint256","nodeType":"ElementaryTypeName","src":"5413:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4817,"src":"5422:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4811,"name":"uint256","nodeType":"ElementaryTypeName","src":"5422:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5412:18:29"},"returnParameterTypes":{"id":4816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4815,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4817,"src":"5445:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4814,"name":"bool","nodeType":"ElementaryTypeName","src":"5445:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5444:6:29"},"src":"5404:51:29","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"5375:81:29"},"returnParameters":{"id":4820,"nodeType":"ParameterList","parameters":[],"src":"5470:0:29"},"scope":5506,"src":"5356:1003:29","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4901,"nodeType":"Block","src":"6532:88:29","statements":[{"AST":{"nativeSrc":"6567:47:29","nodeType":"YulBlock","src":"6567:47:29","statements":[{"nativeSrc":"6581:23:29","nodeType":"YulAssignment","src":"6581:23:29","value":{"arguments":[{"name":"array","nativeSrc":"6592:5:29","nodeType":"YulIdentifier","src":"6592:5:29"},{"kind":"number","nativeSrc":"6599:4:29","nodeType":"YulLiteral","src":"6599:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6588:3:29","nodeType":"YulIdentifier","src":"6588:3:29"},"nativeSrc":"6588:16:29","nodeType":"YulFunctionCall","src":"6588:16:29"},"variableNames":[{"name":"ptr","nativeSrc":"6581:3:29","nodeType":"YulIdentifier","src":"6581:3:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4895,"isOffset":false,"isSlot":false,"src":"6592:5:29","valueSize":1},{"declaration":4898,"isOffset":false,"isSlot":false,"src":"6581:3:29","valueSize":1}],"flags":["memory-safe"],"id":4900,"nodeType":"InlineAssembly","src":"6542:72:29"}]},"documentation":{"id":4892,"nodeType":"StructuredDocumentation","src":"6365:87:29","text":" @dev Pointer to the memory location of the first element of `array`."},"id":4902,"implemented":true,"kind":"function","modifiers":[],"name":"_begin","nameLocation":"6466:6:29","nodeType":"FunctionDefinition","parameters":{"id":4896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4895,"mutability":"mutable","name":"array","nameLocation":"6490:5:29","nodeType":"VariableDeclaration","scope":4902,"src":"6473:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4893,"name":"uint256","nodeType":"ElementaryTypeName","src":"6473:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4894,"nodeType":"ArrayTypeName","src":"6473:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6472:24:29"},"returnParameters":{"id":4899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4898,"mutability":"mutable","name":"ptr","nameLocation":"6527:3:29","nodeType":"VariableDeclaration","scope":4902,"src":"6519:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4897,"name":"uint256","nodeType":"ElementaryTypeName","src":"6519:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6518:13:29"},"scope":5506,"src":"6457:163:29","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4921,"nodeType":"Block","src":"6892:93:29","statements":[{"id":4920,"nodeType":"UncheckedBlock","src":"6902:77:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4912,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"6940:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":4911,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4902,"src":"6933:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":4913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6933:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4914,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"6949:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6955:6:29","memberName":"length","nodeType":"MemberAccess","src":"6949:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783230","id":4916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6964:4:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6949:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6933:35:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4910,"id":4919,"nodeType":"Return","src":"6926:42:29"}]}]},"documentation":{"id":4903,"nodeType":"StructuredDocumentation","src":"6626:188:29","text":" @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n that comes just after the last element of the array."},"id":4922,"implemented":true,"kind":"function","modifiers":[],"name":"_end","nameLocation":"6828:4:29","nodeType":"FunctionDefinition","parameters":{"id":4907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4906,"mutability":"mutable","name":"array","nameLocation":"6850:5:29","nodeType":"VariableDeclaration","scope":4922,"src":"6833:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4904,"name":"uint256","nodeType":"ElementaryTypeName","src":"6833:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4905,"nodeType":"ArrayTypeName","src":"6833:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6832:24:29"},"returnParameters":{"id":4910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4909,"mutability":"mutable","name":"ptr","nameLocation":"6887:3:29","nodeType":"VariableDeclaration","scope":4922,"src":"6879:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4908,"name":"uint256","nodeType":"ElementaryTypeName","src":"6879:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6878:13:29"},"scope":5506,"src":"6819:166:29","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4931,"nodeType":"Block","src":"7136:68:29","statements":[{"AST":{"nativeSrc":"7155:43:29","nodeType":"YulBlock","src":"7155:43:29","statements":[{"nativeSrc":"7169:19:29","nodeType":"YulAssignment","src":"7169:19:29","value":{"arguments":[{"name":"ptr","nativeSrc":"7184:3:29","nodeType":"YulIdentifier","src":"7184:3:29"}],"functionName":{"name":"mload","nativeSrc":"7178:5:29","nodeType":"YulIdentifier","src":"7178:5:29"},"nativeSrc":"7178:10:29","nodeType":"YulFunctionCall","src":"7178:10:29"},"variableNames":[{"name":"value","nativeSrc":"7169:5:29","nodeType":"YulIdentifier","src":"7169:5:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4925,"isOffset":false,"isSlot":false,"src":"7184:3:29","valueSize":1},{"declaration":4928,"isOffset":false,"isSlot":false,"src":"7169:5:29","valueSize":1}],"id":4930,"nodeType":"InlineAssembly","src":"7146:52:29"}]},"documentation":{"id":4923,"nodeType":"StructuredDocumentation","src":"6991:74:29","text":" @dev Load memory word (as a uint256) at location `ptr`."},"id":4932,"implemented":true,"kind":"function","modifiers":[],"name":"_mload","nameLocation":"7079:6:29","nodeType":"FunctionDefinition","parameters":{"id":4926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4925,"mutability":"mutable","name":"ptr","nameLocation":"7094:3:29","nodeType":"VariableDeclaration","scope":4932,"src":"7086:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4924,"name":"uint256","nodeType":"ElementaryTypeName","src":"7086:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7085:13:29"},"returnParameters":{"id":4929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4928,"mutability":"mutable","name":"value","nameLocation":"7129:5:29","nodeType":"VariableDeclaration","scope":4932,"src":"7121:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4927,"name":"uint256","nodeType":"ElementaryTypeName","src":"7121:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7120:15:29"},"scope":5506,"src":"7070:134:29","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4941,"nodeType":"Block","src":"7348:178:29","statements":[{"AST":{"nativeSrc":"7367:153:29","nodeType":"YulBlock","src":"7367:153:29","statements":[{"nativeSrc":"7381:25:29","nodeType":"YulVariableDeclaration","src":"7381:25:29","value":{"arguments":[{"name":"ptr1","nativeSrc":"7401:4:29","nodeType":"YulIdentifier","src":"7401:4:29"}],"functionName":{"name":"mload","nativeSrc":"7395:5:29","nodeType":"YulIdentifier","src":"7395:5:29"},"nativeSrc":"7395:11:29","nodeType":"YulFunctionCall","src":"7395:11:29"},"variables":[{"name":"value1","nativeSrc":"7385:6:29","nodeType":"YulTypedName","src":"7385:6:29","type":""}]},{"nativeSrc":"7419:25:29","nodeType":"YulVariableDeclaration","src":"7419:25:29","value":{"arguments":[{"name":"ptr2","nativeSrc":"7439:4:29","nodeType":"YulIdentifier","src":"7439:4:29"}],"functionName":{"name":"mload","nativeSrc":"7433:5:29","nodeType":"YulIdentifier","src":"7433:5:29"},"nativeSrc":"7433:11:29","nodeType":"YulFunctionCall","src":"7433:11:29"},"variables":[{"name":"value2","nativeSrc":"7423:6:29","nodeType":"YulTypedName","src":"7423:6:29","type":""}]},{"expression":{"arguments":[{"name":"ptr1","nativeSrc":"7464:4:29","nodeType":"YulIdentifier","src":"7464:4:29"},{"name":"value2","nativeSrc":"7470:6:29","nodeType":"YulIdentifier","src":"7470:6:29"}],"functionName":{"name":"mstore","nativeSrc":"7457:6:29","nodeType":"YulIdentifier","src":"7457:6:29"},"nativeSrc":"7457:20:29","nodeType":"YulFunctionCall","src":"7457:20:29"},"nativeSrc":"7457:20:29","nodeType":"YulExpressionStatement","src":"7457:20:29"},{"expression":{"arguments":[{"name":"ptr2","nativeSrc":"7497:4:29","nodeType":"YulIdentifier","src":"7497:4:29"},{"name":"value1","nativeSrc":"7503:6:29","nodeType":"YulIdentifier","src":"7503:6:29"}],"functionName":{"name":"mstore","nativeSrc":"7490:6:29","nodeType":"YulIdentifier","src":"7490:6:29"},"nativeSrc":"7490:20:29","nodeType":"YulFunctionCall","src":"7490:20:29"},"nativeSrc":"7490:20:29","nodeType":"YulExpressionStatement","src":"7490:20:29"}]},"evmVersion":"paris","externalReferences":[{"declaration":4935,"isOffset":false,"isSlot":false,"src":"7401:4:29","valueSize":1},{"declaration":4935,"isOffset":false,"isSlot":false,"src":"7464:4:29","valueSize":1},{"declaration":4937,"isOffset":false,"isSlot":false,"src":"7439:4:29","valueSize":1},{"declaration":4937,"isOffset":false,"isSlot":false,"src":"7497:4:29","valueSize":1}],"id":4940,"nodeType":"InlineAssembly","src":"7358:162:29"}]},"documentation":{"id":4933,"nodeType":"StructuredDocumentation","src":"7210:77:29","text":" @dev Swaps the elements memory location `ptr1` and `ptr2`."},"id":4942,"implemented":true,"kind":"function","modifiers":[],"name":"_swap","nameLocation":"7301:5:29","nodeType":"FunctionDefinition","parameters":{"id":4938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4935,"mutability":"mutable","name":"ptr1","nameLocation":"7315:4:29","nodeType":"VariableDeclaration","scope":4942,"src":"7307:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4934,"name":"uint256","nodeType":"ElementaryTypeName","src":"7307:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4937,"mutability":"mutable","name":"ptr2","nameLocation":"7329:4:29","nodeType":"VariableDeclaration","scope":4942,"src":"7321:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4936,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7306:28:29"},"returnParameters":{"id":4939,"nodeType":"ParameterList","parameters":[],"src":"7348:0:29"},"scope":5506,"src":"7292:234:29","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4953,"nodeType":"Block","src":"7713:64:29","statements":[{"AST":{"nativeSrc":"7732:39:29","nodeType":"YulBlock","src":"7732:39:29","statements":[{"nativeSrc":"7746:15:29","nodeType":"YulAssignment","src":"7746:15:29","value":{"name":"input","nativeSrc":"7756:5:29","nodeType":"YulIdentifier","src":"7756:5:29"},"variableNames":[{"name":"output","nativeSrc":"7746:6:29","nodeType":"YulIdentifier","src":"7746:6:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4946,"isOffset":false,"isSlot":false,"src":"7756:5:29","valueSize":1},{"declaration":4950,"isOffset":false,"isSlot":false,"src":"7746:6:29","valueSize":1}],"id":4952,"nodeType":"InlineAssembly","src":"7723:48:29"}]},"documentation":{"id":4943,"nodeType":"StructuredDocumentation","src":"7532:76:29","text":"@dev Helper: low level cast address memory array to uint256 memory array"},"id":4954,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7622:19:29","nodeType":"FunctionDefinition","parameters":{"id":4947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4946,"mutability":"mutable","name":"input","nameLocation":"7659:5:29","nodeType":"VariableDeclaration","scope":4954,"src":"7642:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4944,"name":"address","nodeType":"ElementaryTypeName","src":"7642:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4945,"nodeType":"ArrayTypeName","src":"7642:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"7641:24:29"},"returnParameters":{"id":4951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4950,"mutability":"mutable","name":"output","nameLocation":"7705:6:29","nodeType":"VariableDeclaration","scope":4954,"src":"7688:23:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4948,"name":"uint256","nodeType":"ElementaryTypeName","src":"7688:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4949,"nodeType":"ArrayTypeName","src":"7688:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7687:25:29"},"scope":5506,"src":"7613:164:29","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4965,"nodeType":"Block","src":"7964:64:29","statements":[{"AST":{"nativeSrc":"7983:39:29","nodeType":"YulBlock","src":"7983:39:29","statements":[{"nativeSrc":"7997:15:29","nodeType":"YulAssignment","src":"7997:15:29","value":{"name":"input","nativeSrc":"8007:5:29","nodeType":"YulIdentifier","src":"8007:5:29"},"variableNames":[{"name":"output","nativeSrc":"7997:6:29","nodeType":"YulIdentifier","src":"7997:6:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4958,"isOffset":false,"isSlot":false,"src":"8007:5:29","valueSize":1},{"declaration":4962,"isOffset":false,"isSlot":false,"src":"7997:6:29","valueSize":1}],"id":4964,"nodeType":"InlineAssembly","src":"7974:48:29"}]},"documentation":{"id":4955,"nodeType":"StructuredDocumentation","src":"7783:76:29","text":"@dev Helper: low level cast bytes32 memory array to uint256 memory array"},"id":4966,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7873:19:29","nodeType":"FunctionDefinition","parameters":{"id":4959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4958,"mutability":"mutable","name":"input","nameLocation":"7910:5:29","nodeType":"VariableDeclaration","scope":4966,"src":"7893:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4956,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7893:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4957,"nodeType":"ArrayTypeName","src":"7893:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7892:24:29"},"returnParameters":{"id":4963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4962,"mutability":"mutable","name":"output","nameLocation":"7956:6:29","nodeType":"VariableDeclaration","scope":4966,"src":"7939:23:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4960,"name":"uint256","nodeType":"ElementaryTypeName","src":"7939:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4961,"nodeType":"ArrayTypeName","src":"7939:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7938:25:29"},"scope":5506,"src":"7864:164:29","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4991,"nodeType":"Block","src":"8290:64:29","statements":[{"AST":{"nativeSrc":"8309:39:29","nodeType":"YulBlock","src":"8309:39:29","statements":[{"nativeSrc":"8323:15:29","nodeType":"YulAssignment","src":"8323:15:29","value":{"name":"input","nativeSrc":"8333:5:29","nodeType":"YulIdentifier","src":"8333:5:29"},"variableNames":[{"name":"output","nativeSrc":"8323:6:29","nodeType":"YulIdentifier","src":"8323:6:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4977,"isOffset":false,"isSlot":false,"src":"8333:5:29","valueSize":1},{"declaration":4988,"isOffset":false,"isSlot":false,"src":"8323:6:29","valueSize":1}],"id":4990,"nodeType":"InlineAssembly","src":"8300:48:29"}]},"documentation":{"id":4967,"nodeType":"StructuredDocumentation","src":"8034:78:29","text":"@dev Helper: low level cast address comp function to uint256 comp function"},"id":4992,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8126:18:29","nodeType":"FunctionDefinition","parameters":{"id":4978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4977,"mutability":"mutable","name":"input","nameLocation":"8201:5:29","nodeType":"VariableDeclaration","scope":4992,"src":"8154:52:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":4976,"nodeType":"FunctionTypeName","parameterTypes":{"id":4972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4969,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4976,"src":"8163:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4968,"name":"address","nodeType":"ElementaryTypeName","src":"8163:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4976,"src":"8172:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4970,"name":"address","nodeType":"ElementaryTypeName","src":"8172:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8162:18:29"},"returnParameterTypes":{"id":4975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4974,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4976,"src":"8195:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4973,"name":"bool","nodeType":"ElementaryTypeName","src":"8195:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8194:6:29"},"src":"8154:52:29","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8144:68:29"},"returnParameters":{"id":4989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4988,"mutability":"mutable","name":"output","nameLocation":"8282:6:29","nodeType":"VariableDeclaration","scope":4992,"src":"8235:53:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":4987,"nodeType":"FunctionTypeName","parameterTypes":{"id":4983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4987,"src":"8244:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4979,"name":"uint256","nodeType":"ElementaryTypeName","src":"8244:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4987,"src":"8253:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4981,"name":"uint256","nodeType":"ElementaryTypeName","src":"8253:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8243:18:29"},"returnParameterTypes":{"id":4986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4985,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4987,"src":"8276:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4984,"name":"bool","nodeType":"ElementaryTypeName","src":"8276:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8275:6:29"},"src":"8235:53:29","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8234:55:29"},"scope":5506,"src":"8117:237:29","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5017,"nodeType":"Block","src":"8616:64:29","statements":[{"AST":{"nativeSrc":"8635:39:29","nodeType":"YulBlock","src":"8635:39:29","statements":[{"nativeSrc":"8649:15:29","nodeType":"YulAssignment","src":"8649:15:29","value":{"name":"input","nativeSrc":"8659:5:29","nodeType":"YulIdentifier","src":"8659:5:29"},"variableNames":[{"name":"output","nativeSrc":"8649:6:29","nodeType":"YulIdentifier","src":"8649:6:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5003,"isOffset":false,"isSlot":false,"src":"8659:5:29","valueSize":1},{"declaration":5014,"isOffset":false,"isSlot":false,"src":"8649:6:29","valueSize":1}],"id":5016,"nodeType":"InlineAssembly","src":"8626:48:29"}]},"documentation":{"id":4993,"nodeType":"StructuredDocumentation","src":"8360:78:29","text":"@dev Helper: low level cast bytes32 comp function to uint256 comp function"},"id":5018,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8452:18:29","nodeType":"FunctionDefinition","parameters":{"id":5004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5003,"mutability":"mutable","name":"input","nameLocation":"8527:5:29","nodeType":"VariableDeclaration","scope":5018,"src":"8480:52:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":5002,"nodeType":"FunctionTypeName","parameterTypes":{"id":4998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5002,"src":"8489:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4994,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8489:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4997,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5002,"src":"8498:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4996,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8498:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8488:18:29"},"returnParameterTypes":{"id":5001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5000,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5002,"src":"8521:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4999,"name":"bool","nodeType":"ElementaryTypeName","src":"8521:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8520:6:29"},"src":"8480:52:29","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8470:68:29"},"returnParameters":{"id":5015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5014,"mutability":"mutable","name":"output","nameLocation":"8608:6:29","nodeType":"VariableDeclaration","scope":5018,"src":"8561:53:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":5013,"nodeType":"FunctionTypeName","parameterTypes":{"id":5009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5013,"src":"8570:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5005,"name":"uint256","nodeType":"ElementaryTypeName","src":"8570:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5008,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5013,"src":"8579:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5007,"name":"uint256","nodeType":"ElementaryTypeName","src":"8579:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8569:18:29"},"returnParameterTypes":{"id":5012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5013,"src":"8602:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5010,"name":"bool","nodeType":"ElementaryTypeName","src":"8602:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8601:6:29"},"src":"8561:53:29","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8560:55:29"},"scope":5506,"src":"8443:237:29","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5100,"nodeType":"Block","src":"9405:834:29","statements":[{"assignments":[5030],"declarations":[{"constant":false,"id":5030,"mutability":"mutable","name":"low","nameLocation":"9423:3:29","nodeType":"VariableDeclaration","scope":5100,"src":"9415:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5029,"name":"uint256","nodeType":"ElementaryTypeName","src":"9415:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5032,"initialValue":{"hexValue":"30","id":5031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9429:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9415:15:29"},{"assignments":[5034],"declarations":[{"constant":false,"id":5034,"mutability":"mutable","name":"high","nameLocation":"9448:4:29","nodeType":"VariableDeclaration","scope":5100,"src":"9440:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5033,"name":"uint256","nodeType":"ElementaryTypeName","src":"9440:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5037,"initialValue":{"expression":{"id":5035,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"9455:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":5036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9461:6:29","memberName":"length","nodeType":"MemberAccess","src":"9455:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9440:27:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5038,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5034,"src":"9482:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9490:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9482:9:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5044,"nodeType":"IfStatement","src":"9478:48:29","trueBody":{"id":5043,"nodeType":"Block","src":"9493:33:29","statements":[{"expression":{"hexValue":"30","id":5041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9514:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5028,"id":5042,"nodeType":"Return","src":"9507:8:29"}]}},{"body":{"id":5076,"nodeType":"Block","src":"9555:423:29","statements":[{"assignments":[5049],"declarations":[{"constant":false,"id":5049,"mutability":"mutable","name":"mid","nameLocation":"9577:3:29","nodeType":"VariableDeclaration","scope":5076,"src":"9569:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5048,"name":"uint256","nodeType":"ElementaryTypeName","src":"9569:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5055,"initialValue":{"arguments":[{"id":5052,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5030,"src":"9596:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5053,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5034,"src":"9601:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5050,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9000,"src":"9583:4:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$9000_$","typeString":"type(library Math)"}},"id":5051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9588:7:29","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":7729,"src":"9583:12:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9583:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9569:37:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":5057,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"9844:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":5058,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5049,"src":"9851:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5056,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[5381,5407,5433],"referencedDeclaration":5433,"src":"9831:12:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$5856_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":5059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9831:24:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$5856_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":5060,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9856:5:29","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":5855,"src":"9831:30:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5061,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"9864:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9831:40:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5074,"nodeType":"Block","src":"9922:46:29","statements":[{"expression":{"id":5072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5068,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5030,"src":"9940:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5069,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5049,"src":"9946:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9952:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9940:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5073,"nodeType":"ExpressionStatement","src":"9940:13:29"}]},"id":5075,"nodeType":"IfStatement","src":"9827:141:29","trueBody":{"id":5067,"nodeType":"Block","src":"9873:43:29","statements":[{"expression":{"id":5065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5063,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5034,"src":"9891:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5064,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5049,"src":"9898:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9891:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5066,"nodeType":"ExpressionStatement","src":"9891:10:29"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5045,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5030,"src":"9543:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5046,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5034,"src":"9549:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9543:10:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5077,"nodeType":"WhileStatement","src":"9536:442:29"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5078,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5030,"src":"10095:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10101:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10095:7:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":5082,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"10119:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5083,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5030,"src":"10126:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10126:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5081,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[5381,5407,5433],"referencedDeclaration":5433,"src":"10106:12:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$5856_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":5086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:28:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$5856_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":5087,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10135:5:29","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":5855,"src":"10106:34:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5088,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"10144:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10106:45:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10095:56:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5098,"nodeType":"Block","src":"10198:35:29","statements":[{"expression":{"id":5096,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5030,"src":"10219:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5028,"id":5097,"nodeType":"Return","src":"10212:10:29"}]},"id":5099,"nodeType":"IfStatement","src":"10091:142:29","trueBody":{"id":5095,"nodeType":"Block","src":"10153:39:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5091,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5030,"src":"10174:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10180:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10174:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5028,"id":5094,"nodeType":"Return","src":"10167:14:29"}]}}]},"documentation":{"id":5019,"nodeType":"StructuredDocumentation","src":"8686:616:29","text":" @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n NOTE: The `array` is expected to be sorted in ascending order, and to\n contain no repeated elements.\n IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n support for repeated elements in the array. The {lowerBound} function should\n be used instead."},"id":5101,"implemented":true,"kind":"function","modifiers":[],"name":"findUpperBound","nameLocation":"9316:14:29","nodeType":"FunctionDefinition","parameters":{"id":5025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5022,"mutability":"mutable","name":"array","nameLocation":"9349:5:29","nodeType":"VariableDeclaration","scope":5101,"src":"9331:23:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5020,"name":"uint256","nodeType":"ElementaryTypeName","src":"9331:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5021,"nodeType":"ArrayTypeName","src":"9331:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5024,"mutability":"mutable","name":"element","nameLocation":"9364:7:29","nodeType":"VariableDeclaration","scope":5101,"src":"9356:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5023,"name":"uint256","nodeType":"ElementaryTypeName","src":"9356:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9330:42:29"},"returnParameters":{"id":5028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5101,"src":"9396:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5026,"name":"uint256","nodeType":"ElementaryTypeName","src":"9396:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9395:9:29"},"scope":5506,"src":"9307:932:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5164,"nodeType":"Block","src":"10756:709:29","statements":[{"assignments":[5113],"declarations":[{"constant":false,"id":5113,"mutability":"mutable","name":"low","nameLocation":"10774:3:29","nodeType":"VariableDeclaration","scope":5164,"src":"10766:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5112,"name":"uint256","nodeType":"ElementaryTypeName","src":"10766:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5115,"initialValue":{"hexValue":"30","id":5114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10780:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10766:15:29"},{"assignments":[5117],"declarations":[{"constant":false,"id":5117,"mutability":"mutable","name":"high","nameLocation":"10799:4:29","nodeType":"VariableDeclaration","scope":5164,"src":"10791:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5116,"name":"uint256","nodeType":"ElementaryTypeName","src":"10791:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5120,"initialValue":{"expression":{"id":5118,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5105,"src":"10806:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10812:6:29","memberName":"length","nodeType":"MemberAccess","src":"10806:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10791:27:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5121,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5117,"src":"10833:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10833:9:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5127,"nodeType":"IfStatement","src":"10829:48:29","trueBody":{"id":5126,"nodeType":"Block","src":"10844:33:29","statements":[{"expression":{"hexValue":"30","id":5124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10865:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5111,"id":5125,"nodeType":"Return","src":"10858:8:29"}]}},{"body":{"id":5160,"nodeType":"Block","src":"10906:532:29","statements":[{"assignments":[5132],"declarations":[{"constant":false,"id":5132,"mutability":"mutable","name":"mid","nameLocation":"10928:3:29","nodeType":"VariableDeclaration","scope":5160,"src":"10920:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5131,"name":"uint256","nodeType":"ElementaryTypeName","src":"10920:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5138,"initialValue":{"arguments":[{"id":5135,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"10947:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5136,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5117,"src":"10952:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5133,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9000,"src":"10934:4:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$9000_$","typeString":"type(library Math)"}},"id":5134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10939:7:29","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":7729,"src":"10934:12:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10934:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10920:37:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":5140,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5105,"src":"11195:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":5141,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5132,"src":"11202:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5139,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[5381,5407,5433],"referencedDeclaration":5433,"src":"11182:12:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$5856_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":5142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11182:24:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$5856_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":5143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11207:5:29","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":5855,"src":"11182:30:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5144,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"11215:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11182:40:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5158,"nodeType":"Block","src":"11385:43:29","statements":[{"expression":{"id":5156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5154,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5117,"src":"11403:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5155,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5132,"src":"11410:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11403:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5157,"nodeType":"ExpressionStatement","src":"11403:10:29"}]},"id":5159,"nodeType":"IfStatement","src":"11178:250:29","trueBody":{"id":5153,"nodeType":"Block","src":"11224:155:29","statements":[{"id":5152,"nodeType":"UncheckedBlock","src":"11301:64:29","statements":[{"expression":{"id":5150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5146,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"11333:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5147,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5132,"src":"11339:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11345:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11339:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11333:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5151,"nodeType":"ExpressionStatement","src":"11333:13:29"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5128,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"10894:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5129,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5117,"src":"10900:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10894:10:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5161,"nodeType":"WhileStatement","src":"10887:551:29"},{"expression":{"id":5162,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"11455:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5111,"id":5163,"nodeType":"Return","src":"11448:10:29"}]},"documentation":{"id":5102,"nodeType":"StructuredDocumentation","src":"10245:412:29","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value greater or equal than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound]."},"id":5165,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBound","nameLocation":"10671:10:29","nodeType":"FunctionDefinition","parameters":{"id":5108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5105,"mutability":"mutable","name":"array","nameLocation":"10700:5:29","nodeType":"VariableDeclaration","scope":5165,"src":"10682:23:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5103,"name":"uint256","nodeType":"ElementaryTypeName","src":"10682:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5104,"nodeType":"ArrayTypeName","src":"10682:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5107,"mutability":"mutable","name":"element","nameLocation":"10715:7:29","nodeType":"VariableDeclaration","scope":5165,"src":"10707:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5106,"name":"uint256","nodeType":"ElementaryTypeName","src":"10707:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10681:42:29"},"returnParameters":{"id":5111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5165,"src":"10747:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5109,"name":"uint256","nodeType":"ElementaryTypeName","src":"10747:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10746:9:29"},"scope":5506,"src":"10662:803:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5228,"nodeType":"Block","src":"11982:709:29","statements":[{"assignments":[5177],"declarations":[{"constant":false,"id":5177,"mutability":"mutable","name":"low","nameLocation":"12000:3:29","nodeType":"VariableDeclaration","scope":5228,"src":"11992:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5176,"name":"uint256","nodeType":"ElementaryTypeName","src":"11992:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5179,"initialValue":{"hexValue":"30","id":5178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12006:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11992:15:29"},{"assignments":[5181],"declarations":[{"constant":false,"id":5181,"mutability":"mutable","name":"high","nameLocation":"12025:4:29","nodeType":"VariableDeclaration","scope":5228,"src":"12017:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5180,"name":"uint256","nodeType":"ElementaryTypeName","src":"12017:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5184,"initialValue":{"expression":{"id":5182,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5169,"src":"12032:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":5183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12038:6:29","memberName":"length","nodeType":"MemberAccess","src":"12032:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12017:27:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5185,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"12059:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12059:9:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5191,"nodeType":"IfStatement","src":"12055:48:29","trueBody":{"id":5190,"nodeType":"Block","src":"12070:33:29","statements":[{"expression":{"hexValue":"30","id":5188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12091:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5175,"id":5189,"nodeType":"Return","src":"12084:8:29"}]}},{"body":{"id":5224,"nodeType":"Block","src":"12132:532:29","statements":[{"assignments":[5196],"declarations":[{"constant":false,"id":5196,"mutability":"mutable","name":"mid","nameLocation":"12154:3:29","nodeType":"VariableDeclaration","scope":5224,"src":"12146:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5195,"name":"uint256","nodeType":"ElementaryTypeName","src":"12146:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5202,"initialValue":{"arguments":[{"id":5199,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"12173:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5200,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"12178:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5197,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9000,"src":"12160:4:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$9000_$","typeString":"type(library Math)"}},"id":5198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12165:7:29","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":7729,"src":"12160:12:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12160:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12146:37:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":5204,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5169,"src":"12421:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":5205,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5196,"src":"12428:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5203,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[5381,5407,5433],"referencedDeclaration":5433,"src":"12408:12:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$5856_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":5206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12408:24:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$5856_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":5207,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12433:5:29","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":5855,"src":"12408:30:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5208,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"12441:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12408:40:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5222,"nodeType":"Block","src":"12499:155:29","statements":[{"id":5221,"nodeType":"UncheckedBlock","src":"12576:64:29","statements":[{"expression":{"id":5219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5215,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"12608:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5216,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5196,"src":"12614:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12614:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12608:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5220,"nodeType":"ExpressionStatement","src":"12608:13:29"}]}]},"id":5223,"nodeType":"IfStatement","src":"12404:250:29","trueBody":{"id":5214,"nodeType":"Block","src":"12450:43:29","statements":[{"expression":{"id":5212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5210,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"12468:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5211,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5196,"src":"12475:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12468:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5213,"nodeType":"ExpressionStatement","src":"12468:10:29"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5192,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"12120:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5193,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"12126:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12120:10:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5225,"nodeType":"WhileStatement","src":"12113:551:29"},{"expression":{"id":5226,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"12681:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5175,"id":5227,"nodeType":"Return","src":"12674:10:29"}]},"documentation":{"id":5166,"nodeType":"StructuredDocumentation","src":"11471:412:29","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value strictly greater than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound]."},"id":5229,"implemented":true,"kind":"function","modifiers":[],"name":"upperBound","nameLocation":"11897:10:29","nodeType":"FunctionDefinition","parameters":{"id":5172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5169,"mutability":"mutable","name":"array","nameLocation":"11926:5:29","nodeType":"VariableDeclaration","scope":5229,"src":"11908:23:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5167,"name":"uint256","nodeType":"ElementaryTypeName","src":"11908:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5168,"nodeType":"ArrayTypeName","src":"11908:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5171,"mutability":"mutable","name":"element","nameLocation":"11941:7:29","nodeType":"VariableDeclaration","scope":5229,"src":"11933:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5170,"name":"uint256","nodeType":"ElementaryTypeName","src":"11933:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11907:42:29"},"returnParameters":{"id":5175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5174,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5229,"src":"11973:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5173,"name":"uint256","nodeType":"ElementaryTypeName","src":"11973:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11972:9:29"},"scope":5506,"src":"11888:803:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5291,"nodeType":"Block","src":"12875:709:29","statements":[{"assignments":[5241],"declarations":[{"constant":false,"id":5241,"mutability":"mutable","name":"low","nameLocation":"12893:3:29","nodeType":"VariableDeclaration","scope":5291,"src":"12885:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5240,"name":"uint256","nodeType":"ElementaryTypeName","src":"12885:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5243,"initialValue":{"hexValue":"30","id":5242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12899:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12885:15:29"},{"assignments":[5245],"declarations":[{"constant":false,"id":5245,"mutability":"mutable","name":"high","nameLocation":"12918:4:29","nodeType":"VariableDeclaration","scope":5291,"src":"12910:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5244,"name":"uint256","nodeType":"ElementaryTypeName","src":"12910:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5248,"initialValue":{"expression":{"id":5246,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"12925:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12931:6:29","memberName":"length","nodeType":"MemberAccess","src":"12925:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12910:27:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5249,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"12952:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12960:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12952:9:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5255,"nodeType":"IfStatement","src":"12948:48:29","trueBody":{"id":5254,"nodeType":"Block","src":"12963:33:29","statements":[{"expression":{"hexValue":"30","id":5252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12984:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5239,"id":5253,"nodeType":"Return","src":"12977:8:29"}]}},{"body":{"id":5287,"nodeType":"Block","src":"13025:532:29","statements":[{"assignments":[5260],"declarations":[{"constant":false,"id":5260,"mutability":"mutable","name":"mid","nameLocation":"13047:3:29","nodeType":"VariableDeclaration","scope":5287,"src":"13039:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5259,"name":"uint256","nodeType":"ElementaryTypeName","src":"13039:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5266,"initialValue":{"arguments":[{"id":5263,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"13066:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5264,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"13071:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5261,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9000,"src":"13053:4:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$9000_$","typeString":"type(library Math)"}},"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13058:7:29","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":7729,"src":"13053:12:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13053:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13039:37:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5268,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"13320:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":5269,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"13327:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5267,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[5446,5459,5472],"referencedDeclaration":5472,"src":"13301:18:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":5270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13301:30:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5271,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5235,"src":"13334:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13301:40:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5285,"nodeType":"Block","src":"13504:43:29","statements":[{"expression":{"id":5283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5281,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"13522:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5282,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"13529:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13522:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5284,"nodeType":"ExpressionStatement","src":"13522:10:29"}]},"id":5286,"nodeType":"IfStatement","src":"13297:250:29","trueBody":{"id":5280,"nodeType":"Block","src":"13343:155:29","statements":[{"id":5279,"nodeType":"UncheckedBlock","src":"13420:64:29","statements":[{"expression":{"id":5277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5273,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"13452:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5274,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"13458:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13464:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13458:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13452:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5278,"nodeType":"ExpressionStatement","src":"13452:13:29"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5256,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"13013:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5257,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"13019:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13013:10:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5288,"nodeType":"WhileStatement","src":"13006:551:29"},{"expression":{"id":5289,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"13574:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5239,"id":5290,"nodeType":"Return","src":"13567:10:29"}]},"documentation":{"id":5230,"nodeType":"StructuredDocumentation","src":"12697:74:29","text":" @dev Same as {lowerBound}, but with an array in memory."},"id":5292,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBoundMemory","nameLocation":"12785:16:29","nodeType":"FunctionDefinition","parameters":{"id":5236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5233,"mutability":"mutable","name":"array","nameLocation":"12819:5:29","nodeType":"VariableDeclaration","scope":5292,"src":"12802:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5231,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5232,"nodeType":"ArrayTypeName","src":"12802:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5235,"mutability":"mutable","name":"element","nameLocation":"12834:7:29","nodeType":"VariableDeclaration","scope":5292,"src":"12826:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5234,"name":"uint256","nodeType":"ElementaryTypeName","src":"12826:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12801:41:29"},"returnParameters":{"id":5239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5292,"src":"12866:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5237,"name":"uint256","nodeType":"ElementaryTypeName","src":"12866:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12865:9:29"},"scope":5506,"src":"12776:808:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5354,"nodeType":"Block","src":"13768:709:29","statements":[{"assignments":[5304],"declarations":[{"constant":false,"id":5304,"mutability":"mutable","name":"low","nameLocation":"13786:3:29","nodeType":"VariableDeclaration","scope":5354,"src":"13778:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5303,"name":"uint256","nodeType":"ElementaryTypeName","src":"13778:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5306,"initialValue":{"hexValue":"30","id":5305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13792:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13778:15:29"},{"assignments":[5308],"declarations":[{"constant":false,"id":5308,"mutability":"mutable","name":"high","nameLocation":"13811:4:29","nodeType":"VariableDeclaration","scope":5354,"src":"13803:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5307,"name":"uint256","nodeType":"ElementaryTypeName","src":"13803:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5311,"initialValue":{"expression":{"id":5309,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5296,"src":"13818:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13824:6:29","memberName":"length","nodeType":"MemberAccess","src":"13818:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13803:27:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5312,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5308,"src":"13845:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13853:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13845:9:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5318,"nodeType":"IfStatement","src":"13841:48:29","trueBody":{"id":5317,"nodeType":"Block","src":"13856:33:29","statements":[{"expression":{"hexValue":"30","id":5315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13877:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5302,"id":5316,"nodeType":"Return","src":"13870:8:29"}]}},{"body":{"id":5350,"nodeType":"Block","src":"13918:532:29","statements":[{"assignments":[5323],"declarations":[{"constant":false,"id":5323,"mutability":"mutable","name":"mid","nameLocation":"13940:3:29","nodeType":"VariableDeclaration","scope":5350,"src":"13932:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5322,"name":"uint256","nodeType":"ElementaryTypeName","src":"13932:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5329,"initialValue":{"arguments":[{"id":5326,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5304,"src":"13959:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5327,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5308,"src":"13964:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5324,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9000,"src":"13946:4:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$9000_$","typeString":"type(library Math)"}},"id":5325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13951:7:29","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":7729,"src":"13946:12:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13946:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13932:37:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5331,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5296,"src":"14213:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":5332,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5323,"src":"14220:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5330,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[5446,5459,5472],"referencedDeclaration":5472,"src":"14194:18:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":5333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14194:30:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5334,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"14227:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14194:40:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5348,"nodeType":"Block","src":"14285:155:29","statements":[{"id":5347,"nodeType":"UncheckedBlock","src":"14362:64:29","statements":[{"expression":{"id":5345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5341,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5304,"src":"14394:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5342,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5323,"src":"14400:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14406:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14400:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14394:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5346,"nodeType":"ExpressionStatement","src":"14394:13:29"}]}]},"id":5349,"nodeType":"IfStatement","src":"14190:250:29","trueBody":{"id":5340,"nodeType":"Block","src":"14236:43:29","statements":[{"expression":{"id":5338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5336,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5308,"src":"14254:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5337,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5323,"src":"14261:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14254:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5339,"nodeType":"ExpressionStatement","src":"14254:10:29"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5319,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5304,"src":"13906:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5320,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5308,"src":"13912:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13906:10:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5351,"nodeType":"WhileStatement","src":"13899:551:29"},{"expression":{"id":5352,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5304,"src":"14467:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5302,"id":5353,"nodeType":"Return","src":"14460:10:29"}]},"documentation":{"id":5293,"nodeType":"StructuredDocumentation","src":"13590:74:29","text":" @dev Same as {upperBound}, but with an array in memory."},"id":5355,"implemented":true,"kind":"function","modifiers":[],"name":"upperBoundMemory","nameLocation":"13678:16:29","nodeType":"FunctionDefinition","parameters":{"id":5299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5296,"mutability":"mutable","name":"array","nameLocation":"13712:5:29","nodeType":"VariableDeclaration","scope":5355,"src":"13695:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5294,"name":"uint256","nodeType":"ElementaryTypeName","src":"13695:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5295,"nodeType":"ArrayTypeName","src":"13695:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5298,"mutability":"mutable","name":"element","nameLocation":"13727:7:29","nodeType":"VariableDeclaration","scope":5355,"src":"13719:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5297,"name":"uint256","nodeType":"ElementaryTypeName","src":"13719:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13694:41:29"},"returnParameters":{"id":5302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5355,"src":"13759:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5300,"name":"uint256","nodeType":"ElementaryTypeName","src":"13759:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13758:9:29"},"scope":5506,"src":"13669:808:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5380,"nodeType":"Block","src":"14793:167:29","statements":[{"assignments":[5368],"declarations":[{"constant":false,"id":5368,"mutability":"mutable","name":"slot","nameLocation":"14811:4:29","nodeType":"VariableDeclaration","scope":5380,"src":"14803:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5367,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14803:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5369,"nodeType":"VariableDeclarationStatement","src":"14803:12:29"},{"AST":{"nativeSrc":"14850:40:29","nodeType":"YulBlock","src":"14850:40:29","statements":[{"nativeSrc":"14864:16:29","nodeType":"YulAssignment","src":"14864:16:29","value":{"name":"arr.slot","nativeSrc":"14872:8:29","nodeType":"YulIdentifier","src":"14872:8:29"},"variableNames":[{"name":"slot","nativeSrc":"14864:4:29","nodeType":"YulIdentifier","src":"14864:4:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5359,"isOffset":false,"isSlot":true,"src":"14872:8:29","suffix":"slot","valueSize":1},{"declaration":5368,"isOffset":false,"isSlot":false,"src":"14864:4:29","valueSize":1}],"flags":["memory-safe"],"id":5370,"nodeType":"InlineAssembly","src":"14825:65:29"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":5375,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"14932:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5371,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5368,"src":"14906:4:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14911:11:29","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":5756,"src":"14906:16:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:18:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14925:6:29","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":5746,"src":"14906:25:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":5376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:30:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14937:14:29","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":5876,"src":"14906:45:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$5847_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":5378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:47:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$5847_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"functionReturnParameters":5366,"id":5379,"nodeType":"Return","src":"14899:54:29"}]},"documentation":{"id":5356,"nodeType":"StructuredDocumentation","src":"14483:191:29","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":5381,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"14688:12:29","nodeType":"FunctionDefinition","parameters":{"id":5362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5359,"mutability":"mutable","name":"arr","nameLocation":"14719:3:29","nodeType":"VariableDeclaration","scope":5381,"src":"14701:21:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5357,"name":"address","nodeType":"ElementaryTypeName","src":"14701:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5358,"nodeType":"ArrayTypeName","src":"14701:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":5361,"mutability":"mutable","name":"pos","nameLocation":"14732:3:29","nodeType":"VariableDeclaration","scope":5381,"src":"14724:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5360,"name":"uint256","nodeType":"ElementaryTypeName","src":"14724:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14700:36:29"},"returnParameters":{"id":5366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5381,"src":"14760:31:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$5847_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":5364,"nodeType":"UserDefinedTypeName","pathNode":{"id":5363,"name":"StorageSlot.AddressSlot","nameLocations":["14760:11:29","14772:11:29"],"nodeType":"IdentifierPath","referencedDeclaration":5847,"src":"14760:23:29"},"referencedDeclaration":5847,"src":"14760:23:29","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$5847_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"14759:33:29"},"scope":5506,"src":"14679:281:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5406,"nodeType":"Block","src":"15276:167:29","statements":[{"assignments":[5394],"declarations":[{"constant":false,"id":5394,"mutability":"mutable","name":"slot","nameLocation":"15294:4:29","nodeType":"VariableDeclaration","scope":5406,"src":"15286:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5393,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15286:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5395,"nodeType":"VariableDeclarationStatement","src":"15286:12:29"},{"AST":{"nativeSrc":"15333:40:29","nodeType":"YulBlock","src":"15333:40:29","statements":[{"nativeSrc":"15347:16:29","nodeType":"YulAssignment","src":"15347:16:29","value":{"name":"arr.slot","nativeSrc":"15355:8:29","nodeType":"YulIdentifier","src":"15355:8:29"},"variableNames":[{"name":"slot","nativeSrc":"15347:4:29","nodeType":"YulIdentifier","src":"15347:4:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5385,"isOffset":false,"isSlot":true,"src":"15355:8:29","suffix":"slot","valueSize":1},{"declaration":5394,"isOffset":false,"isSlot":false,"src":"15347:4:29","valueSize":1}],"flags":["memory-safe"],"id":5396,"nodeType":"InlineAssembly","src":"15308:65:29"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":5401,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5387,"src":"15415:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5397,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"15389:4:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15394:11:29","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":5756,"src":"15389:16:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":5399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:18:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15408:6:29","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":5746,"src":"15389:25:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":5402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:30:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15420:14:29","memberName":"getBytes32Slot","nodeType":"MemberAccess","referencedDeclaration":5898,"src":"15389:45:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$5853_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"}},"id":5404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:47:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$5853_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot storage pointer"}},"functionReturnParameters":5392,"id":5405,"nodeType":"Return","src":"15382:54:29"}]},"documentation":{"id":5382,"nodeType":"StructuredDocumentation","src":"14966:191:29","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":5407,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15171:12:29","nodeType":"FunctionDefinition","parameters":{"id":5388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5385,"mutability":"mutable","name":"arr","nameLocation":"15202:3:29","nodeType":"VariableDeclaration","scope":5407,"src":"15184:21:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5383,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15184:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5384,"nodeType":"ArrayTypeName","src":"15184:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":5387,"mutability":"mutable","name":"pos","nameLocation":"15215:3:29","nodeType":"VariableDeclaration","scope":5407,"src":"15207:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5386,"name":"uint256","nodeType":"ElementaryTypeName","src":"15207:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15183:36:29"},"returnParameters":{"id":5392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5407,"src":"15243:31:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$5853_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":5390,"nodeType":"UserDefinedTypeName","pathNode":{"id":5389,"name":"StorageSlot.Bytes32Slot","nameLocations":["15243:11:29","15255:11:29"],"nodeType":"IdentifierPath","referencedDeclaration":5853,"src":"15243:23:29"},"referencedDeclaration":5853,"src":"15243:23:29","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$5853_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"15242:33:29"},"scope":5506,"src":"15162:281:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5432,"nodeType":"Block","src":"15759:167:29","statements":[{"assignments":[5420],"declarations":[{"constant":false,"id":5420,"mutability":"mutable","name":"slot","nameLocation":"15777:4:29","nodeType":"VariableDeclaration","scope":5432,"src":"15769:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5419,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15769:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5421,"nodeType":"VariableDeclarationStatement","src":"15769:12:29"},{"AST":{"nativeSrc":"15816:40:29","nodeType":"YulBlock","src":"15816:40:29","statements":[{"nativeSrc":"15830:16:29","nodeType":"YulAssignment","src":"15830:16:29","value":{"name":"arr.slot","nativeSrc":"15838:8:29","nodeType":"YulIdentifier","src":"15838:8:29"},"variableNames":[{"name":"slot","nativeSrc":"15830:4:29","nodeType":"YulIdentifier","src":"15830:4:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5411,"isOffset":false,"isSlot":true,"src":"15838:8:29","suffix":"slot","valueSize":1},{"declaration":5420,"isOffset":false,"isSlot":false,"src":"15830:4:29","valueSize":1}],"flags":["memory-safe"],"id":5422,"nodeType":"InlineAssembly","src":"15791:65:29"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":5427,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5413,"src":"15898:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5423,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5420,"src":"15872:4:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15877:11:29","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":5756,"src":"15872:16:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":5425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:18:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15891:6:29","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":5746,"src":"15872:25:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":5428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:30:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15903:14:29","memberName":"getUint256Slot","nodeType":"MemberAccess","referencedDeclaration":5909,"src":"15872:45:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$5856_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:47:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$5856_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"functionReturnParameters":5418,"id":5431,"nodeType":"Return","src":"15865:54:29"}]},"documentation":{"id":5408,"nodeType":"StructuredDocumentation","src":"15449:191:29","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":5433,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15654:12:29","nodeType":"FunctionDefinition","parameters":{"id":5414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5411,"mutability":"mutable","name":"arr","nameLocation":"15685:3:29","nodeType":"VariableDeclaration","scope":5433,"src":"15667:21:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5409,"name":"uint256","nodeType":"ElementaryTypeName","src":"15667:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5410,"nodeType":"ArrayTypeName","src":"15667:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5413,"mutability":"mutable","name":"pos","nameLocation":"15698:3:29","nodeType":"VariableDeclaration","scope":5433,"src":"15690:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5412,"name":"uint256","nodeType":"ElementaryTypeName","src":"15690:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15666:36:29"},"returnParameters":{"id":5418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5433,"src":"15726:31:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$5856_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":5416,"nodeType":"UserDefinedTypeName","pathNode":{"id":5415,"name":"StorageSlot.Uint256Slot","nameLocations":["15726:11:29","15738:11:29"],"nodeType":"IdentifierPath","referencedDeclaration":5856,"src":"15726:23:29"},"referencedDeclaration":5856,"src":"15726:23:29","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$5856_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"15725:33:29"},"scope":5506,"src":"15645:281:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5445,"nodeType":"Block","src":"16227:98:29","statements":[{"AST":{"nativeSrc":"16246:73:29","nodeType":"YulBlock","src":"16246:73:29","statements":[{"nativeSrc":"16260:49:29","nodeType":"YulAssignment","src":"16260:49:29","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"16281:3:29","nodeType":"YulIdentifier","src":"16281:3:29"},{"kind":"number","nativeSrc":"16286:4:29","nodeType":"YulLiteral","src":"16286:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16277:3:29","nodeType":"YulIdentifier","src":"16277:3:29"},"nativeSrc":"16277:14:29","nodeType":"YulFunctionCall","src":"16277:14:29"},{"arguments":[{"name":"pos","nativeSrc":"16297:3:29","nodeType":"YulIdentifier","src":"16297:3:29"},{"kind":"number","nativeSrc":"16302:4:29","nodeType":"YulLiteral","src":"16302:4:29","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"16293:3:29","nodeType":"YulIdentifier","src":"16293:3:29"},"nativeSrc":"16293:14:29","nodeType":"YulFunctionCall","src":"16293:14:29"}],"functionName":{"name":"add","nativeSrc":"16273:3:29","nodeType":"YulIdentifier","src":"16273:3:29"},"nativeSrc":"16273:35:29","nodeType":"YulFunctionCall","src":"16273:35:29"}],"functionName":{"name":"mload","nativeSrc":"16267:5:29","nodeType":"YulIdentifier","src":"16267:5:29"},"nativeSrc":"16267:42:29","nodeType":"YulFunctionCall","src":"16267:42:29"},"variableNames":[{"name":"res","nativeSrc":"16260:3:29","nodeType":"YulIdentifier","src":"16260:3:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5437,"isOffset":false,"isSlot":false,"src":"16281:3:29","valueSize":1},{"declaration":5439,"isOffset":false,"isSlot":false,"src":"16297:3:29","valueSize":1},{"declaration":5442,"isOffset":false,"isSlot":false,"src":"16260:3:29","valueSize":1}],"id":5444,"nodeType":"InlineAssembly","src":"16237:82:29"}]},"documentation":{"id":5434,"nodeType":"StructuredDocumentation","src":"15932:191:29","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":5446,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16137:18:29","nodeType":"FunctionDefinition","parameters":{"id":5440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5437,"mutability":"mutable","name":"arr","nameLocation":"16173:3:29","nodeType":"VariableDeclaration","scope":5446,"src":"16156:20:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5435,"name":"address","nodeType":"ElementaryTypeName","src":"16156:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5436,"nodeType":"ArrayTypeName","src":"16156:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":5439,"mutability":"mutable","name":"pos","nameLocation":"16186:3:29","nodeType":"VariableDeclaration","scope":5446,"src":"16178:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5438,"name":"uint256","nodeType":"ElementaryTypeName","src":"16178:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16155:35:29"},"returnParameters":{"id":5443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5442,"mutability":"mutable","name":"res","nameLocation":"16222:3:29","nodeType":"VariableDeclaration","scope":5446,"src":"16214:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5441,"name":"address","nodeType":"ElementaryTypeName","src":"16214:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16213:13:29"},"scope":5506,"src":"16128:197:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5458,"nodeType":"Block","src":"16626:98:29","statements":[{"AST":{"nativeSrc":"16645:73:29","nodeType":"YulBlock","src":"16645:73:29","statements":[{"nativeSrc":"16659:49:29","nodeType":"YulAssignment","src":"16659:49:29","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"16680:3:29","nodeType":"YulIdentifier","src":"16680:3:29"},{"kind":"number","nativeSrc":"16685:4:29","nodeType":"YulLiteral","src":"16685:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16676:3:29","nodeType":"YulIdentifier","src":"16676:3:29"},"nativeSrc":"16676:14:29","nodeType":"YulFunctionCall","src":"16676:14:29"},{"arguments":[{"name":"pos","nativeSrc":"16696:3:29","nodeType":"YulIdentifier","src":"16696:3:29"},{"kind":"number","nativeSrc":"16701:4:29","nodeType":"YulLiteral","src":"16701:4:29","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"16692:3:29","nodeType":"YulIdentifier","src":"16692:3:29"},"nativeSrc":"16692:14:29","nodeType":"YulFunctionCall","src":"16692:14:29"}],"functionName":{"name":"add","nativeSrc":"16672:3:29","nodeType":"YulIdentifier","src":"16672:3:29"},"nativeSrc":"16672:35:29","nodeType":"YulFunctionCall","src":"16672:35:29"}],"functionName":{"name":"mload","nativeSrc":"16666:5:29","nodeType":"YulIdentifier","src":"16666:5:29"},"nativeSrc":"16666:42:29","nodeType":"YulFunctionCall","src":"16666:42:29"},"variableNames":[{"name":"res","nativeSrc":"16659:3:29","nodeType":"YulIdentifier","src":"16659:3:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5450,"isOffset":false,"isSlot":false,"src":"16680:3:29","valueSize":1},{"declaration":5452,"isOffset":false,"isSlot":false,"src":"16696:3:29","valueSize":1},{"declaration":5455,"isOffset":false,"isSlot":false,"src":"16659:3:29","valueSize":1}],"id":5457,"nodeType":"InlineAssembly","src":"16636:82:29"}]},"documentation":{"id":5447,"nodeType":"StructuredDocumentation","src":"16331:191:29","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":5459,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16536:18:29","nodeType":"FunctionDefinition","parameters":{"id":5453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5450,"mutability":"mutable","name":"arr","nameLocation":"16572:3:29","nodeType":"VariableDeclaration","scope":5459,"src":"16555:20:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5448,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16555:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5449,"nodeType":"ArrayTypeName","src":"16555:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":5452,"mutability":"mutable","name":"pos","nameLocation":"16585:3:29","nodeType":"VariableDeclaration","scope":5459,"src":"16577:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5451,"name":"uint256","nodeType":"ElementaryTypeName","src":"16577:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16554:35:29"},"returnParameters":{"id":5456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5455,"mutability":"mutable","name":"res","nameLocation":"16621:3:29","nodeType":"VariableDeclaration","scope":5459,"src":"16613:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5454,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16613:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16612:13:29"},"scope":5506,"src":"16527:197:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5471,"nodeType":"Block","src":"17025:98:29","statements":[{"AST":{"nativeSrc":"17044:73:29","nodeType":"YulBlock","src":"17044:73:29","statements":[{"nativeSrc":"17058:49:29","nodeType":"YulAssignment","src":"17058:49:29","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"17079:3:29","nodeType":"YulIdentifier","src":"17079:3:29"},{"kind":"number","nativeSrc":"17084:4:29","nodeType":"YulLiteral","src":"17084:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17075:3:29","nodeType":"YulIdentifier","src":"17075:3:29"},"nativeSrc":"17075:14:29","nodeType":"YulFunctionCall","src":"17075:14:29"},{"arguments":[{"name":"pos","nativeSrc":"17095:3:29","nodeType":"YulIdentifier","src":"17095:3:29"},{"kind":"number","nativeSrc":"17100:4:29","nodeType":"YulLiteral","src":"17100:4:29","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"17091:3:29","nodeType":"YulIdentifier","src":"17091:3:29"},"nativeSrc":"17091:14:29","nodeType":"YulFunctionCall","src":"17091:14:29"}],"functionName":{"name":"add","nativeSrc":"17071:3:29","nodeType":"YulIdentifier","src":"17071:3:29"},"nativeSrc":"17071:35:29","nodeType":"YulFunctionCall","src":"17071:35:29"}],"functionName":{"name":"mload","nativeSrc":"17065:5:29","nodeType":"YulIdentifier","src":"17065:5:29"},"nativeSrc":"17065:42:29","nodeType":"YulFunctionCall","src":"17065:42:29"},"variableNames":[{"name":"res","nativeSrc":"17058:3:29","nodeType":"YulIdentifier","src":"17058:3:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5463,"isOffset":false,"isSlot":false,"src":"17079:3:29","valueSize":1},{"declaration":5465,"isOffset":false,"isSlot":false,"src":"17095:3:29","valueSize":1},{"declaration":5468,"isOffset":false,"isSlot":false,"src":"17058:3:29","valueSize":1}],"id":5470,"nodeType":"InlineAssembly","src":"17035:82:29"}]},"documentation":{"id":5460,"nodeType":"StructuredDocumentation","src":"16730:191:29","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":5472,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16935:18:29","nodeType":"FunctionDefinition","parameters":{"id":5466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5463,"mutability":"mutable","name":"arr","nameLocation":"16971:3:29","nodeType":"VariableDeclaration","scope":5472,"src":"16954:20:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5461,"name":"uint256","nodeType":"ElementaryTypeName","src":"16954:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5462,"nodeType":"ArrayTypeName","src":"16954:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5465,"mutability":"mutable","name":"pos","nameLocation":"16984:3:29","nodeType":"VariableDeclaration","scope":5472,"src":"16976:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5464,"name":"uint256","nodeType":"ElementaryTypeName","src":"16976:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16953:35:29"},"returnParameters":{"id":5469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5468,"mutability":"mutable","name":"res","nameLocation":"17020:3:29","nodeType":"VariableDeclaration","scope":5472,"src":"17012:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5467,"name":"uint256","nodeType":"ElementaryTypeName","src":"17012:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17011:13:29"},"scope":5506,"src":"16926:197:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5482,"nodeType":"Block","src":"17439:88:29","statements":[{"AST":{"nativeSrc":"17474:47:29","nodeType":"YulBlock","src":"17474:47:29","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"17495:10:29","nodeType":"YulIdentifier","src":"17495:10:29"},{"name":"len","nativeSrc":"17507:3:29","nodeType":"YulIdentifier","src":"17507:3:29"}],"functionName":{"name":"sstore","nativeSrc":"17488:6:29","nodeType":"YulIdentifier","src":"17488:6:29"},"nativeSrc":"17488:23:29","nodeType":"YulFunctionCall","src":"17488:23:29"},"nativeSrc":"17488:23:29","nodeType":"YulExpressionStatement","src":"17488:23:29"}]},"evmVersion":"paris","externalReferences":[{"declaration":5476,"isOffset":false,"isSlot":true,"src":"17495:10:29","suffix":"slot","valueSize":1},{"declaration":5478,"isOffset":false,"isSlot":false,"src":"17507:3:29","valueSize":1}],"flags":["memory-safe"],"id":5481,"nodeType":"InlineAssembly","src":"17449:72:29"}]},"documentation":{"id":5473,"nodeType":"StructuredDocumentation","src":"17129:233:29","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":5483,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"17376:15:29","nodeType":"FunctionDefinition","parameters":{"id":5479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5476,"mutability":"mutable","name":"array","nameLocation":"17410:5:29","nodeType":"VariableDeclaration","scope":5483,"src":"17392:23:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5474,"name":"address","nodeType":"ElementaryTypeName","src":"17392:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5475,"nodeType":"ArrayTypeName","src":"17392:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":5478,"mutability":"mutable","name":"len","nameLocation":"17425:3:29","nodeType":"VariableDeclaration","scope":5483,"src":"17417:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5477,"name":"uint256","nodeType":"ElementaryTypeName","src":"17417:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17391:38:29"},"returnParameters":{"id":5480,"nodeType":"ParameterList","parameters":[],"src":"17439:0:29"},"scope":5506,"src":"17367:160:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5493,"nodeType":"Block","src":"17843:88:29","statements":[{"AST":{"nativeSrc":"17878:47:29","nodeType":"YulBlock","src":"17878:47:29","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"17899:10:29","nodeType":"YulIdentifier","src":"17899:10:29"},{"name":"len","nativeSrc":"17911:3:29","nodeType":"YulIdentifier","src":"17911:3:29"}],"functionName":{"name":"sstore","nativeSrc":"17892:6:29","nodeType":"YulIdentifier","src":"17892:6:29"},"nativeSrc":"17892:23:29","nodeType":"YulFunctionCall","src":"17892:23:29"},"nativeSrc":"17892:23:29","nodeType":"YulExpressionStatement","src":"17892:23:29"}]},"evmVersion":"paris","externalReferences":[{"declaration":5487,"isOffset":false,"isSlot":true,"src":"17899:10:29","suffix":"slot","valueSize":1},{"declaration":5489,"isOffset":false,"isSlot":false,"src":"17911:3:29","valueSize":1}],"flags":["memory-safe"],"id":5492,"nodeType":"InlineAssembly","src":"17853:72:29"}]},"documentation":{"id":5484,"nodeType":"StructuredDocumentation","src":"17533:233:29","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":5494,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"17780:15:29","nodeType":"FunctionDefinition","parameters":{"id":5490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5487,"mutability":"mutable","name":"array","nameLocation":"17814:5:29","nodeType":"VariableDeclaration","scope":5494,"src":"17796:23:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5485,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17796:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5486,"nodeType":"ArrayTypeName","src":"17796:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":5489,"mutability":"mutable","name":"len","nameLocation":"17829:3:29","nodeType":"VariableDeclaration","scope":5494,"src":"17821:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5488,"name":"uint256","nodeType":"ElementaryTypeName","src":"17821:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17795:38:29"},"returnParameters":{"id":5491,"nodeType":"ParameterList","parameters":[],"src":"17843:0:29"},"scope":5506,"src":"17771:160:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5504,"nodeType":"Block","src":"18247:88:29","statements":[{"AST":{"nativeSrc":"18282:47:29","nodeType":"YulBlock","src":"18282:47:29","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"18303:10:29","nodeType":"YulIdentifier","src":"18303:10:29"},{"name":"len","nativeSrc":"18315:3:29","nodeType":"YulIdentifier","src":"18315:3:29"}],"functionName":{"name":"sstore","nativeSrc":"18296:6:29","nodeType":"YulIdentifier","src":"18296:6:29"},"nativeSrc":"18296:23:29","nodeType":"YulFunctionCall","src":"18296:23:29"},"nativeSrc":"18296:23:29","nodeType":"YulExpressionStatement","src":"18296:23:29"}]},"evmVersion":"paris","externalReferences":[{"declaration":5498,"isOffset":false,"isSlot":true,"src":"18303:10:29","suffix":"slot","valueSize":1},{"declaration":5500,"isOffset":false,"isSlot":false,"src":"18315:3:29","valueSize":1}],"flags":["memory-safe"],"id":5503,"nodeType":"InlineAssembly","src":"18257:72:29"}]},"documentation":{"id":5495,"nodeType":"StructuredDocumentation","src":"17937:233:29","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":5505,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"18184:15:29","nodeType":"FunctionDefinition","parameters":{"id":5501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5498,"mutability":"mutable","name":"array","nameLocation":"18218:5:29","nodeType":"VariableDeclaration","scope":5505,"src":"18200:23:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5496,"name":"uint256","nodeType":"ElementaryTypeName","src":"18200:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5497,"nodeType":"ArrayTypeName","src":"18200:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5500,"mutability":"mutable","name":"len","nameLocation":"18233:3:29","nodeType":"VariableDeclaration","scope":5505,"src":"18225:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5499,"name":"uint256","nodeType":"ElementaryTypeName","src":"18225:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18199:38:29"},"returnParameters":{"id":5502,"nodeType":"ParameterList","parameters":[],"src":"18247:0:29"},"scope":5506,"src":"18175:160:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":5507,"src":"459:17878:29","usedErrors":[],"usedEvents":[]}],"src":"183:18155:29"},"id":29},"@openzeppelin/contracts/utils/Comparators.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","exportedSymbols":{"Comparators":[5538]},"id":5539,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5508,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:30"},{"abstract":false,"baseContracts":[],"canonicalName":"Comparators","contractDependencies":[],"contractKind":"library","documentation":{"id":5509,"nodeType":"StructuredDocumentation","src":"131:92:30","text":" @dev Provides a set of functions to compare values.\n _Available since v5.1._"},"fullyImplemented":true,"id":5538,"linearizedBaseContracts":[5538],"name":"Comparators","nameLocation":"232:11:30","nodeType":"ContractDefinition","nodes":[{"body":{"id":5522,"nodeType":"Block","src":"313:29:30","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5518,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5511,"src":"330:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5519,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"334:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"330:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5517,"id":5521,"nodeType":"Return","src":"323:12:30"}]},"id":5523,"implemented":true,"kind":"function","modifiers":[],"name":"lt","nameLocation":"259:2:30","nodeType":"FunctionDefinition","parameters":{"id":5514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5511,"mutability":"mutable","name":"a","nameLocation":"270:1:30","nodeType":"VariableDeclaration","scope":5523,"src":"262:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5510,"name":"uint256","nodeType":"ElementaryTypeName","src":"262:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5513,"mutability":"mutable","name":"b","nameLocation":"281:1:30","nodeType":"VariableDeclaration","scope":5523,"src":"273:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5512,"name":"uint256","nodeType":"ElementaryTypeName","src":"273:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"261:22:30"},"returnParameters":{"id":5517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5523,"src":"307:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5515,"name":"bool","nodeType":"ElementaryTypeName","src":"307:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"306:6:30"},"scope":5538,"src":"250:92:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5536,"nodeType":"Block","src":"411:29:30","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5532,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5525,"src":"428:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5533,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5527,"src":"432:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"428:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5531,"id":5535,"nodeType":"Return","src":"421:12:30"}]},"id":5537,"implemented":true,"kind":"function","modifiers":[],"name":"gt","nameLocation":"357:2:30","nodeType":"FunctionDefinition","parameters":{"id":5528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5525,"mutability":"mutable","name":"a","nameLocation":"368:1:30","nodeType":"VariableDeclaration","scope":5537,"src":"360:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5524,"name":"uint256","nodeType":"ElementaryTypeName","src":"360:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5527,"mutability":"mutable","name":"b","nameLocation":"379:1:30","nodeType":"VariableDeclaration","scope":5537,"src":"371:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5526,"name":"uint256","nodeType":"ElementaryTypeName","src":"371:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"359:22:30"},"returnParameters":{"id":5531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5537,"src":"405:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5529,"name":"bool","nodeType":"ElementaryTypeName","src":"405:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"404:6:30"},"scope":5538,"src":"348:92:30","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5539,"src":"224:218:30","usedErrors":[],"usedEvents":[]}],"src":"105:338:30"},"id":30},"@openzeppelin/contracts/utils/Create2.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Create2.sol","exportedSymbols":{"Create2":[5637],"Errors":[5659]},"id":5638,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5540,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:31"},{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","file":"./Errors.sol","id":5542,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5638,"sourceUnit":5660,"src":"127:36:31","symbolAliases":[{"foreign":{"id":5541,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"135:6:31","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Create2","contractDependencies":[],"contractKind":"library","documentation":{"id":5543,"nodeType":"StructuredDocumentation","src":"165:367:31","text":" @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n `CREATE2` can be used to compute in advance the address where a smart\n contract will be deployed, which allows for interesting new mechanisms known\n as 'counterfactual interactions'.\n See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n information."},"fullyImplemented":true,"id":5637,"linearizedBaseContracts":[5637],"name":"Create2","nameLocation":"541:7:31","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5544,"nodeType":"StructuredDocumentation","src":"555:50:31","text":" @dev There's no code to deploy."},"errorSelector":"4ca249dc","id":5546,"name":"Create2EmptyBytecode","nameLocation":"616:20:31","nodeType":"ErrorDefinition","parameters":{"id":5545,"nodeType":"ParameterList","parameters":[],"src":"636:2:31"},"src":"610:29:31"},{"body":{"id":5601,"nodeType":"Block","src":"1311:746:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":5560,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1333:4:31","typeDescriptions":{"typeIdentifier":"t_contract$_Create2_$5637","typeString":"library Create2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Create2_$5637","typeString":"library Create2"}],"id":5559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1325:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5558,"name":"address","nodeType":"ElementaryTypeName","src":"1325:7:31","typeDescriptions":{}}},"id":5561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1325:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1339:7:31","memberName":"balance","nodeType":"MemberAccess","src":"1325:21:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5563,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5549,"src":"1349:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1325:30:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5577,"nodeType":"IfStatement","src":"1321:125:31","trueBody":{"id":5576,"nodeType":"Block","src":"1357:89:31","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":5570,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1413:4:31","typeDescriptions":{"typeIdentifier":"t_contract$_Create2_$5637","typeString":"library Create2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Create2_$5637","typeString":"library Create2"}],"id":5569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1405:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5568,"name":"address","nodeType":"ElementaryTypeName","src":"1405:7:31","typeDescriptions":{}}},"id":5571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1405:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1419:7:31","memberName":"balance","nodeType":"MemberAccess","src":"1405:21:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5573,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5549,"src":"1428:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5565,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"1378:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$5659_$","typeString":"type(library Errors)"}},"id":5567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1385:19:31","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":5647,"src":"1378:26:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":5574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1378:57:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5575,"nodeType":"RevertStatement","src":"1371:64:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5578,"name":"bytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5553,"src":"1459:8:31","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1468:6:31","memberName":"length","nodeType":"MemberAccess","src":"1459:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1478:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1459:20:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5586,"nodeType":"IfStatement","src":"1455:80:31","trueBody":{"id":5585,"nodeType":"Block","src":"1481:54:31","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5582,"name":"Create2EmptyBytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5546,"src":"1502:20:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":5583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1502:22:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5584,"nodeType":"RevertStatement","src":"1495:29:31"}]}},{"AST":{"nativeSrc":"1569:392:31","nodeType":"YulBlock","src":"1569:392:31","statements":[{"nativeSrc":"1583:67:31","nodeType":"YulAssignment","src":"1583:67:31","value":{"arguments":[{"name":"amount","nativeSrc":"1599:6:31","nodeType":"YulIdentifier","src":"1599:6:31"},{"arguments":[{"name":"bytecode","nativeSrc":"1611:8:31","nodeType":"YulIdentifier","src":"1611:8:31"},{"kind":"number","nativeSrc":"1621:4:31","nodeType":"YulLiteral","src":"1621:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1607:3:31","nodeType":"YulIdentifier","src":"1607:3:31"},"nativeSrc":"1607:19:31","nodeType":"YulFunctionCall","src":"1607:19:31"},{"arguments":[{"name":"bytecode","nativeSrc":"1634:8:31","nodeType":"YulIdentifier","src":"1634:8:31"}],"functionName":{"name":"mload","nativeSrc":"1628:5:31","nodeType":"YulIdentifier","src":"1628:5:31"},"nativeSrc":"1628:15:31","nodeType":"YulFunctionCall","src":"1628:15:31"},{"name":"salt","nativeSrc":"1645:4:31","nodeType":"YulIdentifier","src":"1645:4:31"}],"functionName":{"name":"create2","nativeSrc":"1591:7:31","nodeType":"YulIdentifier","src":"1591:7:31"},"nativeSrc":"1591:59:31","nodeType":"YulFunctionCall","src":"1591:59:31"},"variableNames":[{"name":"addr","nativeSrc":"1583:4:31","nodeType":"YulIdentifier","src":"1583:4:31"}]},{"body":{"nativeSrc":"1800:151:31","nodeType":"YulBlock","src":"1800:151:31","statements":[{"nativeSrc":"1818:20:31","nodeType":"YulVariableDeclaration","src":"1818:20:31","value":{"arguments":[{"kind":"number","nativeSrc":"1833:4:31","nodeType":"YulLiteral","src":"1833:4:31","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"1827:5:31","nodeType":"YulIdentifier","src":"1827:5:31"},"nativeSrc":"1827:11:31","nodeType":"YulFunctionCall","src":"1827:11:31"},"variables":[{"name":"p","nativeSrc":"1822:1:31","nodeType":"YulTypedName","src":"1822:1:31","type":""}]},{"expression":{"arguments":[{"name":"p","nativeSrc":"1870:1:31","nodeType":"YulIdentifier","src":"1870:1:31"},{"kind":"number","nativeSrc":"1873:1:31","nodeType":"YulLiteral","src":"1873:1:31","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1876:14:31","nodeType":"YulIdentifier","src":"1876:14:31"},"nativeSrc":"1876:16:31","nodeType":"YulFunctionCall","src":"1876:16:31"}],"functionName":{"name":"returndatacopy","nativeSrc":"1855:14:31","nodeType":"YulIdentifier","src":"1855:14:31"},"nativeSrc":"1855:38:31","nodeType":"YulFunctionCall","src":"1855:38:31"},"nativeSrc":"1855:38:31","nodeType":"YulExpressionStatement","src":"1855:38:31"},{"expression":{"arguments":[{"name":"p","nativeSrc":"1917:1:31","nodeType":"YulIdentifier","src":"1917:1:31"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1920:14:31","nodeType":"YulIdentifier","src":"1920:14:31"},"nativeSrc":"1920:16:31","nodeType":"YulFunctionCall","src":"1920:16:31"}],"functionName":{"name":"revert","nativeSrc":"1910:6:31","nodeType":"YulIdentifier","src":"1910:6:31"},"nativeSrc":"1910:27:31","nodeType":"YulFunctionCall","src":"1910:27:31"},"nativeSrc":"1910:27:31","nodeType":"YulExpressionStatement","src":"1910:27:31"}]},"condition":{"arguments":[{"arguments":[{"name":"addr","nativeSrc":"1762:4:31","nodeType":"YulIdentifier","src":"1762:4:31"}],"functionName":{"name":"iszero","nativeSrc":"1755:6:31","nodeType":"YulIdentifier","src":"1755:6:31"},"nativeSrc":"1755:12:31","nodeType":"YulFunctionCall","src":"1755:12:31"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1780:14:31","nodeType":"YulIdentifier","src":"1780:14:31"},"nativeSrc":"1780:16:31","nodeType":"YulFunctionCall","src":"1780:16:31"}],"functionName":{"name":"iszero","nativeSrc":"1773:6:31","nodeType":"YulIdentifier","src":"1773:6:31"},"nativeSrc":"1773:24:31","nodeType":"YulFunctionCall","src":"1773:24:31"}],"functionName":{"name":"not","nativeSrc":"1769:3:31","nodeType":"YulIdentifier","src":"1769:3:31"},"nativeSrc":"1769:29:31","nodeType":"YulFunctionCall","src":"1769:29:31"}],"functionName":{"name":"and","nativeSrc":"1751:3:31","nodeType":"YulIdentifier","src":"1751:3:31"},"nativeSrc":"1751:48:31","nodeType":"YulFunctionCall","src":"1751:48:31"},"nativeSrc":"1748:203:31","nodeType":"YulIf","src":"1748:203:31"}]},"evmVersion":"paris","externalReferences":[{"declaration":5556,"isOffset":false,"isSlot":false,"src":"1583:4:31","valueSize":1},{"declaration":5556,"isOffset":false,"isSlot":false,"src":"1762:4:31","valueSize":1},{"declaration":5549,"isOffset":false,"isSlot":false,"src":"1599:6:31","valueSize":1},{"declaration":5553,"isOffset":false,"isSlot":false,"src":"1611:8:31","valueSize":1},{"declaration":5553,"isOffset":false,"isSlot":false,"src":"1634:8:31","valueSize":1},{"declaration":5551,"isOffset":false,"isSlot":false,"src":"1645:4:31","valueSize":1}],"flags":["memory-safe"],"id":5587,"nodeType":"InlineAssembly","src":"1544:417:31"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5588,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5556,"src":"1974:4:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":5591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1990:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1982:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5589,"name":"address","nodeType":"ElementaryTypeName","src":"1982:7:31","typeDescriptions":{}}},"id":5592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1982:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1974:18:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5600,"nodeType":"IfStatement","src":"1970:81:31","trueBody":{"id":5599,"nodeType":"Block","src":"1994:57:31","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5594,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"2015:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$5659_$","typeString":"type(library Errors)"}},"id":5596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2022:16:31","memberName":"FailedDeployment","nodeType":"MemberAccess","referencedDeclaration":5653,"src":"2015:23:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":5597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2015:25:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5598,"nodeType":"RevertStatement","src":"2008:32:31"}]}}]},"documentation":{"id":5547,"nodeType":"StructuredDocumentation","src":"645:560:31","text":" @dev Deploys a contract using `CREATE2`. The address where the contract\n will be deployed can be known in advance via {computeAddress}.\n The bytecode for a contract can be obtained from Solidity with\n `type(contractName).creationCode`.\n Requirements:\n - `bytecode` must not be empty.\n - `salt` must have not been used for `bytecode` already.\n - the factory must have a balance of at least `amount`.\n - if `amount` is non-zero, `bytecode` must have a `payable` constructor."},"id":5602,"implemented":true,"kind":"function","modifiers":[],"name":"deploy","nameLocation":"1219:6:31","nodeType":"FunctionDefinition","parameters":{"id":5554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5549,"mutability":"mutable","name":"amount","nameLocation":"1234:6:31","nodeType":"VariableDeclaration","scope":5602,"src":"1226:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5548,"name":"uint256","nodeType":"ElementaryTypeName","src":"1226:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5551,"mutability":"mutable","name":"salt","nameLocation":"1250:4:31","nodeType":"VariableDeclaration","scope":5602,"src":"1242:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5550,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1242:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5553,"mutability":"mutable","name":"bytecode","nameLocation":"1269:8:31","nodeType":"VariableDeclaration","scope":5602,"src":"1256:21:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5552,"name":"bytes","nodeType":"ElementaryTypeName","src":"1256:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1225:53:31"},"returnParameters":{"id":5557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5556,"mutability":"mutable","name":"addr","nameLocation":"1305:4:31","nodeType":"VariableDeclaration","scope":5602,"src":"1297:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5555,"name":"address","nodeType":"ElementaryTypeName","src":"1297:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1296:14:31"},"scope":5637,"src":"1210:847:31","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5621,"nodeType":"Block","src":"2353:73:31","statements":[{"expression":{"arguments":[{"id":5613,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"2385:4:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5614,"name":"bytecodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5607,"src":"2391:12:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":5617,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2413:4:31","typeDescriptions":{"typeIdentifier":"t_contract$_Create2_$5637","typeString":"library Create2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Create2_$5637","typeString":"library Create2"}],"id":5616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2405:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5615,"name":"address","nodeType":"ElementaryTypeName","src":"2405:7:31","typeDescriptions":{}}},"id":5618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2405:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5612,"name":"computeAddress","nodeType":"Identifier","overloadedDeclarations":[5622,5636],"referencedDeclaration":5636,"src":"2370:14:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (bytes32,bytes32,address) pure returns (address)"}},"id":5619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2370:49:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5611,"id":5620,"nodeType":"Return","src":"2363:56:31"}]},"documentation":{"id":5603,"nodeType":"StructuredDocumentation","src":"2063:193:31","text":" @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n `bytecodeHash` or `salt` will result in a new destination address."},"id":5622,"implemented":true,"kind":"function","modifiers":[],"name":"computeAddress","nameLocation":"2270:14:31","nodeType":"FunctionDefinition","parameters":{"id":5608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5605,"mutability":"mutable","name":"salt","nameLocation":"2293:4:31","nodeType":"VariableDeclaration","scope":5622,"src":"2285:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5604,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2285:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5607,"mutability":"mutable","name":"bytecodeHash","nameLocation":"2307:12:31","nodeType":"VariableDeclaration","scope":5622,"src":"2299:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5606,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2299:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2284:36:31"},"returnParameters":{"id":5611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5610,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5622,"src":"2344:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5609,"name":"address","nodeType":"ElementaryTypeName","src":"2344:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2343:9:31"},"scope":5637,"src":"2261:165:31","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5635,"nodeType":"Block","src":"2784:1679:31","statements":[{"AST":{"nativeSrc":"2819:1638:31","nodeType":"YulBlock","src":"2819:1638:31","statements":[{"nativeSrc":"2833:22:31","nodeType":"YulVariableDeclaration","src":"2833:22:31","value":{"arguments":[{"kind":"number","nativeSrc":"2850:4:31","nodeType":"YulLiteral","src":"2850:4:31","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"2844:5:31","nodeType":"YulIdentifier","src":"2844:5:31"},"nativeSrc":"2844:11:31","nodeType":"YulFunctionCall","src":"2844:11:31"},"variables":[{"name":"ptr","nativeSrc":"2837:3:31","nodeType":"YulTypedName","src":"2837:3:31","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4057:3:31","nodeType":"YulIdentifier","src":"4057:3:31"},{"kind":"number","nativeSrc":"4062:4:31","nodeType":"YulLiteral","src":"4062:4:31","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"4053:3:31","nodeType":"YulIdentifier","src":"4053:3:31"},"nativeSrc":"4053:14:31","nodeType":"YulFunctionCall","src":"4053:14:31"},{"name":"bytecodeHash","nativeSrc":"4069:12:31","nodeType":"YulIdentifier","src":"4069:12:31"}],"functionName":{"name":"mstore","nativeSrc":"4046:6:31","nodeType":"YulIdentifier","src":"4046:6:31"},"nativeSrc":"4046:36:31","nodeType":"YulFunctionCall","src":"4046:36:31"},"nativeSrc":"4046:36:31","nodeType":"YulExpressionStatement","src":"4046:36:31"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4106:3:31","nodeType":"YulIdentifier","src":"4106:3:31"},{"kind":"number","nativeSrc":"4111:4:31","nodeType":"YulLiteral","src":"4111:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4102:3:31","nodeType":"YulIdentifier","src":"4102:3:31"},"nativeSrc":"4102:14:31","nodeType":"YulFunctionCall","src":"4102:14:31"},{"name":"salt","nativeSrc":"4118:4:31","nodeType":"YulIdentifier","src":"4118:4:31"}],"functionName":{"name":"mstore","nativeSrc":"4095:6:31","nodeType":"YulIdentifier","src":"4095:6:31"},"nativeSrc":"4095:28:31","nodeType":"YulFunctionCall","src":"4095:28:31"},"nativeSrc":"4095:28:31","nodeType":"YulExpressionStatement","src":"4095:28:31"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"4143:3:31","nodeType":"YulIdentifier","src":"4143:3:31"},{"name":"deployer","nativeSrc":"4148:8:31","nodeType":"YulIdentifier","src":"4148:8:31"}],"functionName":{"name":"mstore","nativeSrc":"4136:6:31","nodeType":"YulIdentifier","src":"4136:6:31"},"nativeSrc":"4136:21:31","nodeType":"YulFunctionCall","src":"4136:21:31"},"nativeSrc":"4136:21:31","nodeType":"YulExpressionStatement","src":"4136:21:31"},{"nativeSrc":"4219:27:31","nodeType":"YulVariableDeclaration","src":"4219:27:31","value":{"arguments":[{"name":"ptr","nativeSrc":"4236:3:31","nodeType":"YulIdentifier","src":"4236:3:31"},{"kind":"number","nativeSrc":"4241:4:31","nodeType":"YulLiteral","src":"4241:4:31","type":"","value":"0x0b"}],"functionName":{"name":"add","nativeSrc":"4232:3:31","nodeType":"YulIdentifier","src":"4232:3:31"},"nativeSrc":"4232:14:31","nodeType":"YulFunctionCall","src":"4232:14:31"},"variables":[{"name":"start","nativeSrc":"4223:5:31","nodeType":"YulTypedName","src":"4223:5:31","type":""}]},{"expression":{"arguments":[{"name":"start","nativeSrc":"4345:5:31","nodeType":"YulIdentifier","src":"4345:5:31"},{"kind":"number","nativeSrc":"4352:4:31","nodeType":"YulLiteral","src":"4352:4:31","type":"","value":"0xff"}],"functionName":{"name":"mstore8","nativeSrc":"4337:7:31","nodeType":"YulIdentifier","src":"4337:7:31"},"nativeSrc":"4337:20:31","nodeType":"YulFunctionCall","src":"4337:20:31"},"nativeSrc":"4337:20:31","nodeType":"YulExpressionStatement","src":"4337:20:31"},{"nativeSrc":"4370:77:31","nodeType":"YulAssignment","src":"4370:77:31","value":{"arguments":[{"arguments":[{"name":"start","nativeSrc":"4392:5:31","nodeType":"YulIdentifier","src":"4392:5:31"},{"kind":"number","nativeSrc":"4399:2:31","nodeType":"YulLiteral","src":"4399:2:31","type":"","value":"85"}],"functionName":{"name":"keccak256","nativeSrc":"4382:9:31","nodeType":"YulIdentifier","src":"4382:9:31"},"nativeSrc":"4382:20:31","nodeType":"YulFunctionCall","src":"4382:20:31"},{"kind":"number","nativeSrc":"4404:42:31","nodeType":"YulLiteral","src":"4404:42:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"4378:3:31","nodeType":"YulIdentifier","src":"4378:3:31"},"nativeSrc":"4378:69:31","nodeType":"YulFunctionCall","src":"4378:69:31"},"variableNames":[{"name":"addr","nativeSrc":"4370:4:31","nodeType":"YulIdentifier","src":"4370:4:31"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5632,"isOffset":false,"isSlot":false,"src":"4370:4:31","valueSize":1},{"declaration":5627,"isOffset":false,"isSlot":false,"src":"4069:12:31","valueSize":1},{"declaration":5629,"isOffset":false,"isSlot":false,"src":"4148:8:31","valueSize":1},{"declaration":5625,"isOffset":false,"isSlot":false,"src":"4118:4:31","valueSize":1}],"flags":["memory-safe"],"id":5634,"nodeType":"InlineAssembly","src":"2794:1663:31"}]},"documentation":{"id":5623,"nodeType":"StructuredDocumentation","src":"2432:232:31","text":" @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}."},"id":5636,"implemented":true,"kind":"function","modifiers":[],"name":"computeAddress","nameLocation":"2678:14:31","nodeType":"FunctionDefinition","parameters":{"id":5630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5625,"mutability":"mutable","name":"salt","nameLocation":"2701:4:31","nodeType":"VariableDeclaration","scope":5636,"src":"2693:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5624,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2693:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5627,"mutability":"mutable","name":"bytecodeHash","nameLocation":"2715:12:31","nodeType":"VariableDeclaration","scope":5636,"src":"2707:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5626,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2707:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5629,"mutability":"mutable","name":"deployer","nameLocation":"2737:8:31","nodeType":"VariableDeclaration","scope":5636,"src":"2729:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5628,"name":"address","nodeType":"ElementaryTypeName","src":"2729:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2692:54:31"},"returnParameters":{"id":5633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5632,"mutability":"mutable","name":"addr","nameLocation":"2778:4:31","nodeType":"VariableDeclaration","scope":5636,"src":"2770:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5631,"name":"address","nodeType":"ElementaryTypeName","src":"2770:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2769:14:31"},"scope":5637,"src":"2669:1794:31","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5638,"src":"533:3932:31","usedErrors":[5546],"usedEvents":[]}],"src":"101:4365:31"},"id":31},"@openzeppelin/contracts/utils/Errors.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","exportedSymbols":{"Errors":[5659]},"id":5660,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5639,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:32"},{"abstract":false,"baseContracts":[],"canonicalName":"Errors","contractDependencies":[],"contractKind":"library","documentation":{"id":5640,"nodeType":"StructuredDocumentation","src":"126:284:32","text":" @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"},"fullyImplemented":true,"id":5659,"linearizedBaseContracts":[5659],"name":"Errors","nameLocation":"419:6:32","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5641,"nodeType":"StructuredDocumentation","src":"432:94:32","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cf479181","id":5647,"name":"InsufficientBalance","nameLocation":"537:19:32","nodeType":"ErrorDefinition","parameters":{"id":5646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5643,"mutability":"mutable","name":"balance","nameLocation":"565:7:32","nodeType":"VariableDeclaration","scope":5647,"src":"557:15:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5642,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5645,"mutability":"mutable","name":"needed","nameLocation":"582:6:32","nodeType":"VariableDeclaration","scope":5647,"src":"574:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5644,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"556:33:32"},"src":"531:59:32"},{"documentation":{"id":5648,"nodeType":"StructuredDocumentation","src":"596:89:32","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"d6bda275","id":5650,"name":"FailedCall","nameLocation":"696:10:32","nodeType":"ErrorDefinition","parameters":{"id":5649,"nodeType":"ParameterList","parameters":[],"src":"706:2:32"},"src":"690:19:32"},{"documentation":{"id":5651,"nodeType":"StructuredDocumentation","src":"715:46:32","text":" @dev The deployment failed."},"errorSelector":"b06ebf3d","id":5653,"name":"FailedDeployment","nameLocation":"772:16:32","nodeType":"ErrorDefinition","parameters":{"id":5652,"nodeType":"ParameterList","parameters":[],"src":"788:2:32"},"src":"766:25:32"},{"documentation":{"id":5654,"nodeType":"StructuredDocumentation","src":"797:58:32","text":" @dev A necessary precompile is missing."},"errorSelector":"42b01bce","id":5658,"name":"MissingPrecompile","nameLocation":"866:17:32","nodeType":"ErrorDefinition","parameters":{"id":5657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5656,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5658,"src":"884:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5655,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"883:9:32"},"src":"860:33:32"}],"scope":5660,"src":"411:484:32","usedErrors":[5647,5650,5653,5658],"usedEvents":[]}],"src":"100:796:32"},"id":32},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[5711]},"id":5712,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5661,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:33"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":5662,"nodeType":"StructuredDocumentation","src":"125:489:33","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":5711,"linearizedBaseContracts":[5711],"name":"Panic","nameLocation":"665:5:33","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":5663,"nodeType":"StructuredDocumentation","src":"677:36:33","text":"@dev generic / unspecified error"},"id":5666,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:33","nodeType":"VariableDeclaration","scope":5711,"src":"718:40:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5664,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":5665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":5667,"nodeType":"StructuredDocumentation","src":"764:37:33","text":"@dev used by the assert() builtin"},"id":5670,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:33","nodeType":"VariableDeclaration","scope":5711,"src":"806:39:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5668,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":5669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":5671,"nodeType":"StructuredDocumentation","src":"851:41:33","text":"@dev arithmetic underflow or overflow"},"id":5674,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:33","nodeType":"VariableDeclaration","scope":5711,"src":"897:47:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5672,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":5673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:33","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":5675,"nodeType":"StructuredDocumentation","src":"950:35:33","text":"@dev division or modulo by zero"},"id":5678,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:33","nodeType":"VariableDeclaration","scope":5711,"src":"990:49:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5676,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":5677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:33","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":5679,"nodeType":"StructuredDocumentation","src":"1045:30:33","text":"@dev enum conversion error"},"id":5682,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:33","nodeType":"VariableDeclaration","scope":5711,"src":"1080:54:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5680,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":5681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:33","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":5683,"nodeType":"StructuredDocumentation","src":"1140:36:33","text":"@dev invalid encoding in storage"},"id":5686,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:33","nodeType":"VariableDeclaration","scope":5711,"src":"1181:55:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5684,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":5685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:33","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":5687,"nodeType":"StructuredDocumentation","src":"1242:24:33","text":"@dev empty array pop"},"id":5690,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:33","nodeType":"VariableDeclaration","scope":5711,"src":"1271:48:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5688,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":5689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:33","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":5691,"nodeType":"StructuredDocumentation","src":"1325:35:33","text":"@dev array out of bounds access"},"id":5694,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:33","nodeType":"VariableDeclaration","scope":5711,"src":"1365:52:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5692,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":5693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:33","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":5695,"nodeType":"StructuredDocumentation","src":"1423:65:33","text":"@dev resource error (too large allocation or too large array)"},"id":5698,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:33","nodeType":"VariableDeclaration","scope":5711,"src":"1493:47:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5696,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":5697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:33","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":5699,"nodeType":"StructuredDocumentation","src":"1546:42:33","text":"@dev calling invalid internal function"},"id":5702,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:33","nodeType":"VariableDeclaration","scope":5711,"src":"1593:58:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5700,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":5701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:33","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":5709,"nodeType":"Block","src":"1819:151:33","statements":[{"AST":{"nativeSrc":"1854:110:33","nodeType":"YulBlock","src":"1854:110:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:33","nodeType":"YulLiteral","src":"1875:4:33","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:33","nodeType":"YulLiteral","src":"1881:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:33","nodeType":"YulIdentifier","src":"1868:6:33"},"nativeSrc":"1868:24:33","nodeType":"YulFunctionCall","src":"1868:24:33"},"nativeSrc":"1868:24:33","nodeType":"YulExpressionStatement","src":"1868:24:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:33","nodeType":"YulLiteral","src":"1912:4:33","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:33","nodeType":"YulIdentifier","src":"1918:4:33"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:33","nodeType":"YulIdentifier","src":"1905:6:33"},"nativeSrc":"1905:18:33","nodeType":"YulFunctionCall","src":"1905:18:33"},"nativeSrc":"1905:18:33","nodeType":"YulExpressionStatement","src":"1905:18:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:33","nodeType":"YulLiteral","src":"1943:4:33","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:33","nodeType":"YulLiteral","src":"1949:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:33","nodeType":"YulIdentifier","src":"1936:6:33"},"nativeSrc":"1936:18:33","nodeType":"YulFunctionCall","src":"1936:18:33"},"nativeSrc":"1936:18:33","nodeType":"YulExpressionStatement","src":"1936:18:33"}]},"evmVersion":"paris","externalReferences":[{"declaration":5705,"isOffset":false,"isSlot":false,"src":"1918:4:33","valueSize":1}],"flags":["memory-safe"],"id":5708,"nodeType":"InlineAssembly","src":"1829:135:33"}]},"documentation":{"id":5703,"nodeType":"StructuredDocumentation","src":"1658:113:33","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":5710,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:33","nodeType":"FunctionDefinition","parameters":{"id":5706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5705,"mutability":"mutable","name":"code","nameLocation":"1799:4:33","nodeType":"VariableDeclaration","scope":5710,"src":"1791:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5704,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:33"},"returnParameters":{"id":5707,"nodeType":"ParameterList","parameters":[],"src":"1819:0:33"},"scope":5711,"src":"1776:194:33","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5712,"src":"657:1315:33","usedErrors":[],"usedEvents":[]}],"src":"99:1874:33"},"id":33},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","exportedSymbols":{"SlotDerivation":[5841]},"id":5842,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5713,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"199:24:34"},{"abstract":false,"baseContracts":[],"canonicalName":"SlotDerivation","contractDependencies":[],"contractKind":"library","documentation":{"id":5714,"nodeType":"StructuredDocumentation","src":"225:1373:34","text":" @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n the solidity language / compiler.\n See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n Example usage:\n ```solidity\n contract Example {\n     // Add the library methods\n     using StorageSlot for bytes32;\n     using SlotDerivation for bytes32;\n     // Declare a namespace\n     string private constant _NAMESPACE = \"<namespace>\"; // eg. OpenZeppelin.Slot\n     function setValueInNamespace(uint256 key, address newValue) internal {\n         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n     }\n     function getValueInNamespace(uint256 key) internal view returns (address) {\n         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n     }\n }\n ```\n TIP: Consider using this library along with {StorageSlot}.\n NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n upgrade safety will ignore the slots accessed through this library.\n _Available since v5.1._"},"fullyImplemented":true,"id":5841,"linearizedBaseContracts":[5841],"name":"SlotDerivation","nameLocation":"1607:14:34","nodeType":"ContractDefinition","nodes":[{"body":{"id":5723,"nodeType":"Block","src":"1790:194:34","statements":[{"AST":{"nativeSrc":"1825:153:34","nodeType":"YulBlock","src":"1825:153:34","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1846:4:34","nodeType":"YulLiteral","src":"1846:4:34","type":"","value":"0x00"},{"arguments":[{"arguments":[{"arguments":[{"name":"namespace","nativeSrc":"1870:9:34","nodeType":"YulIdentifier","src":"1870:9:34"},{"kind":"number","nativeSrc":"1881:4:34","nodeType":"YulLiteral","src":"1881:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1866:3:34","nodeType":"YulIdentifier","src":"1866:3:34"},"nativeSrc":"1866:20:34","nodeType":"YulFunctionCall","src":"1866:20:34"},{"arguments":[{"name":"namespace","nativeSrc":"1894:9:34","nodeType":"YulIdentifier","src":"1894:9:34"}],"functionName":{"name":"mload","nativeSrc":"1888:5:34","nodeType":"YulIdentifier","src":"1888:5:34"},"nativeSrc":"1888:16:34","nodeType":"YulFunctionCall","src":"1888:16:34"}],"functionName":{"name":"keccak256","nativeSrc":"1856:9:34","nodeType":"YulIdentifier","src":"1856:9:34"},"nativeSrc":"1856:49:34","nodeType":"YulFunctionCall","src":"1856:49:34"},{"kind":"number","nativeSrc":"1907:1:34","nodeType":"YulLiteral","src":"1907:1:34","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1852:3:34","nodeType":"YulIdentifier","src":"1852:3:34"},"nativeSrc":"1852:57:34","nodeType":"YulFunctionCall","src":"1852:57:34"}],"functionName":{"name":"mstore","nativeSrc":"1839:6:34","nodeType":"YulIdentifier","src":"1839:6:34"},"nativeSrc":"1839:71:34","nodeType":"YulFunctionCall","src":"1839:71:34"},"nativeSrc":"1839:71:34","nodeType":"YulExpressionStatement","src":"1839:71:34"},{"nativeSrc":"1923:45:34","nodeType":"YulAssignment","src":"1923:45:34","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1945:4:34","nodeType":"YulLiteral","src":"1945:4:34","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1951:4:34","nodeType":"YulLiteral","src":"1951:4:34","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"1935:9:34","nodeType":"YulIdentifier","src":"1935:9:34"},"nativeSrc":"1935:21:34","nodeType":"YulFunctionCall","src":"1935:21:34"},{"arguments":[{"kind":"number","nativeSrc":"1962:4:34","nodeType":"YulLiteral","src":"1962:4:34","type":"","value":"0xff"}],"functionName":{"name":"not","nativeSrc":"1958:3:34","nodeType":"YulIdentifier","src":"1958:3:34"},"nativeSrc":"1958:9:34","nodeType":"YulFunctionCall","src":"1958:9:34"}],"functionName":{"name":"and","nativeSrc":"1931:3:34","nodeType":"YulIdentifier","src":"1931:3:34"},"nativeSrc":"1931:37:34","nodeType":"YulFunctionCall","src":"1931:37:34"},"variableNames":[{"name":"slot","nativeSrc":"1923:4:34","nodeType":"YulIdentifier","src":"1923:4:34"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5717,"isOffset":false,"isSlot":false,"src":"1870:9:34","valueSize":1},{"declaration":5717,"isOffset":false,"isSlot":false,"src":"1894:9:34","valueSize":1},{"declaration":5720,"isOffset":false,"isSlot":false,"src":"1923:4:34","valueSize":1}],"flags":["memory-safe"],"id":5722,"nodeType":"InlineAssembly","src":"1800:178:34"}]},"documentation":{"id":5715,"nodeType":"StructuredDocumentation","src":"1628:74:34","text":" @dev Derive an ERC-7201 slot from a string (namespace)."},"id":5724,"implemented":true,"kind":"function","modifiers":[],"name":"erc7201Slot","nameLocation":"1716:11:34","nodeType":"FunctionDefinition","parameters":{"id":5718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5717,"mutability":"mutable","name":"namespace","nameLocation":"1742:9:34","nodeType":"VariableDeclaration","scope":5724,"src":"1728:23:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5716,"name":"string","nodeType":"ElementaryTypeName","src":"1728:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1727:25:34"},"returnParameters":{"id":5721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5720,"mutability":"mutable","name":"slot","nameLocation":"1784:4:34","nodeType":"VariableDeclaration","scope":5724,"src":"1776:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5719,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1776:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1775:14:34"},"scope":5841,"src":"1707:277:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5745,"nodeType":"Block","src":"2176:86:34","statements":[{"id":5744,"nodeType":"UncheckedBlock","src":"2186:70:34","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5738,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"2233:4:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2225:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5736,"name":"uint256","nodeType":"ElementaryTypeName","src":"2225:7:34","typeDescriptions":{}}},"id":5739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2225:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5740,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5729,"src":"2241:3:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2225:19:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2217:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5734,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2217:7:34","typeDescriptions":{}}},"id":5742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2217:28:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5733,"id":5743,"nodeType":"Return","src":"2210:35:34"}]}]},"documentation":{"id":5725,"nodeType":"StructuredDocumentation","src":"1990:99:34","text":" @dev Add an offset to a slot to get the n-th element of a structure or an array."},"id":5746,"implemented":true,"kind":"function","modifiers":[],"name":"offset","nameLocation":"2103:6:34","nodeType":"FunctionDefinition","parameters":{"id":5730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5727,"mutability":"mutable","name":"slot","nameLocation":"2118:4:34","nodeType":"VariableDeclaration","scope":5746,"src":"2110:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5726,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2110:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5729,"mutability":"mutable","name":"pos","nameLocation":"2132:3:34","nodeType":"VariableDeclaration","scope":5746,"src":"2124:11:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5728,"name":"uint256","nodeType":"ElementaryTypeName","src":"2124:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2109:27:34"},"returnParameters":{"id":5733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5732,"mutability":"mutable","name":"result","nameLocation":"2168:6:34","nodeType":"VariableDeclaration","scope":5746,"src":"2160:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5731,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2160:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2159:16:34"},"scope":5841,"src":"2094:168:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5755,"nodeType":"Block","src":"2465:127:34","statements":[{"AST":{"nativeSrc":"2500:86:34","nodeType":"YulBlock","src":"2500:86:34","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2521:4:34","nodeType":"YulLiteral","src":"2521:4:34","type":"","value":"0x00"},{"name":"slot","nativeSrc":"2527:4:34","nodeType":"YulIdentifier","src":"2527:4:34"}],"functionName":{"name":"mstore","nativeSrc":"2514:6:34","nodeType":"YulIdentifier","src":"2514:6:34"},"nativeSrc":"2514:18:34","nodeType":"YulFunctionCall","src":"2514:18:34"},"nativeSrc":"2514:18:34","nodeType":"YulExpressionStatement","src":"2514:18:34"},{"nativeSrc":"2545:31:34","nodeType":"YulAssignment","src":"2545:31:34","value":{"arguments":[{"kind":"number","nativeSrc":"2565:4:34","nodeType":"YulLiteral","src":"2565:4:34","type":"","value":"0x00"},{"kind":"number","nativeSrc":"2571:4:34","nodeType":"YulLiteral","src":"2571:4:34","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2555:9:34","nodeType":"YulIdentifier","src":"2555:9:34"},"nativeSrc":"2555:21:34","nodeType":"YulFunctionCall","src":"2555:21:34"},"variableNames":[{"name":"result","nativeSrc":"2545:6:34","nodeType":"YulIdentifier","src":"2545:6:34"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5752,"isOffset":false,"isSlot":false,"src":"2545:6:34","valueSize":1},{"declaration":5749,"isOffset":false,"isSlot":false,"src":"2527:4:34","valueSize":1}],"flags":["memory-safe"],"id":5754,"nodeType":"InlineAssembly","src":"2475:111:34"}]},"documentation":{"id":5747,"nodeType":"StructuredDocumentation","src":"2268:118:34","text":" @dev Derive the location of the first element in an array from the slot where the length is stored."},"id":5756,"implemented":true,"kind":"function","modifiers":[],"name":"deriveArray","nameLocation":"2400:11:34","nodeType":"FunctionDefinition","parameters":{"id":5750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5749,"mutability":"mutable","name":"slot","nameLocation":"2420:4:34","nodeType":"VariableDeclaration","scope":5756,"src":"2412:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5748,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2412:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2411:14:34"},"returnParameters":{"id":5753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5752,"mutability":"mutable","name":"result","nameLocation":"2457:6:34","nodeType":"VariableDeclaration","scope":5756,"src":"2449:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5751,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2449:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2448:16:34"},"scope":5841,"src":"2391:201:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5767,"nodeType":"Block","src":"2770:179:34","statements":[{"AST":{"nativeSrc":"2805:138:34","nodeType":"YulBlock","src":"2805:138:34","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2826:4:34","nodeType":"YulLiteral","src":"2826:4:34","type":"","value":"0x00"},{"arguments":[{"name":"key","nativeSrc":"2836:3:34","nodeType":"YulIdentifier","src":"2836:3:34"},{"arguments":[{"kind":"number","nativeSrc":"2845:2:34","nodeType":"YulLiteral","src":"2845:2:34","type":"","value":"96"},{"arguments":[{"kind":"number","nativeSrc":"2853:1:34","nodeType":"YulLiteral","src":"2853:1:34","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2849:3:34","nodeType":"YulIdentifier","src":"2849:3:34"},"nativeSrc":"2849:6:34","nodeType":"YulFunctionCall","src":"2849:6:34"}],"functionName":{"name":"shr","nativeSrc":"2841:3:34","nodeType":"YulIdentifier","src":"2841:3:34"},"nativeSrc":"2841:15:34","nodeType":"YulFunctionCall","src":"2841:15:34"}],"functionName":{"name":"and","nativeSrc":"2832:3:34","nodeType":"YulIdentifier","src":"2832:3:34"},"nativeSrc":"2832:25:34","nodeType":"YulFunctionCall","src":"2832:25:34"}],"functionName":{"name":"mstore","nativeSrc":"2819:6:34","nodeType":"YulIdentifier","src":"2819:6:34"},"nativeSrc":"2819:39:34","nodeType":"YulFunctionCall","src":"2819:39:34"},"nativeSrc":"2819:39:34","nodeType":"YulExpressionStatement","src":"2819:39:34"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2878:4:34","nodeType":"YulLiteral","src":"2878:4:34","type":"","value":"0x20"},{"name":"slot","nativeSrc":"2884:4:34","nodeType":"YulIdentifier","src":"2884:4:34"}],"functionName":{"name":"mstore","nativeSrc":"2871:6:34","nodeType":"YulIdentifier","src":"2871:6:34"},"nativeSrc":"2871:18:34","nodeType":"YulFunctionCall","src":"2871:18:34"},"nativeSrc":"2871:18:34","nodeType":"YulExpressionStatement","src":"2871:18:34"},{"nativeSrc":"2902:31:34","nodeType":"YulAssignment","src":"2902:31:34","value":{"arguments":[{"kind":"number","nativeSrc":"2922:4:34","nodeType":"YulLiteral","src":"2922:4:34","type":"","value":"0x00"},{"kind":"number","nativeSrc":"2928:4:34","nodeType":"YulLiteral","src":"2928:4:34","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"2912:9:34","nodeType":"YulIdentifier","src":"2912:9:34"},"nativeSrc":"2912:21:34","nodeType":"YulFunctionCall","src":"2912:21:34"},"variableNames":[{"name":"result","nativeSrc":"2902:6:34","nodeType":"YulIdentifier","src":"2902:6:34"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5761,"isOffset":false,"isSlot":false,"src":"2836:3:34","valueSize":1},{"declaration":5764,"isOffset":false,"isSlot":false,"src":"2902:6:34","valueSize":1},{"declaration":5759,"isOffset":false,"isSlot":false,"src":"2884:4:34","valueSize":1}],"flags":["memory-safe"],"id":5766,"nodeType":"InlineAssembly","src":"2780:163:34"}]},"documentation":{"id":5757,"nodeType":"StructuredDocumentation","src":"2598:78:34","text":" @dev Derive the location of a mapping element from the key."},"id":5768,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"2690:13:34","nodeType":"FunctionDefinition","parameters":{"id":5762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5759,"mutability":"mutable","name":"slot","nameLocation":"2712:4:34","nodeType":"VariableDeclaration","scope":5768,"src":"2704:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5758,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2704:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5761,"mutability":"mutable","name":"key","nameLocation":"2726:3:34","nodeType":"VariableDeclaration","scope":5768,"src":"2718:11:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5760,"name":"address","nodeType":"ElementaryTypeName","src":"2718:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2703:27:34"},"returnParameters":{"id":5765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5764,"mutability":"mutable","name":"result","nameLocation":"2762:6:34","nodeType":"VariableDeclaration","scope":5768,"src":"2754:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5763,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2754:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2753:16:34"},"scope":5841,"src":"2681:268:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5779,"nodeType":"Block","src":"3124:173:34","statements":[{"AST":{"nativeSrc":"3159:132:34","nodeType":"YulBlock","src":"3159:132:34","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3180:4:34","nodeType":"YulLiteral","src":"3180:4:34","type":"","value":"0x00"},{"arguments":[{"arguments":[{"name":"key","nativeSrc":"3200:3:34","nodeType":"YulIdentifier","src":"3200:3:34"}],"functionName":{"name":"iszero","nativeSrc":"3193:6:34","nodeType":"YulIdentifier","src":"3193:6:34"},"nativeSrc":"3193:11:34","nodeType":"YulFunctionCall","src":"3193:11:34"}],"functionName":{"name":"iszero","nativeSrc":"3186:6:34","nodeType":"YulIdentifier","src":"3186:6:34"},"nativeSrc":"3186:19:34","nodeType":"YulFunctionCall","src":"3186:19:34"}],"functionName":{"name":"mstore","nativeSrc":"3173:6:34","nodeType":"YulIdentifier","src":"3173:6:34"},"nativeSrc":"3173:33:34","nodeType":"YulFunctionCall","src":"3173:33:34"},"nativeSrc":"3173:33:34","nodeType":"YulExpressionStatement","src":"3173:33:34"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3226:4:34","nodeType":"YulLiteral","src":"3226:4:34","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3232:4:34","nodeType":"YulIdentifier","src":"3232:4:34"}],"functionName":{"name":"mstore","nativeSrc":"3219:6:34","nodeType":"YulIdentifier","src":"3219:6:34"},"nativeSrc":"3219:18:34","nodeType":"YulFunctionCall","src":"3219:18:34"},"nativeSrc":"3219:18:34","nodeType":"YulExpressionStatement","src":"3219:18:34"},{"nativeSrc":"3250:31:34","nodeType":"YulAssignment","src":"3250:31:34","value":{"arguments":[{"kind":"number","nativeSrc":"3270:4:34","nodeType":"YulLiteral","src":"3270:4:34","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3276:4:34","nodeType":"YulLiteral","src":"3276:4:34","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3260:9:34","nodeType":"YulIdentifier","src":"3260:9:34"},"nativeSrc":"3260:21:34","nodeType":"YulFunctionCall","src":"3260:21:34"},"variableNames":[{"name":"result","nativeSrc":"3250:6:34","nodeType":"YulIdentifier","src":"3250:6:34"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5773,"isOffset":false,"isSlot":false,"src":"3200:3:34","valueSize":1},{"declaration":5776,"isOffset":false,"isSlot":false,"src":"3250:6:34","valueSize":1},{"declaration":5771,"isOffset":false,"isSlot":false,"src":"3232:4:34","valueSize":1}],"flags":["memory-safe"],"id":5778,"nodeType":"InlineAssembly","src":"3134:157:34"}]},"documentation":{"id":5769,"nodeType":"StructuredDocumentation","src":"2955:78:34","text":" @dev Derive the location of a mapping element from the key."},"id":5780,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3047:13:34","nodeType":"FunctionDefinition","parameters":{"id":5774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5771,"mutability":"mutable","name":"slot","nameLocation":"3069:4:34","nodeType":"VariableDeclaration","scope":5780,"src":"3061:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5770,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3061:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5773,"mutability":"mutable","name":"key","nameLocation":"3080:3:34","nodeType":"VariableDeclaration","scope":5780,"src":"3075:8:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5772,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3060:24:34"},"returnParameters":{"id":5777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5776,"mutability":"mutable","name":"result","nameLocation":"3116:6:34","nodeType":"VariableDeclaration","scope":5780,"src":"3108:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5775,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3108:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3107:16:34"},"scope":5841,"src":"3038:259:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5791,"nodeType":"Block","src":"3475:157:34","statements":[{"AST":{"nativeSrc":"3510:116:34","nodeType":"YulBlock","src":"3510:116:34","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3531:4:34","nodeType":"YulLiteral","src":"3531:4:34","type":"","value":"0x00"},{"name":"key","nativeSrc":"3537:3:34","nodeType":"YulIdentifier","src":"3537:3:34"}],"functionName":{"name":"mstore","nativeSrc":"3524:6:34","nodeType":"YulIdentifier","src":"3524:6:34"},"nativeSrc":"3524:17:34","nodeType":"YulFunctionCall","src":"3524:17:34"},"nativeSrc":"3524:17:34","nodeType":"YulExpressionStatement","src":"3524:17:34"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3561:4:34","nodeType":"YulLiteral","src":"3561:4:34","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3567:4:34","nodeType":"YulIdentifier","src":"3567:4:34"}],"functionName":{"name":"mstore","nativeSrc":"3554:6:34","nodeType":"YulIdentifier","src":"3554:6:34"},"nativeSrc":"3554:18:34","nodeType":"YulFunctionCall","src":"3554:18:34"},"nativeSrc":"3554:18:34","nodeType":"YulExpressionStatement","src":"3554:18:34"},{"nativeSrc":"3585:31:34","nodeType":"YulAssignment","src":"3585:31:34","value":{"arguments":[{"kind":"number","nativeSrc":"3605:4:34","nodeType":"YulLiteral","src":"3605:4:34","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3611:4:34","nodeType":"YulLiteral","src":"3611:4:34","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3595:9:34","nodeType":"YulIdentifier","src":"3595:9:34"},"nativeSrc":"3595:21:34","nodeType":"YulFunctionCall","src":"3595:21:34"},"variableNames":[{"name":"result","nativeSrc":"3585:6:34","nodeType":"YulIdentifier","src":"3585:6:34"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5785,"isOffset":false,"isSlot":false,"src":"3537:3:34","valueSize":1},{"declaration":5788,"isOffset":false,"isSlot":false,"src":"3585:6:34","valueSize":1},{"declaration":5783,"isOffset":false,"isSlot":false,"src":"3567:4:34","valueSize":1}],"flags":["memory-safe"],"id":5790,"nodeType":"InlineAssembly","src":"3485:141:34"}]},"documentation":{"id":5781,"nodeType":"StructuredDocumentation","src":"3303:78:34","text":" @dev Derive the location of a mapping element from the key."},"id":5792,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3395:13:34","nodeType":"FunctionDefinition","parameters":{"id":5786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5783,"mutability":"mutable","name":"slot","nameLocation":"3417:4:34","nodeType":"VariableDeclaration","scope":5792,"src":"3409:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5782,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3409:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5785,"mutability":"mutable","name":"key","nameLocation":"3431:3:34","nodeType":"VariableDeclaration","scope":5792,"src":"3423:11:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5784,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3423:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3408:27:34"},"returnParameters":{"id":5789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5788,"mutability":"mutable","name":"result","nameLocation":"3467:6:34","nodeType":"VariableDeclaration","scope":5792,"src":"3459:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5787,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3459:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3458:16:34"},"scope":5841,"src":"3386:246:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5803,"nodeType":"Block","src":"3810:157:34","statements":[{"AST":{"nativeSrc":"3845:116:34","nodeType":"YulBlock","src":"3845:116:34","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3866:4:34","nodeType":"YulLiteral","src":"3866:4:34","type":"","value":"0x00"},{"name":"key","nativeSrc":"3872:3:34","nodeType":"YulIdentifier","src":"3872:3:34"}],"functionName":{"name":"mstore","nativeSrc":"3859:6:34","nodeType":"YulIdentifier","src":"3859:6:34"},"nativeSrc":"3859:17:34","nodeType":"YulFunctionCall","src":"3859:17:34"},"nativeSrc":"3859:17:34","nodeType":"YulExpressionStatement","src":"3859:17:34"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3896:4:34","nodeType":"YulLiteral","src":"3896:4:34","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3902:4:34","nodeType":"YulIdentifier","src":"3902:4:34"}],"functionName":{"name":"mstore","nativeSrc":"3889:6:34","nodeType":"YulIdentifier","src":"3889:6:34"},"nativeSrc":"3889:18:34","nodeType":"YulFunctionCall","src":"3889:18:34"},"nativeSrc":"3889:18:34","nodeType":"YulExpressionStatement","src":"3889:18:34"},{"nativeSrc":"3920:31:34","nodeType":"YulAssignment","src":"3920:31:34","value":{"arguments":[{"kind":"number","nativeSrc":"3940:4:34","nodeType":"YulLiteral","src":"3940:4:34","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3946:4:34","nodeType":"YulLiteral","src":"3946:4:34","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3930:9:34","nodeType":"YulIdentifier","src":"3930:9:34"},"nativeSrc":"3930:21:34","nodeType":"YulFunctionCall","src":"3930:21:34"},"variableNames":[{"name":"result","nativeSrc":"3920:6:34","nodeType":"YulIdentifier","src":"3920:6:34"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5797,"isOffset":false,"isSlot":false,"src":"3872:3:34","valueSize":1},{"declaration":5800,"isOffset":false,"isSlot":false,"src":"3920:6:34","valueSize":1},{"declaration":5795,"isOffset":false,"isSlot":false,"src":"3902:4:34","valueSize":1}],"flags":["memory-safe"],"id":5802,"nodeType":"InlineAssembly","src":"3820:141:34"}]},"documentation":{"id":5793,"nodeType":"StructuredDocumentation","src":"3638:78:34","text":" @dev Derive the location of a mapping element from the key."},"id":5804,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3730:13:34","nodeType":"FunctionDefinition","parameters":{"id":5798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5795,"mutability":"mutable","name":"slot","nameLocation":"3752:4:34","nodeType":"VariableDeclaration","scope":5804,"src":"3744:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5794,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3744:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5797,"mutability":"mutable","name":"key","nameLocation":"3766:3:34","nodeType":"VariableDeclaration","scope":5804,"src":"3758:11:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5796,"name":"uint256","nodeType":"ElementaryTypeName","src":"3758:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3743:27:34"},"returnParameters":{"id":5801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5800,"mutability":"mutable","name":"result","nameLocation":"3802:6:34","nodeType":"VariableDeclaration","scope":5804,"src":"3794:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5799,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3794:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3793:16:34"},"scope":5841,"src":"3721:246:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5815,"nodeType":"Block","src":"4144:157:34","statements":[{"AST":{"nativeSrc":"4179:116:34","nodeType":"YulBlock","src":"4179:116:34","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4200:4:34","nodeType":"YulLiteral","src":"4200:4:34","type":"","value":"0x00"},{"name":"key","nativeSrc":"4206:3:34","nodeType":"YulIdentifier","src":"4206:3:34"}],"functionName":{"name":"mstore","nativeSrc":"4193:6:34","nodeType":"YulIdentifier","src":"4193:6:34"},"nativeSrc":"4193:17:34","nodeType":"YulFunctionCall","src":"4193:17:34"},"nativeSrc":"4193:17:34","nodeType":"YulExpressionStatement","src":"4193:17:34"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4230:4:34","nodeType":"YulLiteral","src":"4230:4:34","type":"","value":"0x20"},{"name":"slot","nativeSrc":"4236:4:34","nodeType":"YulIdentifier","src":"4236:4:34"}],"functionName":{"name":"mstore","nativeSrc":"4223:6:34","nodeType":"YulIdentifier","src":"4223:6:34"},"nativeSrc":"4223:18:34","nodeType":"YulFunctionCall","src":"4223:18:34"},"nativeSrc":"4223:18:34","nodeType":"YulExpressionStatement","src":"4223:18:34"},{"nativeSrc":"4254:31:34","nodeType":"YulAssignment","src":"4254:31:34","value":{"arguments":[{"kind":"number","nativeSrc":"4274:4:34","nodeType":"YulLiteral","src":"4274:4:34","type":"","value":"0x00"},{"kind":"number","nativeSrc":"4280:4:34","nodeType":"YulLiteral","src":"4280:4:34","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"4264:9:34","nodeType":"YulIdentifier","src":"4264:9:34"},"nativeSrc":"4264:21:34","nodeType":"YulFunctionCall","src":"4264:21:34"},"variableNames":[{"name":"result","nativeSrc":"4254:6:34","nodeType":"YulIdentifier","src":"4254:6:34"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5809,"isOffset":false,"isSlot":false,"src":"4206:3:34","valueSize":1},{"declaration":5812,"isOffset":false,"isSlot":false,"src":"4254:6:34","valueSize":1},{"declaration":5807,"isOffset":false,"isSlot":false,"src":"4236:4:34","valueSize":1}],"flags":["memory-safe"],"id":5814,"nodeType":"InlineAssembly","src":"4154:141:34"}]},"documentation":{"id":5805,"nodeType":"StructuredDocumentation","src":"3973:78:34","text":" @dev Derive the location of a mapping element from the key."},"id":5816,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4065:13:34","nodeType":"FunctionDefinition","parameters":{"id":5810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5807,"mutability":"mutable","name":"slot","nameLocation":"4087:4:34","nodeType":"VariableDeclaration","scope":5816,"src":"4079:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5806,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4079:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5809,"mutability":"mutable","name":"key","nameLocation":"4100:3:34","nodeType":"VariableDeclaration","scope":5816,"src":"4093:10:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5808,"name":"int256","nodeType":"ElementaryTypeName","src":"4093:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4078:26:34"},"returnParameters":{"id":5813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5812,"mutability":"mutable","name":"result","nameLocation":"4136:6:34","nodeType":"VariableDeclaration","scope":5816,"src":"4128:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5811,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4128:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4127:16:34"},"scope":5841,"src":"4056:245:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5827,"nodeType":"Block","src":"4485:326:34","statements":[{"AST":{"nativeSrc":"4520:285:34","nodeType":"YulBlock","src":"4520:285:34","statements":[{"nativeSrc":"4534:24:34","nodeType":"YulVariableDeclaration","src":"4534:24:34","value":{"arguments":[{"name":"key","nativeSrc":"4554:3:34","nodeType":"YulIdentifier","src":"4554:3:34"}],"functionName":{"name":"mload","nativeSrc":"4548:5:34","nodeType":"YulIdentifier","src":"4548:5:34"},"nativeSrc":"4548:10:34","nodeType":"YulFunctionCall","src":"4548:10:34"},"variables":[{"name":"length","nativeSrc":"4538:6:34","nodeType":"YulTypedName","src":"4538:6:34","type":""}]},{"nativeSrc":"4571:27:34","nodeType":"YulVariableDeclaration","src":"4571:27:34","value":{"arguments":[{"name":"key","nativeSrc":"4588:3:34","nodeType":"YulIdentifier","src":"4588:3:34"},{"kind":"number","nativeSrc":"4593:4:34","nodeType":"YulLiteral","src":"4593:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4584:3:34","nodeType":"YulIdentifier","src":"4584:3:34"},"nativeSrc":"4584:14:34","nodeType":"YulFunctionCall","src":"4584:14:34"},"variables":[{"name":"begin","nativeSrc":"4575:5:34","nodeType":"YulTypedName","src":"4575:5:34","type":""}]},{"nativeSrc":"4611:29:34","nodeType":"YulVariableDeclaration","src":"4611:29:34","value":{"arguments":[{"name":"begin","nativeSrc":"4626:5:34","nodeType":"YulIdentifier","src":"4626:5:34"},{"name":"length","nativeSrc":"4633:6:34","nodeType":"YulIdentifier","src":"4633:6:34"}],"functionName":{"name":"add","nativeSrc":"4622:3:34","nodeType":"YulIdentifier","src":"4622:3:34"},"nativeSrc":"4622:18:34","nodeType":"YulFunctionCall","src":"4622:18:34"},"variables":[{"name":"end","nativeSrc":"4615:3:34","nodeType":"YulTypedName","src":"4615:3:34","type":""}]},{"nativeSrc":"4653:23:34","nodeType":"YulVariableDeclaration","src":"4653:23:34","value":{"arguments":[{"name":"end","nativeSrc":"4672:3:34","nodeType":"YulIdentifier","src":"4672:3:34"}],"functionName":{"name":"mload","nativeSrc":"4666:5:34","nodeType":"YulIdentifier","src":"4666:5:34"},"nativeSrc":"4666:10:34","nodeType":"YulFunctionCall","src":"4666:10:34"},"variables":[{"name":"cache","nativeSrc":"4657:5:34","nodeType":"YulTypedName","src":"4657:5:34","type":""}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"4696:3:34","nodeType":"YulIdentifier","src":"4696:3:34"},{"name":"slot","nativeSrc":"4701:4:34","nodeType":"YulIdentifier","src":"4701:4:34"}],"functionName":{"name":"mstore","nativeSrc":"4689:6:34","nodeType":"YulIdentifier","src":"4689:6:34"},"nativeSrc":"4689:17:34","nodeType":"YulFunctionCall","src":"4689:17:34"},"nativeSrc":"4689:17:34","nodeType":"YulExpressionStatement","src":"4689:17:34"},{"nativeSrc":"4719:45:34","nodeType":"YulAssignment","src":"4719:45:34","value":{"arguments":[{"name":"begin","nativeSrc":"4739:5:34","nodeType":"YulIdentifier","src":"4739:5:34"},{"arguments":[{"name":"length","nativeSrc":"4750:6:34","nodeType":"YulIdentifier","src":"4750:6:34"},{"kind":"number","nativeSrc":"4758:4:34","nodeType":"YulLiteral","src":"4758:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4746:3:34","nodeType":"YulIdentifier","src":"4746:3:34"},"nativeSrc":"4746:17:34","nodeType":"YulFunctionCall","src":"4746:17:34"}],"functionName":{"name":"keccak256","nativeSrc":"4729:9:34","nodeType":"YulIdentifier","src":"4729:9:34"},"nativeSrc":"4729:35:34","nodeType":"YulFunctionCall","src":"4729:35:34"},"variableNames":[{"name":"result","nativeSrc":"4719:6:34","nodeType":"YulIdentifier","src":"4719:6:34"}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"4784:3:34","nodeType":"YulIdentifier","src":"4784:3:34"},{"name":"cache","nativeSrc":"4789:5:34","nodeType":"YulIdentifier","src":"4789:5:34"}],"functionName":{"name":"mstore","nativeSrc":"4777:6:34","nodeType":"YulIdentifier","src":"4777:6:34"},"nativeSrc":"4777:18:34","nodeType":"YulFunctionCall","src":"4777:18:34"},"nativeSrc":"4777:18:34","nodeType":"YulExpressionStatement","src":"4777:18:34"}]},"evmVersion":"paris","externalReferences":[{"declaration":5821,"isOffset":false,"isSlot":false,"src":"4554:3:34","valueSize":1},{"declaration":5821,"isOffset":false,"isSlot":false,"src":"4588:3:34","valueSize":1},{"declaration":5824,"isOffset":false,"isSlot":false,"src":"4719:6:34","valueSize":1},{"declaration":5819,"isOffset":false,"isSlot":false,"src":"4701:4:34","valueSize":1}],"flags":["memory-safe"],"id":5826,"nodeType":"InlineAssembly","src":"4495:310:34"}]},"documentation":{"id":5817,"nodeType":"StructuredDocumentation","src":"4307:78:34","text":" @dev Derive the location of a mapping element from the key."},"id":5828,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4399:13:34","nodeType":"FunctionDefinition","parameters":{"id":5822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5819,"mutability":"mutable","name":"slot","nameLocation":"4421:4:34","nodeType":"VariableDeclaration","scope":5828,"src":"4413:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5818,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4413:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5821,"mutability":"mutable","name":"key","nameLocation":"4441:3:34","nodeType":"VariableDeclaration","scope":5828,"src":"4427:17:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5820,"name":"string","nodeType":"ElementaryTypeName","src":"4427:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4412:33:34"},"returnParameters":{"id":5825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5824,"mutability":"mutable","name":"result","nameLocation":"4477:6:34","nodeType":"VariableDeclaration","scope":5828,"src":"4469:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5823,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4468:16:34"},"scope":5841,"src":"4390:421:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5839,"nodeType":"Block","src":"4994:326:34","statements":[{"AST":{"nativeSrc":"5029:285:34","nodeType":"YulBlock","src":"5029:285:34","statements":[{"nativeSrc":"5043:24:34","nodeType":"YulVariableDeclaration","src":"5043:24:34","value":{"arguments":[{"name":"key","nativeSrc":"5063:3:34","nodeType":"YulIdentifier","src":"5063:3:34"}],"functionName":{"name":"mload","nativeSrc":"5057:5:34","nodeType":"YulIdentifier","src":"5057:5:34"},"nativeSrc":"5057:10:34","nodeType":"YulFunctionCall","src":"5057:10:34"},"variables":[{"name":"length","nativeSrc":"5047:6:34","nodeType":"YulTypedName","src":"5047:6:34","type":""}]},{"nativeSrc":"5080:27:34","nodeType":"YulVariableDeclaration","src":"5080:27:34","value":{"arguments":[{"name":"key","nativeSrc":"5097:3:34","nodeType":"YulIdentifier","src":"5097:3:34"},{"kind":"number","nativeSrc":"5102:4:34","nodeType":"YulLiteral","src":"5102:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5093:3:34","nodeType":"YulIdentifier","src":"5093:3:34"},"nativeSrc":"5093:14:34","nodeType":"YulFunctionCall","src":"5093:14:34"},"variables":[{"name":"begin","nativeSrc":"5084:5:34","nodeType":"YulTypedName","src":"5084:5:34","type":""}]},{"nativeSrc":"5120:29:34","nodeType":"YulVariableDeclaration","src":"5120:29:34","value":{"arguments":[{"name":"begin","nativeSrc":"5135:5:34","nodeType":"YulIdentifier","src":"5135:5:34"},{"name":"length","nativeSrc":"5142:6:34","nodeType":"YulIdentifier","src":"5142:6:34"}],"functionName":{"name":"add","nativeSrc":"5131:3:34","nodeType":"YulIdentifier","src":"5131:3:34"},"nativeSrc":"5131:18:34","nodeType":"YulFunctionCall","src":"5131:18:34"},"variables":[{"name":"end","nativeSrc":"5124:3:34","nodeType":"YulTypedName","src":"5124:3:34","type":""}]},{"nativeSrc":"5162:23:34","nodeType":"YulVariableDeclaration","src":"5162:23:34","value":{"arguments":[{"name":"end","nativeSrc":"5181:3:34","nodeType":"YulIdentifier","src":"5181:3:34"}],"functionName":{"name":"mload","nativeSrc":"5175:5:34","nodeType":"YulIdentifier","src":"5175:5:34"},"nativeSrc":"5175:10:34","nodeType":"YulFunctionCall","src":"5175:10:34"},"variables":[{"name":"cache","nativeSrc":"5166:5:34","nodeType":"YulTypedName","src":"5166:5:34","type":""}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"5205:3:34","nodeType":"YulIdentifier","src":"5205:3:34"},{"name":"slot","nativeSrc":"5210:4:34","nodeType":"YulIdentifier","src":"5210:4:34"}],"functionName":{"name":"mstore","nativeSrc":"5198:6:34","nodeType":"YulIdentifier","src":"5198:6:34"},"nativeSrc":"5198:17:34","nodeType":"YulFunctionCall","src":"5198:17:34"},"nativeSrc":"5198:17:34","nodeType":"YulExpressionStatement","src":"5198:17:34"},{"nativeSrc":"5228:45:34","nodeType":"YulAssignment","src":"5228:45:34","value":{"arguments":[{"name":"begin","nativeSrc":"5248:5:34","nodeType":"YulIdentifier","src":"5248:5:34"},{"arguments":[{"name":"length","nativeSrc":"5259:6:34","nodeType":"YulIdentifier","src":"5259:6:34"},{"kind":"number","nativeSrc":"5267:4:34","nodeType":"YulLiteral","src":"5267:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5255:3:34","nodeType":"YulIdentifier","src":"5255:3:34"},"nativeSrc":"5255:17:34","nodeType":"YulFunctionCall","src":"5255:17:34"}],"functionName":{"name":"keccak256","nativeSrc":"5238:9:34","nodeType":"YulIdentifier","src":"5238:9:34"},"nativeSrc":"5238:35:34","nodeType":"YulFunctionCall","src":"5238:35:34"},"variableNames":[{"name":"result","nativeSrc":"5228:6:34","nodeType":"YulIdentifier","src":"5228:6:34"}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"5293:3:34","nodeType":"YulIdentifier","src":"5293:3:34"},{"name":"cache","nativeSrc":"5298:5:34","nodeType":"YulIdentifier","src":"5298:5:34"}],"functionName":{"name":"mstore","nativeSrc":"5286:6:34","nodeType":"YulIdentifier","src":"5286:6:34"},"nativeSrc":"5286:18:34","nodeType":"YulFunctionCall","src":"5286:18:34"},"nativeSrc":"5286:18:34","nodeType":"YulExpressionStatement","src":"5286:18:34"}]},"evmVersion":"paris","externalReferences":[{"declaration":5833,"isOffset":false,"isSlot":false,"src":"5063:3:34","valueSize":1},{"declaration":5833,"isOffset":false,"isSlot":false,"src":"5097:3:34","valueSize":1},{"declaration":5836,"isOffset":false,"isSlot":false,"src":"5228:6:34","valueSize":1},{"declaration":5831,"isOffset":false,"isSlot":false,"src":"5210:4:34","valueSize":1}],"flags":["memory-safe"],"id":5838,"nodeType":"InlineAssembly","src":"5004:310:34"}]},"documentation":{"id":5829,"nodeType":"StructuredDocumentation","src":"4817:78:34","text":" @dev Derive the location of a mapping element from the key."},"id":5840,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4909:13:34","nodeType":"FunctionDefinition","parameters":{"id":5834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5831,"mutability":"mutable","name":"slot","nameLocation":"4931:4:34","nodeType":"VariableDeclaration","scope":5840,"src":"4923:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5830,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4923:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5833,"mutability":"mutable","name":"key","nameLocation":"4950:3:34","nodeType":"VariableDeclaration","scope":5840,"src":"4937:16:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5832,"name":"bytes","nodeType":"ElementaryTypeName","src":"4937:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4922:32:34"},"returnParameters":{"id":5837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5836,"mutability":"mutable","name":"result","nameLocation":"4986:6:34","nodeType":"VariableDeclaration","scope":5840,"src":"4978:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5835,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4978:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4977:16:34"},"scope":5841,"src":"4900:420:34","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5842,"src":"1599:3723:34","usedErrors":[],"usedEvents":[]}],"src":"199:5124:34"},"id":34},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[5965]},"id":5966,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5843,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:35"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":5844,"nodeType":"StructuredDocumentation","src":"219:1187:35","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":5965,"linearizedBaseContracts":[5965],"name":"StorageSlot","nameLocation":"1415:11:35","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":5847,"members":[{"constant":false,"id":5846,"mutability":"mutable","name":"value","nameLocation":"1470:5:35","nodeType":"VariableDeclaration","scope":5847,"src":"1462:13:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5845,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:35","nodeType":"StructDefinition","scope":5965,"src":"1433:49:35","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":5850,"members":[{"constant":false,"id":5849,"mutability":"mutable","name":"value","nameLocation":"1522:5:35","nodeType":"VariableDeclaration","scope":5850,"src":"1517:10:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5848,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:35","nodeType":"StructDefinition","scope":5965,"src":"1488:46:35","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":5853,"members":[{"constant":false,"id":5852,"mutability":"mutable","name":"value","nameLocation":"1577:5:35","nodeType":"VariableDeclaration","scope":5853,"src":"1569:13:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5851,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:35","nodeType":"StructDefinition","scope":5965,"src":"1540:49:35","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":5856,"members":[{"constant":false,"id":5855,"mutability":"mutable","name":"value","nameLocation":"1632:5:35","nodeType":"VariableDeclaration","scope":5856,"src":"1624:13:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5854,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:35","nodeType":"StructDefinition","scope":5965,"src":"1595:49:35","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":5859,"members":[{"constant":false,"id":5858,"mutability":"mutable","name":"value","nameLocation":"1685:5:35","nodeType":"VariableDeclaration","scope":5859,"src":"1678:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5857,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:35","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:35","nodeType":"StructDefinition","scope":5965,"src":"1650:47:35","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":5862,"members":[{"constant":false,"id":5861,"mutability":"mutable","name":"value","nameLocation":"1738:5:35","nodeType":"VariableDeclaration","scope":5862,"src":"1731:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5860,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:35","nodeType":"StructDefinition","scope":5965,"src":"1703:47:35","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":5865,"members":[{"constant":false,"id":5864,"mutability":"mutable","name":"value","nameLocation":"1789:5:35","nodeType":"VariableDeclaration","scope":5865,"src":"1783:11:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":5863,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:35","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:35","nodeType":"StructDefinition","scope":5965,"src":"1756:45:35","visibility":"public"},{"body":{"id":5875,"nodeType":"Block","src":"1983:79:35","statements":[{"AST":{"nativeSrc":"2018:38:35","nodeType":"YulBlock","src":"2018:38:35","statements":[{"nativeSrc":"2032:14:35","nodeType":"YulAssignment","src":"2032:14:35","value":{"name":"slot","nativeSrc":"2042:4:35","nodeType":"YulIdentifier","src":"2042:4:35"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:35","nodeType":"YulIdentifier","src":"2032:6:35"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5872,"isOffset":false,"isSlot":true,"src":"2032:6:35","suffix":"slot","valueSize":1},{"declaration":5868,"isOffset":false,"isSlot":false,"src":"2042:4:35","valueSize":1}],"flags":["memory-safe"],"id":5874,"nodeType":"InlineAssembly","src":"1993:63:35"}]},"documentation":{"id":5866,"nodeType":"StructuredDocumentation","src":"1807:87:35","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":5876,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:35","nodeType":"FunctionDefinition","parameters":{"id":5869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5868,"mutability":"mutable","name":"slot","nameLocation":"1931:4:35","nodeType":"VariableDeclaration","scope":5876,"src":"1923:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5867,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:35"},"returnParameters":{"id":5873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5872,"mutability":"mutable","name":"r","nameLocation":"1980:1:35","nodeType":"VariableDeclaration","scope":5876,"src":"1960:21:35","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$5847_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":5871,"nodeType":"UserDefinedTypeName","pathNode":{"id":5870,"name":"AddressSlot","nameLocations":["1960:11:35"],"nodeType":"IdentifierPath","referencedDeclaration":5847,"src":"1960:11:35"},"referencedDeclaration":5847,"src":"1960:11:35","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$5847_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:35"},"scope":5965,"src":"1899:163:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5886,"nodeType":"Block","src":"2243:79:35","statements":[{"AST":{"nativeSrc":"2278:38:35","nodeType":"YulBlock","src":"2278:38:35","statements":[{"nativeSrc":"2292:14:35","nodeType":"YulAssignment","src":"2292:14:35","value":{"name":"slot","nativeSrc":"2302:4:35","nodeType":"YulIdentifier","src":"2302:4:35"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:35","nodeType":"YulIdentifier","src":"2292:6:35"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5883,"isOffset":false,"isSlot":true,"src":"2292:6:35","suffix":"slot","valueSize":1},{"declaration":5879,"isOffset":false,"isSlot":false,"src":"2302:4:35","valueSize":1}],"flags":["memory-safe"],"id":5885,"nodeType":"InlineAssembly","src":"2253:63:35"}]},"documentation":{"id":5877,"nodeType":"StructuredDocumentation","src":"2068:86:35","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":5887,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:35","nodeType":"FunctionDefinition","parameters":{"id":5880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5879,"mutability":"mutable","name":"slot","nameLocation":"2191:4:35","nodeType":"VariableDeclaration","scope":5887,"src":"2183:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5878,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:35"},"returnParameters":{"id":5884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5883,"mutability":"mutable","name":"r","nameLocation":"2240:1:35","nodeType":"VariableDeclaration","scope":5887,"src":"2220:21:35","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$5850_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":5882,"nodeType":"UserDefinedTypeName","pathNode":{"id":5881,"name":"BooleanSlot","nameLocations":["2220:11:35"],"nodeType":"IdentifierPath","referencedDeclaration":5850,"src":"2220:11:35"},"referencedDeclaration":5850,"src":"2220:11:35","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$5850_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:35"},"scope":5965,"src":"2159:163:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5897,"nodeType":"Block","src":"2503:79:35","statements":[{"AST":{"nativeSrc":"2538:38:35","nodeType":"YulBlock","src":"2538:38:35","statements":[{"nativeSrc":"2552:14:35","nodeType":"YulAssignment","src":"2552:14:35","value":{"name":"slot","nativeSrc":"2562:4:35","nodeType":"YulIdentifier","src":"2562:4:35"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:35","nodeType":"YulIdentifier","src":"2552:6:35"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5894,"isOffset":false,"isSlot":true,"src":"2552:6:35","suffix":"slot","valueSize":1},{"declaration":5890,"isOffset":false,"isSlot":false,"src":"2562:4:35","valueSize":1}],"flags":["memory-safe"],"id":5896,"nodeType":"InlineAssembly","src":"2513:63:35"}]},"documentation":{"id":5888,"nodeType":"StructuredDocumentation","src":"2328:86:35","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":5898,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:35","nodeType":"FunctionDefinition","parameters":{"id":5891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5890,"mutability":"mutable","name":"slot","nameLocation":"2451:4:35","nodeType":"VariableDeclaration","scope":5898,"src":"2443:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5889,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:35"},"returnParameters":{"id":5895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5894,"mutability":"mutable","name":"r","nameLocation":"2500:1:35","nodeType":"VariableDeclaration","scope":5898,"src":"2480:21:35","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$5853_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":5893,"nodeType":"UserDefinedTypeName","pathNode":{"id":5892,"name":"Bytes32Slot","nameLocations":["2480:11:35"],"nodeType":"IdentifierPath","referencedDeclaration":5853,"src":"2480:11:35"},"referencedDeclaration":5853,"src":"2480:11:35","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$5853_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:35"},"scope":5965,"src":"2419:163:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5908,"nodeType":"Block","src":"2763:79:35","statements":[{"AST":{"nativeSrc":"2798:38:35","nodeType":"YulBlock","src":"2798:38:35","statements":[{"nativeSrc":"2812:14:35","nodeType":"YulAssignment","src":"2812:14:35","value":{"name":"slot","nativeSrc":"2822:4:35","nodeType":"YulIdentifier","src":"2822:4:35"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:35","nodeType":"YulIdentifier","src":"2812:6:35"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5905,"isOffset":false,"isSlot":true,"src":"2812:6:35","suffix":"slot","valueSize":1},{"declaration":5901,"isOffset":false,"isSlot":false,"src":"2822:4:35","valueSize":1}],"flags":["memory-safe"],"id":5907,"nodeType":"InlineAssembly","src":"2773:63:35"}]},"documentation":{"id":5899,"nodeType":"StructuredDocumentation","src":"2588:86:35","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":5909,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:35","nodeType":"FunctionDefinition","parameters":{"id":5902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5901,"mutability":"mutable","name":"slot","nameLocation":"2711:4:35","nodeType":"VariableDeclaration","scope":5909,"src":"2703:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5900,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:35"},"returnParameters":{"id":5906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5905,"mutability":"mutable","name":"r","nameLocation":"2760:1:35","nodeType":"VariableDeclaration","scope":5909,"src":"2740:21:35","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$5856_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":5904,"nodeType":"UserDefinedTypeName","pathNode":{"id":5903,"name":"Uint256Slot","nameLocations":["2740:11:35"],"nodeType":"IdentifierPath","referencedDeclaration":5856,"src":"2740:11:35"},"referencedDeclaration":5856,"src":"2740:11:35","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$5856_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:35"},"scope":5965,"src":"2679:163:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5919,"nodeType":"Block","src":"3020:79:35","statements":[{"AST":{"nativeSrc":"3055:38:35","nodeType":"YulBlock","src":"3055:38:35","statements":[{"nativeSrc":"3069:14:35","nodeType":"YulAssignment","src":"3069:14:35","value":{"name":"slot","nativeSrc":"3079:4:35","nodeType":"YulIdentifier","src":"3079:4:35"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:35","nodeType":"YulIdentifier","src":"3069:6:35"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5916,"isOffset":false,"isSlot":true,"src":"3069:6:35","suffix":"slot","valueSize":1},{"declaration":5912,"isOffset":false,"isSlot":false,"src":"3079:4:35","valueSize":1}],"flags":["memory-safe"],"id":5918,"nodeType":"InlineAssembly","src":"3030:63:35"}]},"documentation":{"id":5910,"nodeType":"StructuredDocumentation","src":"2848:85:35","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":5920,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:35","nodeType":"FunctionDefinition","parameters":{"id":5913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5912,"mutability":"mutable","name":"slot","nameLocation":"2969:4:35","nodeType":"VariableDeclaration","scope":5920,"src":"2961:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5911,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:35"},"returnParameters":{"id":5917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5916,"mutability":"mutable","name":"r","nameLocation":"3017:1:35","nodeType":"VariableDeclaration","scope":5920,"src":"2998:20:35","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$5859_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":5915,"nodeType":"UserDefinedTypeName","pathNode":{"id":5914,"name":"Int256Slot","nameLocations":["2998:10:35"],"nodeType":"IdentifierPath","referencedDeclaration":5859,"src":"2998:10:35"},"referencedDeclaration":5859,"src":"2998:10:35","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$5859_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:35"},"scope":5965,"src":"2938:161:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5930,"nodeType":"Block","src":"3277:79:35","statements":[{"AST":{"nativeSrc":"3312:38:35","nodeType":"YulBlock","src":"3312:38:35","statements":[{"nativeSrc":"3326:14:35","nodeType":"YulAssignment","src":"3326:14:35","value":{"name":"slot","nativeSrc":"3336:4:35","nodeType":"YulIdentifier","src":"3336:4:35"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:35","nodeType":"YulIdentifier","src":"3326:6:35"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5927,"isOffset":false,"isSlot":true,"src":"3326:6:35","suffix":"slot","valueSize":1},{"declaration":5923,"isOffset":false,"isSlot":false,"src":"3336:4:35","valueSize":1}],"flags":["memory-safe"],"id":5929,"nodeType":"InlineAssembly","src":"3287:63:35"}]},"documentation":{"id":5921,"nodeType":"StructuredDocumentation","src":"3105:85:35","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":5931,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:35","nodeType":"FunctionDefinition","parameters":{"id":5924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5923,"mutability":"mutable","name":"slot","nameLocation":"3226:4:35","nodeType":"VariableDeclaration","scope":5931,"src":"3218:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5922,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:35"},"returnParameters":{"id":5928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5927,"mutability":"mutable","name":"r","nameLocation":"3274:1:35","nodeType":"VariableDeclaration","scope":5931,"src":"3255:20:35","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$5862_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":5926,"nodeType":"UserDefinedTypeName","pathNode":{"id":5925,"name":"StringSlot","nameLocations":["3255:10:35"],"nodeType":"IdentifierPath","referencedDeclaration":5862,"src":"3255:10:35"},"referencedDeclaration":5862,"src":"3255:10:35","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$5862_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:35"},"scope":5965,"src":"3195:161:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5941,"nodeType":"Block","src":"3558:85:35","statements":[{"AST":{"nativeSrc":"3593:44:35","nodeType":"YulBlock","src":"3593:44:35","statements":[{"nativeSrc":"3607:20:35","nodeType":"YulAssignment","src":"3607:20:35","value":{"name":"store.slot","nativeSrc":"3617:10:35","nodeType":"YulIdentifier","src":"3617:10:35"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:35","nodeType":"YulIdentifier","src":"3607:6:35"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5938,"isOffset":false,"isSlot":true,"src":"3607:6:35","suffix":"slot","valueSize":1},{"declaration":5934,"isOffset":false,"isSlot":true,"src":"3617:10:35","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":5940,"nodeType":"InlineAssembly","src":"3568:69:35"}]},"documentation":{"id":5932,"nodeType":"StructuredDocumentation","src":"3362:101:35","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":5942,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:35","nodeType":"FunctionDefinition","parameters":{"id":5935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5934,"mutability":"mutable","name":"store","nameLocation":"3506:5:35","nodeType":"VariableDeclaration","scope":5942,"src":"3491:20:35","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5933,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:35"},"returnParameters":{"id":5939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5938,"mutability":"mutable","name":"r","nameLocation":"3555:1:35","nodeType":"VariableDeclaration","scope":5942,"src":"3536:20:35","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$5862_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":5937,"nodeType":"UserDefinedTypeName","pathNode":{"id":5936,"name":"StringSlot","nameLocations":["3536:10:35"],"nodeType":"IdentifierPath","referencedDeclaration":5862,"src":"3536:10:35"},"referencedDeclaration":5862,"src":"3536:10:35","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$5862_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:35"},"scope":5965,"src":"3468:175:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5952,"nodeType":"Block","src":"3818:79:35","statements":[{"AST":{"nativeSrc":"3853:38:35","nodeType":"YulBlock","src":"3853:38:35","statements":[{"nativeSrc":"3867:14:35","nodeType":"YulAssignment","src":"3867:14:35","value":{"name":"slot","nativeSrc":"3877:4:35","nodeType":"YulIdentifier","src":"3877:4:35"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:35","nodeType":"YulIdentifier","src":"3867:6:35"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5949,"isOffset":false,"isSlot":true,"src":"3867:6:35","suffix":"slot","valueSize":1},{"declaration":5945,"isOffset":false,"isSlot":false,"src":"3877:4:35","valueSize":1}],"flags":["memory-safe"],"id":5951,"nodeType":"InlineAssembly","src":"3828:63:35"}]},"documentation":{"id":5943,"nodeType":"StructuredDocumentation","src":"3649:84:35","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":5953,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:35","nodeType":"FunctionDefinition","parameters":{"id":5946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5945,"mutability":"mutable","name":"slot","nameLocation":"3768:4:35","nodeType":"VariableDeclaration","scope":5953,"src":"3760:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5944,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:35"},"returnParameters":{"id":5950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5949,"mutability":"mutable","name":"r","nameLocation":"3815:1:35","nodeType":"VariableDeclaration","scope":5953,"src":"3797:19:35","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$5865_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":5948,"nodeType":"UserDefinedTypeName","pathNode":{"id":5947,"name":"BytesSlot","nameLocations":["3797:9:35"],"nodeType":"IdentifierPath","referencedDeclaration":5865,"src":"3797:9:35"},"referencedDeclaration":5865,"src":"3797:9:35","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$5865_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:35"},"scope":5965,"src":"3738:159:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5963,"nodeType":"Block","src":"4094:85:35","statements":[{"AST":{"nativeSrc":"4129:44:35","nodeType":"YulBlock","src":"4129:44:35","statements":[{"nativeSrc":"4143:20:35","nodeType":"YulAssignment","src":"4143:20:35","value":{"name":"store.slot","nativeSrc":"4153:10:35","nodeType":"YulIdentifier","src":"4153:10:35"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:35","nodeType":"YulIdentifier","src":"4143:6:35"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5960,"isOffset":false,"isSlot":true,"src":"4143:6:35","suffix":"slot","valueSize":1},{"declaration":5956,"isOffset":false,"isSlot":true,"src":"4153:10:35","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":5962,"nodeType":"InlineAssembly","src":"4104:69:35"}]},"documentation":{"id":5954,"nodeType":"StructuredDocumentation","src":"3903:99:35","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":5964,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:35","nodeType":"FunctionDefinition","parameters":{"id":5957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5956,"mutability":"mutable","name":"store","nameLocation":"4043:5:35","nodeType":"VariableDeclaration","scope":5964,"src":"4029:19:35","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":5955,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:35","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:35"},"returnParameters":{"id":5961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5960,"mutability":"mutable","name":"r","nameLocation":"4091:1:35","nodeType":"VariableDeclaration","scope":5964,"src":"4073:19:35","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$5865_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":5959,"nodeType":"UserDefinedTypeName","pathNode":{"id":5958,"name":"BytesSlot","nameLocations":["4073:9:35"],"nodeType":"IdentifierPath","referencedDeclaration":5865,"src":"4073:9:35"},"referencedDeclaration":5865,"src":"4073:9:35","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$5865_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:35"},"scope":5965,"src":"4007:172:35","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5966,"src":"1407:2774:35","usedErrors":[],"usedEvents":[]}],"src":"193:3989:35"},"id":35},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[9000],"SafeCast":[10765],"SignedMath":[10909],"Strings":[7367]},"id":7368,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5967,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:36"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":5969,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7368,"sourceUnit":9001,"src":"127:37:36","symbolAliases":[{"foreign":{"id":5968,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9000,"src":"135:4:36","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":5971,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7368,"sourceUnit":10766,"src":"165:45:36","symbolAliases":[{"foreign":{"id":5970,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10765,"src":"173:8:36","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":5973,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7368,"sourceUnit":10910,"src":"211:49:36","symbolAliases":[{"foreign":{"id":5972,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10909,"src":"219:10:36","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":5974,"nodeType":"StructuredDocumentation","src":"262:34:36","text":" @dev String operations."},"fullyImplemented":true,"id":7367,"linearizedBaseContracts":[7367],"name":"Strings","nameLocation":"305:7:36","nodeType":"ContractDefinition","nodes":[{"global":false,"id":5976,"libraryName":{"id":5975,"name":"SafeCast","nameLocations":["325:8:36"],"nodeType":"IdentifierPath","referencedDeclaration":10765,"src":"325:8:36"},"nodeType":"UsingForDirective","src":"319:21:36"},{"constant":true,"id":5979,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:36","nodeType":"VariableDeclaration","scope":7367,"src":"346:56:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":5977,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:36","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":5978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":5982,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:36","nodeType":"VariableDeclaration","scope":7367,"src":"408:42:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5980,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":5981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:36","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":6018,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:36","nodeType":"VariableDeclaration","scope":7367,"src":"456:302:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5983,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":6017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":6012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":6007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":6002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":5997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":5992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":5985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:36","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:36","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5987,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:36","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":5990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":5989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:36","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:36","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":5991,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:36","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:36","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":5995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":5994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:36","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:36","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":5996,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:36","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:36","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":6000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":5999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:36","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:36","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":6001,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:36","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:36","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":6005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":6004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:36","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:36","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":6006,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:36","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:36","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":6010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":6009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:36","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:36","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":6011,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:36","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:36","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":6015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":6014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:36","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:36","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":6016,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:36","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:36","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":6019,"nodeType":"StructuredDocumentation","src":"778:81:36","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":6025,"name":"StringsInsufficientHexLength","nameLocation":"870:28:36","nodeType":"ErrorDefinition","parameters":{"id":6024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6021,"mutability":"mutable","name":"value","nameLocation":"907:5:36","nodeType":"VariableDeclaration","scope":6025,"src":"899:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6020,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6023,"mutability":"mutable","name":"length","nameLocation":"922:6:36","nodeType":"VariableDeclaration","scope":6025,"src":"914:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6022,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:36"},"src":"864:66:36"},{"documentation":{"id":6026,"nodeType":"StructuredDocumentation","src":"936:108:36","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":6028,"name":"StringsInvalidChar","nameLocation":"1055:18:36","nodeType":"ErrorDefinition","parameters":{"id":6027,"nodeType":"ParameterList","parameters":[],"src":"1073:2:36"},"src":"1049:27:36"},{"documentation":{"id":6029,"nodeType":"StructuredDocumentation","src":"1082:84:36","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":6031,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:36","nodeType":"ErrorDefinition","parameters":{"id":6030,"nodeType":"ParameterList","parameters":[],"src":"1204:2:36"},"src":"1171:36:36"},{"body":{"id":6078,"nodeType":"Block","src":"1379:561:36","statements":[{"id":6077,"nodeType":"UncheckedBlock","src":"1389:545:36","statements":[{"assignments":[6040],"declarations":[{"constant":false,"id":6040,"mutability":"mutable","name":"length","nameLocation":"1421:6:36","nodeType":"VariableDeclaration","scope":6077,"src":"1413:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6039,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6047,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6034,"src":"1441:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6041,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9000,"src":"1430:4:36","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$9000_$","typeString":"type(library Math)"}},"id":6042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:36","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":8832,"src":"1430:10:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:36"},{"assignments":[6049],"declarations":[{"constant":false,"id":6049,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:36","nodeType":"VariableDeclaration","scope":6077,"src":"1465:20:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6048,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":6054,"initialValue":{"arguments":[{"id":6052,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"1499:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:36","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":6050,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":6053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:36"},{"assignments":[6056],"declarations":[{"constant":false,"id":6056,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:36","nodeType":"VariableDeclaration","scope":6077,"src":"1520:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6055,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6057,"nodeType":"VariableDeclarationStatement","src":"1520:11:36"},{"AST":{"nativeSrc":"1570:67:36","nodeType":"YulBlock","src":"1570:67:36","statements":[{"nativeSrc":"1588:35:36","nodeType":"YulAssignment","src":"1588:35:36","value":{"arguments":[{"name":"buffer","nativeSrc":"1599:6:36","nodeType":"YulIdentifier","src":"1599:6:36"},{"arguments":[{"kind":"number","nativeSrc":"1611:2:36","nodeType":"YulLiteral","src":"1611:2:36","type":"","value":"32"},{"name":"length","nativeSrc":"1615:6:36","nodeType":"YulIdentifier","src":"1615:6:36"}],"functionName":{"name":"add","nativeSrc":"1607:3:36","nodeType":"YulIdentifier","src":"1607:3:36"},"nativeSrc":"1607:15:36","nodeType":"YulFunctionCall","src":"1607:15:36"}],"functionName":{"name":"add","nativeSrc":"1595:3:36","nodeType":"YulIdentifier","src":"1595:3:36"},"nativeSrc":"1595:28:36","nodeType":"YulFunctionCall","src":"1595:28:36"},"variableNames":[{"name":"ptr","nativeSrc":"1588:3:36","nodeType":"YulIdentifier","src":"1588:3:36"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6049,"isOffset":false,"isSlot":false,"src":"1599:6:36","valueSize":1},{"declaration":6040,"isOffset":false,"isSlot":false,"src":"1615:6:36","valueSize":1},{"declaration":6056,"isOffset":false,"isSlot":false,"src":"1588:3:36","valueSize":1}],"flags":["memory-safe"],"id":6058,"nodeType":"InlineAssembly","src":"1545:92:36"},{"body":{"id":6073,"nodeType":"Block","src":"1663:234:36","statements":[{"expression":{"id":6061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1681:5:36","subExpression":{"id":6060,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6056,"src":"1681:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6062,"nodeType":"ExpressionStatement","src":"1681:5:36"},{"AST":{"nativeSrc":"1729:86:36","nodeType":"YulBlock","src":"1729:86:36","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1759:3:36","nodeType":"YulIdentifier","src":"1759:3:36"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1773:5:36","nodeType":"YulIdentifier","src":"1773:5:36"},{"kind":"number","nativeSrc":"1780:2:36","nodeType":"YulLiteral","src":"1780:2:36","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1769:3:36","nodeType":"YulIdentifier","src":"1769:3:36"},"nativeSrc":"1769:14:36","nodeType":"YulFunctionCall","src":"1769:14:36"},{"name":"HEX_DIGITS","nativeSrc":"1785:10:36","nodeType":"YulIdentifier","src":"1785:10:36"}],"functionName":{"name":"byte","nativeSrc":"1764:4:36","nodeType":"YulIdentifier","src":"1764:4:36"},"nativeSrc":"1764:32:36","nodeType":"YulFunctionCall","src":"1764:32:36"}],"functionName":{"name":"mstore8","nativeSrc":"1751:7:36","nodeType":"YulIdentifier","src":"1751:7:36"},"nativeSrc":"1751:46:36","nodeType":"YulFunctionCall","src":"1751:46:36"},"nativeSrc":"1751:46:36","nodeType":"YulExpressionStatement","src":"1751:46:36"}]},"evmVersion":"paris","externalReferences":[{"declaration":5979,"isOffset":false,"isSlot":false,"src":"1785:10:36","valueSize":1},{"declaration":6056,"isOffset":false,"isSlot":false,"src":"1759:3:36","valueSize":1},{"declaration":6034,"isOffset":false,"isSlot":false,"src":"1773:5:36","valueSize":1}],"flags":["memory-safe"],"id":6063,"nodeType":"InlineAssembly","src":"1704:111:36"},{"expression":{"id":6066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6034,"src":"1832:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":6065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:2:36","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1832:11:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6067,"nodeType":"ExpressionStatement","src":"1832:11:36"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6034,"src":"1865:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6072,"nodeType":"IfStatement","src":"1861:21:36","trueBody":{"id":6071,"nodeType":"Break","src":"1877:5:36"}}]},"condition":{"hexValue":"74727565","id":6059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1657:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":6074,"nodeType":"WhileStatement","src":"1650:247:36"},{"expression":{"id":6075,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6049,"src":"1917:6:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":6038,"id":6076,"nodeType":"Return","src":"1910:13:36"}]}]},"documentation":{"id":6032,"nodeType":"StructuredDocumentation","src":"1213:90:36","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":6079,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:36","nodeType":"FunctionDefinition","parameters":{"id":6035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6034,"mutability":"mutable","name":"value","nameLocation":"1334:5:36","nodeType":"VariableDeclaration","scope":6079,"src":"1326:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6033,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:36"},"returnParameters":{"id":6038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6079,"src":"1364:13:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6036,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:36"},"scope":7367,"src":"1308:632:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6104,"nodeType":"Block","src":"2116:92:36","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6082,"src":"2147:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2147:9:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":6094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2165:2:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":6095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2147:20:36","trueExpression":{"hexValue":"2d","id":6093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2159:3:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":6099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6082,"src":"2193:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":6097,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10909,"src":"2178:10:36","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$10909_$","typeString":"type(library SignedMath)"}},"id":6098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2189:3:36","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":10908,"src":"2178:14:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":6100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:21:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6096,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6079,"src":"2169:8:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":6101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2169:31:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":6088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2133:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6087,"name":"string","nodeType":"ElementaryTypeName","src":"2133:6:36","typeDescriptions":{}}},"id":6089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2140:6:36","memberName":"concat","nodeType":"MemberAccess","src":"2133:13:36","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":6102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2133:68:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":6086,"id":6103,"nodeType":"Return","src":"2126:75:36"}]},"documentation":{"id":6080,"nodeType":"StructuredDocumentation","src":"1946:89:36","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":6105,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2049:14:36","nodeType":"FunctionDefinition","parameters":{"id":6083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6082,"mutability":"mutable","name":"value","nameLocation":"2071:5:36","nodeType":"VariableDeclaration","scope":6105,"src":"2064:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6081,"name":"int256","nodeType":"ElementaryTypeName","src":"2064:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2063:14:36"},"returnParameters":{"id":6086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6105,"src":"2101:13:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6084,"name":"string","nodeType":"ElementaryTypeName","src":"2101:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2100:15:36"},"scope":7367,"src":"2040:168:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6124,"nodeType":"Block","src":"2387:100:36","statements":[{"id":6123,"nodeType":"UncheckedBlock","src":"2397:84:36","statements":[{"expression":{"arguments":[{"id":6114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6108,"src":"2440:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6108,"src":"2459:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6115,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9000,"src":"2447:4:36","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$9000_$","typeString":"type(library Math)"}},"id":6116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2452:6:36","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":8943,"src":"2447:11:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:18:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2468:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2447:22:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6113,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[6125,6208,6228],"referencedDeclaration":6208,"src":"2428:11:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":6121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2428:42:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":6112,"id":6122,"nodeType":"Return","src":"2421:49:36"}]}]},"documentation":{"id":6106,"nodeType":"StructuredDocumentation","src":"2214:94:36","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":6125,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2322:11:36","nodeType":"FunctionDefinition","parameters":{"id":6109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6108,"mutability":"mutable","name":"value","nameLocation":"2342:5:36","nodeType":"VariableDeclaration","scope":6125,"src":"2334:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6107,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:36"},"returnParameters":{"id":6112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6111,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6125,"src":"2372:13:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6110,"name":"string","nodeType":"ElementaryTypeName","src":"2372:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2371:15:36"},"scope":7367,"src":"2313:174:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6207,"nodeType":"Block","src":"2700:435:36","statements":[{"assignments":[6136],"declarations":[{"constant":false,"id":6136,"mutability":"mutable","name":"localValue","nameLocation":"2718:10:36","nodeType":"VariableDeclaration","scope":6207,"src":"2710:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6135,"name":"uint256","nodeType":"ElementaryTypeName","src":"2710:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6138,"initialValue":{"id":6137,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6128,"src":"2731:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2710:26:36"},{"assignments":[6140],"declarations":[{"constant":false,"id":6140,"mutability":"mutable","name":"buffer","nameLocation":"2759:6:36","nodeType":"VariableDeclaration","scope":6207,"src":"2746:19:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6139,"name":"bytes","nodeType":"ElementaryTypeName","src":"2746:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6149,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2778:1:36","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6144,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6130,"src":"2782:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2778:10:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":6146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2791:1:36","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2778:14:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2768:9:36","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":6141,"name":"bytes","nodeType":"ElementaryTypeName","src":"2772:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":6148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2768:25:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2746:47:36"},{"expression":{"id":6154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6150,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"2803:6:36","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6152,"indexExpression":{"hexValue":"30","id":6151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2810:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2803:9:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":6153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2815:3:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2803:15:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6155,"nodeType":"ExpressionStatement","src":"2803:15:36"},{"expression":{"id":6160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6156,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"2828:6:36","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6158,"indexExpression":{"hexValue":"31","id":6157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2835:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2828:9:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":6159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2840:3:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2828:15:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6161,"nodeType":"ExpressionStatement","src":"2828:15:36"},{"body":{"id":6190,"nodeType":"Block","src":"2898:95:36","statements":[{"expression":{"id":6184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6176,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"2912:6:36","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6178,"indexExpression":{"id":6177,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6163,"src":"2919:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2912:9:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":6179,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5979,"src":"2924:10:36","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":6183,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6180,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"2935:10:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":6181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2948:3:36","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2935:16:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2924:28:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2912:40:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6185,"nodeType":"ExpressionStatement","src":"2912:40:36"},{"expression":{"id":6188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6186,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"2966:10:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":6187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2981:1:36","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2966:16:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6189,"nodeType":"ExpressionStatement","src":"2966:16:36"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6170,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6163,"src":"2886:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":6171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2890:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2886:5:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6191,"initializationExpression":{"assignments":[6163],"declarations":[{"constant":false,"id":6163,"mutability":"mutable","name":"i","nameLocation":"2866:1:36","nodeType":"VariableDeclaration","scope":6191,"src":"2858:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6162,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6169,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2870:1:36","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6165,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6130,"src":"2874:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2870:10:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2883:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2870:14:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2858:26:36"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":6174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2893:3:36","subExpression":{"id":6173,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6163,"src":"2895:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6175,"nodeType":"ExpressionStatement","src":"2893:3:36"},"nodeType":"ForStatement","src":"2853:140:36"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6192,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"3006:10:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3020:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3006:15:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6201,"nodeType":"IfStatement","src":"3002:96:36","trueBody":{"id":6200,"nodeType":"Block","src":"3023:75:36","statements":[{"errorCall":{"arguments":[{"id":6196,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6128,"src":"3073:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6197,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6130,"src":"3080:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6195,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6025,"src":"3044:28:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":6198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3044:43:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6199,"nodeType":"RevertStatement","src":"3037:50:36"}]}},{"expression":{"arguments":[{"id":6204,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"3121:6:36","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3114:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6202,"name":"string","nodeType":"ElementaryTypeName","src":"3114:6:36","typeDescriptions":{}}},"id":6205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3114:14:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":6134,"id":6206,"nodeType":"Return","src":"3107:21:36"}]},"documentation":{"id":6126,"nodeType":"StructuredDocumentation","src":"2493:112:36","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":6208,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2619:11:36","nodeType":"FunctionDefinition","parameters":{"id":6131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6128,"mutability":"mutable","name":"value","nameLocation":"2639:5:36","nodeType":"VariableDeclaration","scope":6208,"src":"2631:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6127,"name":"uint256","nodeType":"ElementaryTypeName","src":"2631:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6130,"mutability":"mutable","name":"length","nameLocation":"2654:6:36","nodeType":"VariableDeclaration","scope":6208,"src":"2646:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6129,"name":"uint256","nodeType":"ElementaryTypeName","src":"2646:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2630:31:36"},"returnParameters":{"id":6134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6208,"src":"2685:13:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6132,"name":"string","nodeType":"ElementaryTypeName","src":"2685:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2684:15:36"},"scope":7367,"src":"2610:525:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6227,"nodeType":"Block","src":"3367:75:36","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":6221,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6211,"src":"3412:4:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3404:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6219,"name":"uint160","nodeType":"ElementaryTypeName","src":"3404:7:36","typeDescriptions":{}}},"id":6222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3404:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":6218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3396:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6217,"name":"uint256","nodeType":"ElementaryTypeName","src":"3396:7:36","typeDescriptions":{}}},"id":6223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3396:22:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6224,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5982,"src":"3420:14:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":6216,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[6125,6208,6228],"referencedDeclaration":6208,"src":"3384:11:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":6225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3384:51:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":6215,"id":6226,"nodeType":"Return","src":"3377:58:36"}]},"documentation":{"id":6209,"nodeType":"StructuredDocumentation","src":"3141:148:36","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":6228,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3303:11:36","nodeType":"FunctionDefinition","parameters":{"id":6212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6211,"mutability":"mutable","name":"addr","nameLocation":"3323:4:36","nodeType":"VariableDeclaration","scope":6228,"src":"3315:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6210,"name":"address","nodeType":"ElementaryTypeName","src":"3315:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3314:14:36"},"returnParameters":{"id":6215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6228,"src":"3352:13:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6213,"name":"string","nodeType":"ElementaryTypeName","src":"3352:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3351:15:36"},"scope":7367,"src":"3294:148:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6292,"nodeType":"Block","src":"3699:642:36","statements":[{"assignments":[6237],"declarations":[{"constant":false,"id":6237,"mutability":"mutable","name":"buffer","nameLocation":"3722:6:36","nodeType":"VariableDeclaration","scope":6292,"src":"3709:19:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6236,"name":"bytes","nodeType":"ElementaryTypeName","src":"3709:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6244,"initialValue":{"arguments":[{"arguments":[{"id":6241,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6231,"src":"3749:4:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6240,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[6125,6208,6228],"referencedDeclaration":6228,"src":"3737:11:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":6242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3737:17:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3731:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6238,"name":"bytes","nodeType":"ElementaryTypeName","src":"3731:5:36","typeDescriptions":{}}},"id":6243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3731:24:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3709:46:36"},{"assignments":[6246],"declarations":[{"constant":false,"id":6246,"mutability":"mutable","name":"hashValue","nameLocation":"3848:9:36","nodeType":"VariableDeclaration","scope":6292,"src":"3840:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6245,"name":"uint256","nodeType":"ElementaryTypeName","src":"3840:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6247,"nodeType":"VariableDeclarationStatement","src":"3840:17:36"},{"AST":{"nativeSrc":"3892:78:36","nodeType":"YulBlock","src":"3892:78:36","statements":[{"nativeSrc":"3906:54:36","nodeType":"YulAssignment","src":"3906:54:36","value":{"arguments":[{"kind":"number","nativeSrc":"3923:2:36","nodeType":"YulLiteral","src":"3923:2:36","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3941:6:36","nodeType":"YulIdentifier","src":"3941:6:36"},{"kind":"number","nativeSrc":"3949:4:36","nodeType":"YulLiteral","src":"3949:4:36","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3937:3:36","nodeType":"YulIdentifier","src":"3937:3:36"},"nativeSrc":"3937:17:36","nodeType":"YulFunctionCall","src":"3937:17:36"},{"kind":"number","nativeSrc":"3956:2:36","nodeType":"YulLiteral","src":"3956:2:36","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3927:9:36","nodeType":"YulIdentifier","src":"3927:9:36"},"nativeSrc":"3927:32:36","nodeType":"YulFunctionCall","src":"3927:32:36"}],"functionName":{"name":"shr","nativeSrc":"3919:3:36","nodeType":"YulIdentifier","src":"3919:3:36"},"nativeSrc":"3919:41:36","nodeType":"YulFunctionCall","src":"3919:41:36"},"variableNames":[{"name":"hashValue","nativeSrc":"3906:9:36","nodeType":"YulIdentifier","src":"3906:9:36"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6237,"isOffset":false,"isSlot":false,"src":"3941:6:36","valueSize":1},{"declaration":6246,"isOffset":false,"isSlot":false,"src":"3906:9:36","valueSize":1}],"flags":["memory-safe"],"id":6248,"nodeType":"InlineAssembly","src":"3867:103:36"},{"body":{"id":6285,"nodeType":"Block","src":"4013:291:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6259,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6246,"src":"4119:9:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":6260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4131:3:36","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4119:15:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":6262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4137:1:36","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4119:19:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":6266,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6237,"src":"4148:6:36","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6268,"indexExpression":{"id":6267,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6250,"src":"4155:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4148:9:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":6265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4142:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6264,"name":"uint8","nodeType":"ElementaryTypeName","src":"4142:5:36","typeDescriptions":{}}},"id":6269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4142:16:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":6270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4161:2:36","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4142:21:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4119:44:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6280,"nodeType":"IfStatement","src":"4115:150:36","trueBody":{"id":6279,"nodeType":"Block","src":"4165:100:36","statements":[{"expression":{"id":6277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6273,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6237,"src":"4233:6:36","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6275,"indexExpression":{"id":6274,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6250,"src":"4240:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4233:9:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":6276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4246:4:36","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4233:17:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6278,"nodeType":"ExpressionStatement","src":"4233:17:36"}]}},{"expression":{"id":6283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6281,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6246,"src":"4278:9:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":6282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4292:1:36","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4278:15:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6284,"nodeType":"ExpressionStatement","src":"4278:15:36"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6253,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6250,"src":"4001:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":6254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4005:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4001:5:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6286,"initializationExpression":{"assignments":[6250],"declarations":[{"constant":false,"id":6250,"mutability":"mutable","name":"i","nameLocation":"3993:1:36","nodeType":"VariableDeclaration","scope":6286,"src":"3985:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6249,"name":"uint256","nodeType":"ElementaryTypeName","src":"3985:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6252,"initialValue":{"hexValue":"3431","id":6251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3997:2:36","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3985:14:36"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":6257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4008:3:36","subExpression":{"id":6256,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6250,"src":"4010:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6258,"nodeType":"ExpressionStatement","src":"4008:3:36"},"nodeType":"ForStatement","src":"3980:324:36"},{"expression":{"arguments":[{"id":6289,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6237,"src":"4327:6:36","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4320:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6287,"name":"string","nodeType":"ElementaryTypeName","src":"4320:6:36","typeDescriptions":{}}},"id":6290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4320:14:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":6235,"id":6291,"nodeType":"Return","src":"4313:21:36"}]},"documentation":{"id":6229,"nodeType":"StructuredDocumentation","src":"3448:165:36","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":6293,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3627:19:36","nodeType":"FunctionDefinition","parameters":{"id":6232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6231,"mutability":"mutable","name":"addr","nameLocation":"3655:4:36","nodeType":"VariableDeclaration","scope":6293,"src":"3647:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6230,"name":"address","nodeType":"ElementaryTypeName","src":"3647:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3646:14:36"},"returnParameters":{"id":6235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6234,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6293,"src":"3684:13:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6233,"name":"string","nodeType":"ElementaryTypeName","src":"3684:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3683:15:36"},"scope":7367,"src":"3618:723:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6329,"nodeType":"Block","src":"4496:104:36","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":6305,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6296,"src":"4519:1:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4513:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6303,"name":"bytes","nodeType":"ElementaryTypeName","src":"4513:5:36","typeDescriptions":{}}},"id":6306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4513:8:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4522:6:36","memberName":"length","nodeType":"MemberAccess","src":"4513:15:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":6310,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6298,"src":"4538:1:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6308,"name":"bytes","nodeType":"ElementaryTypeName","src":"4532:5:36","typeDescriptions":{}}},"id":6311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:8:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4541:6:36","memberName":"length","nodeType":"MemberAccess","src":"4532:15:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4513:34:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":6326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":6317,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6296,"src":"4567:1:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4561:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6315,"name":"bytes","nodeType":"ElementaryTypeName","src":"4561:5:36","typeDescriptions":{}}},"id":6318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:8:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6314,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4551:9:36","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4551:19:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":6323,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6298,"src":"4590:1:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4584:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6321,"name":"bytes","nodeType":"ElementaryTypeName","src":"4584:5:36","typeDescriptions":{}}},"id":6324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4584:8:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6320,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4574:9:36","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4574:19:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4551:42:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4513:80:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6302,"id":6328,"nodeType":"Return","src":"4506:87:36"}]},"documentation":{"id":6294,"nodeType":"StructuredDocumentation","src":"4347:66:36","text":" @dev Returns true if the two strings are equal."},"id":6330,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4427:5:36","nodeType":"FunctionDefinition","parameters":{"id":6299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6296,"mutability":"mutable","name":"a","nameLocation":"4447:1:36","nodeType":"VariableDeclaration","scope":6330,"src":"4433:15:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6295,"name":"string","nodeType":"ElementaryTypeName","src":"4433:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6298,"mutability":"mutable","name":"b","nameLocation":"4464:1:36","nodeType":"VariableDeclaration","scope":6330,"src":"4450:15:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6297,"name":"string","nodeType":"ElementaryTypeName","src":"4450:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4432:34:36"},"returnParameters":{"id":6302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6330,"src":"4490:4:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6300,"name":"bool","nodeType":"ElementaryTypeName","src":"4490:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4489:6:36"},"scope":7367,"src":"4418:182:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6348,"nodeType":"Block","src":"4897:64:36","statements":[{"expression":{"arguments":[{"id":6339,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6333,"src":"4924:5:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":6340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4931:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":6343,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6333,"src":"4940:5:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4934:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6341,"name":"bytes","nodeType":"ElementaryTypeName","src":"4934:5:36","typeDescriptions":{}}},"id":6344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4934:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4947:6:36","memberName":"length","nodeType":"MemberAccess","src":"4934:19:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6338,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[6349,6380],"referencedDeclaration":6380,"src":"4914:9:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":6346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4914:40:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6337,"id":6347,"nodeType":"Return","src":"4907:47:36"}]},"documentation":{"id":6331,"nodeType":"StructuredDocumentation","src":"4606:214:36","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":6349,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4834:9:36","nodeType":"FunctionDefinition","parameters":{"id":6334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6333,"mutability":"mutable","name":"input","nameLocation":"4858:5:36","nodeType":"VariableDeclaration","scope":6349,"src":"4844:19:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6332,"name":"string","nodeType":"ElementaryTypeName","src":"4844:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4843:21:36"},"returnParameters":{"id":6337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6336,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6349,"src":"4888:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6335,"name":"uint256","nodeType":"ElementaryTypeName","src":"4888:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4887:9:36"},"scope":7367,"src":"4825:136:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6379,"nodeType":"Block","src":"5366:153:36","statements":[{"assignments":[6362,6364],"declarations":[{"constant":false,"id":6362,"mutability":"mutable","name":"success","nameLocation":"5382:7:36","nodeType":"VariableDeclaration","scope":6379,"src":"5377:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6361,"name":"bool","nodeType":"ElementaryTypeName","src":"5377:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6364,"mutability":"mutable","name":"value","nameLocation":"5399:5:36","nodeType":"VariableDeclaration","scope":6379,"src":"5391:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6363,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6370,"initialValue":{"arguments":[{"id":6366,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6352,"src":"5421:5:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6367,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6354,"src":"5428:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6368,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6356,"src":"5435:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6365,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[6401,6438],"referencedDeclaration":6438,"src":"5408:12:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":6369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5408:31:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5376:63:36"},{"condition":{"id":6372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5453:8:36","subExpression":{"id":6371,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6362,"src":"5454:7:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6376,"nodeType":"IfStatement","src":"5449:41:36","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6373,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6028,"src":"5470:18:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":6374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5470:20:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6375,"nodeType":"RevertStatement","src":"5463:27:36"}},{"expression":{"id":6377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"5507:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6360,"id":6378,"nodeType":"Return","src":"5500:12:36"}]},"documentation":{"id":6350,"nodeType":"StructuredDocumentation","src":"4967:294:36","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":6380,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5275:9:36","nodeType":"FunctionDefinition","parameters":{"id":6357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6352,"mutability":"mutable","name":"input","nameLocation":"5299:5:36","nodeType":"VariableDeclaration","scope":6380,"src":"5285:19:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6351,"name":"string","nodeType":"ElementaryTypeName","src":"5285:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6354,"mutability":"mutable","name":"begin","nameLocation":"5314:5:36","nodeType":"VariableDeclaration","scope":6380,"src":"5306:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6353,"name":"uint256","nodeType":"ElementaryTypeName","src":"5306:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6356,"mutability":"mutable","name":"end","nameLocation":"5329:3:36","nodeType":"VariableDeclaration","scope":6380,"src":"5321:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6355,"name":"uint256","nodeType":"ElementaryTypeName","src":"5321:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5284:49:36"},"returnParameters":{"id":6360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6359,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6380,"src":"5357:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6358,"name":"uint256","nodeType":"ElementaryTypeName","src":"5357:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5356:9:36"},"scope":7367,"src":"5266:253:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6400,"nodeType":"Block","src":"5840:83:36","statements":[{"expression":{"arguments":[{"id":6391,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"5886:5:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":6392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5893:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":6395,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"5902:5:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5896:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6393,"name":"bytes","nodeType":"ElementaryTypeName","src":"5896:5:36","typeDescriptions":{}}},"id":6396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5896:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5909:6:36","memberName":"length","nodeType":"MemberAccess","src":"5896:19:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6390,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6508,"src":"5857:28:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":6398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5857:59:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":6389,"id":6399,"nodeType":"Return","src":"5850:66:36"}]},"documentation":{"id":6381,"nodeType":"StructuredDocumentation","src":"5525:215:36","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":6401,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5754:12:36","nodeType":"FunctionDefinition","parameters":{"id":6384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6383,"mutability":"mutable","name":"input","nameLocation":"5781:5:36","nodeType":"VariableDeclaration","scope":6401,"src":"5767:19:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6382,"name":"string","nodeType":"ElementaryTypeName","src":"5767:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5766:21:36"},"returnParameters":{"id":6389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6386,"mutability":"mutable","name":"success","nameLocation":"5816:7:36","nodeType":"VariableDeclaration","scope":6401,"src":"5811:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6385,"name":"bool","nodeType":"ElementaryTypeName","src":"5811:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6388,"mutability":"mutable","name":"value","nameLocation":"5833:5:36","nodeType":"VariableDeclaration","scope":6401,"src":"5825:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6387,"name":"uint256","nodeType":"ElementaryTypeName","src":"5825:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5810:29:36"},"scope":7367,"src":"5745:178:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6437,"nodeType":"Block","src":"6325:144:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6415,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6408,"src":"6339:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6418,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6404,"src":"6351:5:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6345:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6416,"name":"bytes","nodeType":"ElementaryTypeName","src":"6345:5:36","typeDescriptions":{}}},"id":6419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6345:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6358:6:36","memberName":"length","nodeType":"MemberAccess","src":"6345:19:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6339:25:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6422,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6406,"src":"6368:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6423,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6408,"src":"6376:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6368:11:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6339:40:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6430,"nodeType":"IfStatement","src":"6335:63:36","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6389:5:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":6427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6396:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":6428,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6388:10:36","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":6414,"id":6429,"nodeType":"Return","src":"6381:17:36"}},{"expression":{"arguments":[{"id":6432,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6404,"src":"6444:5:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6433,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6406,"src":"6451:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6434,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6408,"src":"6458:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6431,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6508,"src":"6415:28:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":6435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6415:47:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":6414,"id":6436,"nodeType":"Return","src":"6408:54:36"}]},"documentation":{"id":6402,"nodeType":"StructuredDocumentation","src":"5929:238:36","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":6438,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6181:12:36","nodeType":"FunctionDefinition","parameters":{"id":6409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6404,"mutability":"mutable","name":"input","nameLocation":"6217:5:36","nodeType":"VariableDeclaration","scope":6438,"src":"6203:19:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6403,"name":"string","nodeType":"ElementaryTypeName","src":"6203:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6406,"mutability":"mutable","name":"begin","nameLocation":"6240:5:36","nodeType":"VariableDeclaration","scope":6438,"src":"6232:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6405,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6408,"mutability":"mutable","name":"end","nameLocation":"6263:3:36","nodeType":"VariableDeclaration","scope":6438,"src":"6255:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6407,"name":"uint256","nodeType":"ElementaryTypeName","src":"6255:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6193:79:36"},"returnParameters":{"id":6414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6411,"mutability":"mutable","name":"success","nameLocation":"6301:7:36","nodeType":"VariableDeclaration","scope":6438,"src":"6296:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6410,"name":"bool","nodeType":"ElementaryTypeName","src":"6296:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6413,"mutability":"mutable","name":"value","nameLocation":"6318:5:36","nodeType":"VariableDeclaration","scope":6438,"src":"6310:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6412,"name":"uint256","nodeType":"ElementaryTypeName","src":"6310:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6295:29:36"},"scope":7367,"src":"6172:297:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6507,"nodeType":"Block","src":"6872:347:36","statements":[{"assignments":[6453],"declarations":[{"constant":false,"id":6453,"mutability":"mutable","name":"buffer","nameLocation":"6895:6:36","nodeType":"VariableDeclaration","scope":6507,"src":"6882:19:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6452,"name":"bytes","nodeType":"ElementaryTypeName","src":"6882:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6458,"initialValue":{"arguments":[{"id":6456,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6441,"src":"6910:5:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6904:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6454,"name":"bytes","nodeType":"ElementaryTypeName","src":"6904:5:36","typeDescriptions":{}}},"id":6457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6904:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6882:34:36"},{"assignments":[6460],"declarations":[{"constant":false,"id":6460,"mutability":"mutable","name":"result","nameLocation":"6935:6:36","nodeType":"VariableDeclaration","scope":6507,"src":"6927:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6459,"name":"uint256","nodeType":"ElementaryTypeName","src":"6927:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6462,"initialValue":{"hexValue":"30","id":6461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6944:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6927:18:36"},{"body":{"id":6501,"nodeType":"Block","src":"6993:189:36","statements":[{"assignments":[6474],"declarations":[{"constant":false,"id":6474,"mutability":"mutable","name":"chr","nameLocation":"7013:3:36","nodeType":"VariableDeclaration","scope":6501,"src":"7007:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6473,"name":"uint8","nodeType":"ElementaryTypeName","src":"7007:5:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":6484,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":6479,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6453,"src":"7062:6:36","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6480,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6464,"src":"7070:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6478,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7366,"src":"7039:22:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":6481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7039:33:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7032:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":6476,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7032:6:36","typeDescriptions":{}}},"id":6482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7032:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":6475,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7188,"src":"7019:12:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":6483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7019:55:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7007:67:36"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6485,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6474,"src":"7092:3:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":6486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7098:1:36","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7092:7:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6492,"nodeType":"IfStatement","src":"7088:30:36","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7109:5:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":6489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7116:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":6490,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7108:10:36","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":6451,"id":6491,"nodeType":"Return","src":"7101:17:36"}},{"expression":{"id":6495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6493,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6460,"src":"7132:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":6494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7142:2:36","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7132:12:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6496,"nodeType":"ExpressionStatement","src":"7132:12:36"},{"expression":{"id":6499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6497,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6460,"src":"7158:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6498,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6474,"src":"7168:3:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7158:13:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6500,"nodeType":"ExpressionStatement","src":"7158:13:36"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6467,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6464,"src":"6979:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6468,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"6983:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6979:7:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6502,"initializationExpression":{"assignments":[6464],"declarations":[{"constant":false,"id":6464,"mutability":"mutable","name":"i","nameLocation":"6968:1:36","nodeType":"VariableDeclaration","scope":6502,"src":"6960:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6463,"name":"uint256","nodeType":"ElementaryTypeName","src":"6960:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6466,"initialValue":{"id":6465,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6443,"src":"6972:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6960:17:36"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6988:3:36","subExpression":{"id":6470,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6464,"src":"6990:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6472,"nodeType":"ExpressionStatement","src":"6988:3:36"},"nodeType":"ForStatement","src":"6955:227:36"},{"expression":{"components":[{"hexValue":"74727565","id":6503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7199:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":6504,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6460,"src":"7205:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6505,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7198:14:36","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":6451,"id":6506,"nodeType":"Return","src":"7191:21:36"}]},"documentation":{"id":6439,"nodeType":"StructuredDocumentation","src":"6475:224:36","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":6508,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6713:28:36","nodeType":"FunctionDefinition","parameters":{"id":6446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6441,"mutability":"mutable","name":"input","nameLocation":"6765:5:36","nodeType":"VariableDeclaration","scope":6508,"src":"6751:19:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6440,"name":"string","nodeType":"ElementaryTypeName","src":"6751:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6443,"mutability":"mutable","name":"begin","nameLocation":"6788:5:36","nodeType":"VariableDeclaration","scope":6508,"src":"6780:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6442,"name":"uint256","nodeType":"ElementaryTypeName","src":"6780:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6445,"mutability":"mutable","name":"end","nameLocation":"6811:3:36","nodeType":"VariableDeclaration","scope":6508,"src":"6803:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6444,"name":"uint256","nodeType":"ElementaryTypeName","src":"6803:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6741:79:36"},"returnParameters":{"id":6451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6448,"mutability":"mutable","name":"success","nameLocation":"6848:7:36","nodeType":"VariableDeclaration","scope":6508,"src":"6843:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6447,"name":"bool","nodeType":"ElementaryTypeName","src":"6843:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6450,"mutability":"mutable","name":"value","nameLocation":"6865:5:36","nodeType":"VariableDeclaration","scope":6508,"src":"6857:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6449,"name":"uint256","nodeType":"ElementaryTypeName","src":"6857:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6842:29:36"},"scope":7367,"src":"6704:515:36","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":6526,"nodeType":"Block","src":"7516:63:36","statements":[{"expression":{"arguments":[{"id":6517,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6511,"src":"7542:5:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":6518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7549:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":6521,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6511,"src":"7558:5:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7552:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6519,"name":"bytes","nodeType":"ElementaryTypeName","src":"7552:5:36","typeDescriptions":{}}},"id":6522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7552:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7565:6:36","memberName":"length","nodeType":"MemberAccess","src":"7552:19:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6516,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[6527,6558],"referencedDeclaration":6558,"src":"7533:8:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":6524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7533:39:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6515,"id":6525,"nodeType":"Return","src":"7526:46:36"}]},"documentation":{"id":6509,"nodeType":"StructuredDocumentation","src":"7225:216:36","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":6527,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7455:8:36","nodeType":"FunctionDefinition","parameters":{"id":6512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6511,"mutability":"mutable","name":"input","nameLocation":"7478:5:36","nodeType":"VariableDeclaration","scope":6527,"src":"7464:19:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6510,"name":"string","nodeType":"ElementaryTypeName","src":"7464:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7463:21:36"},"returnParameters":{"id":6515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6527,"src":"7508:6:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6513,"name":"int256","nodeType":"ElementaryTypeName","src":"7508:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7507:8:36"},"scope":7367,"src":"7446:133:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6557,"nodeType":"Block","src":"7984:151:36","statements":[{"assignments":[6540,6542],"declarations":[{"constant":false,"id":6540,"mutability":"mutable","name":"success","nameLocation":"8000:7:36","nodeType":"VariableDeclaration","scope":6557,"src":"7995:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6539,"name":"bool","nodeType":"ElementaryTypeName","src":"7995:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6542,"mutability":"mutable","name":"value","nameLocation":"8016:5:36","nodeType":"VariableDeclaration","scope":6557,"src":"8009:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6541,"name":"int256","nodeType":"ElementaryTypeName","src":"8009:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6548,"initialValue":{"arguments":[{"id":6544,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6530,"src":"8037:5:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6545,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6532,"src":"8044:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6546,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"8051:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6543,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[6579,6621],"referencedDeclaration":6621,"src":"8025:11:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":6547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8025:30:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7994:61:36"},{"condition":{"id":6550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8069:8:36","subExpression":{"id":6549,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6540,"src":"8070:7:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6554,"nodeType":"IfStatement","src":"8065:41:36","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6551,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6028,"src":"8086:18:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":6552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8086:20:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6553,"nodeType":"RevertStatement","src":"8079:27:36"}},{"expression":{"id":6555,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6542,"src":"8123:5:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6538,"id":6556,"nodeType":"Return","src":"8116:12:36"}]},"documentation":{"id":6528,"nodeType":"StructuredDocumentation","src":"7585:296:36","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":6558,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7895:8:36","nodeType":"FunctionDefinition","parameters":{"id":6535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6530,"mutability":"mutable","name":"input","nameLocation":"7918:5:36","nodeType":"VariableDeclaration","scope":6558,"src":"7904:19:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6529,"name":"string","nodeType":"ElementaryTypeName","src":"7904:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6532,"mutability":"mutable","name":"begin","nameLocation":"7933:5:36","nodeType":"VariableDeclaration","scope":6558,"src":"7925:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6531,"name":"uint256","nodeType":"ElementaryTypeName","src":"7925:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6534,"mutability":"mutable","name":"end","nameLocation":"7948:3:36","nodeType":"VariableDeclaration","scope":6558,"src":"7940:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6533,"name":"uint256","nodeType":"ElementaryTypeName","src":"7940:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7903:49:36"},"returnParameters":{"id":6538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6537,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6558,"src":"7976:6:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6536,"name":"int256","nodeType":"ElementaryTypeName","src":"7976:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7975:8:36"},"scope":7367,"src":"7886:249:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6578,"nodeType":"Block","src":"8526:82:36","statements":[{"expression":{"arguments":[{"id":6569,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"8571:5:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":6570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8578:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":6573,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"8587:5:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8581:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6571,"name":"bytes","nodeType":"ElementaryTypeName","src":"8581:5:36","typeDescriptions":{}}},"id":6574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8581:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8594:6:36","memberName":"length","nodeType":"MemberAccess","src":"8581:19:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6568,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6742,"src":"8543:27:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":6576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8543:58:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":6567,"id":6577,"nodeType":"Return","src":"8536:65:36"}]},"documentation":{"id":6559,"nodeType":"StructuredDocumentation","src":"8141:287:36","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":6579,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8442:11:36","nodeType":"FunctionDefinition","parameters":{"id":6562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6561,"mutability":"mutable","name":"input","nameLocation":"8468:5:36","nodeType":"VariableDeclaration","scope":6579,"src":"8454:19:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6560,"name":"string","nodeType":"ElementaryTypeName","src":"8454:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8453:21:36"},"returnParameters":{"id":6567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6564,"mutability":"mutable","name":"success","nameLocation":"8503:7:36","nodeType":"VariableDeclaration","scope":6579,"src":"8498:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6563,"name":"bool","nodeType":"ElementaryTypeName","src":"8498:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6566,"mutability":"mutable","name":"value","nameLocation":"8519:5:36","nodeType":"VariableDeclaration","scope":6579,"src":"8512:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6565,"name":"int256","nodeType":"ElementaryTypeName","src":"8512:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8497:28:36"},"scope":7367,"src":"8433:175:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":6584,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8639:14:36","nodeType":"VariableDeclaration","scope":7367,"src":"8614:50:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6580,"name":"uint256","nodeType":"ElementaryTypeName","src":"8614:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":6583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8656:1:36","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":6582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8661:3:36","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8656:8:36","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":6620,"nodeType":"Block","src":"9130:143:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6598,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6591,"src":"9144:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6601,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6587,"src":"9156:5:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9150:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6599,"name":"bytes","nodeType":"ElementaryTypeName","src":"9150:5:36","typeDescriptions":{}}},"id":6602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9150:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9163:6:36","memberName":"length","nodeType":"MemberAccess","src":"9150:19:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9144:25:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6605,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6589,"src":"9173:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6606,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6591,"src":"9181:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9173:11:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9144:40:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6613,"nodeType":"IfStatement","src":"9140:63:36","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9194:5:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":6610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9201:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":6611,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9193:10:36","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":6597,"id":6612,"nodeType":"Return","src":"9186:17:36"}},{"expression":{"arguments":[{"id":6615,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6587,"src":"9248:5:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6616,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6589,"src":"9255:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6617,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6591,"src":"9262:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6614,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6742,"src":"9220:27:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":6618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9220:46:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":6597,"id":6619,"nodeType":"Return","src":"9213:53:36"}]},"documentation":{"id":6585,"nodeType":"StructuredDocumentation","src":"8671:303:36","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":6621,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8988:11:36","nodeType":"FunctionDefinition","parameters":{"id":6592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6587,"mutability":"mutable","name":"input","nameLocation":"9023:5:36","nodeType":"VariableDeclaration","scope":6621,"src":"9009:19:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6586,"name":"string","nodeType":"ElementaryTypeName","src":"9009:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6589,"mutability":"mutable","name":"begin","nameLocation":"9046:5:36","nodeType":"VariableDeclaration","scope":6621,"src":"9038:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6588,"name":"uint256","nodeType":"ElementaryTypeName","src":"9038:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6591,"mutability":"mutable","name":"end","nameLocation":"9069:3:36","nodeType":"VariableDeclaration","scope":6621,"src":"9061:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6590,"name":"uint256","nodeType":"ElementaryTypeName","src":"9061:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8999:79:36"},"returnParameters":{"id":6597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6594,"mutability":"mutable","name":"success","nameLocation":"9107:7:36","nodeType":"VariableDeclaration","scope":6621,"src":"9102:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6593,"name":"bool","nodeType":"ElementaryTypeName","src":"9102:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6596,"mutability":"mutable","name":"value","nameLocation":"9123:5:36","nodeType":"VariableDeclaration","scope":6621,"src":"9116:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6595,"name":"int256","nodeType":"ElementaryTypeName","src":"9116:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9101:28:36"},"scope":7367,"src":"8979:294:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6741,"nodeType":"Block","src":"9673:812:36","statements":[{"assignments":[6636],"declarations":[{"constant":false,"id":6636,"mutability":"mutable","name":"buffer","nameLocation":"9696:6:36","nodeType":"VariableDeclaration","scope":6741,"src":"9683:19:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6635,"name":"bytes","nodeType":"ElementaryTypeName","src":"9683:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6641,"initialValue":{"arguments":[{"id":6639,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6624,"src":"9711:5:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9705:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6637,"name":"bytes","nodeType":"ElementaryTypeName","src":"9705:5:36","typeDescriptions":{}}},"id":6640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9705:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9683:34:36"},{"assignments":[6643],"declarations":[{"constant":false,"id":6643,"mutability":"mutable","name":"sign","nameLocation":"9781:4:36","nodeType":"VariableDeclaration","scope":6741,"src":"9774:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":6642,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9774:6:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":6659,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6644,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6626,"src":"9788:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6645,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6628,"src":"9797:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9788:12:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":6654,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6636,"src":"9845:6:36","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6655,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6626,"src":"9853:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6653,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7366,"src":"9822:22:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":6656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:37:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9815:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":6651,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9815:6:36","typeDescriptions":{}}},"id":6657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9815:45:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9788:72:36","trueExpression":{"arguments":[{"hexValue":"30","id":6649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9810:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":6647,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9803:6:36","typeDescriptions":{}}},"id":6650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:9:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9774:86:36"},{"assignments":[6661],"declarations":[{"constant":false,"id":6661,"mutability":"mutable","name":"positiveSign","nameLocation":"9946:12:36","nodeType":"VariableDeclaration","scope":6741,"src":"9941:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6660,"name":"bool","nodeType":"ElementaryTypeName","src":"9941:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":6668,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":6667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6662,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6643,"src":"9961:4:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":6665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9976:3:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":6664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9969:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":6663,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9969:6:36","typeDescriptions":{}}},"id":6666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9969:11:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9961:19:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9941:39:36"},{"assignments":[6670],"declarations":[{"constant":false,"id":6670,"mutability":"mutable","name":"negativeSign","nameLocation":"9995:12:36","nodeType":"VariableDeclaration","scope":6741,"src":"9990:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6669,"name":"bool","nodeType":"ElementaryTypeName","src":"9990:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":6677,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":6676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6671,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6643,"src":"10010:4:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":6674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10025:3:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":6673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10018:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":6672,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10018:6:36","typeDescriptions":{}}},"id":6675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10018:11:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10010:19:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9990:39:36"},{"assignments":[6679],"declarations":[{"constant":false,"id":6679,"mutability":"mutable","name":"offset","nameLocation":"10047:6:36","nodeType":"VariableDeclaration","scope":6741,"src":"10039:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6678,"name":"uint256","nodeType":"ElementaryTypeName","src":"10039:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6686,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6680,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6661,"src":"10057:12:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":6681,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6670,"src":"10073:12:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10057:28:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":6683,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10056:30:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10087:6:36","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10764,"src":"10056:37:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":6685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10056:39:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10039:56:36"},{"assignments":[6688,6690],"declarations":[{"constant":false,"id":6688,"mutability":"mutable","name":"absSuccess","nameLocation":"10112:10:36","nodeType":"VariableDeclaration","scope":6741,"src":"10107:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6687,"name":"bool","nodeType":"ElementaryTypeName","src":"10107:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6690,"mutability":"mutable","name":"absValue","nameLocation":"10132:8:36","nodeType":"VariableDeclaration","scope":6741,"src":"10124:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6689,"name":"uint256","nodeType":"ElementaryTypeName","src":"10124:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6698,"initialValue":{"arguments":[{"id":6692,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6624,"src":"10157:5:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6693,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6626,"src":"10164:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6694,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6679,"src":"10172:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10164:14:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6696,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6628,"src":"10180:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6691,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[6401,6438],"referencedDeclaration":6438,"src":"10144:12:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":6697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10144:40:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10106:78:36"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6699,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6688,"src":"10199:10:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6700,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6690,"src":"10213:8:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6701,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6584,"src":"10224:14:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10213:25:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10199:39:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6719,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6688,"src":"10341:10:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":6720,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6670,"src":"10355:12:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:26:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6722,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6690,"src":"10371:8:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6723,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6584,"src":"10383:14:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10371:26:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:56:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10469:5:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":6736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10476:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":6737,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10468:10:36","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":6634,"id":6738,"nodeType":"Return","src":"10461:17:36"},"id":6739,"nodeType":"IfStatement","src":"10337:141:36","trueBody":{"id":6734,"nodeType":"Block","src":"10399:56:36","statements":[{"expression":{"components":[{"hexValue":"74727565","id":6726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10421:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":6729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10432:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6728,"name":"int256","nodeType":"ElementaryTypeName","src":"10432:6:36","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6727,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10427:4:36","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10427:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10440:3:36","memberName":"min","nodeType":"MemberAccess","src":"10427:16:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6732,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10420:24:36","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":6634,"id":6733,"nodeType":"Return","src":"10413:31:36"}]}},"id":6740,"nodeType":"IfStatement","src":"10195:283:36","trueBody":{"id":6718,"nodeType":"Block","src":"10240:91:36","statements":[{"expression":{"components":[{"hexValue":"74727565","id":6704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10262:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":6705,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6670,"src":"10268:12:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":6713,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6690,"src":"10310:8:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10303:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6711,"name":"int256","nodeType":"ElementaryTypeName","src":"10303:6:36","typeDescriptions":{}}},"id":6714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10303:16:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10268:51:36","trueExpression":{"id":6710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10283:17:36","subExpression":{"arguments":[{"id":6708,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6690,"src":"10291:8:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10284:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6706,"name":"int256","nodeType":"ElementaryTypeName","src":"10284:6:36","typeDescriptions":{}}},"id":6709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10284:16:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6716,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10261:59:36","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":6634,"id":6717,"nodeType":"Return","src":"10254:66:36"}]}}]},"documentation":{"id":6622,"nodeType":"StructuredDocumentation","src":"9279:223:36","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":6742,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9516:27:36","nodeType":"FunctionDefinition","parameters":{"id":6629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6624,"mutability":"mutable","name":"input","nameLocation":"9567:5:36","nodeType":"VariableDeclaration","scope":6742,"src":"9553:19:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6623,"name":"string","nodeType":"ElementaryTypeName","src":"9553:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6626,"mutability":"mutable","name":"begin","nameLocation":"9590:5:36","nodeType":"VariableDeclaration","scope":6742,"src":"9582:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6625,"name":"uint256","nodeType":"ElementaryTypeName","src":"9582:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6628,"mutability":"mutable","name":"end","nameLocation":"9613:3:36","nodeType":"VariableDeclaration","scope":6742,"src":"9605:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6627,"name":"uint256","nodeType":"ElementaryTypeName","src":"9605:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9543:79:36"},"returnParameters":{"id":6634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6631,"mutability":"mutable","name":"success","nameLocation":"9650:7:36","nodeType":"VariableDeclaration","scope":6742,"src":"9645:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6630,"name":"bool","nodeType":"ElementaryTypeName","src":"9645:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6633,"mutability":"mutable","name":"value","nameLocation":"9666:5:36","nodeType":"VariableDeclaration","scope":6742,"src":"9659:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6632,"name":"int256","nodeType":"ElementaryTypeName","src":"9659:6:36","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9644:28:36"},"scope":7367,"src":"9507:978:36","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":6760,"nodeType":"Block","src":"10830:67:36","statements":[{"expression":{"arguments":[{"id":6751,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6745,"src":"10860:5:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":6752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10867:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":6755,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6745,"src":"10876:5:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10870:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6753,"name":"bytes","nodeType":"ElementaryTypeName","src":"10870:5:36","typeDescriptions":{}}},"id":6756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10870:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10883:6:36","memberName":"length","nodeType":"MemberAccess","src":"10870:19:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6750,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[6761,6792],"referencedDeclaration":6792,"src":"10847:12:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":6758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10847:43:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6749,"id":6759,"nodeType":"Return","src":"10840:50:36"}]},"documentation":{"id":6743,"nodeType":"StructuredDocumentation","src":"10491:259:36","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":6761,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10764:12:36","nodeType":"FunctionDefinition","parameters":{"id":6746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6745,"mutability":"mutable","name":"input","nameLocation":"10791:5:36","nodeType":"VariableDeclaration","scope":6761,"src":"10777:19:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6744,"name":"string","nodeType":"ElementaryTypeName","src":"10777:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10776:21:36"},"returnParameters":{"id":6749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6748,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6761,"src":"10821:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6747,"name":"uint256","nodeType":"ElementaryTypeName","src":"10821:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10820:9:36"},"scope":7367,"src":"10755:142:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6791,"nodeType":"Block","src":"11318:156:36","statements":[{"assignments":[6774,6776],"declarations":[{"constant":false,"id":6774,"mutability":"mutable","name":"success","nameLocation":"11334:7:36","nodeType":"VariableDeclaration","scope":6791,"src":"11329:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6773,"name":"bool","nodeType":"ElementaryTypeName","src":"11329:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6776,"mutability":"mutable","name":"value","nameLocation":"11351:5:36","nodeType":"VariableDeclaration","scope":6791,"src":"11343:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6775,"name":"uint256","nodeType":"ElementaryTypeName","src":"11343:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6782,"initialValue":{"arguments":[{"id":6778,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6764,"src":"11376:5:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6779,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6766,"src":"11383:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6780,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"11390:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6777,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[6813,6850],"referencedDeclaration":6850,"src":"11360:15:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":6781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11360:34:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11328:66:36"},{"condition":{"id":6784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11408:8:36","subExpression":{"id":6783,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"11409:7:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6788,"nodeType":"IfStatement","src":"11404:41:36","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6785,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6028,"src":"11425:18:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":6786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11425:20:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6787,"nodeType":"RevertStatement","src":"11418:27:36"}},{"expression":{"id":6789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6776,"src":"11462:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6772,"id":6790,"nodeType":"Return","src":"11455:12:36"}]},"documentation":{"id":6762,"nodeType":"StructuredDocumentation","src":"10903:307:36","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":6792,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11224:12:36","nodeType":"FunctionDefinition","parameters":{"id":6769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6764,"mutability":"mutable","name":"input","nameLocation":"11251:5:36","nodeType":"VariableDeclaration","scope":6792,"src":"11237:19:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6763,"name":"string","nodeType":"ElementaryTypeName","src":"11237:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6766,"mutability":"mutable","name":"begin","nameLocation":"11266:5:36","nodeType":"VariableDeclaration","scope":6792,"src":"11258:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6765,"name":"uint256","nodeType":"ElementaryTypeName","src":"11258:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6768,"mutability":"mutable","name":"end","nameLocation":"11281:3:36","nodeType":"VariableDeclaration","scope":6792,"src":"11273:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6767,"name":"uint256","nodeType":"ElementaryTypeName","src":"11273:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11236:49:36"},"returnParameters":{"id":6772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6792,"src":"11309:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6770,"name":"uint256","nodeType":"ElementaryTypeName","src":"11309:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11308:9:36"},"scope":7367,"src":"11215:259:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6812,"nodeType":"Block","src":"11801:86:36","statements":[{"expression":{"arguments":[{"id":6803,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6795,"src":"11850:5:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":6804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11857:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":6807,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6795,"src":"11866:5:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11860:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6805,"name":"bytes","nodeType":"ElementaryTypeName","src":"11860:5:36","typeDescriptions":{}}},"id":6808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11860:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11873:6:36","memberName":"length","nodeType":"MemberAccess","src":"11860:19:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6802,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6953,"src":"11818:31:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":6810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11818:62:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":6801,"id":6811,"nodeType":"Return","src":"11811:69:36"}]},"documentation":{"id":6793,"nodeType":"StructuredDocumentation","src":"11480:218:36","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":6813,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11712:15:36","nodeType":"FunctionDefinition","parameters":{"id":6796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6795,"mutability":"mutable","name":"input","nameLocation":"11742:5:36","nodeType":"VariableDeclaration","scope":6813,"src":"11728:19:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6794,"name":"string","nodeType":"ElementaryTypeName","src":"11728:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11727:21:36"},"returnParameters":{"id":6801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6798,"mutability":"mutable","name":"success","nameLocation":"11777:7:36","nodeType":"VariableDeclaration","scope":6813,"src":"11772:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6797,"name":"bool","nodeType":"ElementaryTypeName","src":"11772:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6800,"mutability":"mutable","name":"value","nameLocation":"11794:5:36","nodeType":"VariableDeclaration","scope":6813,"src":"11786:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6799,"name":"uint256","nodeType":"ElementaryTypeName","src":"11786:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11771:29:36"},"scope":7367,"src":"11703:184:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6849,"nodeType":"Block","src":"12295:147:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6827,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"12309:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6830,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6816,"src":"12321:5:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12315:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6828,"name":"bytes","nodeType":"ElementaryTypeName","src":"12315:5:36","typeDescriptions":{}}},"id":6831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12315:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12328:6:36","memberName":"length","nodeType":"MemberAccess","src":"12315:19:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12309:25:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6834,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6818,"src":"12338:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6835,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"12346:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12338:11:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12309:40:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6842,"nodeType":"IfStatement","src":"12305:63:36","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12359:5:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":6839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12366:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":6840,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12358:10:36","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":6826,"id":6841,"nodeType":"Return","src":"12351:17:36"}},{"expression":{"arguments":[{"id":6844,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6816,"src":"12417:5:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6845,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6818,"src":"12424:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6846,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"12431:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6843,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6953,"src":"12385:31:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":6847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12385:50:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":6826,"id":6848,"nodeType":"Return","src":"12378:57:36"}]},"documentation":{"id":6814,"nodeType":"StructuredDocumentation","src":"11893:241:36","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":6850,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12148:15:36","nodeType":"FunctionDefinition","parameters":{"id":6821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6816,"mutability":"mutable","name":"input","nameLocation":"12187:5:36","nodeType":"VariableDeclaration","scope":6850,"src":"12173:19:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6815,"name":"string","nodeType":"ElementaryTypeName","src":"12173:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6818,"mutability":"mutable","name":"begin","nameLocation":"12210:5:36","nodeType":"VariableDeclaration","scope":6850,"src":"12202:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6817,"name":"uint256","nodeType":"ElementaryTypeName","src":"12202:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6820,"mutability":"mutable","name":"end","nameLocation":"12233:3:36","nodeType":"VariableDeclaration","scope":6850,"src":"12225:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6819,"name":"uint256","nodeType":"ElementaryTypeName","src":"12225:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12163:79:36"},"returnParameters":{"id":6826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6823,"mutability":"mutable","name":"success","nameLocation":"12271:7:36","nodeType":"VariableDeclaration","scope":6850,"src":"12266:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6822,"name":"bool","nodeType":"ElementaryTypeName","src":"12266:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6825,"mutability":"mutable","name":"value","nameLocation":"12288:5:36","nodeType":"VariableDeclaration","scope":6850,"src":"12280:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6824,"name":"uint256","nodeType":"ElementaryTypeName","src":"12280:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12265:29:36"},"scope":7367,"src":"12139:303:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6952,"nodeType":"Block","src":"12851:881:36","statements":[{"assignments":[6865],"declarations":[{"constant":false,"id":6865,"mutability":"mutable","name":"buffer","nameLocation":"12874:6:36","nodeType":"VariableDeclaration","scope":6952,"src":"12861:19:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6864,"name":"bytes","nodeType":"ElementaryTypeName","src":"12861:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6870,"initialValue":{"arguments":[{"id":6868,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6853,"src":"12889:5:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6866,"name":"bytes","nodeType":"ElementaryTypeName","src":"12883:5:36","typeDescriptions":{}}},"id":6869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12861:34:36"},{"assignments":[6872],"declarations":[{"constant":false,"id":6872,"mutability":"mutable","name":"hasPrefix","nameLocation":"12948:9:36","nodeType":"VariableDeclaration","scope":6952,"src":"12943:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6871,"name":"bool","nodeType":"ElementaryTypeName","src":"12943:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":6892,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6873,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6857,"src":"12961:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6874,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6855,"src":"12967:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12975:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12967:9:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12961:15:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":6878,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:17:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":6890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":6882,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6865,"src":"13011:6:36","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6883,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6855,"src":"13019:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6881,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7366,"src":"12988:22:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":6884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12988:37:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12981:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":6879,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12981:6:36","typeDescriptions":{}}},"id":6885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12981:45:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":6888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13037:4:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":6887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13030:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":6886,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13030:6:36","typeDescriptions":{}}},"id":6889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13030:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12981:61:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12960:82:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12943:99:36"},{"assignments":[6894],"declarations":[{"constant":false,"id":6894,"mutability":"mutable","name":"offset","nameLocation":"13131:6:36","nodeType":"VariableDeclaration","scope":6952,"src":"13123:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6893,"name":"uint256","nodeType":"ElementaryTypeName","src":"13123:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6900,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6895,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6872,"src":"13140:9:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13150:6:36","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10764,"src":"13140:16:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":6897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13140:18:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":6898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13161:1:36","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13140:22:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13123:39:36"},{"assignments":[6902],"declarations":[{"constant":false,"id":6902,"mutability":"mutable","name":"result","nameLocation":"13181:6:36","nodeType":"VariableDeclaration","scope":6952,"src":"13173:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6901,"name":"uint256","nodeType":"ElementaryTypeName","src":"13173:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6904,"initialValue":{"hexValue":"30","id":6903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13190:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13173:18:36"},{"body":{"id":6946,"nodeType":"Block","src":"13248:447:36","statements":[{"assignments":[6918],"declarations":[{"constant":false,"id":6918,"mutability":"mutable","name":"chr","nameLocation":"13268:3:36","nodeType":"VariableDeclaration","scope":6946,"src":"13262:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6917,"name":"uint8","nodeType":"ElementaryTypeName","src":"13262:5:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":6928,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":6923,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6865,"src":"13317:6:36","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6924,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6906,"src":"13325:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6922,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7366,"src":"13294:22:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":6925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13294:33:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13287:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":6920,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13287:6:36","typeDescriptions":{}}},"id":6926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13287:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":6919,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7188,"src":"13274:12:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":6927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13274:55:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13262:67:36"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6929,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6918,"src":"13347:3:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":6930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13353:2:36","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13347:8:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6936,"nodeType":"IfStatement","src":"13343:31:36","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13365:5:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":6933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13372:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":6934,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13364:10:36","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":6863,"id":6935,"nodeType":"Return","src":"13357:17:36"}},{"expression":{"id":6939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6937,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6902,"src":"13388:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":6938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13398:2:36","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13388:12:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6940,"nodeType":"ExpressionStatement","src":"13388:12:36"},{"id":6945,"nodeType":"UncheckedBlock","src":"13414:271:36","statements":[{"expression":{"id":6943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6941,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6902,"src":"13657:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6942,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6918,"src":"13667:3:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13657:13:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6944,"nodeType":"ExpressionStatement","src":"13657:13:36"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6911,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6906,"src":"13234:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6912,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6857,"src":"13238:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13234:7:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6947,"initializationExpression":{"assignments":[6906],"declarations":[{"constant":false,"id":6906,"mutability":"mutable","name":"i","nameLocation":"13214:1:36","nodeType":"VariableDeclaration","scope":6947,"src":"13206:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6905,"name":"uint256","nodeType":"ElementaryTypeName","src":"13206:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6910,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6907,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6855,"src":"13218:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6908,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"13226:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13218:14:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13206:26:36"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13243:3:36","subExpression":{"id":6914,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6906,"src":"13245:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6916,"nodeType":"ExpressionStatement","src":"13243:3:36"},"nodeType":"ForStatement","src":"13201:494:36"},{"expression":{"components":[{"hexValue":"74727565","id":6948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13712:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":6949,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6902,"src":"13718:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6950,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13711:14:36","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":6863,"id":6951,"nodeType":"Return","src":"13704:21:36"}]},"documentation":{"id":6851,"nodeType":"StructuredDocumentation","src":"12448:227:36","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":6953,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12689:31:36","nodeType":"FunctionDefinition","parameters":{"id":6858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6853,"mutability":"mutable","name":"input","nameLocation":"12744:5:36","nodeType":"VariableDeclaration","scope":6953,"src":"12730:19:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6852,"name":"string","nodeType":"ElementaryTypeName","src":"12730:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6855,"mutability":"mutable","name":"begin","nameLocation":"12767:5:36","nodeType":"VariableDeclaration","scope":6953,"src":"12759:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6854,"name":"uint256","nodeType":"ElementaryTypeName","src":"12759:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6857,"mutability":"mutable","name":"end","nameLocation":"12790:3:36","nodeType":"VariableDeclaration","scope":6953,"src":"12782:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6856,"name":"uint256","nodeType":"ElementaryTypeName","src":"12782:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12720:79:36"},"returnParameters":{"id":6863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6860,"mutability":"mutable","name":"success","nameLocation":"12827:7:36","nodeType":"VariableDeclaration","scope":6953,"src":"12822:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6859,"name":"bool","nodeType":"ElementaryTypeName","src":"12822:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6862,"mutability":"mutable","name":"value","nameLocation":"12844:5:36","nodeType":"VariableDeclaration","scope":6953,"src":"12836:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6861,"name":"uint256","nodeType":"ElementaryTypeName","src":"12836:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12821:29:36"},"scope":7367,"src":"12680:1052:36","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":6971,"nodeType":"Block","src":"14030:67:36","statements":[{"expression":{"arguments":[{"id":6962,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6956,"src":"14060:5:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":6963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14067:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":6966,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6956,"src":"14076:5:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14070:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6964,"name":"bytes","nodeType":"ElementaryTypeName","src":"14070:5:36","typeDescriptions":{}}},"id":6967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14070:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14083:6:36","memberName":"length","nodeType":"MemberAccess","src":"14070:19:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6961,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[6972,7003],"referencedDeclaration":7003,"src":"14047:12:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":6969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14047:43:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":6960,"id":6970,"nodeType":"Return","src":"14040:50:36"}]},"documentation":{"id":6954,"nodeType":"StructuredDocumentation","src":"13738:212:36","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":6972,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:36","nodeType":"FunctionDefinition","parameters":{"id":6957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6956,"mutability":"mutable","name":"input","nameLocation":"13991:5:36","nodeType":"VariableDeclaration","scope":6972,"src":"13977:19:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6955,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13976:21:36"},"returnParameters":{"id":6960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6972,"src":"14021:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6958,"name":"address","nodeType":"ElementaryTypeName","src":"14021:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14020:9:36"},"scope":7367,"src":"13955:142:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7002,"nodeType":"Block","src":"14470:165:36","statements":[{"assignments":[6985,6987],"declarations":[{"constant":false,"id":6985,"mutability":"mutable","name":"success","nameLocation":"14486:7:36","nodeType":"VariableDeclaration","scope":7002,"src":"14481:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6984,"name":"bool","nodeType":"ElementaryTypeName","src":"14481:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6987,"mutability":"mutable","name":"value","nameLocation":"14503:5:36","nodeType":"VariableDeclaration","scope":7002,"src":"14495:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6986,"name":"address","nodeType":"ElementaryTypeName","src":"14495:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6993,"initialValue":{"arguments":[{"id":6989,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6975,"src":"14528:5:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6990,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"14535:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6991,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"14542:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6988,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[7024,7128],"referencedDeclaration":7128,"src":"14512:15:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":6992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14512:34:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14480:66:36"},{"condition":{"id":6995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14560:8:36","subExpression":{"id":6994,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"14561:7:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6999,"nodeType":"IfStatement","src":"14556:50:36","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6996,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6031,"src":"14577:27:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":6997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14577:29:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6998,"nodeType":"RevertStatement","src":"14570:36:36"}},{"expression":{"id":7000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6987,"src":"14623:5:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":6983,"id":7001,"nodeType":"Return","src":"14616:12:36"}]},"documentation":{"id":6973,"nodeType":"StructuredDocumentation","src":"14103:259:36","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":7003,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14376:12:36","nodeType":"FunctionDefinition","parameters":{"id":6980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6975,"mutability":"mutable","name":"input","nameLocation":"14403:5:36","nodeType":"VariableDeclaration","scope":7003,"src":"14389:19:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6974,"name":"string","nodeType":"ElementaryTypeName","src":"14389:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6977,"mutability":"mutable","name":"begin","nameLocation":"14418:5:36","nodeType":"VariableDeclaration","scope":7003,"src":"14410:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6976,"name":"uint256","nodeType":"ElementaryTypeName","src":"14410:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6979,"mutability":"mutable","name":"end","nameLocation":"14433:3:36","nodeType":"VariableDeclaration","scope":7003,"src":"14425:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6978,"name":"uint256","nodeType":"ElementaryTypeName","src":"14425:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14388:49:36"},"returnParameters":{"id":6983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7003,"src":"14461:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6981,"name":"address","nodeType":"ElementaryTypeName","src":"14461:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14460:9:36"},"scope":7367,"src":"14367:268:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7023,"nodeType":"Block","src":"14942:70:36","statements":[{"expression":{"arguments":[{"id":7014,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"14975:5:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":7015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14982:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":7018,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"14991:5:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14985:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7016,"name":"bytes","nodeType":"ElementaryTypeName","src":"14985:5:36","typeDescriptions":{}}},"id":7019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14985:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14998:6:36","memberName":"length","nodeType":"MemberAccess","src":"14985:19:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7013,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[7024,7128],"referencedDeclaration":7128,"src":"14959:15:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":7021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14959:46:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":7012,"id":7022,"nodeType":"Return","src":"14952:53:36"}]},"documentation":{"id":7004,"nodeType":"StructuredDocumentation","src":"14641:198:36","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":7024,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14853:15:36","nodeType":"FunctionDefinition","parameters":{"id":7007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7006,"mutability":"mutable","name":"input","nameLocation":"14883:5:36","nodeType":"VariableDeclaration","scope":7024,"src":"14869:19:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7005,"name":"string","nodeType":"ElementaryTypeName","src":"14869:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14868:21:36"},"returnParameters":{"id":7012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7009,"mutability":"mutable","name":"success","nameLocation":"14918:7:36","nodeType":"VariableDeclaration","scope":7024,"src":"14913:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7008,"name":"bool","nodeType":"ElementaryTypeName","src":"14913:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7011,"mutability":"mutable","name":"value","nameLocation":"14935:5:36","nodeType":"VariableDeclaration","scope":7024,"src":"14927:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7010,"name":"address","nodeType":"ElementaryTypeName","src":"14927:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14912:29:36"},"scope":7367,"src":"14844:168:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7127,"nodeType":"Block","src":"15405:733:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7038,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7031,"src":"15419:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7041,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7027,"src":"15431:5:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15425:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7039,"name":"bytes","nodeType":"ElementaryTypeName","src":"15425:5:36","typeDescriptions":{}}},"id":7042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15425:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15438:6:36","memberName":"length","nodeType":"MemberAccess","src":"15425:19:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15419:25:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7045,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7029,"src":"15448:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7046,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7031,"src":"15456:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15448:11:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15419:40:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7056,"nodeType":"IfStatement","src":"15415:72:36","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":7049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15469:5:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":7052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15484:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15476:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7050,"name":"address","nodeType":"ElementaryTypeName","src":"15476:7:36","typeDescriptions":{}}},"id":7053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15476:10:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7054,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15468:19:36","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":7037,"id":7055,"nodeType":"Return","src":"15461:26:36"}},{"assignments":[7058],"declarations":[{"constant":false,"id":7058,"mutability":"mutable","name":"hasPrefix","nameLocation":"15503:9:36","nodeType":"VariableDeclaration","scope":7127,"src":"15498:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7057,"name":"bool","nodeType":"ElementaryTypeName","src":"15498:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":7081,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7059,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7031,"src":"15516:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7060,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7029,"src":"15522:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15530:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15522:9:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15516:15:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":7064,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15515:17:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":7079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":7070,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7027,"src":"15572:5:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15566:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7068,"name":"bytes","nodeType":"ElementaryTypeName","src":"15566:5:36","typeDescriptions":{}}},"id":7071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15566:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":7072,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7029,"src":"15580:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7067,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7366,"src":"15543:22:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":7073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15543:43:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15536:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":7065,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15536:6:36","typeDescriptions":{}}},"id":7074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15536:51:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":7077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15598:4:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":7076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15591:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":7075,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15591:6:36","typeDescriptions":{}}},"id":7078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15591:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15536:67:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15515:88:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15498:105:36"},{"assignments":[7083],"declarations":[{"constant":false,"id":7083,"mutability":"mutable","name":"expectedLength","nameLocation":"15692:14:36","nodeType":"VariableDeclaration","scope":7127,"src":"15684:22:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7082,"name":"uint256","nodeType":"ElementaryTypeName","src":"15684:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7091,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":7084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15709:2:36","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7085,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7058,"src":"15714:9:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15724:6:36","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10764,"src":"15714:16:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":7087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15714:18:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":7088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15735:1:36","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15714:22:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15709:27:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15684:52:36"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7092,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7031,"src":"15801:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7093,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7029,"src":"15807:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:11:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7095,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7083,"src":"15816:14:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:29:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7125,"nodeType":"Block","src":"16081:51:36","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":7118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16103:5:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":7121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16118:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16110:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7119,"name":"address","nodeType":"ElementaryTypeName","src":"16110:7:36","typeDescriptions":{}}},"id":7122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:10:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7123,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16102:19:36","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":7037,"id":7124,"nodeType":"Return","src":"16095:26:36"}]},"id":7126,"nodeType":"IfStatement","src":"15797:335:36","trueBody":{"id":7117,"nodeType":"Block","src":"15832:243:36","statements":[{"assignments":[7098,7100],"declarations":[{"constant":false,"id":7098,"mutability":"mutable","name":"s","nameLocation":"15953:1:36","nodeType":"VariableDeclaration","scope":7117,"src":"15948:6:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7097,"name":"bool","nodeType":"ElementaryTypeName","src":"15948:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7100,"mutability":"mutable","name":"v","nameLocation":"15964:1:36","nodeType":"VariableDeclaration","scope":7117,"src":"15956:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7099,"name":"uint256","nodeType":"ElementaryTypeName","src":"15956:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7106,"initialValue":{"arguments":[{"id":7102,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7027,"src":"16001:5:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7103,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7029,"src":"16008:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7104,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7031,"src":"16015:3:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7101,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6953,"src":"15969:31:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":7105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15969:50:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15947:72:36"},{"expression":{"components":[{"id":7107,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7098,"src":"16041:1:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":7112,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7100,"src":"16060:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16052:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7110,"name":"uint160","nodeType":"ElementaryTypeName","src":"16052:7:36","typeDescriptions":{}}},"id":7113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16052:10:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":7109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16044:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7108,"name":"address","nodeType":"ElementaryTypeName","src":"16044:7:36","typeDescriptions":{}}},"id":7114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16044:19:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7115,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16040:24:36","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":7037,"id":7116,"nodeType":"Return","src":"16033:31:36"}]}}]},"documentation":{"id":7025,"nodeType":"StructuredDocumentation","src":"15018:226:36","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":7128,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15258:15:36","nodeType":"FunctionDefinition","parameters":{"id":7032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7027,"mutability":"mutable","name":"input","nameLocation":"15297:5:36","nodeType":"VariableDeclaration","scope":7128,"src":"15283:19:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7026,"name":"string","nodeType":"ElementaryTypeName","src":"15283:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7029,"mutability":"mutable","name":"begin","nameLocation":"15320:5:36","nodeType":"VariableDeclaration","scope":7128,"src":"15312:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7028,"name":"uint256","nodeType":"ElementaryTypeName","src":"15312:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7031,"mutability":"mutable","name":"end","nameLocation":"15343:3:36","nodeType":"VariableDeclaration","scope":7128,"src":"15335:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7030,"name":"uint256","nodeType":"ElementaryTypeName","src":"15335:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15273:79:36"},"returnParameters":{"id":7037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7034,"mutability":"mutable","name":"success","nameLocation":"15381:7:36","nodeType":"VariableDeclaration","scope":7128,"src":"15376:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7033,"name":"bool","nodeType":"ElementaryTypeName","src":"15376:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7036,"mutability":"mutable","name":"value","nameLocation":"15398:5:36","nodeType":"VariableDeclaration","scope":7128,"src":"15390:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7035,"name":"address","nodeType":"ElementaryTypeName","src":"15390:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15375:29:36"},"scope":7367,"src":"15249:889:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7187,"nodeType":"Block","src":"16207:461:36","statements":[{"assignments":[7136],"declarations":[{"constant":false,"id":7136,"mutability":"mutable","name":"value","nameLocation":"16223:5:36","nodeType":"VariableDeclaration","scope":7187,"src":"16217:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7135,"name":"uint8","nodeType":"ElementaryTypeName","src":"16217:5:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":7141,"initialValue":{"arguments":[{"id":7139,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7130,"src":"16237:3:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":7138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16231:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7137,"name":"uint8","nodeType":"ElementaryTypeName","src":"16231:5:36","typeDescriptions":{}}},"id":7140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16231:10:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16217:24:36"},{"id":7184,"nodeType":"UncheckedBlock","src":"16401:238:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7136,"src":"16429:5:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":7143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16437:2:36","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16429:10:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7136,"src":"16443:5:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":7146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16451:2:36","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16443:10:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16429:24:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7153,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7136,"src":"16489:5:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":7154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16497:2:36","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16489:10:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7136,"src":"16503:5:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":7157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16511:3:36","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16503:11:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16489:25:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7164,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7136,"src":"16550:5:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":7165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16558:2:36","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16550:10:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7136,"src":"16564:5:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":7168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16572:2:36","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16564:10:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16550:24:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":7177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16618:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7176,"name":"uint8","nodeType":"ElementaryTypeName","src":"16618:5:36","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":7175,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16613:4:36","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16613:11:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":7179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16625:3:36","memberName":"max","nodeType":"MemberAccess","src":"16613:15:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":7134,"id":7180,"nodeType":"Return","src":"16606:22:36"},"id":7181,"nodeType":"IfStatement","src":"16546:82:36","trueBody":{"expression":{"id":7173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7136,"src":"16576:5:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":7172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16585:2:36","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16576:11:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":7174,"nodeType":"ExpressionStatement","src":"16576:11:36"}},"id":7182,"nodeType":"IfStatement","src":"16485:143:36","trueBody":{"expression":{"id":7162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7136,"src":"16516:5:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":7161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16525:2:36","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16516:11:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":7163,"nodeType":"ExpressionStatement","src":"16516:11:36"}},"id":7183,"nodeType":"IfStatement","src":"16425:203:36","trueBody":{"expression":{"id":7151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7136,"src":"16455:5:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":7150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16464:2:36","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16455:11:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":7152,"nodeType":"ExpressionStatement","src":"16455:11:36"}}]},{"expression":{"id":7185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7136,"src":"16656:5:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":7134,"id":7186,"nodeType":"Return","src":"16649:12:36"}]},"id":7188,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16153:12:36","nodeType":"FunctionDefinition","parameters":{"id":7131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7130,"mutability":"mutable","name":"chr","nameLocation":"16173:3:36","nodeType":"VariableDeclaration","scope":7188,"src":"16166:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":7129,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16166:6:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16165:12:36"},"returnParameters":{"id":7134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7188,"src":"16200:5:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7132,"name":"uint8","nodeType":"ElementaryTypeName","src":"16200:5:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16199:7:36"},"scope":7367,"src":"16144:524:36","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":7353,"nodeType":"Block","src":"17334:1331:36","statements":[{"assignments":[7197],"declarations":[{"constant":false,"id":7197,"mutability":"mutable","name":"buffer","nameLocation":"17357:6:36","nodeType":"VariableDeclaration","scope":7353,"src":"17344:19:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7196,"name":"bytes","nodeType":"ElementaryTypeName","src":"17344:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":7202,"initialValue":{"arguments":[{"id":7200,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"17372:5:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17366:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7198,"name":"bytes","nodeType":"ElementaryTypeName","src":"17366:5:36","typeDescriptions":{}}},"id":7201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17366:12:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17344:34:36"},{"assignments":[7204],"declarations":[{"constant":false,"id":7204,"mutability":"mutable","name":"output","nameLocation":"17401:6:36","nodeType":"VariableDeclaration","scope":7353,"src":"17388:19:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7203,"name":"bytes","nodeType":"ElementaryTypeName","src":"17388:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":7212,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":7207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17420:1:36","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":7208,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7197,"src":"17424:6:36","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17431:6:36","memberName":"length","nodeType":"MemberAccess","src":"17424:13:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17420:17:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17410:9:36","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":7205,"name":"bytes","nodeType":"ElementaryTypeName","src":"17414:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":7211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17410:28:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17388:50:36"},{"assignments":[7214],"declarations":[{"constant":false,"id":7214,"mutability":"mutable","name":"outputLength","nameLocation":"17479:12:36","nodeType":"VariableDeclaration","scope":7353,"src":"17471:20:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7213,"name":"uint256","nodeType":"ElementaryTypeName","src":"17471:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7216,"initialValue":{"hexValue":"30","id":7215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17494:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17471:24:36"},{"body":{"id":7345,"nodeType":"Block","src":"17546:854:36","statements":[{"assignments":[7228],"declarations":[{"constant":false,"id":7228,"mutability":"mutable","name":"char","nameLocation":"17567:4:36","nodeType":"VariableDeclaration","scope":7345,"src":"17560:11:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":7227,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17560:6:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":7236,"initialValue":{"arguments":[{"arguments":[{"id":7232,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7197,"src":"17604:6:36","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":7233,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7218,"src":"17612:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7231,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7366,"src":"17581:22:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":7234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17581:33:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17574:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":7229,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17574:6:36","typeDescriptions":{}}},"id":7235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17574:41:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17560:55:36"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7237,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6018,"src":"17635:20:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17659:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":7241,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"17670:4:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":7240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17664:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7239,"name":"uint8","nodeType":"ElementaryTypeName","src":"17664:5:36","typeDescriptions":{}}},"id":7242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17664:11:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17659:16:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7244,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17658:18:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17635:41:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7246,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17634:43:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17681:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17634:48:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":7249,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17633:50:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7343,"nodeType":"Block","src":"18328:62:36","statements":[{"expression":{"id":7341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7336,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7204,"src":"18346:6:36","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7339,"indexExpression":{"id":7338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18353:14:36","subExpression":{"id":7337,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7214,"src":"18353:12:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18346:22:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7340,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"18371:4:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18346:29:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":7342,"nodeType":"ExpressionStatement","src":"18346:29:36"}]},"id":7344,"nodeType":"IfStatement","src":"17629:761:36","trueBody":{"id":7335,"nodeType":"Block","src":"17685:637:36","statements":[{"expression":{"id":7255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7250,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7204,"src":"17703:6:36","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7253,"indexExpression":{"id":7252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17710:14:36","subExpression":{"id":7251,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7214,"src":"17710:12:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17703:22:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":7254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17728:4:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17703:29:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":7256,"nodeType":"ExpressionStatement","src":"17703:29:36"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":7259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7257,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"17754:4:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":7258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17762:4:36","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17754:12:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":7269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7267,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"17823:4:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":7268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17831:4:36","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17823:12:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":7279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7277,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"17892:4:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":7278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17900:4:36","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17892:12:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":7289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7287,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"17961:4:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":7288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17969:4:36","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17961:12:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":7299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7297,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"18030:4:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":7298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18038:4:36","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18030:12:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":7309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7307,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"18099:4:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":7308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18107:4:36","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18099:12:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":7319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7317,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"18169:4:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":7318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18177:4:36","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18169:12:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7328,"nodeType":"IfStatement","src":"18165:143:36","trueBody":{"id":7327,"nodeType":"Block","src":"18183:125:36","statements":[{"expression":{"id":7325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7320,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7204,"src":"18261:6:36","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7323,"indexExpression":{"id":7322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18268:14:36","subExpression":{"id":7321,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7214,"src":"18268:12:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18261:22:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":7324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18286:3:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18261:28:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":7326,"nodeType":"ExpressionStatement","src":"18261:28:36"}]}},"id":7329,"nodeType":"IfStatement","src":"18095:213:36","trueBody":{"expression":{"id":7315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7310,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7204,"src":"18113:6:36","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7313,"indexExpression":{"id":7312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18120:14:36","subExpression":{"id":7311,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7214,"src":"18120:12:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18113:22:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":7314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18138:4:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18113:29:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":7316,"nodeType":"ExpressionStatement","src":"18113:29:36"}},"id":7330,"nodeType":"IfStatement","src":"18026:282:36","trueBody":{"expression":{"id":7305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7300,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7204,"src":"18044:6:36","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7303,"indexExpression":{"id":7302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18051:14:36","subExpression":{"id":7301,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7214,"src":"18051:12:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18044:22:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":7304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18069:3:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18044:28:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":7306,"nodeType":"ExpressionStatement","src":"18044:28:36"}},"id":7331,"nodeType":"IfStatement","src":"17957:351:36","trueBody":{"expression":{"id":7295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7290,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7204,"src":"17975:6:36","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7293,"indexExpression":{"id":7292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17982:14:36","subExpression":{"id":7291,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7214,"src":"17982:12:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17975:22:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":7294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18000:3:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17975:28:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":7296,"nodeType":"ExpressionStatement","src":"17975:28:36"}},"id":7332,"nodeType":"IfStatement","src":"17888:420:36","trueBody":{"expression":{"id":7285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7280,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7204,"src":"17906:6:36","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7283,"indexExpression":{"id":7282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17913:14:36","subExpression":{"id":7281,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7214,"src":"17913:12:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17906:22:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":7284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17931:3:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17906:28:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":7286,"nodeType":"ExpressionStatement","src":"17906:28:36"}},"id":7333,"nodeType":"IfStatement","src":"17819:489:36","trueBody":{"expression":{"id":7275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7270,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7204,"src":"17837:6:36","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7273,"indexExpression":{"id":7272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17844:14:36","subExpression":{"id":7271,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7214,"src":"17844:12:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17837:22:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":7274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17862:3:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17837:28:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":7276,"nodeType":"ExpressionStatement","src":"17837:28:36"}},"id":7334,"nodeType":"IfStatement","src":"17750:558:36","trueBody":{"expression":{"id":7265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7260,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7204,"src":"17768:6:36","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7263,"indexExpression":{"id":7262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17775:14:36","subExpression":{"id":7261,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7214,"src":"17775:12:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17768:22:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":7264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17793:3:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17768:28:36","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":7266,"nodeType":"ExpressionStatement","src":"17768:28:36"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7220,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7218,"src":"17522:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7221,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7197,"src":"17526:6:36","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17533:6:36","memberName":"length","nodeType":"MemberAccess","src":"17526:13:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17522:17:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7346,"initializationExpression":{"assignments":[7218],"declarations":[{"constant":false,"id":7218,"mutability":"mutable","name":"i","nameLocation":"17519:1:36","nodeType":"VariableDeclaration","scope":7346,"src":"17511:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7217,"name":"uint256","nodeType":"ElementaryTypeName","src":"17511:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7219,"nodeType":"VariableDeclarationStatement","src":"17511:9:36"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17541:3:36","subExpression":{"id":7224,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7218,"src":"17543:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7226,"nodeType":"ExpressionStatement","src":"17541:3:36"},"nodeType":"ForStatement","src":"17506:894:36"},{"AST":{"nativeSrc":"18498:129:36","nodeType":"YulBlock","src":"18498:129:36","statements":[{"expression":{"arguments":[{"name":"output","nativeSrc":"18519:6:36","nodeType":"YulIdentifier","src":"18519:6:36"},{"name":"outputLength","nativeSrc":"18527:12:36","nodeType":"YulIdentifier","src":"18527:12:36"}],"functionName":{"name":"mstore","nativeSrc":"18512:6:36","nodeType":"YulIdentifier","src":"18512:6:36"},"nativeSrc":"18512:28:36","nodeType":"YulFunctionCall","src":"18512:28:36"},"nativeSrc":"18512:28:36","nodeType":"YulExpressionStatement","src":"18512:28:36"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18560:4:36","nodeType":"YulLiteral","src":"18560:4:36","type":"","value":"0x40"},{"arguments":[{"name":"output","nativeSrc":"18570:6:36","nodeType":"YulIdentifier","src":"18570:6:36"},{"arguments":[{"kind":"number","nativeSrc":"18582:1:36","nodeType":"YulLiteral","src":"18582:1:36","type":"","value":"5"},{"arguments":[{"kind":"number","nativeSrc":"18589:1:36","nodeType":"YulLiteral","src":"18589:1:36","type":"","value":"5"},{"arguments":[{"name":"outputLength","nativeSrc":"18596:12:36","nodeType":"YulIdentifier","src":"18596:12:36"},{"kind":"number","nativeSrc":"18610:2:36","nodeType":"YulLiteral","src":"18610:2:36","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"18592:3:36","nodeType":"YulIdentifier","src":"18592:3:36"},"nativeSrc":"18592:21:36","nodeType":"YulFunctionCall","src":"18592:21:36"}],"functionName":{"name":"shr","nativeSrc":"18585:3:36","nodeType":"YulIdentifier","src":"18585:3:36"},"nativeSrc":"18585:29:36","nodeType":"YulFunctionCall","src":"18585:29:36"}],"functionName":{"name":"shl","nativeSrc":"18578:3:36","nodeType":"YulIdentifier","src":"18578:3:36"},"nativeSrc":"18578:37:36","nodeType":"YulFunctionCall","src":"18578:37:36"}],"functionName":{"name":"add","nativeSrc":"18566:3:36","nodeType":"YulIdentifier","src":"18566:3:36"},"nativeSrc":"18566:50:36","nodeType":"YulFunctionCall","src":"18566:50:36"}],"functionName":{"name":"mstore","nativeSrc":"18553:6:36","nodeType":"YulIdentifier","src":"18553:6:36"},"nativeSrc":"18553:64:36","nodeType":"YulFunctionCall","src":"18553:64:36"},"nativeSrc":"18553:64:36","nodeType":"YulExpressionStatement","src":"18553:64:36"}]},"evmVersion":"paris","externalReferences":[{"declaration":7204,"isOffset":false,"isSlot":false,"src":"18519:6:36","valueSize":1},{"declaration":7204,"isOffset":false,"isSlot":false,"src":"18570:6:36","valueSize":1},{"declaration":7214,"isOffset":false,"isSlot":false,"src":"18527:12:36","valueSize":1},{"declaration":7214,"isOffset":false,"isSlot":false,"src":"18596:12:36","valueSize":1}],"flags":["memory-safe"],"id":7347,"nodeType":"InlineAssembly","src":"18473:154:36"},{"expression":{"arguments":[{"id":7350,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7204,"src":"18651:6:36","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18644:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":7348,"name":"string","nodeType":"ElementaryTypeName","src":"18644:6:36","typeDescriptions":{}}},"id":7351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18644:14:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":7195,"id":7352,"nodeType":"Return","src":"18637:21:36"}]},"documentation":{"id":7189,"nodeType":"StructuredDocumentation","src":"16674:576:36","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":7354,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17264:10:36","nodeType":"FunctionDefinition","parameters":{"id":7192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7191,"mutability":"mutable","name":"input","nameLocation":"17289:5:36","nodeType":"VariableDeclaration","scope":7354,"src":"17275:19:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7190,"name":"string","nodeType":"ElementaryTypeName","src":"17275:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17274:21:36"},"returnParameters":{"id":7195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7194,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7354,"src":"17319:13:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7193,"name":"string","nodeType":"ElementaryTypeName","src":"17319:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17318:15:36"},"scope":7367,"src":"17255:1410:36","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7365,"nodeType":"Block","src":"19050:225:36","statements":[{"AST":{"nativeSrc":"19199:70:36","nodeType":"YulBlock","src":"19199:70:36","statements":[{"nativeSrc":"19213:46:36","nodeType":"YulAssignment","src":"19213:46:36","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"19232:6:36","nodeType":"YulIdentifier","src":"19232:6:36"},{"arguments":[{"kind":"number","nativeSrc":"19244:4:36","nodeType":"YulLiteral","src":"19244:4:36","type":"","value":"0x20"},{"name":"offset","nativeSrc":"19250:6:36","nodeType":"YulIdentifier","src":"19250:6:36"}],"functionName":{"name":"add","nativeSrc":"19240:3:36","nodeType":"YulIdentifier","src":"19240:3:36"},"nativeSrc":"19240:17:36","nodeType":"YulFunctionCall","src":"19240:17:36"}],"functionName":{"name":"add","nativeSrc":"19228:3:36","nodeType":"YulIdentifier","src":"19228:3:36"},"nativeSrc":"19228:30:36","nodeType":"YulFunctionCall","src":"19228:30:36"}],"functionName":{"name":"mload","nativeSrc":"19222:5:36","nodeType":"YulIdentifier","src":"19222:5:36"},"nativeSrc":"19222:37:36","nodeType":"YulFunctionCall","src":"19222:37:36"},"variableNames":[{"name":"value","nativeSrc":"19213:5:36","nodeType":"YulIdentifier","src":"19213:5:36"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7357,"isOffset":false,"isSlot":false,"src":"19232:6:36","valueSize":1},{"declaration":7359,"isOffset":false,"isSlot":false,"src":"19250:6:36","valueSize":1},{"declaration":7362,"isOffset":false,"isSlot":false,"src":"19213:5:36","valueSize":1}],"flags":["memory-safe"],"id":7364,"nodeType":"InlineAssembly","src":"19174:95:36"}]},"documentation":{"id":7355,"nodeType":"StructuredDocumentation","src":"18671:268:36","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":7366,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18953:22:36","nodeType":"FunctionDefinition","parameters":{"id":7360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7357,"mutability":"mutable","name":"buffer","nameLocation":"18989:6:36","nodeType":"VariableDeclaration","scope":7366,"src":"18976:19:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7356,"name":"bytes","nodeType":"ElementaryTypeName","src":"18976:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7359,"mutability":"mutable","name":"offset","nameLocation":"19005:6:36","nodeType":"VariableDeclaration","scope":7366,"src":"18997:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7358,"name":"uint256","nodeType":"ElementaryTypeName","src":"18997:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18975:37:36"},"returnParameters":{"id":7363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7362,"mutability":"mutable","name":"value","nameLocation":"19043:5:36","nodeType":"VariableDeclaration","scope":7366,"src":"19035:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7361,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19035:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19034:15:36"},"scope":7367,"src":"18944:331:36","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":7368,"src":"297:18980:36","usedErrors":[6025,6028,6031],"usedEvents":[]}],"src":"101:19177:36"},"id":36},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[7379]},"id":7380,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7369,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:37"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":7370,"nodeType":"StructuredDocumentation","src":"141:280:37","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":7379,"linearizedBaseContracts":[7379],"name":"IERC165","nameLocation":"432:7:37","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":7371,"nodeType":"StructuredDocumentation","src":"446:340:37","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":7378,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:37","nodeType":"FunctionDefinition","parameters":{"id":7374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7373,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:37","nodeType":"VariableDeclaration","scope":7378,"src":"818:18:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":7372,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:37","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:37"},"returnParameters":{"id":7377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7378,"src":"861:4:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7375,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:37"},"scope":7379,"src":"791:76:37","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":7380,"src":"422:447:37","usedErrors":[],"usedEvents":[]}],"src":"115:755:37"},"id":37},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[9000],"Panic":[5711],"SafeCast":[10765]},"id":9001,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7381,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:38"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":7383,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9001,"sourceUnit":5712,"src":"129:35:38","symbolAliases":[{"foreign":{"id":7382,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5711,"src":"137:5:38","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":7385,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9001,"sourceUnit":10766,"src":"165:40:38","symbolAliases":[{"foreign":{"id":7384,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10765,"src":"173:8:38","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":7386,"nodeType":"StructuredDocumentation","src":"207:73:38","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":9000,"linearizedBaseContracts":[9000],"name":"Math","nameLocation":"289:4:38","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":7391,"members":[{"id":7387,"name":"Floor","nameLocation":"324:5:38","nodeType":"EnumValue","src":"324:5:38"},{"id":7388,"name":"Ceil","nameLocation":"367:4:38","nodeType":"EnumValue","src":"367:4:38"},{"id":7389,"name":"Trunc","nameLocation":"409:5:38","nodeType":"EnumValue","src":"409:5:38"},{"id":7390,"name":"Expand","nameLocation":"439:6:38","nodeType":"EnumValue","src":"439:6:38"}],"name":"Rounding","nameLocation":"305:8:38","nodeType":"EnumDefinition","src":"300:169:38"},{"body":{"id":7404,"nodeType":"Block","src":"731:112:38","statements":[{"AST":{"nativeSrc":"766:71:38","nodeType":"YulBlock","src":"766:71:38","statements":[{"nativeSrc":"780:16:38","nodeType":"YulAssignment","src":"780:16:38","value":{"arguments":[{"name":"a","nativeSrc":"791:1:38","nodeType":"YulIdentifier","src":"791:1:38"},{"name":"b","nativeSrc":"794:1:38","nodeType":"YulIdentifier","src":"794:1:38"}],"functionName":{"name":"add","nativeSrc":"787:3:38","nodeType":"YulIdentifier","src":"787:3:38"},"nativeSrc":"787:9:38","nodeType":"YulFunctionCall","src":"787:9:38"},"variableNames":[{"name":"low","nativeSrc":"780:3:38","nodeType":"YulIdentifier","src":"780:3:38"}]},{"nativeSrc":"809:18:38","nodeType":"YulAssignment","src":"809:18:38","value":{"arguments":[{"name":"low","nativeSrc":"820:3:38","nodeType":"YulIdentifier","src":"820:3:38"},{"name":"a","nativeSrc":"825:1:38","nodeType":"YulIdentifier","src":"825:1:38"}],"functionName":{"name":"lt","nativeSrc":"817:2:38","nodeType":"YulIdentifier","src":"817:2:38"},"nativeSrc":"817:10:38","nodeType":"YulFunctionCall","src":"817:10:38"},"variableNames":[{"name":"high","nativeSrc":"809:4:38","nodeType":"YulIdentifier","src":"809:4:38"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7394,"isOffset":false,"isSlot":false,"src":"791:1:38","valueSize":1},{"declaration":7394,"isOffset":false,"isSlot":false,"src":"825:1:38","valueSize":1},{"declaration":7396,"isOffset":false,"isSlot":false,"src":"794:1:38","valueSize":1},{"declaration":7399,"isOffset":false,"isSlot":false,"src":"809:4:38","valueSize":1},{"declaration":7401,"isOffset":false,"isSlot":false,"src":"780:3:38","valueSize":1},{"declaration":7401,"isOffset":false,"isSlot":false,"src":"820:3:38","valueSize":1}],"flags":["memory-safe"],"id":7403,"nodeType":"InlineAssembly","src":"741:96:38"}]},"documentation":{"id":7392,"nodeType":"StructuredDocumentation","src":"475:163:38","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":7405,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:38","nodeType":"FunctionDefinition","parameters":{"id":7397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7394,"mutability":"mutable","name":"a","nameLocation":"667:1:38","nodeType":"VariableDeclaration","scope":7405,"src":"659:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7393,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7396,"mutability":"mutable","name":"b","nameLocation":"678:1:38","nodeType":"VariableDeclaration","scope":7405,"src":"670:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7395,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:38"},"returnParameters":{"id":7402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7399,"mutability":"mutable","name":"high","nameLocation":"712:4:38","nodeType":"VariableDeclaration","scope":7405,"src":"704:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7398,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7401,"mutability":"mutable","name":"low","nameLocation":"726:3:38","nodeType":"VariableDeclaration","scope":7405,"src":"718:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7400,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:38"},"scope":9000,"src":"643:200:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7418,"nodeType":"Block","src":"1115:462:38","statements":[{"AST":{"nativeSrc":"1437:134:38","nodeType":"YulBlock","src":"1437:134:38","statements":[{"nativeSrc":"1451:30:38","nodeType":"YulVariableDeclaration","src":"1451:30:38","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:38","nodeType":"YulIdentifier","src":"1468:1:38"},{"name":"b","nativeSrc":"1471:1:38","nodeType":"YulIdentifier","src":"1471:1:38"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:38","nodeType":"YulLiteral","src":"1478:1:38","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:38","nodeType":"YulIdentifier","src":"1474:3:38"},"nativeSrc":"1474:6:38","nodeType":"YulFunctionCall","src":"1474:6:38"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:38","nodeType":"YulIdentifier","src":"1461:6:38"},"nativeSrc":"1461:20:38","nodeType":"YulFunctionCall","src":"1461:20:38"},"variables":[{"name":"mm","nativeSrc":"1455:2:38","nodeType":"YulTypedName","src":"1455:2:38","type":""}]},{"nativeSrc":"1494:16:38","nodeType":"YulAssignment","src":"1494:16:38","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:38","nodeType":"YulIdentifier","src":"1505:1:38"},{"name":"b","nativeSrc":"1508:1:38","nodeType":"YulIdentifier","src":"1508:1:38"}],"functionName":{"name":"mul","nativeSrc":"1501:3:38","nodeType":"YulIdentifier","src":"1501:3:38"},"nativeSrc":"1501:9:38","nodeType":"YulFunctionCall","src":"1501:9:38"},"variableNames":[{"name":"low","nativeSrc":"1494:3:38","nodeType":"YulIdentifier","src":"1494:3:38"}]},{"nativeSrc":"1523:38:38","nodeType":"YulAssignment","src":"1523:38:38","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:38","nodeType":"YulIdentifier","src":"1539:2:38"},{"name":"low","nativeSrc":"1543:3:38","nodeType":"YulIdentifier","src":"1543:3:38"}],"functionName":{"name":"sub","nativeSrc":"1535:3:38","nodeType":"YulIdentifier","src":"1535:3:38"},"nativeSrc":"1535:12:38","nodeType":"YulFunctionCall","src":"1535:12:38"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:38","nodeType":"YulIdentifier","src":"1552:2:38"},{"name":"low","nativeSrc":"1556:3:38","nodeType":"YulIdentifier","src":"1556:3:38"}],"functionName":{"name":"lt","nativeSrc":"1549:2:38","nodeType":"YulIdentifier","src":"1549:2:38"},"nativeSrc":"1549:11:38","nodeType":"YulFunctionCall","src":"1549:11:38"}],"functionName":{"name":"sub","nativeSrc":"1531:3:38","nodeType":"YulIdentifier","src":"1531:3:38"},"nativeSrc":"1531:30:38","nodeType":"YulFunctionCall","src":"1531:30:38"},"variableNames":[{"name":"high","nativeSrc":"1523:4:38","nodeType":"YulIdentifier","src":"1523:4:38"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7408,"isOffset":false,"isSlot":false,"src":"1468:1:38","valueSize":1},{"declaration":7408,"isOffset":false,"isSlot":false,"src":"1505:1:38","valueSize":1},{"declaration":7410,"isOffset":false,"isSlot":false,"src":"1471:1:38","valueSize":1},{"declaration":7410,"isOffset":false,"isSlot":false,"src":"1508:1:38","valueSize":1},{"declaration":7413,"isOffset":false,"isSlot":false,"src":"1523:4:38","valueSize":1},{"declaration":7415,"isOffset":false,"isSlot":false,"src":"1494:3:38","valueSize":1},{"declaration":7415,"isOffset":false,"isSlot":false,"src":"1543:3:38","valueSize":1},{"declaration":7415,"isOffset":false,"isSlot":false,"src":"1556:3:38","valueSize":1}],"flags":["memory-safe"],"id":7417,"nodeType":"InlineAssembly","src":"1412:159:38"}]},"documentation":{"id":7406,"nodeType":"StructuredDocumentation","src":"849:173:38","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":7419,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:38","nodeType":"FunctionDefinition","parameters":{"id":7411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7408,"mutability":"mutable","name":"a","nameLocation":"1051:1:38","nodeType":"VariableDeclaration","scope":7419,"src":"1043:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7407,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7410,"mutability":"mutable","name":"b","nameLocation":"1062:1:38","nodeType":"VariableDeclaration","scope":7419,"src":"1054:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7409,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:38"},"returnParameters":{"id":7416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7413,"mutability":"mutable","name":"high","nameLocation":"1096:4:38","nodeType":"VariableDeclaration","scope":7419,"src":"1088:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7412,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7415,"mutability":"mutable","name":"low","nameLocation":"1110:3:38","nodeType":"VariableDeclaration","scope":7419,"src":"1102:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7414,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:38"},"scope":9000,"src":"1027:550:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7453,"nodeType":"Block","src":"1784:149:38","statements":[{"id":7452,"nodeType":"UncheckedBlock","src":"1794:133:38","statements":[{"assignments":[7432],"declarations":[{"constant":false,"id":7432,"mutability":"mutable","name":"c","nameLocation":"1826:1:38","nodeType":"VariableDeclaration","scope":7452,"src":"1818:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7431,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7436,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7433,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7422,"src":"1830:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7434,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"1834:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:38"},{"expression":{"id":7441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7437,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7427,"src":"1849:7:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7438,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7432,"src":"1859:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7439,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7422,"src":"1864:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7442,"nodeType":"ExpressionStatement","src":"1849:16:38"},{"expression":{"id":7450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7443,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7429,"src":"1879:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7444,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7432,"src":"1888:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":7447,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7427,"src":"1908:7:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7445,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10765,"src":"1892:8:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10765_$","typeString":"type(library SafeCast)"}},"id":7446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:38","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10764,"src":"1892:15:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7451,"nodeType":"ExpressionStatement","src":"1879:37:38"}]}]},"documentation":{"id":7420,"nodeType":"StructuredDocumentation","src":"1583:105:38","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":7454,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:38","nodeType":"FunctionDefinition","parameters":{"id":7425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7422,"mutability":"mutable","name":"a","nameLocation":"1717:1:38","nodeType":"VariableDeclaration","scope":7454,"src":"1709:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7421,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7424,"mutability":"mutable","name":"b","nameLocation":"1728:1:38","nodeType":"VariableDeclaration","scope":7454,"src":"1720:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7423,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:38"},"returnParameters":{"id":7430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7427,"mutability":"mutable","name":"success","nameLocation":"1759:7:38","nodeType":"VariableDeclaration","scope":7454,"src":"1754:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7426,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7429,"mutability":"mutable","name":"result","nameLocation":"1776:6:38","nodeType":"VariableDeclaration","scope":7454,"src":"1768:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7428,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:38"},"scope":9000,"src":"1693:240:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7488,"nodeType":"Block","src":"2143:149:38","statements":[{"id":7487,"nodeType":"UncheckedBlock","src":"2153:133:38","statements":[{"assignments":[7467],"declarations":[{"constant":false,"id":7467,"mutability":"mutable","name":"c","nameLocation":"2185:1:38","nodeType":"VariableDeclaration","scope":7487,"src":"2177:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7466,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7471,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7468,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7457,"src":"2189:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7469,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7459,"src":"2193:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:38"},{"expression":{"id":7476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7472,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7462,"src":"2208:7:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7473,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7467,"src":"2218:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7474,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7457,"src":"2223:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7477,"nodeType":"ExpressionStatement","src":"2208:16:38"},{"expression":{"id":7485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7478,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7464,"src":"2238:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7479,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7467,"src":"2247:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":7482,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7462,"src":"2267:7:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7480,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10765,"src":"2251:8:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10765_$","typeString":"type(library SafeCast)"}},"id":7481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:38","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10764,"src":"2251:15:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7486,"nodeType":"ExpressionStatement","src":"2238:37:38"}]}]},"documentation":{"id":7455,"nodeType":"StructuredDocumentation","src":"1939:108:38","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":7489,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:38","nodeType":"FunctionDefinition","parameters":{"id":7460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7457,"mutability":"mutable","name":"a","nameLocation":"2076:1:38","nodeType":"VariableDeclaration","scope":7489,"src":"2068:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7456,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7459,"mutability":"mutable","name":"b","nameLocation":"2087:1:38","nodeType":"VariableDeclaration","scope":7489,"src":"2079:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7458,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:38"},"returnParameters":{"id":7465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7462,"mutability":"mutable","name":"success","nameLocation":"2118:7:38","nodeType":"VariableDeclaration","scope":7489,"src":"2113:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7461,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7464,"mutability":"mutable","name":"result","nameLocation":"2135:6:38","nodeType":"VariableDeclaration","scope":7489,"src":"2127:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7463,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:38"},"scope":9000,"src":"2052:240:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7518,"nodeType":"Block","src":"2505:391:38","statements":[{"id":7517,"nodeType":"UncheckedBlock","src":"2515:375:38","statements":[{"assignments":[7502],"declarations":[{"constant":false,"id":7502,"mutability":"mutable","name":"c","nameLocation":"2547:1:38","nodeType":"VariableDeclaration","scope":7517,"src":"2539:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7501,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7506,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7503,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7492,"src":"2551:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7504,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7494,"src":"2555:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:38"},{"AST":{"nativeSrc":"2595:188:38","nodeType":"YulBlock","src":"2595:188:38","statements":[{"nativeSrc":"2727:42:38","nodeType":"YulAssignment","src":"2727:42:38","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:38","nodeType":"YulIdentifier","src":"2748:1:38"},{"name":"a","nativeSrc":"2751:1:38","nodeType":"YulIdentifier","src":"2751:1:38"}],"functionName":{"name":"div","nativeSrc":"2744:3:38","nodeType":"YulIdentifier","src":"2744:3:38"},"nativeSrc":"2744:9:38","nodeType":"YulFunctionCall","src":"2744:9:38"},{"name":"b","nativeSrc":"2755:1:38","nodeType":"YulIdentifier","src":"2755:1:38"}],"functionName":{"name":"eq","nativeSrc":"2741:2:38","nodeType":"YulIdentifier","src":"2741:2:38"},"nativeSrc":"2741:16:38","nodeType":"YulFunctionCall","src":"2741:16:38"},{"arguments":[{"name":"a","nativeSrc":"2766:1:38","nodeType":"YulIdentifier","src":"2766:1:38"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:38","nodeType":"YulIdentifier","src":"2759:6:38"},"nativeSrc":"2759:9:38","nodeType":"YulFunctionCall","src":"2759:9:38"}],"functionName":{"name":"or","nativeSrc":"2738:2:38","nodeType":"YulIdentifier","src":"2738:2:38"},"nativeSrc":"2738:31:38","nodeType":"YulFunctionCall","src":"2738:31:38"},"variableNames":[{"name":"success","nativeSrc":"2727:7:38","nodeType":"YulIdentifier","src":"2727:7:38"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7492,"isOffset":false,"isSlot":false,"src":"2751:1:38","valueSize":1},{"declaration":7492,"isOffset":false,"isSlot":false,"src":"2766:1:38","valueSize":1},{"declaration":7494,"isOffset":false,"isSlot":false,"src":"2755:1:38","valueSize":1},{"declaration":7502,"isOffset":false,"isSlot":false,"src":"2748:1:38","valueSize":1},{"declaration":7497,"isOffset":false,"isSlot":false,"src":"2727:7:38","valueSize":1}],"flags":["memory-safe"],"id":7507,"nodeType":"InlineAssembly","src":"2570:213:38"},{"expression":{"id":7515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7508,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7499,"src":"2842:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7509,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7502,"src":"2851:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":7512,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7497,"src":"2871:7:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7510,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10765,"src":"2855:8:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10765_$","typeString":"type(library SafeCast)"}},"id":7511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:38","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10764,"src":"2855:15:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7516,"nodeType":"ExpressionStatement","src":"2842:37:38"}]}]},"documentation":{"id":7490,"nodeType":"StructuredDocumentation","src":"2298:111:38","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":7519,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:38","nodeType":"FunctionDefinition","parameters":{"id":7495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7492,"mutability":"mutable","name":"a","nameLocation":"2438:1:38","nodeType":"VariableDeclaration","scope":7519,"src":"2430:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7491,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7494,"mutability":"mutable","name":"b","nameLocation":"2449:1:38","nodeType":"VariableDeclaration","scope":7519,"src":"2441:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7493,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:38"},"returnParameters":{"id":7500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7497,"mutability":"mutable","name":"success","nameLocation":"2480:7:38","nodeType":"VariableDeclaration","scope":7519,"src":"2475:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7496,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7499,"mutability":"mutable","name":"result","nameLocation":"2497:6:38","nodeType":"VariableDeclaration","scope":7519,"src":"2489:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7498,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:38"},"scope":9000,"src":"2414:482:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7539,"nodeType":"Block","src":"3111:231:38","statements":[{"id":7538,"nodeType":"UncheckedBlock","src":"3121:215:38","statements":[{"expression":{"id":7535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7531,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7527,"src":"3145:7:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7532,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7524,"src":"3155:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7536,"nodeType":"ExpressionStatement","src":"3145:15:38"},{"AST":{"nativeSrc":"3199:127:38","nodeType":"YulBlock","src":"3199:127:38","statements":[{"nativeSrc":"3293:19:38","nodeType":"YulAssignment","src":"3293:19:38","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:38","nodeType":"YulIdentifier","src":"3307:1:38"},{"name":"b","nativeSrc":"3310:1:38","nodeType":"YulIdentifier","src":"3310:1:38"}],"functionName":{"name":"div","nativeSrc":"3303:3:38","nodeType":"YulIdentifier","src":"3303:3:38"},"nativeSrc":"3303:9:38","nodeType":"YulFunctionCall","src":"3303:9:38"},"variableNames":[{"name":"result","nativeSrc":"3293:6:38","nodeType":"YulIdentifier","src":"3293:6:38"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7522,"isOffset":false,"isSlot":false,"src":"3307:1:38","valueSize":1},{"declaration":7524,"isOffset":false,"isSlot":false,"src":"3310:1:38","valueSize":1},{"declaration":7529,"isOffset":false,"isSlot":false,"src":"3293:6:38","valueSize":1}],"flags":["memory-safe"],"id":7537,"nodeType":"InlineAssembly","src":"3174:152:38"}]}]},"documentation":{"id":7520,"nodeType":"StructuredDocumentation","src":"2902:113:38","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":7540,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:38","nodeType":"FunctionDefinition","parameters":{"id":7525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7522,"mutability":"mutable","name":"a","nameLocation":"3044:1:38","nodeType":"VariableDeclaration","scope":7540,"src":"3036:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7521,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7524,"mutability":"mutable","name":"b","nameLocation":"3055:1:38","nodeType":"VariableDeclaration","scope":7540,"src":"3047:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7523,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:38"},"returnParameters":{"id":7530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7527,"mutability":"mutable","name":"success","nameLocation":"3086:7:38","nodeType":"VariableDeclaration","scope":7540,"src":"3081:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7526,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7529,"mutability":"mutable","name":"result","nameLocation":"3103:6:38","nodeType":"VariableDeclaration","scope":7540,"src":"3095:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7528,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:38"},"scope":9000,"src":"3020:322:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7560,"nodeType":"Block","src":"3567:231:38","statements":[{"id":7559,"nodeType":"UncheckedBlock","src":"3577:215:38","statements":[{"expression":{"id":7556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7552,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7548,"src":"3601:7:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7553,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7545,"src":"3611:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7557,"nodeType":"ExpressionStatement","src":"3601:15:38"},{"AST":{"nativeSrc":"3655:127:38","nodeType":"YulBlock","src":"3655:127:38","statements":[{"nativeSrc":"3749:19:38","nodeType":"YulAssignment","src":"3749:19:38","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:38","nodeType":"YulIdentifier","src":"3763:1:38"},{"name":"b","nativeSrc":"3766:1:38","nodeType":"YulIdentifier","src":"3766:1:38"}],"functionName":{"name":"mod","nativeSrc":"3759:3:38","nodeType":"YulIdentifier","src":"3759:3:38"},"nativeSrc":"3759:9:38","nodeType":"YulFunctionCall","src":"3759:9:38"},"variableNames":[{"name":"result","nativeSrc":"3749:6:38","nodeType":"YulIdentifier","src":"3749:6:38"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7543,"isOffset":false,"isSlot":false,"src":"3763:1:38","valueSize":1},{"declaration":7545,"isOffset":false,"isSlot":false,"src":"3766:1:38","valueSize":1},{"declaration":7550,"isOffset":false,"isSlot":false,"src":"3749:6:38","valueSize":1}],"flags":["memory-safe"],"id":7558,"nodeType":"InlineAssembly","src":"3630:152:38"}]}]},"documentation":{"id":7541,"nodeType":"StructuredDocumentation","src":"3348:123:38","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":7561,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:38","nodeType":"FunctionDefinition","parameters":{"id":7546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7543,"mutability":"mutable","name":"a","nameLocation":"3500:1:38","nodeType":"VariableDeclaration","scope":7561,"src":"3492:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7542,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7545,"mutability":"mutable","name":"b","nameLocation":"3511:1:38","nodeType":"VariableDeclaration","scope":7561,"src":"3503:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7544,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:38"},"returnParameters":{"id":7551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7548,"mutability":"mutable","name":"success","nameLocation":"3542:7:38","nodeType":"VariableDeclaration","scope":7561,"src":"3537:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7547,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7550,"mutability":"mutable","name":"result","nameLocation":"3559:6:38","nodeType":"VariableDeclaration","scope":7561,"src":"3551:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7549,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:38"},"scope":9000,"src":"3476:322:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7590,"nodeType":"Block","src":"3989:122:38","statements":[{"assignments":[7572,7574],"declarations":[{"constant":false,"id":7572,"mutability":"mutable","name":"success","nameLocation":"4005:7:38","nodeType":"VariableDeclaration","scope":7590,"src":"4000:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7571,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7574,"mutability":"mutable","name":"result","nameLocation":"4022:6:38","nodeType":"VariableDeclaration","scope":7590,"src":"4014:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7573,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7579,"initialValue":{"arguments":[{"id":7576,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7564,"src":"4039:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7577,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7566,"src":"4042:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7575,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7454,"src":"4032:6:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":7578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:38"},{"expression":{"arguments":[{"id":7581,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7572,"src":"4069:7:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7582,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7574,"src":"4078:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":7585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:38","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7584,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:38","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":7583,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:38","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":7587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:38","memberName":"max","nodeType":"MemberAccess","src":"4086:17:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7580,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7668,"src":"4061:7:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":7588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7570,"id":7589,"nodeType":"Return","src":"4054:50:38"}]},"documentation":{"id":7562,"nodeType":"StructuredDocumentation","src":"3804:103:38","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":7591,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:38","nodeType":"FunctionDefinition","parameters":{"id":7567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7564,"mutability":"mutable","name":"a","nameLocation":"3943:1:38","nodeType":"VariableDeclaration","scope":7591,"src":"3935:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7563,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7566,"mutability":"mutable","name":"b","nameLocation":"3954:1:38","nodeType":"VariableDeclaration","scope":7591,"src":"3946:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7565,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:38"},"returnParameters":{"id":7570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7591,"src":"3980:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7568,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:38"},"scope":9000,"src":"3912:199:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7610,"nodeType":"Block","src":"4294:73:38","statements":[{"assignments":[null,7602],"declarations":[null,{"constant":false,"id":7602,"mutability":"mutable","name":"result","nameLocation":"4315:6:38","nodeType":"VariableDeclaration","scope":7610,"src":"4307:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7601,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7607,"initialValue":{"arguments":[{"id":7604,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7594,"src":"4332:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7605,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"4335:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7603,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7489,"src":"4325:6:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":7606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:38"},{"expression":{"id":7608,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"4354:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7600,"id":7609,"nodeType":"Return","src":"4347:13:38"}]},"documentation":{"id":7592,"nodeType":"StructuredDocumentation","src":"4117:95:38","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":7611,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:38","nodeType":"FunctionDefinition","parameters":{"id":7597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7594,"mutability":"mutable","name":"a","nameLocation":"4248:1:38","nodeType":"VariableDeclaration","scope":7611,"src":"4240:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7593,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7596,"mutability":"mutable","name":"b","nameLocation":"4259:1:38","nodeType":"VariableDeclaration","scope":7611,"src":"4251:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7595,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:38"},"returnParameters":{"id":7600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7611,"src":"4285:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7598,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:38"},"scope":9000,"src":"4217:150:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7640,"nodeType":"Block","src":"4564:122:38","statements":[{"assignments":[7622,7624],"declarations":[{"constant":false,"id":7622,"mutability":"mutable","name":"success","nameLocation":"4580:7:38","nodeType":"VariableDeclaration","scope":7640,"src":"4575:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7621,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7624,"mutability":"mutable","name":"result","nameLocation":"4597:6:38","nodeType":"VariableDeclaration","scope":7640,"src":"4589:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7623,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7629,"initialValue":{"arguments":[{"id":7626,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7614,"src":"4614:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7627,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7616,"src":"4617:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7625,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7519,"src":"4607:6:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":7628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:38"},{"expression":{"arguments":[{"id":7631,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7622,"src":"4644:7:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7632,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7624,"src":"4653:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":7635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:38","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7634,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:38","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":7633,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:38","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":7637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:38","memberName":"max","nodeType":"MemberAccess","src":"4661:17:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7630,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7668,"src":"4636:7:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":7638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7620,"id":7639,"nodeType":"Return","src":"4629:50:38"}]},"documentation":{"id":7612,"nodeType":"StructuredDocumentation","src":"4373:109:38","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":7641,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:38","nodeType":"FunctionDefinition","parameters":{"id":7617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7614,"mutability":"mutable","name":"a","nameLocation":"4518:1:38","nodeType":"VariableDeclaration","scope":7641,"src":"4510:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7613,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7616,"mutability":"mutable","name":"b","nameLocation":"4529:1:38","nodeType":"VariableDeclaration","scope":7641,"src":"4521:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7615,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:38"},"returnParameters":{"id":7620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7641,"src":"4555:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7618,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:38"},"scope":9000,"src":"4487:199:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7667,"nodeType":"Block","src":"5158:207:38","statements":[{"id":7666,"nodeType":"UncheckedBlock","src":"5168:191:38","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7653,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7648,"src":"5306:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7654,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7646,"src":"5312:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7655,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7648,"src":"5316:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7657,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":7660,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7644,"src":"5337:9:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7658,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10765,"src":"5321:8:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10765_$","typeString":"type(library SafeCast)"}},"id":7659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:38","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10764,"src":"5321:15:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7663,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7652,"id":7665,"nodeType":"Return","src":"5299:49:38"}]}]},"documentation":{"id":7642,"nodeType":"StructuredDocumentation","src":"4692:374:38","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":7668,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:38","nodeType":"FunctionDefinition","parameters":{"id":7649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7644,"mutability":"mutable","name":"condition","nameLocation":"5093:9:38","nodeType":"VariableDeclaration","scope":7668,"src":"5088:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7643,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7646,"mutability":"mutable","name":"a","nameLocation":"5112:1:38","nodeType":"VariableDeclaration","scope":7668,"src":"5104:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7645,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7648,"mutability":"mutable","name":"b","nameLocation":"5123:1:38","nodeType":"VariableDeclaration","scope":7668,"src":"5115:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7647,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:38"},"returnParameters":{"id":7652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7668,"src":"5149:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7650,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:38"},"scope":9000,"src":"5071:294:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7686,"nodeType":"Block","src":"5502:44:38","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7679,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7671,"src":"5527:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7680,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7673,"src":"5531:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7682,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7671,"src":"5534:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7683,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7673,"src":"5537:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7678,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7668,"src":"5519:7:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":7684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7677,"id":7685,"nodeType":"Return","src":"5512:27:38"}]},"documentation":{"id":7669,"nodeType":"StructuredDocumentation","src":"5371:59:38","text":" @dev Returns the largest of two numbers."},"id":7687,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:38","nodeType":"FunctionDefinition","parameters":{"id":7674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7671,"mutability":"mutable","name":"a","nameLocation":"5456:1:38","nodeType":"VariableDeclaration","scope":7687,"src":"5448:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7670,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7673,"mutability":"mutable","name":"b","nameLocation":"5467:1:38","nodeType":"VariableDeclaration","scope":7687,"src":"5459:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7672,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:38"},"returnParameters":{"id":7677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7687,"src":"5493:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7675,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:38"},"scope":9000,"src":"5435:111:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7705,"nodeType":"Block","src":"5684:44:38","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7698,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7690,"src":"5709:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7699,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7692,"src":"5713:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7701,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7690,"src":"5716:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7702,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7692,"src":"5719:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7697,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7668,"src":"5701:7:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":7703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7696,"id":7704,"nodeType":"Return","src":"5694:27:38"}]},"documentation":{"id":7688,"nodeType":"StructuredDocumentation","src":"5552:60:38","text":" @dev Returns the smallest of two numbers."},"id":7706,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:38","nodeType":"FunctionDefinition","parameters":{"id":7693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7690,"mutability":"mutable","name":"a","nameLocation":"5638:1:38","nodeType":"VariableDeclaration","scope":7706,"src":"5630:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7689,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7692,"mutability":"mutable","name":"b","nameLocation":"5649:1:38","nodeType":"VariableDeclaration","scope":7706,"src":"5641:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7691,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:38"},"returnParameters":{"id":7696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7706,"src":"5675:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7694,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:38"},"scope":9000,"src":"5617:111:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7728,"nodeType":"Block","src":"5912:82:38","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7716,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7709,"src":"5967:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7717,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7711,"src":"5971:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7719,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7720,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7709,"src":"5977:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7721,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7711,"src":"5981:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7723,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":7724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:38","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7715,"id":7727,"nodeType":"Return","src":"5959:28:38"}]},"documentation":{"id":7707,"nodeType":"StructuredDocumentation","src":"5734:102:38","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":7729,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:38","nodeType":"FunctionDefinition","parameters":{"id":7712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7709,"mutability":"mutable","name":"a","nameLocation":"5866:1:38","nodeType":"VariableDeclaration","scope":7729,"src":"5858:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7708,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7711,"mutability":"mutable","name":"b","nameLocation":"5877:1:38","nodeType":"VariableDeclaration","scope":7729,"src":"5869:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7710,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:38"},"returnParameters":{"id":7715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7729,"src":"5903:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7713,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:38"},"scope":9000,"src":"5841:153:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7769,"nodeType":"Block","src":"6286:633:38","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7739,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7734,"src":"6300:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7750,"nodeType":"IfStatement","src":"6296:150:38","trueBody":{"id":7749,"nodeType":"Block","src":"6308:138:38","statements":[{"expression":{"arguments":[{"expression":{"id":7745,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5711,"src":"6412:5:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$5711_$","typeString":"type(library Panic)"}},"id":7746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:38","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":5678,"src":"6412:22:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7742,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5711,"src":"6400:5:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$5711_$","typeString":"type(library Panic)"}},"id":7744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:38","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":5710,"src":"6400:11:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7748,"nodeType":"ExpressionStatement","src":"6400:35:38"}]}},{"id":7768,"nodeType":"UncheckedBlock","src":"6829:84:38","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7753,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7732,"src":"6876:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7751,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10765,"src":"6860:8:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10765_$","typeString":"type(library SafeCast)"}},"id":7752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:38","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10764,"src":"6860:15:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7757,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7732,"src":"6887:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7760,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7761,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7734,"src":"6896:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7765,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7738,"id":7767,"nodeType":"Return","src":"6853:49:38"}]}]},"documentation":{"id":7730,"nodeType":"StructuredDocumentation","src":"6000:210:38","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":7770,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:38","nodeType":"FunctionDefinition","parameters":{"id":7735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7732,"mutability":"mutable","name":"a","nameLocation":"6240:1:38","nodeType":"VariableDeclaration","scope":7770,"src":"6232:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7731,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7734,"mutability":"mutable","name":"b","nameLocation":"6251:1:38","nodeType":"VariableDeclaration","scope":7770,"src":"6243:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7733,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:38"},"returnParameters":{"id":7738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7737,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7770,"src":"6277:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7736,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:38"},"scope":9000,"src":"6215:704:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7905,"nodeType":"Block","src":"7340:3585:38","statements":[{"id":7904,"nodeType":"UncheckedBlock","src":"7350:3569:38","statements":[{"assignments":[7783,7785],"declarations":[{"constant":false,"id":7783,"mutability":"mutable","name":"high","nameLocation":"7383:4:38","nodeType":"VariableDeclaration","scope":7904,"src":"7375:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7782,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7785,"mutability":"mutable","name":"low","nameLocation":"7397:3:38","nodeType":"VariableDeclaration","scope":7904,"src":"7389:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7784,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7790,"initialValue":{"arguments":[{"id":7787,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7773,"src":"7411:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7788,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7775,"src":"7414:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7786,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7419,"src":"7404:6:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":7789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:38"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7791,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7783,"src":"7498:4:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7799,"nodeType":"IfStatement","src":"7494:365:38","trueBody":{"id":7798,"nodeType":"Block","src":"7509:350:38","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7794,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7785,"src":"7827:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7795,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7777,"src":"7833:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7781,"id":7797,"nodeType":"Return","src":"7820:24:38"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7800,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7777,"src":"7969:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7801,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7783,"src":"7984:4:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7818,"nodeType":"IfStatement","src":"7965:142:38","trueBody":{"id":7817,"nodeType":"Block","src":"7990:117:38","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7807,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7777,"src":"8028:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":7810,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5711,"src":"8046:5:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$5711_$","typeString":"type(library Panic)"}},"id":7811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:38","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":5678,"src":"8046:22:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7812,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5711,"src":"8070:5:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$5711_$","typeString":"type(library Panic)"}},"id":7813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:38","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":5674,"src":"8070:20:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7806,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7668,"src":"8020:7:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":7814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7803,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5711,"src":"8008:5:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$5711_$","typeString":"type(library Panic)"}},"id":7805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:38","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":5710,"src":"8008:11:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7816,"nodeType":"ExpressionStatement","src":"8008:84:38"}]}},{"assignments":[7820],"declarations":[{"constant":false,"id":7820,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:38","nodeType":"VariableDeclaration","scope":7904,"src":"8359:17:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7819,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7821,"nodeType":"VariableDeclarationStatement","src":"8359:17:38"},{"AST":{"nativeSrc":"8415:283:38","nodeType":"YulBlock","src":"8415:283:38","statements":[{"nativeSrc":"8484:38:38","nodeType":"YulAssignment","src":"8484:38:38","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:38","nodeType":"YulIdentifier","src":"8504:1:38"},{"name":"y","nativeSrc":"8507:1:38","nodeType":"YulIdentifier","src":"8507:1:38"},{"name":"denominator","nativeSrc":"8510:11:38","nodeType":"YulIdentifier","src":"8510:11:38"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:38","nodeType":"YulIdentifier","src":"8497:6:38"},"nativeSrc":"8497:25:38","nodeType":"YulFunctionCall","src":"8497:25:38"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:38","nodeType":"YulIdentifier","src":"8484:9:38"}]},{"nativeSrc":"8604:37:38","nodeType":"YulAssignment","src":"8604:37:38","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:38","nodeType":"YulIdentifier","src":"8616:4:38"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:38","nodeType":"YulIdentifier","src":"8625:9:38"},{"name":"low","nativeSrc":"8636:3:38","nodeType":"YulIdentifier","src":"8636:3:38"}],"functionName":{"name":"gt","nativeSrc":"8622:2:38","nodeType":"YulIdentifier","src":"8622:2:38"},"nativeSrc":"8622:18:38","nodeType":"YulFunctionCall","src":"8622:18:38"}],"functionName":{"name":"sub","nativeSrc":"8612:3:38","nodeType":"YulIdentifier","src":"8612:3:38"},"nativeSrc":"8612:29:38","nodeType":"YulFunctionCall","src":"8612:29:38"},"variableNames":[{"name":"high","nativeSrc":"8604:4:38","nodeType":"YulIdentifier","src":"8604:4:38"}]},{"nativeSrc":"8658:26:38","nodeType":"YulAssignment","src":"8658:26:38","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:38","nodeType":"YulIdentifier","src":"8669:3:38"},{"name":"remainder","nativeSrc":"8674:9:38","nodeType":"YulIdentifier","src":"8674:9:38"}],"functionName":{"name":"sub","nativeSrc":"8665:3:38","nodeType":"YulIdentifier","src":"8665:3:38"},"nativeSrc":"8665:19:38","nodeType":"YulFunctionCall","src":"8665:19:38"},"variableNames":[{"name":"low","nativeSrc":"8658:3:38","nodeType":"YulIdentifier","src":"8658:3:38"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7777,"isOffset":false,"isSlot":false,"src":"8510:11:38","valueSize":1},{"declaration":7783,"isOffset":false,"isSlot":false,"src":"8604:4:38","valueSize":1},{"declaration":7783,"isOffset":false,"isSlot":false,"src":"8616:4:38","valueSize":1},{"declaration":7785,"isOffset":false,"isSlot":false,"src":"8636:3:38","valueSize":1},{"declaration":7785,"isOffset":false,"isSlot":false,"src":"8658:3:38","valueSize":1},{"declaration":7785,"isOffset":false,"isSlot":false,"src":"8669:3:38","valueSize":1},{"declaration":7820,"isOffset":false,"isSlot":false,"src":"8484:9:38","valueSize":1},{"declaration":7820,"isOffset":false,"isSlot":false,"src":"8625:9:38","valueSize":1},{"declaration":7820,"isOffset":false,"isSlot":false,"src":"8674:9:38","valueSize":1},{"declaration":7773,"isOffset":false,"isSlot":false,"src":"8504:1:38","valueSize":1},{"declaration":7775,"isOffset":false,"isSlot":false,"src":"8507:1:38","valueSize":1}],"flags":["memory-safe"],"id":7822,"nodeType":"InlineAssembly","src":"8390:308:38"},{"assignments":[7824],"declarations":[{"constant":false,"id":7824,"mutability":"mutable","name":"twos","nameLocation":"8910:4:38","nodeType":"VariableDeclaration","scope":7904,"src":"8902:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7823,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7831,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7825,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7777,"src":"8917:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":7826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7827,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7777,"src":"8936:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7829,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:38"},{"AST":{"nativeSrc":"8987:359:38","nodeType":"YulBlock","src":"8987:359:38","statements":[{"nativeSrc":"9052:37:38","nodeType":"YulAssignment","src":"9052:37:38","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:38","nodeType":"YulIdentifier","src":"9071:11:38"},{"name":"twos","nativeSrc":"9084:4:38","nodeType":"YulIdentifier","src":"9084:4:38"}],"functionName":{"name":"div","nativeSrc":"9067:3:38","nodeType":"YulIdentifier","src":"9067:3:38"},"nativeSrc":"9067:22:38","nodeType":"YulFunctionCall","src":"9067:22:38"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:38","nodeType":"YulIdentifier","src":"9052:11:38"}]},{"nativeSrc":"9153:21:38","nodeType":"YulAssignment","src":"9153:21:38","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:38","nodeType":"YulIdentifier","src":"9164:3:38"},{"name":"twos","nativeSrc":"9169:4:38","nodeType":"YulIdentifier","src":"9169:4:38"}],"functionName":{"name":"div","nativeSrc":"9160:3:38","nodeType":"YulIdentifier","src":"9160:3:38"},"nativeSrc":"9160:14:38","nodeType":"YulFunctionCall","src":"9160:14:38"},"variableNames":[{"name":"low","nativeSrc":"9153:3:38","nodeType":"YulIdentifier","src":"9153:3:38"}]},{"nativeSrc":"9293:39:38","nodeType":"YulAssignment","src":"9293:39:38","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:38","nodeType":"YulLiteral","src":"9313:1:38","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:38","nodeType":"YulIdentifier","src":"9316:4:38"}],"functionName":{"name":"sub","nativeSrc":"9309:3:38","nodeType":"YulIdentifier","src":"9309:3:38"},"nativeSrc":"9309:12:38","nodeType":"YulFunctionCall","src":"9309:12:38"},{"name":"twos","nativeSrc":"9323:4:38","nodeType":"YulIdentifier","src":"9323:4:38"}],"functionName":{"name":"div","nativeSrc":"9305:3:38","nodeType":"YulIdentifier","src":"9305:3:38"},"nativeSrc":"9305:23:38","nodeType":"YulFunctionCall","src":"9305:23:38"},{"kind":"number","nativeSrc":"9330:1:38","nodeType":"YulLiteral","src":"9330:1:38","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:38","nodeType":"YulIdentifier","src":"9301:3:38"},"nativeSrc":"9301:31:38","nodeType":"YulFunctionCall","src":"9301:31:38"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:38","nodeType":"YulIdentifier","src":"9293:4:38"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7777,"isOffset":false,"isSlot":false,"src":"9052:11:38","valueSize":1},{"declaration":7777,"isOffset":false,"isSlot":false,"src":"9071:11:38","valueSize":1},{"declaration":7785,"isOffset":false,"isSlot":false,"src":"9153:3:38","valueSize":1},{"declaration":7785,"isOffset":false,"isSlot":false,"src":"9164:3:38","valueSize":1},{"declaration":7824,"isOffset":false,"isSlot":false,"src":"9084:4:38","valueSize":1},{"declaration":7824,"isOffset":false,"isSlot":false,"src":"9169:4:38","valueSize":1},{"declaration":7824,"isOffset":false,"isSlot":false,"src":"9293:4:38","valueSize":1},{"declaration":7824,"isOffset":false,"isSlot":false,"src":"9316:4:38","valueSize":1},{"declaration":7824,"isOffset":false,"isSlot":false,"src":"9323:4:38","valueSize":1}],"flags":["memory-safe"],"id":7832,"nodeType":"InlineAssembly","src":"8962:384:38"},{"expression":{"id":7837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7833,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7785,"src":"9409:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7834,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7783,"src":"9416:4:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7835,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7824,"src":"9423:4:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7838,"nodeType":"ExpressionStatement","src":"9409:18:38"},{"assignments":[7840],"declarations":[{"constant":false,"id":7840,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:38","nodeType":"VariableDeclaration","scope":7904,"src":"9762:15:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7839,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7847,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":7841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:38","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7842,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7777,"src":"9785:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7844,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":7845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:38","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:38"},{"expression":{"id":7854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7848,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7840,"src":"10018:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":7849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:38","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7850,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7777,"src":"10033:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7851,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7840,"src":"10047:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7855,"nodeType":"ExpressionStatement","src":"10018:36:38"},{"expression":{"id":7862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7856,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7840,"src":"10088:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":7857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:38","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7858,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7777,"src":"10103:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7859,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7840,"src":"10117:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7863,"nodeType":"ExpressionStatement","src":"10088:36:38"},{"expression":{"id":7870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7864,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7840,"src":"10160:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":7865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:38","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7866,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7777,"src":"10175:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7867,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7840,"src":"10189:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7871,"nodeType":"ExpressionStatement","src":"10160:36:38"},{"expression":{"id":7878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7872,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7840,"src":"10231:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":7873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:38","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7874,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7777,"src":"10246:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7875,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7840,"src":"10260:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7879,"nodeType":"ExpressionStatement","src":"10231:36:38"},{"expression":{"id":7886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7880,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7840,"src":"10304:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":7881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:38","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7882,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7777,"src":"10319:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7883,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7840,"src":"10333:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7887,"nodeType":"ExpressionStatement","src":"10304:36:38"},{"expression":{"id":7894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7888,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7840,"src":"10378:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":7889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:38","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7890,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7777,"src":"10393:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7891,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7840,"src":"10407:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7895,"nodeType":"ExpressionStatement","src":"10378:36:38"},{"expression":{"id":7900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7896,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7780,"src":"10859:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7897,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7785,"src":"10868:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7898,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7840,"src":"10874:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7901,"nodeType":"ExpressionStatement","src":"10859:22:38"},{"expression":{"id":7902,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7780,"src":"10902:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7781,"id":7903,"nodeType":"Return","src":"10895:13:38"}]}]},"documentation":{"id":7771,"nodeType":"StructuredDocumentation","src":"6925:312:38","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":7906,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:38","nodeType":"FunctionDefinition","parameters":{"id":7778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7773,"mutability":"mutable","name":"x","nameLocation":"7266:1:38","nodeType":"VariableDeclaration","scope":7906,"src":"7258:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7772,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7775,"mutability":"mutable","name":"y","nameLocation":"7277:1:38","nodeType":"VariableDeclaration","scope":7906,"src":"7269:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7774,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7777,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:38","nodeType":"VariableDeclaration","scope":7906,"src":"7280:19:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7776,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:38"},"returnParameters":{"id":7781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7780,"mutability":"mutable","name":"result","nameLocation":"7332:6:38","nodeType":"VariableDeclaration","scope":7906,"src":"7324:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7779,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:38"},"scope":9000,"src":"7242:3683:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7942,"nodeType":"Block","src":"11164:128:38","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7922,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7909,"src":"11188:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7923,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"11191:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7924,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"11194:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7921,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[7906,7943],"referencedDeclaration":7906,"src":"11181:6:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":7925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7929,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7916,"src":"11242:8:38","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7391","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$7391","typeString":"enum Math.Rounding"}],"id":7928,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8999,"src":"11225:16:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$7391_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7932,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7909,"src":"11262:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7933,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"11265:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7934,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"11268:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7931,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:38","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":7935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7926,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10765,"src":"11209:8:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10765_$","typeString":"type(library SafeCast)"}},"id":7927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:38","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10764,"src":"11209:15:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7920,"id":7941,"nodeType":"Return","src":"11174:111:38"}]},"documentation":{"id":7907,"nodeType":"StructuredDocumentation","src":"10931:118:38","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":7943,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:38","nodeType":"FunctionDefinition","parameters":{"id":7917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7909,"mutability":"mutable","name":"x","nameLocation":"11078:1:38","nodeType":"VariableDeclaration","scope":7943,"src":"11070:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7908,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7911,"mutability":"mutable","name":"y","nameLocation":"11089:1:38","nodeType":"VariableDeclaration","scope":7943,"src":"11081:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7910,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7913,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:38","nodeType":"VariableDeclaration","scope":7943,"src":"11092:19:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7912,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7916,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:38","nodeType":"VariableDeclaration","scope":7943,"src":"11113:17:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7391","typeString":"enum Math.Rounding"},"typeName":{"id":7915,"nodeType":"UserDefinedTypeName","pathNode":{"id":7914,"name":"Rounding","nameLocations":["11113:8:38"],"nodeType":"IdentifierPath","referencedDeclaration":7391,"src":"11113:8:38"},"referencedDeclaration":7391,"src":"11113:8:38","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7391","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:38"},"returnParameters":{"id":7920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7943,"src":"11155:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7918,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:38"},"scope":9000,"src":"11054:238:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7992,"nodeType":"Block","src":"11500:245:38","statements":[{"id":7991,"nodeType":"UncheckedBlock","src":"11510:229:38","statements":[{"assignments":[7956,7958],"declarations":[{"constant":false,"id":7956,"mutability":"mutable","name":"high","nameLocation":"11543:4:38","nodeType":"VariableDeclaration","scope":7991,"src":"11535:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7955,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7958,"mutability":"mutable","name":"low","nameLocation":"11557:3:38","nodeType":"VariableDeclaration","scope":7991,"src":"11549:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7957,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7963,"initialValue":{"arguments":[{"id":7960,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7946,"src":"11571:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7961,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7948,"src":"11574:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7959,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7419,"src":"11564:6:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":7962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:38"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7964,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7956,"src":"11594:4:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":7966,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7950,"src":"11607:1:38","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7977,"nodeType":"IfStatement","src":"11590:86:38","trueBody":{"id":7976,"nodeType":"Block","src":"11610:66:38","statements":[{"expression":{"arguments":[{"expression":{"id":7972,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5711,"src":"11640:5:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$5711_$","typeString":"type(library Panic)"}},"id":7973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:38","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":5674,"src":"11640:20:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7969,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5711,"src":"11628:5:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$5711_$","typeString":"type(library Panic)"}},"id":7971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:38","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":5710,"src":"11628:11:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7975,"nodeType":"ExpressionStatement","src":"11628:33:38"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7978,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7956,"src":"11697:4:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":7981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":7979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:38","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7980,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7950,"src":"11712:1:38","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:38","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":7982,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:38","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7984,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7985,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7958,"src":"11719:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7986,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7950,"src":"11726:1:38","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7988,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7954,"id":7990,"nodeType":"Return","src":"11689:39:38"}]}]},"documentation":{"id":7944,"nodeType":"StructuredDocumentation","src":"11298:111:38","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":7993,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:38","nodeType":"FunctionDefinition","parameters":{"id":7951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7946,"mutability":"mutable","name":"x","nameLocation":"11438:1:38","nodeType":"VariableDeclaration","scope":7993,"src":"11430:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7945,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7948,"mutability":"mutable","name":"y","nameLocation":"11449:1:38","nodeType":"VariableDeclaration","scope":7993,"src":"11441:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7947,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7950,"mutability":"mutable","name":"n","nameLocation":"11458:1:38","nodeType":"VariableDeclaration","scope":7993,"src":"11452:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7949,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:38","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:38"},"returnParameters":{"id":7954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7953,"mutability":"mutable","name":"result","nameLocation":"11492:6:38","nodeType":"VariableDeclaration","scope":7993,"src":"11484:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7952,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:38"},"scope":9000,"src":"11414:331:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8031,"nodeType":"Block","src":"11963:113:38","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8009,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7996,"src":"11987:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8010,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7998,"src":"11990:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8011,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8000,"src":"11993:1:38","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":8008,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[7993,8032],"referencedDeclaration":7993,"src":"11980:6:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":8012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8016,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8003,"src":"12031:8:38","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7391","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$7391","typeString":"enum Math.Rounding"}],"id":8015,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8999,"src":"12014:16:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$7391_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":8017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8019,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7996,"src":"12051:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8020,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7998,"src":"12054:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":8021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":8022,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8000,"src":"12062:1:38","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8018,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:38","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":8024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8013,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10765,"src":"11998:8:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10765_$","typeString":"type(library SafeCast)"}},"id":8014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:38","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10764,"src":"11998:15:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8007,"id":8030,"nodeType":"Return","src":"11973:96:38"}]},"documentation":{"id":7994,"nodeType":"StructuredDocumentation","src":"11751:109:38","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":8032,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:38","nodeType":"FunctionDefinition","parameters":{"id":8004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7996,"mutability":"mutable","name":"x","nameLocation":"11889:1:38","nodeType":"VariableDeclaration","scope":8032,"src":"11881:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7995,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7998,"mutability":"mutable","name":"y","nameLocation":"11900:1:38","nodeType":"VariableDeclaration","scope":8032,"src":"11892:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7997,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8000,"mutability":"mutable","name":"n","nameLocation":"11909:1:38","nodeType":"VariableDeclaration","scope":8032,"src":"11903:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7999,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:38","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":8003,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:38","nodeType":"VariableDeclaration","scope":8032,"src":"11912:17:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7391","typeString":"enum Math.Rounding"},"typeName":{"id":8002,"nodeType":"UserDefinedTypeName","pathNode":{"id":8001,"name":"Rounding","nameLocations":["11912:8:38"],"nodeType":"IdentifierPath","referencedDeclaration":7391,"src":"11912:8:38"},"referencedDeclaration":7391,"src":"11912:8:38","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7391","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:38"},"returnParameters":{"id":8007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8032,"src":"11954:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8005,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:38"},"scope":9000,"src":"11865:211:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8128,"nodeType":"Block","src":"12710:1849:38","statements":[{"id":8127,"nodeType":"UncheckedBlock","src":"12720:1833:38","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8042,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"12748:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8047,"nodeType":"IfStatement","src":"12744:20:38","trueBody":{"expression":{"hexValue":"30","id":8045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":8041,"id":8046,"nodeType":"Return","src":"12756:8:38"}},{"assignments":[8049],"declarations":[{"constant":false,"id":8049,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:38","nodeType":"VariableDeclaration","scope":8127,"src":"13235:17:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8048,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8053,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8050,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8035,"src":"13255:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":8051,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"13259:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:38"},{"assignments":[8055],"declarations":[{"constant":false,"id":8055,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:38","nodeType":"VariableDeclaration","scope":8127,"src":"13274:11:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8054,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8057,"initialValue":{"id":8056,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"13288:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:38"},{"assignments":[8059],"declarations":[{"constant":false,"id":8059,"mutability":"mutable","name":"x","nameLocation":"13432:1:38","nodeType":"VariableDeclaration","scope":8127,"src":"13425:8:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8058,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:38","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":8061,"initialValue":{"hexValue":"30","id":8060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:38"},{"assignments":[8063],"declarations":[{"constant":false,"id":8063,"mutability":"mutable","name":"y","nameLocation":"13458:1:38","nodeType":"VariableDeclaration","scope":8127,"src":"13451:8:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8062,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:38","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":8065,"initialValue":{"hexValue":"31","id":8064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:38"},{"body":{"id":8102,"nodeType":"Block","src":"13501:882:38","statements":[{"assignments":[8070],"declarations":[{"constant":false,"id":8070,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:38","nodeType":"VariableDeclaration","scope":8102,"src":"13519:16:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8069,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8074,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8071,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8055,"src":"13538:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":8072,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8049,"src":"13544:9:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:38"},{"expression":{"id":8085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":8075,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8055,"src":"13573:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8076,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8049,"src":"13578:9:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8077,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:38","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":8078,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8049,"src":"13678:9:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8079,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8055,"src":"13923:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8080,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8049,"src":"13929:9:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8081,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8070,"src":"13941:8:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8084,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:38","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:38","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8086,"nodeType":"ExpressionStatement","src":"13572:395:38"},{"expression":{"id":8100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":8087,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8059,"src":"13987:1:38","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":8088,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8063,"src":"13990:1:38","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8089,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:38","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":8090,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8063,"src":"14072:1:38","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8091,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8059,"src":"14326:1:38","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8092,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8063,"src":"14330:1:38","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":8095,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8070,"src":"14341:8:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:38","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8093,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:38","typeDescriptions":{}}},"id":8096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:38","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:38","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8099,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:38","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:38","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8101,"nodeType":"ExpressionStatement","src":"13986:382:38"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8066,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8049,"src":"13485:9:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":8067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8103,"nodeType":"WhileStatement","src":"13478:905:38"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8104,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8055,"src":"14401:3:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":8105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8109,"nodeType":"IfStatement","src":"14397:22:38","trueBody":{"expression":{"hexValue":"30","id":8107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":8041,"id":8108,"nodeType":"Return","src":"14411:8:38"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8111,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8059,"src":"14470:1:38","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":8112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8114,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"14477:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":8118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:38","subExpression":{"id":8117,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8059,"src":"14490:1:38","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:38","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8115,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:38","typeDescriptions":{}}},"id":8119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":8123,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8059,"src":"14502:1:38","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:38","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8121,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:38","typeDescriptions":{}}},"id":8124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8110,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7668,"src":"14462:7:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":8125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8041,"id":8126,"nodeType":"Return","src":"14455:50:38"}]}]},"documentation":{"id":8033,"nodeType":"StructuredDocumentation","src":"12082:553:38","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":8129,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:38","nodeType":"FunctionDefinition","parameters":{"id":8038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8035,"mutability":"mutable","name":"a","nameLocation":"12664:1:38","nodeType":"VariableDeclaration","scope":8129,"src":"12656:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8034,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8037,"mutability":"mutable","name":"n","nameLocation":"12675:1:38","nodeType":"VariableDeclaration","scope":8129,"src":"12667:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8036,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:38"},"returnParameters":{"id":8041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8040,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8129,"src":"12701:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8039,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:38"},"scope":9000,"src":"12640:1919:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8149,"nodeType":"Block","src":"15159:82:38","statements":[{"id":8148,"nodeType":"UncheckedBlock","src":"15169:66:38","statements":[{"expression":{"arguments":[{"id":8141,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8132,"src":"15212:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8142,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8134,"src":"15215:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":8143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:38","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8145,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8134,"src":"15222:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8139,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9000,"src":"15200:4:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$9000_$","typeString":"type(library Math)"}},"id":8140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:38","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":8186,"src":"15200:11:38","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":8146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8138,"id":8147,"nodeType":"Return","src":"15193:31:38"}]}]},"documentation":{"id":8130,"nodeType":"StructuredDocumentation","src":"14565:514:38","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":8150,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:38","nodeType":"FunctionDefinition","parameters":{"id":8135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8132,"mutability":"mutable","name":"a","nameLocation":"15113:1:38","nodeType":"VariableDeclaration","scope":8150,"src":"15105:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8131,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8134,"mutability":"mutable","name":"p","nameLocation":"15124:1:38","nodeType":"VariableDeclaration","scope":8150,"src":"15116:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8133,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:38"},"returnParameters":{"id":8138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8150,"src":"15150:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8136,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:38"},"scope":9000,"src":"15084:157:38","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8185,"nodeType":"Block","src":"16011:174:38","statements":[{"assignments":[8163,8165],"declarations":[{"constant":false,"id":8163,"mutability":"mutable","name":"success","nameLocation":"16027:7:38","nodeType":"VariableDeclaration","scope":8185,"src":"16022:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8162,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8165,"mutability":"mutable","name":"result","nameLocation":"16044:6:38","nodeType":"VariableDeclaration","scope":8185,"src":"16036:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8164,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8171,"initialValue":{"arguments":[{"id":8167,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8153,"src":"16064:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8168,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"16067:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8169,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8157,"src":"16070:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8166,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[8210,8292],"referencedDeclaration":8210,"src":"16054:9:38","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":8170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:38"},{"condition":{"id":8173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:38","subExpression":{"id":8172,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8163,"src":"16087:7:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8182,"nodeType":"IfStatement","src":"16082:74:38","trueBody":{"id":8181,"nodeType":"Block","src":"16096:60:38","statements":[{"expression":{"arguments":[{"expression":{"id":8177,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5711,"src":"16122:5:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$5711_$","typeString":"type(library Panic)"}},"id":8178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:38","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":5678,"src":"16122:22:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8174,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5711,"src":"16110:5:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$5711_$","typeString":"type(library Panic)"}},"id":8176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:38","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":5710,"src":"16110:11:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":8179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8180,"nodeType":"ExpressionStatement","src":"16110:35:38"}]}},{"expression":{"id":8183,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8165,"src":"16172:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8161,"id":8184,"nodeType":"Return","src":"16165:13:38"}]},"documentation":{"id":8151,"nodeType":"StructuredDocumentation","src":"15247:678:38","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":8186,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:38","nodeType":"FunctionDefinition","parameters":{"id":8158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8153,"mutability":"mutable","name":"b","nameLocation":"15954:1:38","nodeType":"VariableDeclaration","scope":8186,"src":"15946:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8152,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8155,"mutability":"mutable","name":"e","nameLocation":"15965:1:38","nodeType":"VariableDeclaration","scope":8186,"src":"15957:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8154,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8157,"mutability":"mutable","name":"m","nameLocation":"15976:1:38","nodeType":"VariableDeclaration","scope":8186,"src":"15968:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8156,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:38"},"returnParameters":{"id":8161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8186,"src":"16002:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8159,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:38"},"scope":9000,"src":"15930:255:38","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8209,"nodeType":"Block","src":"17039:1493:38","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8200,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8193,"src":"17053:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8207,"nodeType":"IfStatement","src":"17049:29:38","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":8203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":8204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":8205,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:38","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":8199,"id":8206,"nodeType":"Return","src":"17061:17:38"}},{"AST":{"nativeSrc":"17113:1413:38","nodeType":"YulBlock","src":"17113:1413:38","statements":[{"nativeSrc":"17127:22:38","nodeType":"YulVariableDeclaration","src":"17127:22:38","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:38","nodeType":"YulLiteral","src":"17144:4:38","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:38","nodeType":"YulIdentifier","src":"17138:5:38"},"nativeSrc":"17138:11:38","nodeType":"YulFunctionCall","src":"17138:11:38"},"variables":[{"name":"ptr","nativeSrc":"17131:3:38","nodeType":"YulTypedName","src":"17131:3:38","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:38","nodeType":"YulIdentifier","src":"18057:3:38"},{"kind":"number","nativeSrc":"18062:4:38","nodeType":"YulLiteral","src":"18062:4:38","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:38","nodeType":"YulIdentifier","src":"18050:6:38"},"nativeSrc":"18050:17:38","nodeType":"YulFunctionCall","src":"18050:17:38"},"nativeSrc":"18050:17:38","nodeType":"YulExpressionStatement","src":"18050:17:38"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:38","nodeType":"YulIdentifier","src":"18091:3:38"},{"kind":"number","nativeSrc":"18096:4:38","nodeType":"YulLiteral","src":"18096:4:38","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:38","nodeType":"YulIdentifier","src":"18087:3:38"},"nativeSrc":"18087:14:38","nodeType":"YulFunctionCall","src":"18087:14:38"},{"kind":"number","nativeSrc":"18103:4:38","nodeType":"YulLiteral","src":"18103:4:38","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:38","nodeType":"YulIdentifier","src":"18080:6:38"},"nativeSrc":"18080:28:38","nodeType":"YulFunctionCall","src":"18080:28:38"},"nativeSrc":"18080:28:38","nodeType":"YulExpressionStatement","src":"18080:28:38"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:38","nodeType":"YulIdentifier","src":"18132:3:38"},{"kind":"number","nativeSrc":"18137:4:38","nodeType":"YulLiteral","src":"18137:4:38","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:38","nodeType":"YulIdentifier","src":"18128:3:38"},"nativeSrc":"18128:14:38","nodeType":"YulFunctionCall","src":"18128:14:38"},{"kind":"number","nativeSrc":"18144:4:38","nodeType":"YulLiteral","src":"18144:4:38","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:38","nodeType":"YulIdentifier","src":"18121:6:38"},"nativeSrc":"18121:28:38","nodeType":"YulFunctionCall","src":"18121:28:38"},"nativeSrc":"18121:28:38","nodeType":"YulExpressionStatement","src":"18121:28:38"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:38","nodeType":"YulIdentifier","src":"18173:3:38"},{"kind":"number","nativeSrc":"18178:4:38","nodeType":"YulLiteral","src":"18178:4:38","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:38","nodeType":"YulIdentifier","src":"18169:3:38"},"nativeSrc":"18169:14:38","nodeType":"YulFunctionCall","src":"18169:14:38"},{"name":"b","nativeSrc":"18185:1:38","nodeType":"YulIdentifier","src":"18185:1:38"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:38","nodeType":"YulIdentifier","src":"18162:6:38"},"nativeSrc":"18162:25:38","nodeType":"YulFunctionCall","src":"18162:25:38"},"nativeSrc":"18162:25:38","nodeType":"YulExpressionStatement","src":"18162:25:38"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:38","nodeType":"YulIdentifier","src":"18211:3:38"},{"kind":"number","nativeSrc":"18216:4:38","nodeType":"YulLiteral","src":"18216:4:38","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:38","nodeType":"YulIdentifier","src":"18207:3:38"},"nativeSrc":"18207:14:38","nodeType":"YulFunctionCall","src":"18207:14:38"},{"name":"e","nativeSrc":"18223:1:38","nodeType":"YulIdentifier","src":"18223:1:38"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:38","nodeType":"YulIdentifier","src":"18200:6:38"},"nativeSrc":"18200:25:38","nodeType":"YulFunctionCall","src":"18200:25:38"},"nativeSrc":"18200:25:38","nodeType":"YulExpressionStatement","src":"18200:25:38"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:38","nodeType":"YulIdentifier","src":"18249:3:38"},{"kind":"number","nativeSrc":"18254:4:38","nodeType":"YulLiteral","src":"18254:4:38","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:38","nodeType":"YulIdentifier","src":"18245:3:38"},"nativeSrc":"18245:14:38","nodeType":"YulFunctionCall","src":"18245:14:38"},{"name":"m","nativeSrc":"18261:1:38","nodeType":"YulIdentifier","src":"18261:1:38"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:38","nodeType":"YulIdentifier","src":"18238:6:38"},"nativeSrc":"18238:25:38","nodeType":"YulFunctionCall","src":"18238:25:38"},"nativeSrc":"18238:25:38","nodeType":"YulExpressionStatement","src":"18238:25:38"},{"nativeSrc":"18425:57:38","nodeType":"YulAssignment","src":"18425:57:38","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:38","nodeType":"YulIdentifier","src":"18447:3:38"},"nativeSrc":"18447:5:38","nodeType":"YulFunctionCall","src":"18447:5:38"},{"kind":"number","nativeSrc":"18454:4:38","nodeType":"YulLiteral","src":"18454:4:38","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:38","nodeType":"YulIdentifier","src":"18460:3:38"},{"kind":"number","nativeSrc":"18465:4:38","nodeType":"YulLiteral","src":"18465:4:38","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:38","nodeType":"YulLiteral","src":"18471:4:38","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:38","nodeType":"YulLiteral","src":"18477:4:38","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:38","nodeType":"YulIdentifier","src":"18436:10:38"},"nativeSrc":"18436:46:38","nodeType":"YulFunctionCall","src":"18436:46:38"},"variableNames":[{"name":"success","nativeSrc":"18425:7:38","nodeType":"YulIdentifier","src":"18425:7:38"}]},{"nativeSrc":"18495:21:38","nodeType":"YulAssignment","src":"18495:21:38","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:38","nodeType":"YulLiteral","src":"18511:4:38","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:38","nodeType":"YulIdentifier","src":"18505:5:38"},"nativeSrc":"18505:11:38","nodeType":"YulFunctionCall","src":"18505:11:38"},"variableNames":[{"name":"result","nativeSrc":"18495:6:38","nodeType":"YulIdentifier","src":"18495:6:38"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8189,"isOffset":false,"isSlot":false,"src":"18185:1:38","valueSize":1},{"declaration":8191,"isOffset":false,"isSlot":false,"src":"18223:1:38","valueSize":1},{"declaration":8193,"isOffset":false,"isSlot":false,"src":"18261:1:38","valueSize":1},{"declaration":8198,"isOffset":false,"isSlot":false,"src":"18495:6:38","valueSize":1},{"declaration":8196,"isOffset":false,"isSlot":false,"src":"18425:7:38","valueSize":1}],"flags":["memory-safe"],"id":8208,"nodeType":"InlineAssembly","src":"17088:1438:38"}]},"documentation":{"id":8187,"nodeType":"StructuredDocumentation","src":"16191:738:38","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":8210,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:38","nodeType":"FunctionDefinition","parameters":{"id":8194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8189,"mutability":"mutable","name":"b","nameLocation":"16961:1:38","nodeType":"VariableDeclaration","scope":8210,"src":"16953:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8188,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8191,"mutability":"mutable","name":"e","nameLocation":"16972:1:38","nodeType":"VariableDeclaration","scope":8210,"src":"16964:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8190,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8193,"mutability":"mutable","name":"m","nameLocation":"16983:1:38","nodeType":"VariableDeclaration","scope":8210,"src":"16975:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8192,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:38"},"returnParameters":{"id":8199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8196,"mutability":"mutable","name":"success","nameLocation":"17014:7:38","nodeType":"VariableDeclaration","scope":8210,"src":"17009:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8195,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8198,"mutability":"mutable","name":"result","nameLocation":"17031:6:38","nodeType":"VariableDeclaration","scope":8210,"src":"17023:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8197,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:38"},"scope":9000,"src":"16934:1598:38","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8245,"nodeType":"Block","src":"18729:179:38","statements":[{"assignments":[8223,8225],"declarations":[{"constant":false,"id":8223,"mutability":"mutable","name":"success","nameLocation":"18745:7:38","nodeType":"VariableDeclaration","scope":8245,"src":"18740:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8222,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8225,"mutability":"mutable","name":"result","nameLocation":"18767:6:38","nodeType":"VariableDeclaration","scope":8245,"src":"18754:19:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8224,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:38","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":8231,"initialValue":{"arguments":[{"id":8227,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8213,"src":"18787:1:38","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":8228,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8215,"src":"18790:1:38","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":8229,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8217,"src":"18793:1:38","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8226,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[8210,8292],"referencedDeclaration":8292,"src":"18777:9:38","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":8230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:38"},{"condition":{"id":8233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:38","subExpression":{"id":8232,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8223,"src":"18810:7:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8242,"nodeType":"IfStatement","src":"18805:74:38","trueBody":{"id":8241,"nodeType":"Block","src":"18819:60:38","statements":[{"expression":{"arguments":[{"expression":{"id":8237,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5711,"src":"18845:5:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$5711_$","typeString":"type(library Panic)"}},"id":8238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:38","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":5678,"src":"18845:22:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8234,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5711,"src":"18833:5:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$5711_$","typeString":"type(library Panic)"}},"id":8236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:38","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":5710,"src":"18833:11:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":8239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8240,"nodeType":"ExpressionStatement","src":"18833:35:38"}]}},{"expression":{"id":8243,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8225,"src":"18895:6:38","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":8221,"id":8244,"nodeType":"Return","src":"18888:13:38"}]},"documentation":{"id":8211,"nodeType":"StructuredDocumentation","src":"18538:85:38","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":8246,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:38","nodeType":"FunctionDefinition","parameters":{"id":8218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8213,"mutability":"mutable","name":"b","nameLocation":"18657:1:38","nodeType":"VariableDeclaration","scope":8246,"src":"18644:14:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8212,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:38","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8215,"mutability":"mutable","name":"e","nameLocation":"18673:1:38","nodeType":"VariableDeclaration","scope":8246,"src":"18660:14:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8214,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:38","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8217,"mutability":"mutable","name":"m","nameLocation":"18689:1:38","nodeType":"VariableDeclaration","scope":8246,"src":"18676:14:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8216,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:38","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:38"},"returnParameters":{"id":8221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8246,"src":"18715:12:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8219,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:38","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:38"},"scope":9000,"src":"18628:280:38","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8291,"nodeType":"Block","src":"19162:771:38","statements":[{"condition":{"arguments":[{"id":8261,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8253,"src":"19187:1:38","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8260,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8325,"src":"19176:10:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":8262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8270,"nodeType":"IfStatement","src":"19172:47:38","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":8263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":8266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:38","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":8264,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:38","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":8267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":8268,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:38","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":8259,"id":8269,"nodeType":"Return","src":"19191:28:38"}},{"assignments":[8272],"declarations":[{"constant":false,"id":8272,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:38","nodeType":"VariableDeclaration","scope":8291,"src":"19230:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8271,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8275,"initialValue":{"expression":{"id":8273,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8253,"src":"19245:1:38","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:38","memberName":"length","nodeType":"MemberAccess","src":"19245:8:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:38"},{"expression":{"id":8288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8276,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8258,"src":"19335:6:38","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":8279,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8249,"src":"19361:1:38","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:38","memberName":"length","nodeType":"MemberAccess","src":"19361:8:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8281,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8251,"src":"19371:1:38","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:38","memberName":"length","nodeType":"MemberAccess","src":"19371:8:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8283,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8272,"src":"19381:4:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8284,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8249,"src":"19387:1:38","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":8285,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8251,"src":"19390:1:38","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":8286,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8253,"src":"19393:1:38","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":8277,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:38","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:38","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:38","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:38","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8289,"nodeType":"ExpressionStatement","src":"19335:60:38"},{"AST":{"nativeSrc":"19431:496:38","nodeType":"YulBlock","src":"19431:496:38","statements":[{"nativeSrc":"19445:32:38","nodeType":"YulVariableDeclaration","src":"19445:32:38","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:38","nodeType":"YulIdentifier","src":"19464:6:38"},{"kind":"number","nativeSrc":"19472:4:38","nodeType":"YulLiteral","src":"19472:4:38","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:38","nodeType":"YulIdentifier","src":"19460:3:38"},"nativeSrc":"19460:17:38","nodeType":"YulFunctionCall","src":"19460:17:38"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:38","nodeType":"YulTypedName","src":"19449:7:38","type":""}]},{"nativeSrc":"19567:73:38","nodeType":"YulAssignment","src":"19567:73:38","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:38","nodeType":"YulIdentifier","src":"19589:3:38"},"nativeSrc":"19589:5:38","nodeType":"YulFunctionCall","src":"19589:5:38"},{"kind":"number","nativeSrc":"19596:4:38","nodeType":"YulLiteral","src":"19596:4:38","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:38","nodeType":"YulIdentifier","src":"19602:7:38"},{"arguments":[{"name":"result","nativeSrc":"19617:6:38","nodeType":"YulIdentifier","src":"19617:6:38"}],"functionName":{"name":"mload","nativeSrc":"19611:5:38","nodeType":"YulIdentifier","src":"19611:5:38"},"nativeSrc":"19611:13:38","nodeType":"YulFunctionCall","src":"19611:13:38"},{"name":"dataPtr","nativeSrc":"19626:7:38","nodeType":"YulIdentifier","src":"19626:7:38"},{"name":"mLen","nativeSrc":"19635:4:38","nodeType":"YulIdentifier","src":"19635:4:38"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:38","nodeType":"YulIdentifier","src":"19578:10:38"},"nativeSrc":"19578:62:38","nodeType":"YulFunctionCall","src":"19578:62:38"},"variableNames":[{"name":"success","nativeSrc":"19567:7:38","nodeType":"YulIdentifier","src":"19567:7:38"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:38","nodeType":"YulIdentifier","src":"19796:6:38"},{"name":"mLen","nativeSrc":"19804:4:38","nodeType":"YulIdentifier","src":"19804:4:38"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:38","nodeType":"YulIdentifier","src":"19789:6:38"},"nativeSrc":"19789:20:38","nodeType":"YulFunctionCall","src":"19789:20:38"},"nativeSrc":"19789:20:38","nodeType":"YulExpressionStatement","src":"19789:20:38"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:38","nodeType":"YulLiteral","src":"19892:4:38","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:38","nodeType":"YulIdentifier","src":"19902:7:38"},{"name":"mLen","nativeSrc":"19911:4:38","nodeType":"YulIdentifier","src":"19911:4:38"}],"functionName":{"name":"add","nativeSrc":"19898:3:38","nodeType":"YulIdentifier","src":"19898:3:38"},"nativeSrc":"19898:18:38","nodeType":"YulFunctionCall","src":"19898:18:38"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:38","nodeType":"YulIdentifier","src":"19885:6:38"},"nativeSrc":"19885:32:38","nodeType":"YulFunctionCall","src":"19885:32:38"},"nativeSrc":"19885:32:38","nodeType":"YulExpressionStatement","src":"19885:32:38"}]},"evmVersion":"paris","externalReferences":[{"declaration":8272,"isOffset":false,"isSlot":false,"src":"19635:4:38","valueSize":1},{"declaration":8272,"isOffset":false,"isSlot":false,"src":"19804:4:38","valueSize":1},{"declaration":8272,"isOffset":false,"isSlot":false,"src":"19911:4:38","valueSize":1},{"declaration":8258,"isOffset":false,"isSlot":false,"src":"19464:6:38","valueSize":1},{"declaration":8258,"isOffset":false,"isSlot":false,"src":"19617:6:38","valueSize":1},{"declaration":8258,"isOffset":false,"isSlot":false,"src":"19796:6:38","valueSize":1},{"declaration":8256,"isOffset":false,"isSlot":false,"src":"19567:7:38","valueSize":1}],"flags":["memory-safe"],"id":8290,"nodeType":"InlineAssembly","src":"19406:521:38"}]},"documentation":{"id":8247,"nodeType":"StructuredDocumentation","src":"18914:88:38","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":8292,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:38","nodeType":"FunctionDefinition","parameters":{"id":8254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8249,"mutability":"mutable","name":"b","nameLocation":"19048:1:38","nodeType":"VariableDeclaration","scope":8292,"src":"19035:14:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8248,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:38","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8251,"mutability":"mutable","name":"e","nameLocation":"19072:1:38","nodeType":"VariableDeclaration","scope":8292,"src":"19059:14:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8250,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:38","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8253,"mutability":"mutable","name":"m","nameLocation":"19096:1:38","nodeType":"VariableDeclaration","scope":8292,"src":"19083:14:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8252,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:38","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:38"},"returnParameters":{"id":8259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8256,"mutability":"mutable","name":"success","nameLocation":"19132:7:38","nodeType":"VariableDeclaration","scope":8292,"src":"19127:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8255,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8258,"mutability":"mutable","name":"result","nameLocation":"19154:6:38","nodeType":"VariableDeclaration","scope":8292,"src":"19141:19:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8257,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:38","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:38"},"scope":9000,"src":"19007:926:38","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8324,"nodeType":"Block","src":"20088:176:38","statements":[{"body":{"id":8320,"nodeType":"Block","src":"20145:92:38","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":8315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8311,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8295,"src":"20163:9:38","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8313,"indexExpression":{"id":8312,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8301,"src":"20173:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:38","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":8314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8319,"nodeType":"IfStatement","src":"20159:68:38","trueBody":{"id":8318,"nodeType":"Block","src":"20182:45:38","statements":[{"expression":{"hexValue":"66616c7365","id":8316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":8299,"id":8317,"nodeType":"Return","src":"20200:12:38"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8304,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8301,"src":"20118:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":8305,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8295,"src":"20122:9:38","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:38","memberName":"length","nodeType":"MemberAccess","src":"20122:16:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8321,"initializationExpression":{"assignments":[8301],"declarations":[{"constant":false,"id":8301,"mutability":"mutable","name":"i","nameLocation":"20111:1:38","nodeType":"VariableDeclaration","scope":8321,"src":"20103:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8300,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8303,"initialValue":{"hexValue":"30","id":8302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:38"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":8309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:38","subExpression":{"id":8308,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8301,"src":"20142:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8310,"nodeType":"ExpressionStatement","src":"20140:3:38"},"nodeType":"ForStatement","src":"20098:139:38"},{"expression":{"hexValue":"74727565","id":8322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":8299,"id":8323,"nodeType":"Return","src":"20246:11:38"}]},"documentation":{"id":8293,"nodeType":"StructuredDocumentation","src":"19939:72:38","text":" @dev Returns whether the provided byte array is zero."},"id":8325,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:38","nodeType":"FunctionDefinition","parameters":{"id":8296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8295,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:38","nodeType":"VariableDeclaration","scope":8325,"src":"20036:22:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8294,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:38","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:38"},"returnParameters":{"id":8299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8325,"src":"20082:4:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8297,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:38"},"scope":9000,"src":"20016:248:38","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":8543,"nodeType":"Block","src":"20624:5124:38","statements":[{"id":8542,"nodeType":"UncheckedBlock","src":"20634:5108:38","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8333,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8328,"src":"20728:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":8334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8339,"nodeType":"IfStatement","src":"20724:53:38","trueBody":{"id":8338,"nodeType":"Block","src":"20736:41:38","statements":[{"expression":{"id":8336,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8328,"src":"20761:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8332,"id":8337,"nodeType":"Return","src":"20754:8:38"}]}},{"assignments":[8341],"declarations":[{"constant":false,"id":8341,"mutability":"mutable","name":"aa","nameLocation":"21712:2:38","nodeType":"VariableDeclaration","scope":8542,"src":"21704:10:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8340,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8343,"initialValue":{"id":8342,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8328,"src":"21717:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:38"},{"assignments":[8345],"declarations":[{"constant":false,"id":8345,"mutability":"mutable","name":"xn","nameLocation":"21740:2:38","nodeType":"VariableDeclaration","scope":8542,"src":"21732:10:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8344,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8347,"initialValue":{"hexValue":"31","id":8346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:38"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8348,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8341,"src":"21765:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":8351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":8349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":8350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:38","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:38","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":8352,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:38","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8363,"nodeType":"IfStatement","src":"21761:92:38","trueBody":{"id":8362,"nodeType":"Block","src":"21783:70:38","statements":[{"expression":{"id":8356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8354,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8341,"src":"21801:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":8355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:38","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8357,"nodeType":"ExpressionStatement","src":"21801:10:38"},{"expression":{"id":8360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8358,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8345,"src":"21829:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":8359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:38","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8361,"nodeType":"ExpressionStatement","src":"21829:9:38"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8364,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8341,"src":"21870:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":8367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":8365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":8366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:38","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:38","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":8368,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:38","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8379,"nodeType":"IfStatement","src":"21866:90:38","trueBody":{"id":8378,"nodeType":"Block","src":"21887:69:38","statements":[{"expression":{"id":8372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8370,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8341,"src":"21905:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":8371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:38","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8373,"nodeType":"ExpressionStatement","src":"21905:9:38"},{"expression":{"id":8376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8374,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8345,"src":"21932:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":8375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:38","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8377,"nodeType":"ExpressionStatement","src":"21932:9:38"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8380,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8341,"src":"21973:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":8383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":8381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":8382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:38","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:38","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":8384,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:38","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8395,"nodeType":"IfStatement","src":"21969:90:38","trueBody":{"id":8394,"nodeType":"Block","src":"21990:69:38","statements":[{"expression":{"id":8388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8386,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8341,"src":"22008:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":8387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:38","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8389,"nodeType":"ExpressionStatement","src":"22008:9:38"},{"expression":{"id":8392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8390,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8345,"src":"22035:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":8391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:38","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8393,"nodeType":"ExpressionStatement","src":"22035:9:38"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8396,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8341,"src":"22076:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":8399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":8397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":8398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:38","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:38","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":8400,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:38","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8411,"nodeType":"IfStatement","src":"22072:89:38","trueBody":{"id":8410,"nodeType":"Block","src":"22093:68:38","statements":[{"expression":{"id":8404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8402,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8341,"src":"22111:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":8403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:38","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8405,"nodeType":"ExpressionStatement","src":"22111:9:38"},{"expression":{"id":8408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8406,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8345,"src":"22138:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":8407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:38","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8409,"nodeType":"ExpressionStatement","src":"22138:8:38"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8412,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8341,"src":"22178:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":8415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":8413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":8414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:38","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:38","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":8416,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:38","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8427,"nodeType":"IfStatement","src":"22174:87:38","trueBody":{"id":8426,"nodeType":"Block","src":"22194:67:38","statements":[{"expression":{"id":8420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8418,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8341,"src":"22212:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":8419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:38","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8421,"nodeType":"ExpressionStatement","src":"22212:8:38"},{"expression":{"id":8424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8422,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8345,"src":"22238:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":8423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:38","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8425,"nodeType":"ExpressionStatement","src":"22238:8:38"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8428,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8341,"src":"22278:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":8431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":8429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":8430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:38","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:38","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":8432,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:38","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8443,"nodeType":"IfStatement","src":"22274:87:38","trueBody":{"id":8442,"nodeType":"Block","src":"22294:67:38","statements":[{"expression":{"id":8436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8434,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8341,"src":"22312:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":8435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:38","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8437,"nodeType":"ExpressionStatement","src":"22312:8:38"},{"expression":{"id":8440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8438,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8345,"src":"22338:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":8439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:38","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8441,"nodeType":"ExpressionStatement","src":"22338:8:38"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8444,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8341,"src":"22378:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":8447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":8445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":8446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:38","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:38","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":8448,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:38","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8455,"nodeType":"IfStatement","src":"22374:61:38","trueBody":{"id":8454,"nodeType":"Block","src":"22394:41:38","statements":[{"expression":{"id":8452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8450,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8345,"src":"22412:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":8451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8453,"nodeType":"ExpressionStatement","src":"22412:8:38"}]}},{"expression":{"id":8463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8456,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8345,"src":"22855:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":8457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:38","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8458,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8345,"src":"22865:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8460,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":8461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8464,"nodeType":"ExpressionStatement","src":"22855:18:38"},{"expression":{"id":8474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8465,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8345,"src":"24760:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8466,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8345,"src":"24766:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8467,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8328,"src":"24771:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":8468,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8345,"src":"24775:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8471,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":8472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8475,"nodeType":"ExpressionStatement","src":"24760:23:38"},{"expression":{"id":8485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8476,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8345,"src":"24869:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8477,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8345,"src":"24875:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8478,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8328,"src":"24880:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":8479,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8345,"src":"24884:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8482,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":8483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8486,"nodeType":"ExpressionStatement","src":"24869:23:38"},{"expression":{"id":8496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8487,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8345,"src":"24980:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8488,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8345,"src":"24986:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8489,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8328,"src":"24991:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":8490,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8345,"src":"24995:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8493,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":8494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8497,"nodeType":"ExpressionStatement","src":"24980:23:38"},{"expression":{"id":8507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8498,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8345,"src":"25089:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8499,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8345,"src":"25095:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8500,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8328,"src":"25100:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":8501,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8345,"src":"25104:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8504,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":8505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8508,"nodeType":"ExpressionStatement","src":"25089:23:38"},{"expression":{"id":8518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8509,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8345,"src":"25199:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8510,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8345,"src":"25205:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8511,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8328,"src":"25210:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":8512,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8345,"src":"25214:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8515,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":8516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8519,"nodeType":"ExpressionStatement","src":"25199:23:38"},{"expression":{"id":8529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8520,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8345,"src":"25309:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8521,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8345,"src":"25315:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8522,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8328,"src":"25320:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":8523,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8345,"src":"25324:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8526,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":8527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8530,"nodeType":"ExpressionStatement","src":"25309:23:38"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8531,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8345,"src":"25698:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8534,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8345,"src":"25719:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8535,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8328,"src":"25724:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":8536,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8345,"src":"25728:2:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8532,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10765,"src":"25703:8:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10765_$","typeString":"type(library SafeCast)"}},"id":8533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:38","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10764,"src":"25703:15:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8332,"id":8541,"nodeType":"Return","src":"25691:40:38"}]}]},"documentation":{"id":8326,"nodeType":"StructuredDocumentation","src":"20270:292:38","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":8544,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:38","nodeType":"FunctionDefinition","parameters":{"id":8329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8328,"mutability":"mutable","name":"a","nameLocation":"20589:1:38","nodeType":"VariableDeclaration","scope":8544,"src":"20581:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8327,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:38"},"returnParameters":{"id":8332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8331,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8544,"src":"20615:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8330,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:38"},"scope":9000,"src":"20567:5181:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8577,"nodeType":"Block","src":"25921:171:38","statements":[{"id":8576,"nodeType":"UncheckedBlock","src":"25931:155:38","statements":[{"assignments":[8556],"declarations":[{"constant":false,"id":8556,"mutability":"mutable","name":"result","nameLocation":"25963:6:38","nodeType":"VariableDeclaration","scope":8576,"src":"25955:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8555,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8560,"initialValue":{"arguments":[{"id":8558,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8547,"src":"25977:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8557,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[8544,8578],"referencedDeclaration":8544,"src":"25972:4:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":8559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:38"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8561,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8556,"src":"26000:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8565,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8550,"src":"26042:8:38","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7391","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$7391","typeString":"enum Math.Rounding"}],"id":8564,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8999,"src":"26025:16:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$7391_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":8566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8567,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8556,"src":"26055:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8568,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8556,"src":"26064:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8570,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8547,"src":"26073:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8562,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10765,"src":"26009:8:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10765_$","typeString":"type(library SafeCast)"}},"id":8563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:38","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10764,"src":"26009:15:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8554,"id":8575,"nodeType":"Return","src":"25993:82:38"}]}]},"documentation":{"id":8545,"nodeType":"StructuredDocumentation","src":"25754:86:38","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":8578,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:38","nodeType":"FunctionDefinition","parameters":{"id":8551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8547,"mutability":"mutable","name":"a","nameLocation":"25867:1:38","nodeType":"VariableDeclaration","scope":8578,"src":"25859:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8546,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8550,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:38","nodeType":"VariableDeclaration","scope":8578,"src":"25870:17:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7391","typeString":"enum Math.Rounding"},"typeName":{"id":8549,"nodeType":"UserDefinedTypeName","pathNode":{"id":8548,"name":"Rounding","nameLocations":["25870:8:38"],"nodeType":"IdentifierPath","referencedDeclaration":7391,"src":"25870:8:38"},"referencedDeclaration":7391,"src":"25870:8:38","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7391","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:38"},"returnParameters":{"id":8554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8578,"src":"25912:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8552,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:38"},"scope":9000,"src":"25845:247:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8668,"nodeType":"Block","src":"26281:2334:38","statements":[{"expression":{"id":8595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8586,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8584,"src":"26363:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8589,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8581,"src":"26383:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":8590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:38","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8587,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10765,"src":"26367:8:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10765_$","typeString":"type(library SafeCast)"}},"id":8588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:38","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10764,"src":"26367:15:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":8593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:38","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8596,"nodeType":"ExpressionStatement","src":"26363:64:38"},{"expression":{"id":8609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8597,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8584,"src":"26503:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8600,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8581,"src":"26525:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":8601,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8584,"src":"26530:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8603,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":8604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:38","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8598,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10765,"src":"26508:8:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10765_$","typeString":"type(library SafeCast)"}},"id":8599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:38","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10764,"src":"26508:15:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":8607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:38","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8610,"nodeType":"ExpressionStatement","src":"26503:56:38"},{"expression":{"id":8623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8611,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8584,"src":"26634:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8614,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8581,"src":"26656:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":8615,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8584,"src":"26661:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8617,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":8618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:38","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8612,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10765,"src":"26639:8:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10765_$","typeString":"type(library SafeCast)"}},"id":8613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:38","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10764,"src":"26639:15:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":8621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:38","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8624,"nodeType":"ExpressionStatement","src":"26634:48:38"},{"expression":{"id":8637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8625,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8584,"src":"26757:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8628,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8581,"src":"26779:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":8629,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8584,"src":"26784:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8631,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":8632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:38","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8626,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10765,"src":"26762:8:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10765_$","typeString":"type(library SafeCast)"}},"id":8627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:38","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10764,"src":"26762:15:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":8635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:38","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8638,"nodeType":"ExpressionStatement","src":"26757:44:38"},{"expression":{"id":8651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8639,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8584,"src":"26874:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8642,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8581,"src":"26896:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":8643,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8584,"src":"26901:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8645,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":8646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:38","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8640,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10765,"src":"26879:8:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10765_$","typeString":"type(library SafeCast)"}},"id":8641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:38","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10764,"src":"26879:15:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":8649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:38","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8652,"nodeType":"ExpressionStatement","src":"26874:42:38"},{"expression":{"id":8665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8653,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8584,"src":"26988:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8656,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8581,"src":"27010:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":8657,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8584,"src":"27015:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8659,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":8660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:38","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8654,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10765,"src":"26993:8:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10765_$","typeString":"type(library SafeCast)"}},"id":8655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:38","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10764,"src":"26993:15:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":8663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:38","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8666,"nodeType":"ExpressionStatement","src":"26988:41:38"},{"AST":{"nativeSrc":"28490:119:38","nodeType":"YulBlock","src":"28490:119:38","statements":[{"nativeSrc":"28504:95:38","nodeType":"YulAssignment","src":"28504:95:38","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:38","nodeType":"YulIdentifier","src":"28512:1:38"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:38","nodeType":"YulIdentifier","src":"28524:1:38"},{"name":"x","nativeSrc":"28527:1:38","nodeType":"YulIdentifier","src":"28527:1:38"}],"functionName":{"name":"shr","nativeSrc":"28520:3:38","nodeType":"YulIdentifier","src":"28520:3:38"},"nativeSrc":"28520:9:38","nodeType":"YulFunctionCall","src":"28520:9:38"},{"kind":"number","nativeSrc":"28531:66:38","nodeType":"YulLiteral","src":"28531:66:38","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:38","nodeType":"YulIdentifier","src":"28515:4:38"},"nativeSrc":"28515:83:38","nodeType":"YulFunctionCall","src":"28515:83:38"}],"functionName":{"name":"or","nativeSrc":"28509:2:38","nodeType":"YulIdentifier","src":"28509:2:38"},"nativeSrc":"28509:90:38","nodeType":"YulFunctionCall","src":"28509:90:38"},"variableNames":[{"name":"r","nativeSrc":"28504:1:38","nodeType":"YulIdentifier","src":"28504:1:38"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8584,"isOffset":false,"isSlot":false,"src":"28504:1:38","valueSize":1},{"declaration":8584,"isOffset":false,"isSlot":false,"src":"28512:1:38","valueSize":1},{"declaration":8584,"isOffset":false,"isSlot":false,"src":"28524:1:38","valueSize":1},{"declaration":8581,"isOffset":false,"isSlot":false,"src":"28527:1:38","valueSize":1}],"flags":["memory-safe"],"id":8667,"nodeType":"InlineAssembly","src":"28465:144:38"}]},"documentation":{"id":8579,"nodeType":"StructuredDocumentation","src":"26098:119:38","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":8669,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:38","nodeType":"FunctionDefinition","parameters":{"id":8582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8581,"mutability":"mutable","name":"x","nameLocation":"26244:1:38","nodeType":"VariableDeclaration","scope":8669,"src":"26236:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8580,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:38"},"returnParameters":{"id":8585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8584,"mutability":"mutable","name":"r","nameLocation":"26278:1:38","nodeType":"VariableDeclaration","scope":8669,"src":"26270:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8583,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:38"},"scope":9000,"src":"26222:2393:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8702,"nodeType":"Block","src":"28848:175:38","statements":[{"id":8701,"nodeType":"UncheckedBlock","src":"28858:159:38","statements":[{"assignments":[8681],"declarations":[{"constant":false,"id":8681,"mutability":"mutable","name":"result","nameLocation":"28890:6:38","nodeType":"VariableDeclaration","scope":8701,"src":"28882:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8680,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8685,"initialValue":{"arguments":[{"id":8683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8672,"src":"28904:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8682,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[8669,8703],"referencedDeclaration":8669,"src":"28899:4:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":8684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:38"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8686,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8681,"src":"28931:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8690,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8675,"src":"28973:8:38","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7391","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$7391","typeString":"enum Math.Rounding"}],"id":8689,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8999,"src":"28956:16:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$7391_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":8691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":8692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":8693,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8681,"src":"28991:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8672,"src":"29000:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8687,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10765,"src":"28940:8:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10765_$","typeString":"type(library SafeCast)"}},"id":8688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:38","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10764,"src":"28940:15:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8679,"id":8700,"nodeType":"Return","src":"28924:82:38"}]}]},"documentation":{"id":8670,"nodeType":"StructuredDocumentation","src":"28621:142:38","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":8703,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:38","nodeType":"FunctionDefinition","parameters":{"id":8676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8672,"mutability":"mutable","name":"value","nameLocation":"28790:5:38","nodeType":"VariableDeclaration","scope":8703,"src":"28782:13:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8671,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8675,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:38","nodeType":"VariableDeclaration","scope":8703,"src":"28797:17:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7391","typeString":"enum Math.Rounding"},"typeName":{"id":8674,"nodeType":"UserDefinedTypeName","pathNode":{"id":8673,"name":"Rounding","nameLocations":["28797:8:38"],"nodeType":"IdentifierPath","referencedDeclaration":7391,"src":"28797:8:38"},"referencedDeclaration":7391,"src":"28797:8:38","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7391","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:38"},"returnParameters":{"id":8679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8678,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8703,"src":"28839:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8677,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:38"},"scope":9000,"src":"28768:255:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8831,"nodeType":"Block","src":"29216:854:38","statements":[{"assignments":[8712],"declarations":[{"constant":false,"id":8712,"mutability":"mutable","name":"result","nameLocation":"29234:6:38","nodeType":"VariableDeclaration","scope":8831,"src":"29226:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8711,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8714,"initialValue":{"hexValue":"30","id":8713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:38"},{"id":8828,"nodeType":"UncheckedBlock","src":"29254:787:38","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8706,"src":"29282:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":8718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:38","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":8717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:38","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:38","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8731,"nodeType":"IfStatement","src":"29278:103:38","trueBody":{"id":8730,"nodeType":"Block","src":"29301:80:38","statements":[{"expression":{"id":8724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8706,"src":"29319:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":8723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:38","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":8722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:38","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:38","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8725,"nodeType":"ExpressionStatement","src":"29319:17:38"},{"expression":{"id":8728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8726,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8712,"src":"29354:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":8727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:38","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8729,"nodeType":"ExpressionStatement","src":"29354:12:38"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8706,"src":"29398:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":8735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:38","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":8734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:38","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:38","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8748,"nodeType":"IfStatement","src":"29394:103:38","trueBody":{"id":8747,"nodeType":"Block","src":"29417:80:38","statements":[{"expression":{"id":8741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8706,"src":"29435:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":8740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:38","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":8739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:38","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:38","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8742,"nodeType":"ExpressionStatement","src":"29435:17:38"},{"expression":{"id":8745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8743,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8712,"src":"29470:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":8744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:38","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8746,"nodeType":"ExpressionStatement","src":"29470:12:38"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8706,"src":"29514:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":8752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:38","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":8751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:38","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:38","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8765,"nodeType":"IfStatement","src":"29510:103:38","trueBody":{"id":8764,"nodeType":"Block","src":"29533:80:38","statements":[{"expression":{"id":8758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8706,"src":"29551:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":8757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:38","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":8756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:38","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:38","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8759,"nodeType":"ExpressionStatement","src":"29551:17:38"},{"expression":{"id":8762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8760,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8712,"src":"29586:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":8761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:38","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8763,"nodeType":"ExpressionStatement","src":"29586:12:38"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8706,"src":"29630:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":8769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:38","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":8768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:38","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:38","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8782,"nodeType":"IfStatement","src":"29626:100:38","trueBody":{"id":8781,"nodeType":"Block","src":"29648:78:38","statements":[{"expression":{"id":8775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8706,"src":"29666:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":8774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:38","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":8773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:38","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:38","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8776,"nodeType":"ExpressionStatement","src":"29666:16:38"},{"expression":{"id":8779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8777,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8712,"src":"29700:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":8778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:38","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8780,"nodeType":"ExpressionStatement","src":"29700:11:38"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8706,"src":"29743:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":8786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:38","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":8785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:38","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:38","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8799,"nodeType":"IfStatement","src":"29739:100:38","trueBody":{"id":8798,"nodeType":"Block","src":"29761:78:38","statements":[{"expression":{"id":8792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8706,"src":"29779:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":8791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:38","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":8790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:38","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:38","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8793,"nodeType":"ExpressionStatement","src":"29779:16:38"},{"expression":{"id":8796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8794,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8712,"src":"29813:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":8795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:38","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8797,"nodeType":"ExpressionStatement","src":"29813:11:38"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8706,"src":"29856:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":8803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:38","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":8802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:38","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:38","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8816,"nodeType":"IfStatement","src":"29852:100:38","trueBody":{"id":8815,"nodeType":"Block","src":"29874:78:38","statements":[{"expression":{"id":8809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8706,"src":"29892:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":8808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:38","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":8807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:38","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:38","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8810,"nodeType":"ExpressionStatement","src":"29892:16:38"},{"expression":{"id":8813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8811,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8712,"src":"29926:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":8812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:38","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8814,"nodeType":"ExpressionStatement","src":"29926:11:38"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8817,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8706,"src":"29969:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":8820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:38","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":8819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:38","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8827,"nodeType":"IfStatement","src":"29965:66:38","trueBody":{"id":8826,"nodeType":"Block","src":"29987:44:38","statements":[{"expression":{"id":8824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8822,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8712,"src":"30005:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":8823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8825,"nodeType":"ExpressionStatement","src":"30005:11:38"}]}}]},{"expression":{"id":8829,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8712,"src":"30057:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8710,"id":8830,"nodeType":"Return","src":"30050:13:38"}]},"documentation":{"id":8704,"nodeType":"StructuredDocumentation","src":"29029:120:38","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":8832,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:38","nodeType":"FunctionDefinition","parameters":{"id":8707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8706,"mutability":"mutable","name":"value","nameLocation":"29177:5:38","nodeType":"VariableDeclaration","scope":8832,"src":"29169:13:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8705,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:38"},"returnParameters":{"id":8710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8832,"src":"29207:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8708,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:38"},"scope":9000,"src":"29154:916:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8865,"nodeType":"Block","src":"30305:177:38","statements":[{"id":8864,"nodeType":"UncheckedBlock","src":"30315:161:38","statements":[{"assignments":[8844],"declarations":[{"constant":false,"id":8844,"mutability":"mutable","name":"result","nameLocation":"30347:6:38","nodeType":"VariableDeclaration","scope":8864,"src":"30339:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8843,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8848,"initialValue":{"arguments":[{"id":8846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8835,"src":"30362:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8845,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[8832,8866],"referencedDeclaration":8832,"src":"30356:5:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":8847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:38"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8849,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8844,"src":"30389:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8853,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8838,"src":"30431:8:38","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7391","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$7391","typeString":"enum Math.Rounding"}],"id":8852,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8999,"src":"30414:16:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$7391_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":8854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:38","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":8856,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8844,"src":"30450:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8835,"src":"30459:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8850,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10765,"src":"30398:8:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10765_$","typeString":"type(library SafeCast)"}},"id":8851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:38","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10764,"src":"30398:15:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8842,"id":8863,"nodeType":"Return","src":"30382:83:38"}]}]},"documentation":{"id":8833,"nodeType":"StructuredDocumentation","src":"30076:143:38","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":8866,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:38","nodeType":"FunctionDefinition","parameters":{"id":8839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8835,"mutability":"mutable","name":"value","nameLocation":"30247:5:38","nodeType":"VariableDeclaration","scope":8866,"src":"30239:13:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8834,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8838,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:38","nodeType":"VariableDeclaration","scope":8866,"src":"30254:17:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7391","typeString":"enum Math.Rounding"},"typeName":{"id":8837,"nodeType":"UserDefinedTypeName","pathNode":{"id":8836,"name":"Rounding","nameLocations":["30254:8:38"],"nodeType":"IdentifierPath","referencedDeclaration":7391,"src":"30254:8:38"},"referencedDeclaration":7391,"src":"30254:8:38","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7391","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:38"},"returnParameters":{"id":8842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8866,"src":"30296:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8840,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:38"},"scope":9000,"src":"30224:258:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8942,"nodeType":"Block","src":"30800:675:38","statements":[{"expression":{"id":8883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8874,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8872,"src":"30882:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8877,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8869,"src":"30902:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":8878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:38","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8875,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10765,"src":"30886:8:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10765_$","typeString":"type(library SafeCast)"}},"id":8876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:38","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10764,"src":"30886:15:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":8881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:38","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8884,"nodeType":"ExpressionStatement","src":"30882:64:38"},{"expression":{"id":8897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8885,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8872,"src":"31022:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8888,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8869,"src":"31044:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":8889,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8872,"src":"31049:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8891,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":8892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:38","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8886,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10765,"src":"31027:8:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10765_$","typeString":"type(library SafeCast)"}},"id":8887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:38","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10764,"src":"31027:15:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":8895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:38","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8898,"nodeType":"ExpressionStatement","src":"31022:56:38"},{"expression":{"id":8911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8899,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8872,"src":"31153:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8902,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8869,"src":"31175:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":8903,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8872,"src":"31180:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8905,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":8906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:38","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8900,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10765,"src":"31158:8:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10765_$","typeString":"type(library SafeCast)"}},"id":8901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:38","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10764,"src":"31158:15:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":8909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:38","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8912,"nodeType":"ExpressionStatement","src":"31153:48:38"},{"expression":{"id":8925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8913,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8872,"src":"31276:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8916,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8869,"src":"31298:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":8917,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8872,"src":"31303:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8919,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":8920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:38","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8914,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10765,"src":"31281:8:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10765_$","typeString":"type(library SafeCast)"}},"id":8915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:38","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10764,"src":"31281:15:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":8923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:38","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8926,"nodeType":"ExpressionStatement","src":"31276:44:38"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8927,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8872,"src":"31426:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":8928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:38","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8930,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8933,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8869,"src":"31453:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":8934,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8872,"src":"31458:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8936,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":8937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:38","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8931,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10765,"src":"31436:8:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10765_$","typeString":"type(library SafeCast)"}},"id":8932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:38","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10764,"src":"31436:15:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8873,"id":8941,"nodeType":"Return","src":"31418:50:38"}]},"documentation":{"id":8867,"nodeType":"StructuredDocumentation","src":"30488:246:38","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":8943,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:38","nodeType":"FunctionDefinition","parameters":{"id":8870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8869,"mutability":"mutable","name":"x","nameLocation":"30763:1:38","nodeType":"VariableDeclaration","scope":8943,"src":"30755:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8868,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:38"},"returnParameters":{"id":8873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8872,"mutability":"mutable","name":"r","nameLocation":"30797:1:38","nodeType":"VariableDeclaration","scope":8943,"src":"30789:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8871,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:38"},"scope":9000,"src":"30739:736:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8979,"nodeType":"Block","src":"31712:184:38","statements":[{"id":8978,"nodeType":"UncheckedBlock","src":"31722:168:38","statements":[{"assignments":[8955],"declarations":[{"constant":false,"id":8955,"mutability":"mutable","name":"result","nameLocation":"31754:6:38","nodeType":"VariableDeclaration","scope":8978,"src":"31746:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8954,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8959,"initialValue":{"arguments":[{"id":8957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8946,"src":"31770:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8956,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[8943,8980],"referencedDeclaration":8943,"src":"31763:6:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":8958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:38"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8960,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8955,"src":"31797:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8964,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8949,"src":"31839:8:38","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7391","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$7391","typeString":"enum Math.Rounding"}],"id":8963,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8999,"src":"31822:16:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$7391_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":8965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":8966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8967,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8955,"src":"31858:6:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":8968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:38","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8970,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8946,"src":"31873:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8961,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10765,"src":"31806:8:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10765_$","typeString":"type(library SafeCast)"}},"id":8962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:38","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10764,"src":"31806:15:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8953,"id":8977,"nodeType":"Return","src":"31790:89:38"}]}]},"documentation":{"id":8944,"nodeType":"StructuredDocumentation","src":"31481:144:38","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":8980,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:38","nodeType":"FunctionDefinition","parameters":{"id":8950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8946,"mutability":"mutable","name":"value","nameLocation":"31654:5:38","nodeType":"VariableDeclaration","scope":8980,"src":"31646:13:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8945,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8949,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:38","nodeType":"VariableDeclaration","scope":8980,"src":"31661:17:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7391","typeString":"enum Math.Rounding"},"typeName":{"id":8948,"nodeType":"UserDefinedTypeName","pathNode":{"id":8947,"name":"Rounding","nameLocations":["31661:8:38"],"nodeType":"IdentifierPath","referencedDeclaration":7391,"src":"31661:8:38"},"referencedDeclaration":7391,"src":"31661:8:38","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7391","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:38"},"returnParameters":{"id":8953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8980,"src":"31703:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8951,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:38"},"scope":9000,"src":"31630:266:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8998,"nodeType":"Block","src":"32094:48:38","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":8996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":8994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8991,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8984,"src":"32117:8:38","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7391","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$7391","typeString":"enum Math.Rounding"}],"id":8990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:38","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":8989,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:38","typeDescriptions":{}}},"id":8992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":8993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:38","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:38","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":8995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:38","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8988,"id":8997,"nodeType":"Return","src":"32104:31:38"}]},"documentation":{"id":8981,"nodeType":"StructuredDocumentation","src":"31902:113:38","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":8999,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:38","nodeType":"FunctionDefinition","parameters":{"id":8985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8984,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:38","nodeType":"VariableDeclaration","scope":8999,"src":"32046:17:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7391","typeString":"enum Math.Rounding"},"typeName":{"id":8983,"nodeType":"UserDefinedTypeName","pathNode":{"id":8982,"name":"Rounding","nameLocations":["32046:8:38"],"nodeType":"IdentifierPath","referencedDeclaration":7391,"src":"32046:8:38"},"referencedDeclaration":7391,"src":"32046:8:38","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7391","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:38"},"returnParameters":{"id":8988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8987,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8999,"src":"32088:4:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8986,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:38"},"scope":9000,"src":"32020:122:38","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":9001,"src":"281:31863:38","usedErrors":[],"usedEvents":[]}],"src":"103:32042:38"},"id":38},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[10765]},"id":10766,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9002,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:39"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":9003,"nodeType":"StructuredDocumentation","src":"218:550:39","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":10765,"linearizedBaseContracts":[10765],"name":"SafeCast","nameLocation":"777:8:39","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":9004,"nodeType":"StructuredDocumentation","src":"792:68:39","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":9010,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:39","nodeType":"ErrorDefinition","parameters":{"id":9009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9006,"mutability":"mutable","name":"bits","nameLocation":"908:4:39","nodeType":"VariableDeclaration","scope":9010,"src":"902:10:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":9005,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:39","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":9008,"mutability":"mutable","name":"value","nameLocation":"922:5:39","nodeType":"VariableDeclaration","scope":9010,"src":"914:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9007,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:39"},"src":"865:64:39"},{"documentation":{"id":9011,"nodeType":"StructuredDocumentation","src":"935:75:39","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":9015,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:39","nodeType":"ErrorDefinition","parameters":{"id":9014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9013,"mutability":"mutable","name":"value","nameLocation":"1056:5:39","nodeType":"VariableDeclaration","scope":9015,"src":"1049:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9012,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:39"},"src":"1015:48:39"},{"documentation":{"id":9016,"nodeType":"StructuredDocumentation","src":"1069:67:39","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":9022,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:39","nodeType":"ErrorDefinition","parameters":{"id":9021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9018,"mutability":"mutable","name":"bits","nameLocation":"1183:4:39","nodeType":"VariableDeclaration","scope":9022,"src":"1177:10:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":9017,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:39","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":9020,"mutability":"mutable","name":"value","nameLocation":"1196:5:39","nodeType":"VariableDeclaration","scope":9022,"src":"1189:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9019,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:39"},"src":"1141:62:39"},{"documentation":{"id":9023,"nodeType":"StructuredDocumentation","src":"1209:75:39","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":9027,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:39","nodeType":"ErrorDefinition","parameters":{"id":9026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9025,"mutability":"mutable","name":"value","nameLocation":"1331:5:39","nodeType":"VariableDeclaration","scope":9027,"src":"1323:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9024,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:39"},"src":"1289:49:39"},{"body":{"id":9054,"nodeType":"Block","src":"1695:152:39","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9030,"src":"1709:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":9038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":9037,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:39","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":9036,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:39","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":9040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:39","memberName":"max","nodeType":"MemberAccess","src":"1717:17:39","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9048,"nodeType":"IfStatement","src":"1705:105:39","trueBody":{"id":9047,"nodeType":"Block","src":"1736:74:39","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":9043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:39","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":9044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9030,"src":"1793:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9042,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"1757:30:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":9045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9046,"nodeType":"RevertStatement","src":"1750:49:39"}]}},{"expression":{"arguments":[{"id":9051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9030,"src":"1834:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":9049,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:39","typeDescriptions":{}}},"id":9052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":9034,"id":9053,"nodeType":"Return","src":"1819:21:39"}]},"documentation":{"id":9028,"nodeType":"StructuredDocumentation","src":"1344:280:39","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":9055,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:39","nodeType":"FunctionDefinition","parameters":{"id":9031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9030,"mutability":"mutable","name":"value","nameLocation":"1656:5:39","nodeType":"VariableDeclaration","scope":9055,"src":"1648:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9029,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:39"},"returnParameters":{"id":9034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9033,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9055,"src":"1686:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":9032,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:39","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:39"},"scope":10765,"src":"1629:218:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9082,"nodeType":"Block","src":"2204:152:39","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9063,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9058,"src":"2218:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":9066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":9065,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:39","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":9064,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:39","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":9068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:39","memberName":"max","nodeType":"MemberAccess","src":"2226:17:39","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9076,"nodeType":"IfStatement","src":"2214:105:39","trueBody":{"id":9075,"nodeType":"Block","src":"2245:74:39","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":9071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:39","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":9072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9058,"src":"2302:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9070,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"2266:30:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":9073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9074,"nodeType":"RevertStatement","src":"2259:49:39"}]}},{"expression":{"arguments":[{"id":9079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9058,"src":"2343:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":9077,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:39","typeDescriptions":{}}},"id":9080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":9062,"id":9081,"nodeType":"Return","src":"2328:21:39"}]},"documentation":{"id":9056,"nodeType":"StructuredDocumentation","src":"1853:280:39","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":9083,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:39","nodeType":"FunctionDefinition","parameters":{"id":9059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9058,"mutability":"mutable","name":"value","nameLocation":"2165:5:39","nodeType":"VariableDeclaration","scope":9083,"src":"2157:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9057,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:39"},"returnParameters":{"id":9062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9061,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9083,"src":"2195:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":9060,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:39","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:39"},"scope":10765,"src":"2138:218:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9110,"nodeType":"Block","src":"2713:152:39","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9091,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9086,"src":"2727:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":9094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":9093,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:39","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":9092,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:39","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":9096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:39","memberName":"max","nodeType":"MemberAccess","src":"2735:17:39","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9104,"nodeType":"IfStatement","src":"2723:105:39","trueBody":{"id":9103,"nodeType":"Block","src":"2754:74:39","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":9099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:39","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":9100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9086,"src":"2811:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9098,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"2775:30:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":9101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9102,"nodeType":"RevertStatement","src":"2768:49:39"}]}},{"expression":{"arguments":[{"id":9107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9086,"src":"2852:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":9105,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:39","typeDescriptions":{}}},"id":9108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":9090,"id":9109,"nodeType":"Return","src":"2837:21:39"}]},"documentation":{"id":9084,"nodeType":"StructuredDocumentation","src":"2362:280:39","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":9111,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:39","nodeType":"FunctionDefinition","parameters":{"id":9087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9086,"mutability":"mutable","name":"value","nameLocation":"2674:5:39","nodeType":"VariableDeclaration","scope":9111,"src":"2666:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9085,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:39"},"returnParameters":{"id":9090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9111,"src":"2704:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":9088,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:39","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:39"},"scope":10765,"src":"2647:218:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9138,"nodeType":"Block","src":"3222:152:39","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9114,"src":"3236:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":9122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":9121,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:39","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":9120,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:39","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":9124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:39","memberName":"max","nodeType":"MemberAccess","src":"3244:17:39","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9132,"nodeType":"IfStatement","src":"3232:105:39","trueBody":{"id":9131,"nodeType":"Block","src":"3263:74:39","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":9127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:39","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":9128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9114,"src":"3320:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9126,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"3284:30:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":9129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9130,"nodeType":"RevertStatement","src":"3277:49:39"}]}},{"expression":{"arguments":[{"id":9135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9114,"src":"3361:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":9133,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:39","typeDescriptions":{}}},"id":9136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":9118,"id":9137,"nodeType":"Return","src":"3346:21:39"}]},"documentation":{"id":9112,"nodeType":"StructuredDocumentation","src":"2871:280:39","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":9139,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:39","nodeType":"FunctionDefinition","parameters":{"id":9115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9114,"mutability":"mutable","name":"value","nameLocation":"3183:5:39","nodeType":"VariableDeclaration","scope":9139,"src":"3175:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9113,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:39"},"returnParameters":{"id":9118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9117,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9139,"src":"3213:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":9116,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:39","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:39"},"scope":10765,"src":"3156:218:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9166,"nodeType":"Block","src":"3731:152:39","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9142,"src":"3745:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":9150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":9149,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:39","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":9148,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:39","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":9152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:39","memberName":"max","nodeType":"MemberAccess","src":"3753:17:39","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9160,"nodeType":"IfStatement","src":"3741:105:39","trueBody":{"id":9159,"nodeType":"Block","src":"3772:74:39","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":9155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:39","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":9156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9142,"src":"3829:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9154,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"3793:30:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":9157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9158,"nodeType":"RevertStatement","src":"3786:49:39"}]}},{"expression":{"arguments":[{"id":9163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9142,"src":"3870:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":9161,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:39","typeDescriptions":{}}},"id":9164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":9146,"id":9165,"nodeType":"Return","src":"3855:21:39"}]},"documentation":{"id":9140,"nodeType":"StructuredDocumentation","src":"3380:280:39","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":9167,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:39","nodeType":"FunctionDefinition","parameters":{"id":9143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9142,"mutability":"mutable","name":"value","nameLocation":"3692:5:39","nodeType":"VariableDeclaration","scope":9167,"src":"3684:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9141,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:39"},"returnParameters":{"id":9146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9167,"src":"3722:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":9144,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:39","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:39"},"scope":10765,"src":"3665:218:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9194,"nodeType":"Block","src":"4240:152:39","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9170,"src":"4254:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":9178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":9177,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:39","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":9176,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:39","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":9180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:39","memberName":"max","nodeType":"MemberAccess","src":"4262:17:39","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9188,"nodeType":"IfStatement","src":"4250:105:39","trueBody":{"id":9187,"nodeType":"Block","src":"4281:74:39","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":9183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:39","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":9184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9170,"src":"4338:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9182,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"4302:30:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":9185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9186,"nodeType":"RevertStatement","src":"4295:49:39"}]}},{"expression":{"arguments":[{"id":9191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9170,"src":"4379:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":9189,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:39","typeDescriptions":{}}},"id":9192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":9174,"id":9193,"nodeType":"Return","src":"4364:21:39"}]},"documentation":{"id":9168,"nodeType":"StructuredDocumentation","src":"3889:280:39","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":9195,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:39","nodeType":"FunctionDefinition","parameters":{"id":9171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9170,"mutability":"mutable","name":"value","nameLocation":"4201:5:39","nodeType":"VariableDeclaration","scope":9195,"src":"4193:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9169,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:39"},"returnParameters":{"id":9174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9195,"src":"4231:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":9172,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:39","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:39"},"scope":10765,"src":"4174:218:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9222,"nodeType":"Block","src":"4749:152:39","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9198,"src":"4763:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":9206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":9205,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:39","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":9204,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:39","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":9208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:39","memberName":"max","nodeType":"MemberAccess","src":"4771:17:39","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9216,"nodeType":"IfStatement","src":"4759:105:39","trueBody":{"id":9215,"nodeType":"Block","src":"4790:74:39","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":9211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:39","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":9212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9198,"src":"4847:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9210,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"4811:30:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":9213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9214,"nodeType":"RevertStatement","src":"4804:49:39"}]}},{"expression":{"arguments":[{"id":9219,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9198,"src":"4888:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":9217,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:39","typeDescriptions":{}}},"id":9220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":9202,"id":9221,"nodeType":"Return","src":"4873:21:39"}]},"documentation":{"id":9196,"nodeType":"StructuredDocumentation","src":"4398:280:39","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":9223,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:39","nodeType":"FunctionDefinition","parameters":{"id":9199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9198,"mutability":"mutable","name":"value","nameLocation":"4710:5:39","nodeType":"VariableDeclaration","scope":9223,"src":"4702:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9197,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:39"},"returnParameters":{"id":9202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9223,"src":"4740:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":9200,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:39","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:39"},"scope":10765,"src":"4683:218:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9250,"nodeType":"Block","src":"5258:152:39","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9226,"src":"5272:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":9234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":9233,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:39","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":9232,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:39","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":9236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:39","memberName":"max","nodeType":"MemberAccess","src":"5280:17:39","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9244,"nodeType":"IfStatement","src":"5268:105:39","trueBody":{"id":9243,"nodeType":"Block","src":"5299:74:39","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":9239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:39","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":9240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9226,"src":"5356:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9238,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"5320:30:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":9241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9242,"nodeType":"RevertStatement","src":"5313:49:39"}]}},{"expression":{"arguments":[{"id":9247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9226,"src":"5397:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":9245,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:39","typeDescriptions":{}}},"id":9248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":9230,"id":9249,"nodeType":"Return","src":"5382:21:39"}]},"documentation":{"id":9224,"nodeType":"StructuredDocumentation","src":"4907:280:39","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":9251,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:39","nodeType":"FunctionDefinition","parameters":{"id":9227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9226,"mutability":"mutable","name":"value","nameLocation":"5219:5:39","nodeType":"VariableDeclaration","scope":9251,"src":"5211:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9225,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:39"},"returnParameters":{"id":9230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9229,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9251,"src":"5249:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":9228,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:39","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:39"},"scope":10765,"src":"5192:218:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9278,"nodeType":"Block","src":"5767:152:39","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9254,"src":"5781:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":9262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":9261,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:39","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":9260,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:39","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":9264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:39","memberName":"max","nodeType":"MemberAccess","src":"5789:17:39","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9272,"nodeType":"IfStatement","src":"5777:105:39","trueBody":{"id":9271,"nodeType":"Block","src":"5808:74:39","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":9267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:39","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":9268,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9254,"src":"5865:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9266,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"5829:30:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":9269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9270,"nodeType":"RevertStatement","src":"5822:49:39"}]}},{"expression":{"arguments":[{"id":9275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9254,"src":"5906:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":9273,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:39","typeDescriptions":{}}},"id":9276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":9258,"id":9277,"nodeType":"Return","src":"5891:21:39"}]},"documentation":{"id":9252,"nodeType":"StructuredDocumentation","src":"5416:280:39","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":9279,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:39","nodeType":"FunctionDefinition","parameters":{"id":9255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9254,"mutability":"mutable","name":"value","nameLocation":"5728:5:39","nodeType":"VariableDeclaration","scope":9279,"src":"5720:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9253,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:39"},"returnParameters":{"id":9258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9257,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9279,"src":"5758:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":9256,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:39","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:39"},"scope":10765,"src":"5701:218:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9306,"nodeType":"Block","src":"6276:152:39","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9282,"src":"6290:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":9290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":9289,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:39","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":9288,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:39","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":9292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:39","memberName":"max","nodeType":"MemberAccess","src":"6298:17:39","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9300,"nodeType":"IfStatement","src":"6286:105:39","trueBody":{"id":9299,"nodeType":"Block","src":"6317:74:39","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":9295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:39","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":9296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9282,"src":"6374:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9294,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"6338:30:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":9297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9298,"nodeType":"RevertStatement","src":"6331:49:39"}]}},{"expression":{"arguments":[{"id":9303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9282,"src":"6415:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":9301,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:39","typeDescriptions":{}}},"id":9304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":9286,"id":9305,"nodeType":"Return","src":"6400:21:39"}]},"documentation":{"id":9280,"nodeType":"StructuredDocumentation","src":"5925:280:39","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":9307,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:39","nodeType":"FunctionDefinition","parameters":{"id":9283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9282,"mutability":"mutable","name":"value","nameLocation":"6237:5:39","nodeType":"VariableDeclaration","scope":9307,"src":"6229:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9281,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:39"},"returnParameters":{"id":9286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9307,"src":"6267:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":9284,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:39","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:39"},"scope":10765,"src":"6210:218:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9334,"nodeType":"Block","src":"6785:152:39","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9310,"src":"6799:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":9318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":9317,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:39","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":9316,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:39","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":9320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:39","memberName":"max","nodeType":"MemberAccess","src":"6807:17:39","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9328,"nodeType":"IfStatement","src":"6795:105:39","trueBody":{"id":9327,"nodeType":"Block","src":"6826:74:39","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":9323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:39","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":9324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9310,"src":"6883:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9322,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"6847:30:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":9325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9326,"nodeType":"RevertStatement","src":"6840:49:39"}]}},{"expression":{"arguments":[{"id":9331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9310,"src":"6924:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":9329,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:39","typeDescriptions":{}}},"id":9332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":9314,"id":9333,"nodeType":"Return","src":"6909:21:39"}]},"documentation":{"id":9308,"nodeType":"StructuredDocumentation","src":"6434:280:39","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":9335,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:39","nodeType":"FunctionDefinition","parameters":{"id":9311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9310,"mutability":"mutable","name":"value","nameLocation":"6746:5:39","nodeType":"VariableDeclaration","scope":9335,"src":"6738:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9309,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:39"},"returnParameters":{"id":9314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9335,"src":"6776:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":9312,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:39","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:39"},"scope":10765,"src":"6719:218:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9362,"nodeType":"Block","src":"7294:152:39","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9338,"src":"7308:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":9346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":9345,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:39","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":9344,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:39","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":9348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:39","memberName":"max","nodeType":"MemberAccess","src":"7316:17:39","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9356,"nodeType":"IfStatement","src":"7304:105:39","trueBody":{"id":9355,"nodeType":"Block","src":"7335:74:39","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":9351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:39","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":9352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9338,"src":"7392:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9350,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"7356:30:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":9353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9354,"nodeType":"RevertStatement","src":"7349:49:39"}]}},{"expression":{"arguments":[{"id":9359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9338,"src":"7433:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":9357,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:39","typeDescriptions":{}}},"id":9360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":9342,"id":9361,"nodeType":"Return","src":"7418:21:39"}]},"documentation":{"id":9336,"nodeType":"StructuredDocumentation","src":"6943:280:39","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":9363,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:39","nodeType":"FunctionDefinition","parameters":{"id":9339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9338,"mutability":"mutable","name":"value","nameLocation":"7255:5:39","nodeType":"VariableDeclaration","scope":9363,"src":"7247:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9337,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:39"},"returnParameters":{"id":9342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9363,"src":"7285:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9340,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:39","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:39"},"scope":10765,"src":"7228:218:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9390,"nodeType":"Block","src":"7803:152:39","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9366,"src":"7817:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":9374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":9373,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:39","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":9372,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:39","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":9376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:39","memberName":"max","nodeType":"MemberAccess","src":"7825:17:39","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9384,"nodeType":"IfStatement","src":"7813:105:39","trueBody":{"id":9383,"nodeType":"Block","src":"7844:74:39","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":9379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:39","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":9380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9366,"src":"7901:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9378,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"7865:30:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":9381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9382,"nodeType":"RevertStatement","src":"7858:49:39"}]}},{"expression":{"arguments":[{"id":9387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9366,"src":"7942:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":9385,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:39","typeDescriptions":{}}},"id":9388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":9370,"id":9389,"nodeType":"Return","src":"7927:21:39"}]},"documentation":{"id":9364,"nodeType":"StructuredDocumentation","src":"7452:280:39","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":9391,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:39","nodeType":"FunctionDefinition","parameters":{"id":9367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9366,"mutability":"mutable","name":"value","nameLocation":"7764:5:39","nodeType":"VariableDeclaration","scope":9391,"src":"7756:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9365,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:39"},"returnParameters":{"id":9370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9391,"src":"7794:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":9368,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:39","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:39"},"scope":10765,"src":"7737:218:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9418,"nodeType":"Block","src":"8312:152:39","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9394,"src":"8326:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":9402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":9401,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:39","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":9400,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:39","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":9404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:39","memberName":"max","nodeType":"MemberAccess","src":"8334:17:39","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9412,"nodeType":"IfStatement","src":"8322:105:39","trueBody":{"id":9411,"nodeType":"Block","src":"8353:74:39","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":9407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:39","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":9408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9394,"src":"8410:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9406,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"8374:30:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":9409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9410,"nodeType":"RevertStatement","src":"8367:49:39"}]}},{"expression":{"arguments":[{"id":9415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9394,"src":"8451:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":9413,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:39","typeDescriptions":{}}},"id":9416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":9398,"id":9417,"nodeType":"Return","src":"8436:21:39"}]},"documentation":{"id":9392,"nodeType":"StructuredDocumentation","src":"7961:280:39","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":9419,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:39","nodeType":"FunctionDefinition","parameters":{"id":9395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9394,"mutability":"mutable","name":"value","nameLocation":"8273:5:39","nodeType":"VariableDeclaration","scope":9419,"src":"8265:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9393,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:39"},"returnParameters":{"id":9398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9419,"src":"8303:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":9396,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:39","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:39"},"scope":10765,"src":"8246:218:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9446,"nodeType":"Block","src":"8821:152:39","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9427,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9422,"src":"8835:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":9430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":9429,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:39","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":9428,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:39","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":9432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:39","memberName":"max","nodeType":"MemberAccess","src":"8843:17:39","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9440,"nodeType":"IfStatement","src":"8831:105:39","trueBody":{"id":9439,"nodeType":"Block","src":"8862:74:39","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":9435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:39","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":9436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9422,"src":"8919:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9434,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"8883:30:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":9437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9438,"nodeType":"RevertStatement","src":"8876:49:39"}]}},{"expression":{"arguments":[{"id":9443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9422,"src":"8960:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":9441,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:39","typeDescriptions":{}}},"id":9444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":9426,"id":9445,"nodeType":"Return","src":"8945:21:39"}]},"documentation":{"id":9420,"nodeType":"StructuredDocumentation","src":"8470:280:39","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":9447,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:39","nodeType":"FunctionDefinition","parameters":{"id":9423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9422,"mutability":"mutable","name":"value","nameLocation":"8782:5:39","nodeType":"VariableDeclaration","scope":9447,"src":"8774:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9421,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:39"},"returnParameters":{"id":9426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9447,"src":"8812:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":9424,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:39","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:39"},"scope":10765,"src":"8755:218:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9474,"nodeType":"Block","src":"9330:152:39","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9450,"src":"9344:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":9458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":9457,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:39","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":9456,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:39","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":9460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:39","memberName":"max","nodeType":"MemberAccess","src":"9352:17:39","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9468,"nodeType":"IfStatement","src":"9340:105:39","trueBody":{"id":9467,"nodeType":"Block","src":"9371:74:39","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":9463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:39","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":9464,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9450,"src":"9428:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9462,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"9392:30:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":9465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9466,"nodeType":"RevertStatement","src":"9385:49:39"}]}},{"expression":{"arguments":[{"id":9471,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9450,"src":"9469:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":9469,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:39","typeDescriptions":{}}},"id":9472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":9454,"id":9473,"nodeType":"Return","src":"9454:21:39"}]},"documentation":{"id":9448,"nodeType":"StructuredDocumentation","src":"8979:280:39","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":9475,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:39","nodeType":"FunctionDefinition","parameters":{"id":9451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9450,"mutability":"mutable","name":"value","nameLocation":"9291:5:39","nodeType":"VariableDeclaration","scope":9475,"src":"9283:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9449,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:39"},"returnParameters":{"id":9454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9475,"src":"9321:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":9452,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:39","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:39"},"scope":10765,"src":"9264:218:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9502,"nodeType":"Block","src":"9839:152:39","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9478,"src":"9853:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":9486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":9485,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:39","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":9484,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:39","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":9488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:39","memberName":"max","nodeType":"MemberAccess","src":"9861:17:39","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9496,"nodeType":"IfStatement","src":"9849:105:39","trueBody":{"id":9495,"nodeType":"Block","src":"9880:74:39","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":9491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:39","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":9492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9478,"src":"9937:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9490,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"9901:30:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":9493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9494,"nodeType":"RevertStatement","src":"9894:49:39"}]}},{"expression":{"arguments":[{"id":9499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9478,"src":"9978:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":9497,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:39","typeDescriptions":{}}},"id":9500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":9482,"id":9501,"nodeType":"Return","src":"9963:21:39"}]},"documentation":{"id":9476,"nodeType":"StructuredDocumentation","src":"9488:280:39","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":9503,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:39","nodeType":"FunctionDefinition","parameters":{"id":9479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9478,"mutability":"mutable","name":"value","nameLocation":"9800:5:39","nodeType":"VariableDeclaration","scope":9503,"src":"9792:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9477,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:39"},"returnParameters":{"id":9482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9503,"src":"9830:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":9480,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:39","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:39"},"scope":10765,"src":"9773:218:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9530,"nodeType":"Block","src":"10348:152:39","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9506,"src":"10362:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":9514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":9513,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:39","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":9512,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:39","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":9516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:39","memberName":"max","nodeType":"MemberAccess","src":"10370:17:39","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9524,"nodeType":"IfStatement","src":"10358:105:39","trueBody":{"id":9523,"nodeType":"Block","src":"10389:74:39","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":9519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:39","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":9520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9506,"src":"10446:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9518,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"10410:30:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":9521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9522,"nodeType":"RevertStatement","src":"10403:49:39"}]}},{"expression":{"arguments":[{"id":9527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9506,"src":"10487:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":9525,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:39","typeDescriptions":{}}},"id":9528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":9510,"id":9529,"nodeType":"Return","src":"10472:21:39"}]},"documentation":{"id":9504,"nodeType":"StructuredDocumentation","src":"9997:280:39","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":9531,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:39","nodeType":"FunctionDefinition","parameters":{"id":9507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9506,"mutability":"mutable","name":"value","nameLocation":"10309:5:39","nodeType":"VariableDeclaration","scope":9531,"src":"10301:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9505,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:39"},"returnParameters":{"id":9510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9509,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9531,"src":"10339:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":9508,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:39","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:39"},"scope":10765,"src":"10282:218:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9558,"nodeType":"Block","src":"10857:152:39","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9534,"src":"10871:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":9542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":9541,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:39","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":9540,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:39","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":9544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:39","memberName":"max","nodeType":"MemberAccess","src":"10879:17:39","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9552,"nodeType":"IfStatement","src":"10867:105:39","trueBody":{"id":9551,"nodeType":"Block","src":"10898:74:39","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":9547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:39","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":9548,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9534,"src":"10955:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9546,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"10919:30:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":9549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9550,"nodeType":"RevertStatement","src":"10912:49:39"}]}},{"expression":{"arguments":[{"id":9555,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9534,"src":"10996:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":9553,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:39","typeDescriptions":{}}},"id":9556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":9538,"id":9557,"nodeType":"Return","src":"10981:21:39"}]},"documentation":{"id":9532,"nodeType":"StructuredDocumentation","src":"10506:280:39","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":9559,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:39","nodeType":"FunctionDefinition","parameters":{"id":9535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9534,"mutability":"mutable","name":"value","nameLocation":"10818:5:39","nodeType":"VariableDeclaration","scope":9559,"src":"10810:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9533,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:39"},"returnParameters":{"id":9538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9537,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9559,"src":"10848:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":9536,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:39","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:39"},"scope":10765,"src":"10791:218:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9586,"nodeType":"Block","src":"11360:149:39","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9562,"src":"11374:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":9570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":9569,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:39","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":9568,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:39","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":9572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:39","memberName":"max","nodeType":"MemberAccess","src":"11382:16:39","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9580,"nodeType":"IfStatement","src":"11370:103:39","trueBody":{"id":9579,"nodeType":"Block","src":"11400:73:39","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":9575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:39","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":9576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9562,"src":"11456:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9574,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"11421:30:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":9577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9578,"nodeType":"RevertStatement","src":"11414:48:39"}]}},{"expression":{"arguments":[{"id":9583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9562,"src":"11496:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":9581,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:39","typeDescriptions":{}}},"id":9584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":9566,"id":9585,"nodeType":"Return","src":"11482:20:39"}]},"documentation":{"id":9560,"nodeType":"StructuredDocumentation","src":"11015:276:39","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":9587,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:39","nodeType":"FunctionDefinition","parameters":{"id":9563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9562,"mutability":"mutable","name":"value","nameLocation":"11322:5:39","nodeType":"VariableDeclaration","scope":9587,"src":"11314:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9561,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:39"},"returnParameters":{"id":9566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9565,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9587,"src":"11352:6:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9564,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:39","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:39"},"scope":10765,"src":"11296:213:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9614,"nodeType":"Block","src":"11860:149:39","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9590,"src":"11874:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":9598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":9597,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:39","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":9596,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:39","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":9600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:39","memberName":"max","nodeType":"MemberAccess","src":"11882:16:39","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9608,"nodeType":"IfStatement","src":"11870:103:39","trueBody":{"id":9607,"nodeType":"Block","src":"11900:73:39","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":9603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:39","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":9604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9590,"src":"11956:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9602,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"11921:30:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":9605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9606,"nodeType":"RevertStatement","src":"11914:48:39"}]}},{"expression":{"arguments":[{"id":9611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9590,"src":"11996:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":9609,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:39","typeDescriptions":{}}},"id":9612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":9594,"id":9613,"nodeType":"Return","src":"11982:20:39"}]},"documentation":{"id":9588,"nodeType":"StructuredDocumentation","src":"11515:276:39","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":9615,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:39","nodeType":"FunctionDefinition","parameters":{"id":9591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9590,"mutability":"mutable","name":"value","nameLocation":"11822:5:39","nodeType":"VariableDeclaration","scope":9615,"src":"11814:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9589,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:39"},"returnParameters":{"id":9594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9593,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9615,"src":"11852:6:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":9592,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:39","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:39"},"scope":10765,"src":"11796:213:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9642,"nodeType":"Block","src":"12360:149:39","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9623,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9618,"src":"12374:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":9626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":9625,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:39","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":9624,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:39","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":9628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:39","memberName":"max","nodeType":"MemberAccess","src":"12382:16:39","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9636,"nodeType":"IfStatement","src":"12370:103:39","trueBody":{"id":9635,"nodeType":"Block","src":"12400:73:39","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":9631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:39","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":9632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9618,"src":"12456:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9630,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"12421:30:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":9633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9634,"nodeType":"RevertStatement","src":"12414:48:39"}]}},{"expression":{"arguments":[{"id":9639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9618,"src":"12496:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":9637,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:39","typeDescriptions":{}}},"id":9640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":9622,"id":9641,"nodeType":"Return","src":"12482:20:39"}]},"documentation":{"id":9616,"nodeType":"StructuredDocumentation","src":"12015:276:39","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":9643,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:39","nodeType":"FunctionDefinition","parameters":{"id":9619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9618,"mutability":"mutable","name":"value","nameLocation":"12322:5:39","nodeType":"VariableDeclaration","scope":9643,"src":"12314:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9617,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:39"},"returnParameters":{"id":9622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9643,"src":"12352:6:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":9620,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:39","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:39"},"scope":10765,"src":"12296:213:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9670,"nodeType":"Block","src":"12860:149:39","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9646,"src":"12874:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":9654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":9653,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:39","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":9652,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:39","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":9656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:39","memberName":"max","nodeType":"MemberAccess","src":"12882:16:39","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9664,"nodeType":"IfStatement","src":"12870:103:39","trueBody":{"id":9663,"nodeType":"Block","src":"12900:73:39","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":9659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:39","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":9660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9646,"src":"12956:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9658,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"12921:30:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":9661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9662,"nodeType":"RevertStatement","src":"12914:48:39"}]}},{"expression":{"arguments":[{"id":9667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9646,"src":"12996:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":9665,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:39","typeDescriptions":{}}},"id":9668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":9650,"id":9669,"nodeType":"Return","src":"12982:20:39"}]},"documentation":{"id":9644,"nodeType":"StructuredDocumentation","src":"12515:276:39","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":9671,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:39","nodeType":"FunctionDefinition","parameters":{"id":9647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9646,"mutability":"mutable","name":"value","nameLocation":"12822:5:39","nodeType":"VariableDeclaration","scope":9671,"src":"12814:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9645,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:39"},"returnParameters":{"id":9650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9671,"src":"12852:6:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":9648,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:39","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:39"},"scope":10765,"src":"12796:213:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9698,"nodeType":"Block","src":"13360:149:39","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9674,"src":"13374:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":9682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":9681,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:39","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":9680,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:39","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":9684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:39","memberName":"max","nodeType":"MemberAccess","src":"13382:16:39","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9692,"nodeType":"IfStatement","src":"13370:103:39","trueBody":{"id":9691,"nodeType":"Block","src":"13400:73:39","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":9687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:39","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":9688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9674,"src":"13456:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9686,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"13421:30:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":9689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9690,"nodeType":"RevertStatement","src":"13414:48:39"}]}},{"expression":{"arguments":[{"id":9695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9674,"src":"13496:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":9693,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:39","typeDescriptions":{}}},"id":9696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":9678,"id":9697,"nodeType":"Return","src":"13482:20:39"}]},"documentation":{"id":9672,"nodeType":"StructuredDocumentation","src":"13015:276:39","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":9699,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:39","nodeType":"FunctionDefinition","parameters":{"id":9675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9674,"mutability":"mutable","name":"value","nameLocation":"13322:5:39","nodeType":"VariableDeclaration","scope":9699,"src":"13314:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9673,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:39"},"returnParameters":{"id":9678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9677,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9699,"src":"13352:6:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":9676,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:39","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:39"},"scope":10765,"src":"13296:213:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9726,"nodeType":"Block","src":"13860:149:39","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9702,"src":"13874:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":9710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":9709,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:39","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":9708,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:39","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":9712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:39","memberName":"max","nodeType":"MemberAccess","src":"13882:16:39","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9720,"nodeType":"IfStatement","src":"13870:103:39","trueBody":{"id":9719,"nodeType":"Block","src":"13900:73:39","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":9715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:39","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":9716,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9702,"src":"13956:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9714,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"13921:30:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":9717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9718,"nodeType":"RevertStatement","src":"13914:48:39"}]}},{"expression":{"arguments":[{"id":9723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9702,"src":"13996:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":9721,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:39","typeDescriptions":{}}},"id":9724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":9706,"id":9725,"nodeType":"Return","src":"13982:20:39"}]},"documentation":{"id":9700,"nodeType":"StructuredDocumentation","src":"13515:276:39","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":9727,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:39","nodeType":"FunctionDefinition","parameters":{"id":9703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9702,"mutability":"mutable","name":"value","nameLocation":"13822:5:39","nodeType":"VariableDeclaration","scope":9727,"src":"13814:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9701,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:39"},"returnParameters":{"id":9706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9705,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9727,"src":"13852:6:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":9704,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:39","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:39"},"scope":10765,"src":"13796:213:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9754,"nodeType":"Block","src":"14360:149:39","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9730,"src":"14374:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":9738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":9737,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:39","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":9736,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:39","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":9740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:39","memberName":"max","nodeType":"MemberAccess","src":"14382:16:39","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9748,"nodeType":"IfStatement","src":"14370:103:39","trueBody":{"id":9747,"nodeType":"Block","src":"14400:73:39","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":9743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:39","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":9744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9730,"src":"14456:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9742,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"14421:30:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":9745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9746,"nodeType":"RevertStatement","src":"14414:48:39"}]}},{"expression":{"arguments":[{"id":9751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9730,"src":"14496:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":9749,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:39","typeDescriptions":{}}},"id":9752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":9734,"id":9753,"nodeType":"Return","src":"14482:20:39"}]},"documentation":{"id":9728,"nodeType":"StructuredDocumentation","src":"14015:276:39","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":9755,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:39","nodeType":"FunctionDefinition","parameters":{"id":9731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9730,"mutability":"mutable","name":"value","nameLocation":"14322:5:39","nodeType":"VariableDeclaration","scope":9755,"src":"14314:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9729,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:39"},"returnParameters":{"id":9734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9733,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9755,"src":"14352:6:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9732,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:39","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:39"},"scope":10765,"src":"14296:213:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9782,"nodeType":"Block","src":"14860:149:39","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9758,"src":"14874:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":9766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":9765,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:39","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":9764,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:39","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":9768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:39","memberName":"max","nodeType":"MemberAccess","src":"14882:16:39","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9776,"nodeType":"IfStatement","src":"14870:103:39","trueBody":{"id":9775,"nodeType":"Block","src":"14900:73:39","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":9771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:39","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":9772,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9758,"src":"14956:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9770,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"14921:30:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":9773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9774,"nodeType":"RevertStatement","src":"14914:48:39"}]}},{"expression":{"arguments":[{"id":9779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9758,"src":"14996:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":9777,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:39","typeDescriptions":{}}},"id":9780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":9762,"id":9781,"nodeType":"Return","src":"14982:20:39"}]},"documentation":{"id":9756,"nodeType":"StructuredDocumentation","src":"14515:276:39","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":9783,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:39","nodeType":"FunctionDefinition","parameters":{"id":9759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9758,"mutability":"mutable","name":"value","nameLocation":"14822:5:39","nodeType":"VariableDeclaration","scope":9783,"src":"14814:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9757,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:39"},"returnParameters":{"id":9762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9783,"src":"14852:6:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":9760,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:39","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:39"},"scope":10765,"src":"14796:213:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9810,"nodeType":"Block","src":"15360:149:39","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9786,"src":"15374:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":9794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":9793,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:39","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":9792,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:39","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":9796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:39","memberName":"max","nodeType":"MemberAccess","src":"15382:16:39","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9804,"nodeType":"IfStatement","src":"15370:103:39","trueBody":{"id":9803,"nodeType":"Block","src":"15400:73:39","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":9799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:39","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":9800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9786,"src":"15456:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9798,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"15421:30:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":9801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9802,"nodeType":"RevertStatement","src":"15414:48:39"}]}},{"expression":{"arguments":[{"id":9807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9786,"src":"15496:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":9805,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:39","typeDescriptions":{}}},"id":9808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":9790,"id":9809,"nodeType":"Return","src":"15482:20:39"}]},"documentation":{"id":9784,"nodeType":"StructuredDocumentation","src":"15015:276:39","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":9811,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:39","nodeType":"FunctionDefinition","parameters":{"id":9787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9786,"mutability":"mutable","name":"value","nameLocation":"15322:5:39","nodeType":"VariableDeclaration","scope":9811,"src":"15314:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9785,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:39"},"returnParameters":{"id":9790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9811,"src":"15352:6:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9788,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:39","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:39"},"scope":10765,"src":"15296:213:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9838,"nodeType":"Block","src":"15860:149:39","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9814,"src":"15874:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":9822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":9821,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:39","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":9820,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:39","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":9824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:39","memberName":"max","nodeType":"MemberAccess","src":"15882:16:39","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9832,"nodeType":"IfStatement","src":"15870:103:39","trueBody":{"id":9831,"nodeType":"Block","src":"15900:73:39","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":9827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:39","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":9828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9814,"src":"15956:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9826,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"15921:30:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":9829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9830,"nodeType":"RevertStatement","src":"15914:48:39"}]}},{"expression":{"arguments":[{"id":9835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9814,"src":"15996:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":9833,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:39","typeDescriptions":{}}},"id":9836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":9818,"id":9837,"nodeType":"Return","src":"15982:20:39"}]},"documentation":{"id":9812,"nodeType":"StructuredDocumentation","src":"15515:276:39","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":9839,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:39","nodeType":"FunctionDefinition","parameters":{"id":9815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9814,"mutability":"mutable","name":"value","nameLocation":"15822:5:39","nodeType":"VariableDeclaration","scope":9839,"src":"15814:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9813,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:39"},"returnParameters":{"id":9818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9817,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9839,"src":"15852:6:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":9816,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:39","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:39"},"scope":10765,"src":"15796:213:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9866,"nodeType":"Block","src":"16360:149:39","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9842,"src":"16374:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":9850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":9849,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:39","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":9848,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:39","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":9852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:39","memberName":"max","nodeType":"MemberAccess","src":"16382:16:39","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9860,"nodeType":"IfStatement","src":"16370:103:39","trueBody":{"id":9859,"nodeType":"Block","src":"16400:73:39","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":9855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:39","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":9856,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9842,"src":"16456:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9854,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"16421:30:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":9857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9858,"nodeType":"RevertStatement","src":"16414:48:39"}]}},{"expression":{"arguments":[{"id":9863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9842,"src":"16496:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":9861,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:39","typeDescriptions":{}}},"id":9864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":9846,"id":9865,"nodeType":"Return","src":"16482:20:39"}]},"documentation":{"id":9840,"nodeType":"StructuredDocumentation","src":"16015:276:39","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":9867,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:39","nodeType":"FunctionDefinition","parameters":{"id":9843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9842,"mutability":"mutable","name":"value","nameLocation":"16322:5:39","nodeType":"VariableDeclaration","scope":9867,"src":"16314:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9841,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:39"},"returnParameters":{"id":9846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9845,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9867,"src":"16352:6:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":9844,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:39","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:39"},"scope":10765,"src":"16296:213:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9894,"nodeType":"Block","src":"16854:146:39","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9870,"src":"16868:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":9878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":9877,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:39","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":9876,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:39","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":9880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:39","memberName":"max","nodeType":"MemberAccess","src":"16876:15:39","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9888,"nodeType":"IfStatement","src":"16864:101:39","trueBody":{"id":9887,"nodeType":"Block","src":"16893:72:39","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":9883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:39","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":9884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9870,"src":"16948:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9882,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9010,"src":"16914:30:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":9885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9886,"nodeType":"RevertStatement","src":"16907:47:39"}]}},{"expression":{"arguments":[{"id":9891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9870,"src":"16987:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":9889,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:39","typeDescriptions":{}}},"id":9892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":9874,"id":9893,"nodeType":"Return","src":"16974:19:39"}]},"documentation":{"id":9868,"nodeType":"StructuredDocumentation","src":"16515:272:39","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":9895,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:39","nodeType":"FunctionDefinition","parameters":{"id":9871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9870,"mutability":"mutable","name":"value","nameLocation":"16817:5:39","nodeType":"VariableDeclaration","scope":9895,"src":"16809:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9869,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:39"},"returnParameters":{"id":9874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9873,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9895,"src":"16847:5:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":9872,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:39","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:39"},"scope":10765,"src":"16792:208:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9917,"nodeType":"Block","src":"17236:128:39","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9903,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9898,"src":"17250:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":9904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:39","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9911,"nodeType":"IfStatement","src":"17246:81:39","trueBody":{"id":9910,"nodeType":"Block","src":"17261:66:39","statements":[{"errorCall":{"arguments":[{"id":9907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9898,"src":"17310:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9906,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9015,"src":"17282:27:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":9908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9909,"nodeType":"RevertStatement","src":"17275:41:39"}]}},{"expression":{"arguments":[{"id":9914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9898,"src":"17351:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9912,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:39","typeDescriptions":{}}},"id":9915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9902,"id":9916,"nodeType":"Return","src":"17336:21:39"}]},"documentation":{"id":9896,"nodeType":"StructuredDocumentation","src":"17006:160:39","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":9918,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:39","nodeType":"FunctionDefinition","parameters":{"id":9899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9898,"mutability":"mutable","name":"value","nameLocation":"17197:5:39","nodeType":"VariableDeclaration","scope":9918,"src":"17190:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9897,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:39"},"returnParameters":{"id":9902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9901,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9918,"src":"17227:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9900,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:39"},"scope":10765,"src":"17171:193:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9943,"nodeType":"Block","src":"17761:150:39","statements":[{"expression":{"id":9931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9926,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9924,"src":"17771:10:39","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9921,"src":"17791:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":9927,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:39","typeDescriptions":{}}},"id":9930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:39","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":9932,"nodeType":"ExpressionStatement","src":"17771:26:39"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9933,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9924,"src":"17811:10:39","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9921,"src":"17825:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9942,"nodeType":"IfStatement","src":"17807:98:39","trueBody":{"id":9941,"nodeType":"Block","src":"17832:73:39","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":9937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:39","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":9938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9921,"src":"17888:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9936,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"17853:29:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9940,"nodeType":"RevertStatement","src":"17846:48:39"}]}}]},"documentation":{"id":9919,"nodeType":"StructuredDocumentation","src":"17370:312:39","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":9944,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:39","nodeType":"FunctionDefinition","parameters":{"id":9922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9921,"mutability":"mutable","name":"value","nameLocation":"17712:5:39","nodeType":"VariableDeclaration","scope":9944,"src":"17705:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9920,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:39"},"returnParameters":{"id":9925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9924,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:39","nodeType":"VariableDeclaration","scope":9944,"src":"17742:17:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":9923,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:39","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:39"},"scope":10765,"src":"17687:224:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9969,"nodeType":"Block","src":"18308:150:39","statements":[{"expression":{"id":9957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9952,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9950,"src":"18318:10:39","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9947,"src":"18338:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":9953,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:39","typeDescriptions":{}}},"id":9956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:39","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":9958,"nodeType":"ExpressionStatement","src":"18318:26:39"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9959,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9950,"src":"18358:10:39","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9960,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9947,"src":"18372:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9968,"nodeType":"IfStatement","src":"18354:98:39","trueBody":{"id":9967,"nodeType":"Block","src":"18379:73:39","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":9963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:39","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":9964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9947,"src":"18435:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9962,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"18400:29:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9966,"nodeType":"RevertStatement","src":"18393:48:39"}]}}]},"documentation":{"id":9945,"nodeType":"StructuredDocumentation","src":"17917:312:39","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":9970,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:39","nodeType":"FunctionDefinition","parameters":{"id":9948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9947,"mutability":"mutable","name":"value","nameLocation":"18259:5:39","nodeType":"VariableDeclaration","scope":9970,"src":"18252:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9946,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:39"},"returnParameters":{"id":9951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9950,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:39","nodeType":"VariableDeclaration","scope":9970,"src":"18289:17:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":9949,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:39","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:39"},"scope":10765,"src":"18234:224:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9995,"nodeType":"Block","src":"18855:150:39","statements":[{"expression":{"id":9983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9978,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9976,"src":"18865:10:39","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9973,"src":"18885:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":9979,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:39","typeDescriptions":{}}},"id":9982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:39","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":9984,"nodeType":"ExpressionStatement","src":"18865:26:39"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9985,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9976,"src":"18905:10:39","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9973,"src":"18919:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9994,"nodeType":"IfStatement","src":"18901:98:39","trueBody":{"id":9993,"nodeType":"Block","src":"18926:73:39","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":9989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:39","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":9990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9973,"src":"18982:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9988,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"18947:29:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9992,"nodeType":"RevertStatement","src":"18940:48:39"}]}}]},"documentation":{"id":9971,"nodeType":"StructuredDocumentation","src":"18464:312:39","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":9996,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:39","nodeType":"FunctionDefinition","parameters":{"id":9974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9973,"mutability":"mutable","name":"value","nameLocation":"18806:5:39","nodeType":"VariableDeclaration","scope":9996,"src":"18799:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9972,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:39"},"returnParameters":{"id":9977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9976,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:39","nodeType":"VariableDeclaration","scope":9996,"src":"18836:17:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":9975,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:39","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:39"},"scope":10765,"src":"18781:224:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10021,"nodeType":"Block","src":"19402:150:39","statements":[{"expression":{"id":10009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10004,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10002,"src":"19412:10:39","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9999,"src":"19432:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":10005,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:39","typeDescriptions":{}}},"id":10008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:39","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":10010,"nodeType":"ExpressionStatement","src":"19412:26:39"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10011,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10002,"src":"19452:10:39","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9999,"src":"19466:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10020,"nodeType":"IfStatement","src":"19448:98:39","trueBody":{"id":10019,"nodeType":"Block","src":"19473:73:39","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":10015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:39","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":10016,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9999,"src":"19529:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10014,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"19494:29:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":10017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10018,"nodeType":"RevertStatement","src":"19487:48:39"}]}}]},"documentation":{"id":9997,"nodeType":"StructuredDocumentation","src":"19011:312:39","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":10022,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:39","nodeType":"FunctionDefinition","parameters":{"id":10000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9999,"mutability":"mutable","name":"value","nameLocation":"19353:5:39","nodeType":"VariableDeclaration","scope":10022,"src":"19346:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9998,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:39"},"returnParameters":{"id":10003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10002,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:39","nodeType":"VariableDeclaration","scope":10022,"src":"19383:17:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":10001,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:39","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:39"},"scope":10765,"src":"19328:224:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10047,"nodeType":"Block","src":"19949:150:39","statements":[{"expression":{"id":10035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10030,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10028,"src":"19959:10:39","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10025,"src":"19979:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":10031,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:39","typeDescriptions":{}}},"id":10034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:39","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":10036,"nodeType":"ExpressionStatement","src":"19959:26:39"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10037,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10028,"src":"19999:10:39","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10025,"src":"20013:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10046,"nodeType":"IfStatement","src":"19995:98:39","trueBody":{"id":10045,"nodeType":"Block","src":"20020:73:39","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":10041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:39","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":10042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10025,"src":"20076:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10040,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"20041:29:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":10043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10044,"nodeType":"RevertStatement","src":"20034:48:39"}]}}]},"documentation":{"id":10023,"nodeType":"StructuredDocumentation","src":"19558:312:39","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":10048,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:39","nodeType":"FunctionDefinition","parameters":{"id":10026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10025,"mutability":"mutable","name":"value","nameLocation":"19900:5:39","nodeType":"VariableDeclaration","scope":10048,"src":"19893:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10024,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:39"},"returnParameters":{"id":10029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10028,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:39","nodeType":"VariableDeclaration","scope":10048,"src":"19930:17:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":10027,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:39","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:39"},"scope":10765,"src":"19875:224:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10073,"nodeType":"Block","src":"20496:150:39","statements":[{"expression":{"id":10061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10056,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10054,"src":"20506:10:39","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10051,"src":"20526:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":10057,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:39","typeDescriptions":{}}},"id":10060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:39","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":10062,"nodeType":"ExpressionStatement","src":"20506:26:39"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10063,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10054,"src":"20546:10:39","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10051,"src":"20560:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10072,"nodeType":"IfStatement","src":"20542:98:39","trueBody":{"id":10071,"nodeType":"Block","src":"20567:73:39","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":10067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:39","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":10068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10051,"src":"20623:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10066,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"20588:29:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":10069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10070,"nodeType":"RevertStatement","src":"20581:48:39"}]}}]},"documentation":{"id":10049,"nodeType":"StructuredDocumentation","src":"20105:312:39","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":10074,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:39","nodeType":"FunctionDefinition","parameters":{"id":10052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10051,"mutability":"mutable","name":"value","nameLocation":"20447:5:39","nodeType":"VariableDeclaration","scope":10074,"src":"20440:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10050,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:39"},"returnParameters":{"id":10055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10054,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:39","nodeType":"VariableDeclaration","scope":10074,"src":"20477:17:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":10053,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:39","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:39"},"scope":10765,"src":"20422:224:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10099,"nodeType":"Block","src":"21043:150:39","statements":[{"expression":{"id":10087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10082,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10080,"src":"21053:10:39","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10077,"src":"21073:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":10083,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:39","typeDescriptions":{}}},"id":10086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:39","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":10088,"nodeType":"ExpressionStatement","src":"21053:26:39"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10089,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10080,"src":"21093:10:39","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10077,"src":"21107:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10098,"nodeType":"IfStatement","src":"21089:98:39","trueBody":{"id":10097,"nodeType":"Block","src":"21114:73:39","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":10093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:39","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":10094,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10077,"src":"21170:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10092,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"21135:29:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":10095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10096,"nodeType":"RevertStatement","src":"21128:48:39"}]}}]},"documentation":{"id":10075,"nodeType":"StructuredDocumentation","src":"20652:312:39","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":10100,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:39","nodeType":"FunctionDefinition","parameters":{"id":10078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10077,"mutability":"mutable","name":"value","nameLocation":"20994:5:39","nodeType":"VariableDeclaration","scope":10100,"src":"20987:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10076,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:39"},"returnParameters":{"id":10081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10080,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:39","nodeType":"VariableDeclaration","scope":10100,"src":"21024:17:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":10079,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:39","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:39"},"scope":10765,"src":"20969:224:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10125,"nodeType":"Block","src":"21590:150:39","statements":[{"expression":{"id":10113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10108,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10106,"src":"21600:10:39","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10103,"src":"21620:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":10109,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:39","typeDescriptions":{}}},"id":10112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:39","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":10114,"nodeType":"ExpressionStatement","src":"21600:26:39"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10115,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10106,"src":"21640:10:39","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10116,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10103,"src":"21654:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10124,"nodeType":"IfStatement","src":"21636:98:39","trueBody":{"id":10123,"nodeType":"Block","src":"21661:73:39","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":10119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:39","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":10120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10103,"src":"21717:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10118,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"21682:29:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":10121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10122,"nodeType":"RevertStatement","src":"21675:48:39"}]}}]},"documentation":{"id":10101,"nodeType":"StructuredDocumentation","src":"21199:312:39","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":10126,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:39","nodeType":"FunctionDefinition","parameters":{"id":10104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10103,"mutability":"mutable","name":"value","nameLocation":"21541:5:39","nodeType":"VariableDeclaration","scope":10126,"src":"21534:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10102,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:39"},"returnParameters":{"id":10107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10106,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:39","nodeType":"VariableDeclaration","scope":10126,"src":"21571:17:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":10105,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:39","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:39"},"scope":10765,"src":"21516:224:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10151,"nodeType":"Block","src":"22137:150:39","statements":[{"expression":{"id":10139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10134,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10132,"src":"22147:10:39","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10137,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10129,"src":"22167:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":10135,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:39","typeDescriptions":{}}},"id":10138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:39","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":10140,"nodeType":"ExpressionStatement","src":"22147:26:39"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10141,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10132,"src":"22187:10:39","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10129,"src":"22201:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10150,"nodeType":"IfStatement","src":"22183:98:39","trueBody":{"id":10149,"nodeType":"Block","src":"22208:73:39","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":10145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:39","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":10146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10129,"src":"22264:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10144,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"22229:29:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":10147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10148,"nodeType":"RevertStatement","src":"22222:48:39"}]}}]},"documentation":{"id":10127,"nodeType":"StructuredDocumentation","src":"21746:312:39","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":10152,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:39","nodeType":"FunctionDefinition","parameters":{"id":10130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10129,"mutability":"mutable","name":"value","nameLocation":"22088:5:39","nodeType":"VariableDeclaration","scope":10152,"src":"22081:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10128,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:39"},"returnParameters":{"id":10133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10132,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:39","nodeType":"VariableDeclaration","scope":10152,"src":"22118:17:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":10131,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:39","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:39"},"scope":10765,"src":"22063:224:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10177,"nodeType":"Block","src":"22684:150:39","statements":[{"expression":{"id":10165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10160,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10158,"src":"22694:10:39","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10155,"src":"22714:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":10161,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:39","typeDescriptions":{}}},"id":10164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:39","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":10166,"nodeType":"ExpressionStatement","src":"22694:26:39"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10167,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10158,"src":"22734:10:39","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10155,"src":"22748:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10176,"nodeType":"IfStatement","src":"22730:98:39","trueBody":{"id":10175,"nodeType":"Block","src":"22755:73:39","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":10171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:39","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":10172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10155,"src":"22811:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10170,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"22776:29:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":10173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10174,"nodeType":"RevertStatement","src":"22769:48:39"}]}}]},"documentation":{"id":10153,"nodeType":"StructuredDocumentation","src":"22293:312:39","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":10178,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:39","nodeType":"FunctionDefinition","parameters":{"id":10156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10155,"mutability":"mutable","name":"value","nameLocation":"22635:5:39","nodeType":"VariableDeclaration","scope":10178,"src":"22628:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10154,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:39"},"returnParameters":{"id":10159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10158,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:39","nodeType":"VariableDeclaration","scope":10178,"src":"22665:17:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":10157,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:39","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:39"},"scope":10765,"src":"22610:224:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10203,"nodeType":"Block","src":"23231:150:39","statements":[{"expression":{"id":10191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10186,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10184,"src":"23241:10:39","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10181,"src":"23261:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":10187,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:39","typeDescriptions":{}}},"id":10190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:39","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":10192,"nodeType":"ExpressionStatement","src":"23241:26:39"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10193,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10184,"src":"23281:10:39","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10181,"src":"23295:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10202,"nodeType":"IfStatement","src":"23277:98:39","trueBody":{"id":10201,"nodeType":"Block","src":"23302:73:39","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":10197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:39","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":10198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10181,"src":"23358:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10196,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"23323:29:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":10199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10200,"nodeType":"RevertStatement","src":"23316:48:39"}]}}]},"documentation":{"id":10179,"nodeType":"StructuredDocumentation","src":"22840:312:39","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":10204,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:39","nodeType":"FunctionDefinition","parameters":{"id":10182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10181,"mutability":"mutable","name":"value","nameLocation":"23182:5:39","nodeType":"VariableDeclaration","scope":10204,"src":"23175:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10180,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:39"},"returnParameters":{"id":10185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10184,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:39","nodeType":"VariableDeclaration","scope":10204,"src":"23212:17:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":10183,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:39","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:39"},"scope":10765,"src":"23157:224:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10229,"nodeType":"Block","src":"23778:150:39","statements":[{"expression":{"id":10217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10212,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10210,"src":"23788:10:39","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10207,"src":"23808:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":10213,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:39","typeDescriptions":{}}},"id":10216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:39","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":10218,"nodeType":"ExpressionStatement","src":"23788:26:39"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10219,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10210,"src":"23828:10:39","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10207,"src":"23842:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10228,"nodeType":"IfStatement","src":"23824:98:39","trueBody":{"id":10227,"nodeType":"Block","src":"23849:73:39","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":10223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:39","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":10224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10207,"src":"23905:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10222,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"23870:29:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":10225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10226,"nodeType":"RevertStatement","src":"23863:48:39"}]}}]},"documentation":{"id":10205,"nodeType":"StructuredDocumentation","src":"23387:312:39","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":10230,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:39","nodeType":"FunctionDefinition","parameters":{"id":10208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10207,"mutability":"mutable","name":"value","nameLocation":"23729:5:39","nodeType":"VariableDeclaration","scope":10230,"src":"23722:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10206,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:39"},"returnParameters":{"id":10211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10210,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:39","nodeType":"VariableDeclaration","scope":10230,"src":"23759:17:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":10209,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:39","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:39"},"scope":10765,"src":"23704:224:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10255,"nodeType":"Block","src":"24325:150:39","statements":[{"expression":{"id":10243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10238,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10236,"src":"24335:10:39","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10233,"src":"24355:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":10239,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:39","typeDescriptions":{}}},"id":10242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:39","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":10244,"nodeType":"ExpressionStatement","src":"24335:26:39"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10245,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10236,"src":"24375:10:39","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10233,"src":"24389:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10254,"nodeType":"IfStatement","src":"24371:98:39","trueBody":{"id":10253,"nodeType":"Block","src":"24396:73:39","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":10249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:39","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":10250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10233,"src":"24452:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10248,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"24417:29:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":10251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10252,"nodeType":"RevertStatement","src":"24410:48:39"}]}}]},"documentation":{"id":10231,"nodeType":"StructuredDocumentation","src":"23934:312:39","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":10256,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:39","nodeType":"FunctionDefinition","parameters":{"id":10234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10233,"mutability":"mutable","name":"value","nameLocation":"24276:5:39","nodeType":"VariableDeclaration","scope":10256,"src":"24269:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10232,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:39"},"returnParameters":{"id":10237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10236,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:39","nodeType":"VariableDeclaration","scope":10256,"src":"24306:17:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":10235,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:39","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:39"},"scope":10765,"src":"24251:224:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10281,"nodeType":"Block","src":"24872:150:39","statements":[{"expression":{"id":10269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10264,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10262,"src":"24882:10:39","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10259,"src":"24902:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":10265,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:39","typeDescriptions":{}}},"id":10268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:39","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":10270,"nodeType":"ExpressionStatement","src":"24882:26:39"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10271,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10262,"src":"24922:10:39","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10259,"src":"24936:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10280,"nodeType":"IfStatement","src":"24918:98:39","trueBody":{"id":10279,"nodeType":"Block","src":"24943:73:39","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":10275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:39","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":10276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10259,"src":"24999:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10274,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"24964:29:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":10277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10278,"nodeType":"RevertStatement","src":"24957:48:39"}]}}]},"documentation":{"id":10257,"nodeType":"StructuredDocumentation","src":"24481:312:39","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":10282,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:39","nodeType":"FunctionDefinition","parameters":{"id":10260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10259,"mutability":"mutable","name":"value","nameLocation":"24823:5:39","nodeType":"VariableDeclaration","scope":10282,"src":"24816:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10258,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:39"},"returnParameters":{"id":10263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10262,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:39","nodeType":"VariableDeclaration","scope":10282,"src":"24853:17:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":10261,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:39","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:39"},"scope":10765,"src":"24798:224:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10307,"nodeType":"Block","src":"25419:150:39","statements":[{"expression":{"id":10295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10290,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10288,"src":"25429:10:39","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10293,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10285,"src":"25449:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":10291,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:39","typeDescriptions":{}}},"id":10294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:39","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":10296,"nodeType":"ExpressionStatement","src":"25429:26:39"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10297,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10288,"src":"25469:10:39","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10285,"src":"25483:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10306,"nodeType":"IfStatement","src":"25465:98:39","trueBody":{"id":10305,"nodeType":"Block","src":"25490:73:39","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":10301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:39","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":10302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10285,"src":"25546:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10300,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"25511:29:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":10303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10304,"nodeType":"RevertStatement","src":"25504:48:39"}]}}]},"documentation":{"id":10283,"nodeType":"StructuredDocumentation","src":"25028:312:39","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":10308,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:39","nodeType":"FunctionDefinition","parameters":{"id":10286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10285,"mutability":"mutable","name":"value","nameLocation":"25370:5:39","nodeType":"VariableDeclaration","scope":10308,"src":"25363:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10284,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:39"},"returnParameters":{"id":10289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10288,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:39","nodeType":"VariableDeclaration","scope":10308,"src":"25400:17:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":10287,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:39","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:39"},"scope":10765,"src":"25345:224:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10333,"nodeType":"Block","src":"25966:150:39","statements":[{"expression":{"id":10321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10316,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10314,"src":"25976:10:39","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10311,"src":"25996:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":10317,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:39","typeDescriptions":{}}},"id":10320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:39","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":10322,"nodeType":"ExpressionStatement","src":"25976:26:39"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10323,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10314,"src":"26016:10:39","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10311,"src":"26030:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10332,"nodeType":"IfStatement","src":"26012:98:39","trueBody":{"id":10331,"nodeType":"Block","src":"26037:73:39","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":10327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:39","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":10328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10311,"src":"26093:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10326,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"26058:29:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":10329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10330,"nodeType":"RevertStatement","src":"26051:48:39"}]}}]},"documentation":{"id":10309,"nodeType":"StructuredDocumentation","src":"25575:312:39","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":10334,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:39","nodeType":"FunctionDefinition","parameters":{"id":10312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10311,"mutability":"mutable","name":"value","nameLocation":"25917:5:39","nodeType":"VariableDeclaration","scope":10334,"src":"25910:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10310,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:39"},"returnParameters":{"id":10315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10314,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:39","nodeType":"VariableDeclaration","scope":10334,"src":"25947:17:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":10313,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:39","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:39"},"scope":10765,"src":"25892:224:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10359,"nodeType":"Block","src":"26513:150:39","statements":[{"expression":{"id":10347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10342,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10340,"src":"26523:10:39","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10337,"src":"26543:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":10343,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:39","typeDescriptions":{}}},"id":10346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:39","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":10348,"nodeType":"ExpressionStatement","src":"26523:26:39"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10349,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10340,"src":"26563:10:39","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10337,"src":"26577:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10358,"nodeType":"IfStatement","src":"26559:98:39","trueBody":{"id":10357,"nodeType":"Block","src":"26584:73:39","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":10353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:39","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":10354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10337,"src":"26640:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10352,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"26605:29:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":10355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10356,"nodeType":"RevertStatement","src":"26598:48:39"}]}}]},"documentation":{"id":10335,"nodeType":"StructuredDocumentation","src":"26122:312:39","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":10360,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:39","nodeType":"FunctionDefinition","parameters":{"id":10338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10337,"mutability":"mutable","name":"value","nameLocation":"26464:5:39","nodeType":"VariableDeclaration","scope":10360,"src":"26457:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10336,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:39"},"returnParameters":{"id":10341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10340,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:39","nodeType":"VariableDeclaration","scope":10360,"src":"26494:17:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":10339,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:39","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:39"},"scope":10765,"src":"26439:224:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10385,"nodeType":"Block","src":"27060:150:39","statements":[{"expression":{"id":10373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10368,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10366,"src":"27070:10:39","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10363,"src":"27090:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":10369,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:39","typeDescriptions":{}}},"id":10372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:39","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":10374,"nodeType":"ExpressionStatement","src":"27070:26:39"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10375,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10366,"src":"27110:10:39","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10363,"src":"27124:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10384,"nodeType":"IfStatement","src":"27106:98:39","trueBody":{"id":10383,"nodeType":"Block","src":"27131:73:39","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":10379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:39","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":10380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10363,"src":"27187:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10378,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"27152:29:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":10381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10382,"nodeType":"RevertStatement","src":"27145:48:39"}]}}]},"documentation":{"id":10361,"nodeType":"StructuredDocumentation","src":"26669:312:39","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":10386,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:39","nodeType":"FunctionDefinition","parameters":{"id":10364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10363,"mutability":"mutable","name":"value","nameLocation":"27011:5:39","nodeType":"VariableDeclaration","scope":10386,"src":"27004:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10362,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:39"},"returnParameters":{"id":10367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10366,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:39","nodeType":"VariableDeclaration","scope":10386,"src":"27041:17:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":10365,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:39","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:39"},"scope":10765,"src":"26986:224:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10411,"nodeType":"Block","src":"27607:150:39","statements":[{"expression":{"id":10399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10394,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10392,"src":"27617:10:39","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10389,"src":"27637:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":10395,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:39","typeDescriptions":{}}},"id":10398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:39","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":10400,"nodeType":"ExpressionStatement","src":"27617:26:39"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10401,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10392,"src":"27657:10:39","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10402,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10389,"src":"27671:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10410,"nodeType":"IfStatement","src":"27653:98:39","trueBody":{"id":10409,"nodeType":"Block","src":"27678:73:39","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":10405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:39","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":10406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10389,"src":"27734:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10404,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"27699:29:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":10407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10408,"nodeType":"RevertStatement","src":"27692:48:39"}]}}]},"documentation":{"id":10387,"nodeType":"StructuredDocumentation","src":"27216:312:39","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":10412,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:39","nodeType":"FunctionDefinition","parameters":{"id":10390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10389,"mutability":"mutable","name":"value","nameLocation":"27558:5:39","nodeType":"VariableDeclaration","scope":10412,"src":"27551:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10388,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:39"},"returnParameters":{"id":10393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10392,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:39","nodeType":"VariableDeclaration","scope":10412,"src":"27588:17:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":10391,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:39","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:39"},"scope":10765,"src":"27533:224:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10437,"nodeType":"Block","src":"28147:148:39","statements":[{"expression":{"id":10425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10420,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10418,"src":"28157:10:39","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10415,"src":"28176:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:39","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":10421,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:39","typeDescriptions":{}}},"id":10424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:39","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":10426,"nodeType":"ExpressionStatement","src":"28157:25:39"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10427,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10418,"src":"28196:10:39","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10415,"src":"28210:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10436,"nodeType":"IfStatement","src":"28192:97:39","trueBody":{"id":10435,"nodeType":"Block","src":"28217:72:39","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":10431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:39","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":10432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10415,"src":"28272:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10430,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"28238:29:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":10433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10434,"nodeType":"RevertStatement","src":"28231:47:39"}]}}]},"documentation":{"id":10413,"nodeType":"StructuredDocumentation","src":"27763:307:39","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":10438,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:39","nodeType":"FunctionDefinition","parameters":{"id":10416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10415,"mutability":"mutable","name":"value","nameLocation":"28099:5:39","nodeType":"VariableDeclaration","scope":10438,"src":"28092:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10414,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:39"},"returnParameters":{"id":10419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10418,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:39","nodeType":"VariableDeclaration","scope":10438,"src":"28129:16:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":10417,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:39","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:39"},"scope":10765,"src":"28075:220:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10463,"nodeType":"Block","src":"28685:148:39","statements":[{"expression":{"id":10451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10446,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10444,"src":"28695:10:39","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10449,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10441,"src":"28714:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:39","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":10447,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:39","typeDescriptions":{}}},"id":10450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:39","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":10452,"nodeType":"ExpressionStatement","src":"28695:25:39"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10453,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10444,"src":"28734:10:39","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10441,"src":"28748:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10462,"nodeType":"IfStatement","src":"28730:97:39","trueBody":{"id":10461,"nodeType":"Block","src":"28755:72:39","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":10457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:39","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":10458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10441,"src":"28810:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10456,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"28776:29:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":10459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10460,"nodeType":"RevertStatement","src":"28769:47:39"}]}}]},"documentation":{"id":10439,"nodeType":"StructuredDocumentation","src":"28301:307:39","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":10464,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:39","nodeType":"FunctionDefinition","parameters":{"id":10442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10441,"mutability":"mutable","name":"value","nameLocation":"28637:5:39","nodeType":"VariableDeclaration","scope":10464,"src":"28630:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10440,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:39"},"returnParameters":{"id":10445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10444,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:39","nodeType":"VariableDeclaration","scope":10464,"src":"28667:16:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":10443,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:39","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:39"},"scope":10765,"src":"28613:220:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10489,"nodeType":"Block","src":"29223:148:39","statements":[{"expression":{"id":10477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10472,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10470,"src":"29233:10:39","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10467,"src":"29252:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:39","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":10473,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:39","typeDescriptions":{}}},"id":10476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:39","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":10478,"nodeType":"ExpressionStatement","src":"29233:25:39"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10479,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10470,"src":"29272:10:39","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10467,"src":"29286:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10488,"nodeType":"IfStatement","src":"29268:97:39","trueBody":{"id":10487,"nodeType":"Block","src":"29293:72:39","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":10483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:39","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":10484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10467,"src":"29348:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10482,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"29314:29:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":10485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10486,"nodeType":"RevertStatement","src":"29307:47:39"}]}}]},"documentation":{"id":10465,"nodeType":"StructuredDocumentation","src":"28839:307:39","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":10490,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:39","nodeType":"FunctionDefinition","parameters":{"id":10468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10467,"mutability":"mutable","name":"value","nameLocation":"29175:5:39","nodeType":"VariableDeclaration","scope":10490,"src":"29168:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10466,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:39"},"returnParameters":{"id":10471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10470,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:39","nodeType":"VariableDeclaration","scope":10490,"src":"29205:16:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":10469,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:39","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:39"},"scope":10765,"src":"29151:220:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10515,"nodeType":"Block","src":"29761:148:39","statements":[{"expression":{"id":10503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10498,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10496,"src":"29771:10:39","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10493,"src":"29790:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:39","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":10499,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:39","typeDescriptions":{}}},"id":10502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:39","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":10504,"nodeType":"ExpressionStatement","src":"29771:25:39"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10505,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10496,"src":"29810:10:39","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10493,"src":"29824:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10514,"nodeType":"IfStatement","src":"29806:97:39","trueBody":{"id":10513,"nodeType":"Block","src":"29831:72:39","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":10509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:39","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":10510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10493,"src":"29886:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10508,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"29852:29:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":10511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10512,"nodeType":"RevertStatement","src":"29845:47:39"}]}}]},"documentation":{"id":10491,"nodeType":"StructuredDocumentation","src":"29377:307:39","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":10516,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:39","nodeType":"FunctionDefinition","parameters":{"id":10494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10493,"mutability":"mutable","name":"value","nameLocation":"29713:5:39","nodeType":"VariableDeclaration","scope":10516,"src":"29706:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10492,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:39"},"returnParameters":{"id":10497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10496,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:39","nodeType":"VariableDeclaration","scope":10516,"src":"29743:16:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":10495,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:39","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:39"},"scope":10765,"src":"29689:220:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10541,"nodeType":"Block","src":"30299:148:39","statements":[{"expression":{"id":10529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10524,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10522,"src":"30309:10:39","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10519,"src":"30328:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:39","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":10525,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:39","typeDescriptions":{}}},"id":10528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:39","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":10530,"nodeType":"ExpressionStatement","src":"30309:25:39"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10531,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10522,"src":"30348:10:39","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10519,"src":"30362:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10540,"nodeType":"IfStatement","src":"30344:97:39","trueBody":{"id":10539,"nodeType":"Block","src":"30369:72:39","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":10535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:39","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":10536,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10519,"src":"30424:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10534,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"30390:29:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":10537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10538,"nodeType":"RevertStatement","src":"30383:47:39"}]}}]},"documentation":{"id":10517,"nodeType":"StructuredDocumentation","src":"29915:307:39","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":10542,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:39","nodeType":"FunctionDefinition","parameters":{"id":10520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10519,"mutability":"mutable","name":"value","nameLocation":"30251:5:39","nodeType":"VariableDeclaration","scope":10542,"src":"30244:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10518,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:39"},"returnParameters":{"id":10523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10522,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:39","nodeType":"VariableDeclaration","scope":10542,"src":"30281:16:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":10521,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:39","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:39"},"scope":10765,"src":"30227:220:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10567,"nodeType":"Block","src":"30837:148:39","statements":[{"expression":{"id":10555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10550,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10548,"src":"30847:10:39","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10545,"src":"30866:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:39","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":10551,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:39","typeDescriptions":{}}},"id":10554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:39","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":10556,"nodeType":"ExpressionStatement","src":"30847:25:39"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10557,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10548,"src":"30886:10:39","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10545,"src":"30900:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10566,"nodeType":"IfStatement","src":"30882:97:39","trueBody":{"id":10565,"nodeType":"Block","src":"30907:72:39","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":10561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:39","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":10562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10545,"src":"30962:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10560,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"30928:29:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":10563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10564,"nodeType":"RevertStatement","src":"30921:47:39"}]}}]},"documentation":{"id":10543,"nodeType":"StructuredDocumentation","src":"30453:307:39","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":10568,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:39","nodeType":"FunctionDefinition","parameters":{"id":10546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10545,"mutability":"mutable","name":"value","nameLocation":"30789:5:39","nodeType":"VariableDeclaration","scope":10568,"src":"30782:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10544,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:39"},"returnParameters":{"id":10549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10548,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:39","nodeType":"VariableDeclaration","scope":10568,"src":"30819:16:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":10547,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:39","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:39"},"scope":10765,"src":"30765:220:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10593,"nodeType":"Block","src":"31375:148:39","statements":[{"expression":{"id":10581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10576,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10574,"src":"31385:10:39","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10571,"src":"31404:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:39","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":10577,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:39","typeDescriptions":{}}},"id":10580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:39","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":10582,"nodeType":"ExpressionStatement","src":"31385:25:39"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10583,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10574,"src":"31424:10:39","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10571,"src":"31438:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10592,"nodeType":"IfStatement","src":"31420:97:39","trueBody":{"id":10591,"nodeType":"Block","src":"31445:72:39","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":10587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:39","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":10588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10571,"src":"31500:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10586,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"31466:29:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":10589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10590,"nodeType":"RevertStatement","src":"31459:47:39"}]}}]},"documentation":{"id":10569,"nodeType":"StructuredDocumentation","src":"30991:307:39","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":10594,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:39","nodeType":"FunctionDefinition","parameters":{"id":10572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10571,"mutability":"mutable","name":"value","nameLocation":"31327:5:39","nodeType":"VariableDeclaration","scope":10594,"src":"31320:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10570,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:39"},"returnParameters":{"id":10575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10574,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:39","nodeType":"VariableDeclaration","scope":10594,"src":"31357:16:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":10573,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:39","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:39"},"scope":10765,"src":"31303:220:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10619,"nodeType":"Block","src":"31913:148:39","statements":[{"expression":{"id":10607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10602,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10600,"src":"31923:10:39","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10605,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10597,"src":"31942:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:39","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":10603,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:39","typeDescriptions":{}}},"id":10606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:39","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":10608,"nodeType":"ExpressionStatement","src":"31923:25:39"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10609,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10600,"src":"31962:10:39","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10597,"src":"31976:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10618,"nodeType":"IfStatement","src":"31958:97:39","trueBody":{"id":10617,"nodeType":"Block","src":"31983:72:39","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":10613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:39","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":10614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10597,"src":"32038:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10612,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"32004:29:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":10615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10616,"nodeType":"RevertStatement","src":"31997:47:39"}]}}]},"documentation":{"id":10595,"nodeType":"StructuredDocumentation","src":"31529:307:39","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":10620,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:39","nodeType":"FunctionDefinition","parameters":{"id":10598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10597,"mutability":"mutable","name":"value","nameLocation":"31865:5:39","nodeType":"VariableDeclaration","scope":10620,"src":"31858:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10596,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:39"},"returnParameters":{"id":10601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10600,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:39","nodeType":"VariableDeclaration","scope":10620,"src":"31895:16:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":10599,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:39","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:39"},"scope":10765,"src":"31841:220:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10645,"nodeType":"Block","src":"32451:148:39","statements":[{"expression":{"id":10633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10628,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10626,"src":"32461:10:39","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10623,"src":"32480:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:39","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":10629,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:39","typeDescriptions":{}}},"id":10632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:39","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":10634,"nodeType":"ExpressionStatement","src":"32461:25:39"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10635,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10626,"src":"32500:10:39","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10623,"src":"32514:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10644,"nodeType":"IfStatement","src":"32496:97:39","trueBody":{"id":10643,"nodeType":"Block","src":"32521:72:39","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":10639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:39","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":10640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10623,"src":"32576:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10638,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"32542:29:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":10641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10642,"nodeType":"RevertStatement","src":"32535:47:39"}]}}]},"documentation":{"id":10621,"nodeType":"StructuredDocumentation","src":"32067:307:39","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":10646,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:39","nodeType":"FunctionDefinition","parameters":{"id":10624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10623,"mutability":"mutable","name":"value","nameLocation":"32403:5:39","nodeType":"VariableDeclaration","scope":10646,"src":"32396:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10622,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:39"},"returnParameters":{"id":10627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10626,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:39","nodeType":"VariableDeclaration","scope":10646,"src":"32433:16:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":10625,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:39","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:39"},"scope":10765,"src":"32379:220:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10671,"nodeType":"Block","src":"32989:148:39","statements":[{"expression":{"id":10659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10654,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10652,"src":"32999:10:39","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10649,"src":"33018:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:39","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":10655,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:39","typeDescriptions":{}}},"id":10658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:39","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":10660,"nodeType":"ExpressionStatement","src":"32999:25:39"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10661,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10652,"src":"33038:10:39","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10649,"src":"33052:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10670,"nodeType":"IfStatement","src":"33034:97:39","trueBody":{"id":10669,"nodeType":"Block","src":"33059:72:39","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":10665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:39","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":10666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10649,"src":"33114:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10664,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"33080:29:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":10667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10668,"nodeType":"RevertStatement","src":"33073:47:39"}]}}]},"documentation":{"id":10647,"nodeType":"StructuredDocumentation","src":"32605:307:39","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":10672,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:39","nodeType":"FunctionDefinition","parameters":{"id":10650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10649,"mutability":"mutable","name":"value","nameLocation":"32941:5:39","nodeType":"VariableDeclaration","scope":10672,"src":"32934:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10648,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:39"},"returnParameters":{"id":10653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10652,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:39","nodeType":"VariableDeclaration","scope":10672,"src":"32971:16:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":10651,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:39","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:39"},"scope":10765,"src":"32917:220:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10697,"nodeType":"Block","src":"33527:148:39","statements":[{"expression":{"id":10685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10680,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10678,"src":"33537:10:39","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10675,"src":"33556:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:39","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":10681,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:39","typeDescriptions":{}}},"id":10684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:39","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":10686,"nodeType":"ExpressionStatement","src":"33537:25:39"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10687,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10678,"src":"33576:10:39","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10675,"src":"33590:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10696,"nodeType":"IfStatement","src":"33572:97:39","trueBody":{"id":10695,"nodeType":"Block","src":"33597:72:39","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":10691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:39","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":10692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10675,"src":"33652:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10690,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"33618:29:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":10693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10694,"nodeType":"RevertStatement","src":"33611:47:39"}]}}]},"documentation":{"id":10673,"nodeType":"StructuredDocumentation","src":"33143:307:39","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":10698,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:39","nodeType":"FunctionDefinition","parameters":{"id":10676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10675,"mutability":"mutable","name":"value","nameLocation":"33479:5:39","nodeType":"VariableDeclaration","scope":10698,"src":"33472:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10674,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:39"},"returnParameters":{"id":10679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10678,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:39","nodeType":"VariableDeclaration","scope":10698,"src":"33509:16:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":10677,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:39","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:39"},"scope":10765,"src":"33455:220:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10723,"nodeType":"Block","src":"34058:146:39","statements":[{"expression":{"id":10711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10706,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10704,"src":"34068:10:39","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10709,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10701,"src":"34086:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:39","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":10707,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:39","typeDescriptions":{}}},"id":10710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:39","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":10712,"nodeType":"ExpressionStatement","src":"34068:24:39"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10713,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10704,"src":"34106:10:39","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10701,"src":"34120:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10722,"nodeType":"IfStatement","src":"34102:96:39","trueBody":{"id":10721,"nodeType":"Block","src":"34127:71:39","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":10717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:39","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":10718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10701,"src":"34181:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10716,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"34148:29:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":10719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10720,"nodeType":"RevertStatement","src":"34141:46:39"}]}}]},"documentation":{"id":10699,"nodeType":"StructuredDocumentation","src":"33681:302:39","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":10724,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:39","nodeType":"FunctionDefinition","parameters":{"id":10702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10701,"mutability":"mutable","name":"value","nameLocation":"34011:5:39","nodeType":"VariableDeclaration","scope":10724,"src":"34004:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10700,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:39"},"returnParameters":{"id":10705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10704,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:39","nodeType":"VariableDeclaration","scope":10724,"src":"34041:15:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":10703,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:39","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:39"},"scope":10765,"src":"33988:216:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10753,"nodeType":"Block","src":"34444:250:39","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10727,"src":"34557:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":10737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":10736,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:39","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":10735,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:39","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":10738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":10739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:39","memberName":"max","nodeType":"MemberAccess","src":"34573:16:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10733,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:39","typeDescriptions":{}}},"id":10740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10747,"nodeType":"IfStatement","src":"34553:105:39","trueBody":{"id":10746,"nodeType":"Block","src":"34592:66:39","statements":[{"errorCall":{"arguments":[{"id":10743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10727,"src":"34641:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10742,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9027,"src":"34613:27:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":10744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10745,"nodeType":"RevertStatement","src":"34606:41:39"}]}},{"expression":{"arguments":[{"id":10750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10727,"src":"34681:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":10748,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:39","typeDescriptions":{}}},"id":10751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":10731,"id":10752,"nodeType":"Return","src":"34667:20:39"}]},"documentation":{"id":10725,"nodeType":"StructuredDocumentation","src":"34210:165:39","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":10754,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:39","nodeType":"FunctionDefinition","parameters":{"id":10728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10727,"mutability":"mutable","name":"value","nameLocation":"34406:5:39","nodeType":"VariableDeclaration","scope":10754,"src":"34398:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10726,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:39"},"returnParameters":{"id":10731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10754,"src":"34436:6:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10729,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:39"},"scope":10765,"src":"34380:314:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10763,"nodeType":"Block","src":"34853:87:39","statements":[{"AST":{"nativeSrc":"34888:46:39","nodeType":"YulBlock","src":"34888:46:39","statements":[{"nativeSrc":"34902:22:39","nodeType":"YulAssignment","src":"34902:22:39","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:39","nodeType":"YulIdentifier","src":"34921:1:39"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:39","nodeType":"YulIdentifier","src":"34914:6:39"},"nativeSrc":"34914:9:39","nodeType":"YulFunctionCall","src":"34914:9:39"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:39","nodeType":"YulIdentifier","src":"34907:6:39"},"nativeSrc":"34907:17:39","nodeType":"YulFunctionCall","src":"34907:17:39"},"variableNames":[{"name":"u","nativeSrc":"34902:1:39","nodeType":"YulIdentifier","src":"34902:1:39"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":10757,"isOffset":false,"isSlot":false,"src":"34921:1:39","valueSize":1},{"declaration":10760,"isOffset":false,"isSlot":false,"src":"34902:1:39","valueSize":1}],"flags":["memory-safe"],"id":10762,"nodeType":"InlineAssembly","src":"34863:71:39"}]},"documentation":{"id":10755,"nodeType":"StructuredDocumentation","src":"34700:90:39","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":10764,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:39","nodeType":"FunctionDefinition","parameters":{"id":10758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10757,"mutability":"mutable","name":"b","nameLocation":"34816:1:39","nodeType":"VariableDeclaration","scope":10764,"src":"34811:6:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10756,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:39"},"returnParameters":{"id":10761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10760,"mutability":"mutable","name":"u","nameLocation":"34850:1:39","nodeType":"VariableDeclaration","scope":10764,"src":"34842:9:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10759,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:39"},"scope":10765,"src":"34795:145:39","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":10766,"src":"769:34173:39","usedErrors":[9010,9015,9022,9027],"usedEvents":[]}],"src":"192:34751:39"},"id":39},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[10765],"SignedMath":[10909]},"id":10910,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":10767,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:40"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":10769,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10910,"sourceUnit":10766,"src":"135:40:40","symbolAliases":[{"foreign":{"id":10768,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10765,"src":"143:8:40","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":10770,"nodeType":"StructuredDocumentation","src":"177:80:40","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":10909,"linearizedBaseContracts":[10909],"name":"SignedMath","nameLocation":"266:10:40","nodeType":"ContractDefinition","nodes":[{"body":{"id":10799,"nodeType":"Block","src":"746:215:40","statements":[{"id":10798,"nodeType":"UncheckedBlock","src":"756:199:40","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10782,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10777,"src":"894:1:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10783,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10775,"src":"900:1:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":10784,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10777,"src":"904:1:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":10786,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":10791,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10773,"src":"932:9:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":10789,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10765,"src":"916:8:40","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$10765_$","typeString":"type(library SafeCast)"}},"id":10790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:40","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":10764,"src":"916:15:40","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":10792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:40","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":10787,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:40","typeDescriptions":{}}},"id":10793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":10795,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":10781,"id":10797,"nodeType":"Return","src":"887:57:40"}]}]},"documentation":{"id":10771,"nodeType":"StructuredDocumentation","src":"283:374:40","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":10800,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:40","nodeType":"FunctionDefinition","parameters":{"id":10778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10773,"mutability":"mutable","name":"condition","nameLocation":"684:9:40","nodeType":"VariableDeclaration","scope":10800,"src":"679:14:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10772,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":10775,"mutability":"mutable","name":"a","nameLocation":"702:1:40","nodeType":"VariableDeclaration","scope":10800,"src":"695:8:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10774,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":10777,"mutability":"mutable","name":"b","nameLocation":"712:1:40","nodeType":"VariableDeclaration","scope":10800,"src":"705:8:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10776,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:40"},"returnParameters":{"id":10781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10780,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10800,"src":"738:6:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10779,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:40"},"scope":10909,"src":"662:299:40","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10818,"nodeType":"Block","src":"1102:44:40","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10811,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10803,"src":"1127:1:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":10812,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10805,"src":"1131:1:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":10814,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10803,"src":"1134:1:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":10815,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10805,"src":"1137:1:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10810,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10800,"src":"1119:7:40","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":10816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":10809,"id":10817,"nodeType":"Return","src":"1112:27:40"}]},"documentation":{"id":10801,"nodeType":"StructuredDocumentation","src":"967:66:40","text":" @dev Returns the largest of two signed numbers."},"id":10819,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:40","nodeType":"FunctionDefinition","parameters":{"id":10806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10803,"mutability":"mutable","name":"a","nameLocation":"1058:1:40","nodeType":"VariableDeclaration","scope":10819,"src":"1051:8:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10802,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":10805,"mutability":"mutable","name":"b","nameLocation":"1068:1:40","nodeType":"VariableDeclaration","scope":10819,"src":"1061:8:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10804,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:40"},"returnParameters":{"id":10809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10819,"src":"1094:6:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10807,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:40"},"scope":10909,"src":"1038:108:40","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10837,"nodeType":"Block","src":"1288:44:40","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10830,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10822,"src":"1313:1:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":10831,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10824,"src":"1317:1:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":10833,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10822,"src":"1320:1:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":10834,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10824,"src":"1323:1:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10829,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10800,"src":"1305:7:40","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":10835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":10828,"id":10836,"nodeType":"Return","src":"1298:27:40"}]},"documentation":{"id":10820,"nodeType":"StructuredDocumentation","src":"1152:67:40","text":" @dev Returns the smallest of two signed numbers."},"id":10838,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:40","nodeType":"FunctionDefinition","parameters":{"id":10825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10822,"mutability":"mutable","name":"a","nameLocation":"1244:1:40","nodeType":"VariableDeclaration","scope":10838,"src":"1237:8:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10821,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":10824,"mutability":"mutable","name":"b","nameLocation":"1254:1:40","nodeType":"VariableDeclaration","scope":10838,"src":"1247:8:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10823,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:40"},"returnParameters":{"id":10828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10827,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10838,"src":"1280:6:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10826,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:40"},"scope":10909,"src":"1224:108:40","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10881,"nodeType":"Block","src":"1537:162:40","statements":[{"assignments":[10849],"declarations":[{"constant":false,"id":10849,"mutability":"mutable","name":"x","nameLocation":"1606:1:40","nodeType":"VariableDeclaration","scope":10881,"src":"1599:8:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10848,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":10862,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10850,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10841,"src":"1611:1:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":10851,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10843,"src":"1615:1:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":10853,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10854,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10841,"src":"1622:1:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":10855,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10843,"src":"1626:1:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":10857,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":10858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:40","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":10860,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:40"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10863,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10849,"src":"1651:1:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":10868,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10849,"src":"1671:1:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:40","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10866,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:40","typeDescriptions":{}}},"id":10869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":10870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:40","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:40","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":10864,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:40","typeDescriptions":{}}},"id":10872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10873,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10841,"src":"1685:1:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":10874,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10843,"src":"1689:1:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":10876,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":10878,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":10847,"id":10880,"nodeType":"Return","src":"1644:48:40"}]},"documentation":{"id":10839,"nodeType":"StructuredDocumentation","src":"1338:126:40","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":10882,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:40","nodeType":"FunctionDefinition","parameters":{"id":10844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10841,"mutability":"mutable","name":"a","nameLocation":"1493:1:40","nodeType":"VariableDeclaration","scope":10882,"src":"1486:8:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10840,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":10843,"mutability":"mutable","name":"b","nameLocation":"1503:1:40","nodeType":"VariableDeclaration","scope":10882,"src":"1496:8:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10842,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:40"},"returnParameters":{"id":10847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10846,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10882,"src":"1529:6:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10845,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:40"},"scope":10909,"src":"1469:230:40","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10907,"nodeType":"Block","src":"1843:767:40","statements":[{"id":10906,"nodeType":"UncheckedBlock","src":"1853:751:40","statements":[{"assignments":[10891],"declarations":[{"constant":false,"id":10891,"mutability":"mutable","name":"mask","nameLocation":"2424:4:40","nodeType":"VariableDeclaration","scope":10906,"src":"2417:11:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10890,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":10895,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10892,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10885,"src":"2431:1:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":10893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:40","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:40"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10898,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10885,"src":"2576:1:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":10899,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10891,"src":"2580:4:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":10901,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":10902,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10891,"src":"2588:4:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:40","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10896,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:40","typeDescriptions":{}}},"id":10904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10889,"id":10905,"nodeType":"Return","src":"2560:33:40"}]}]},"documentation":{"id":10883,"nodeType":"StructuredDocumentation","src":"1705:78:40","text":" @dev Returns the absolute unsigned value of a signed value."},"id":10908,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:40","nodeType":"FunctionDefinition","parameters":{"id":10886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10885,"mutability":"mutable","name":"n","nameLocation":"1808:1:40","nodeType":"VariableDeclaration","scope":10908,"src":"1801:8:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10884,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:40"},"returnParameters":{"id":10889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10908,"src":"1834:7:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10887,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:40"},"scope":10909,"src":"1788:822:40","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":10910,"src":"258:2354:40","usedErrors":[],"usedEvents":[]}],"src":"109:2504:40"},"id":40},"contracts/ProductTokenUpgradeable.sol":{"ast":{"absolutePath":"contracts/ProductTokenUpgradeable.sol","exportedSymbols":{"AccessControlUpgradeable":[430],"Arrays":[5506],"ContextUpgradeable":[2118],"ERC1155Upgradeable":[2072],"ERC1155Utils":[3826],"ERC165Upgradeable":[2447],"ERC1967Utils":[3481],"IAccessControl":[2530],"IERC1155":[3614],"IERC1155Errors":[2788],"IERC1155MetadataURI":[3672],"IERC165":[7379],"IERC1822Proxiable":[2651],"Initializable":[893],"Math":[9000],"ProductTokenUpgradeable":[11276],"SafeCast":[10765],"SignedMath":[10909],"Strings":[7367],"UUPSUpgradeable":[1075]},"id":11277,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":10911,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:41"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol","id":10912,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11277,"sourceUnit":2073,"src":"58:82:41","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","id":10913,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11277,"sourceUnit":431,"src":"141:81:41","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":10914,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11277,"sourceUnit":894,"src":"223:75:41","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":10915,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11277,"sourceUnit":1076,"src":"299:77:41","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":10916,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11277,"sourceUnit":7368,"src":"377:51:41","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":10918,"name":"Initializable","nameLocations":["612:13:41"],"nodeType":"IdentifierPath","referencedDeclaration":893,"src":"612:13:41"},"id":10919,"nodeType":"InheritanceSpecifier","src":"612:13:41"},{"baseName":{"id":10920,"name":"ERC1155Upgradeable","nameLocations":["632:18:41"],"nodeType":"IdentifierPath","referencedDeclaration":2072,"src":"632:18:41"},"id":10921,"nodeType":"InheritanceSpecifier","src":"632:18:41"},{"baseName":{"id":10922,"name":"AccessControlUpgradeable","nameLocations":["657:24:41"],"nodeType":"IdentifierPath","referencedDeclaration":430,"src":"657:24:41"},"id":10923,"nodeType":"InheritanceSpecifier","src":"657:24:41"},{"baseName":{"id":10924,"name":"UUPSUpgradeable","nameLocations":["687:15:41"],"nodeType":"IdentifierPath","referencedDeclaration":1075,"src":"687:15:41"},"id":10925,"nodeType":"InheritanceSpecifier","src":"687:15:41"}],"canonicalName":"ProductTokenUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":10917,"nodeType":"StructuredDocumentation","src":"430:140:41","text":" @title ProductTokenUpgradeable\n @dev Upgradeable implementation of an ERC1155 token for products with role-based access control"},"fullyImplemented":true,"id":11276,"linearizedBaseContracts":[11276,1075,2651,430,2072,2788,3672,3614,2447,7379,2530,2118,893],"name":"ProductTokenUpgradeable","nameLocation":"580:23:41","nodeType":"ContractDefinition","nodes":[{"global":false,"id":10928,"libraryName":{"id":10926,"name":"Strings","nameLocations":["715:7:41"],"nodeType":"IdentifierPath","referencedDeclaration":7367,"src":"715:7:41"},"nodeType":"UsingForDirective","src":"709:26:41","typeName":{"id":10927,"name":"uint256","nodeType":"ElementaryTypeName","src":"727:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"functionSelector":"d5391393","id":10933,"mutability":"constant","name":"MINTER_ROLE","nameLocation":"792:11:41","nodeType":"VariableDeclaration","scope":11276,"src":"768:62:41","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10929,"name":"bytes32","nodeType":"ElementaryTypeName","src":"768:7:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d494e5445525f524f4c45","id":10931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"816:13:41","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""},"value":"MINTER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""}],"id":10930,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"806:9:41","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"806:24:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"f72c0d8b","id":10938,"mutability":"constant","name":"UPGRADER_ROLE","nameLocation":"860:13:41","nodeType":"VariableDeclaration","scope":11276,"src":"836:66:41","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10934,"name":"bytes32","nodeType":"ElementaryTypeName","src":"836:7:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"55504752414445525f524f4c45","id":10936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"886:15:41","typeDescriptions":{"typeIdentifier":"t_stringliteral_189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3","typeString":"literal_string \"UPGRADER_ROLE\""},"value":"UPGRADER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3","typeString":"literal_string \"UPGRADER_ROLE\""}],"id":10935,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"876:9:41","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"876:26:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"id":10942,"mutability":"mutable","name":"_productSupply","nameLocation":"999:14:41","nodeType":"VariableDeclaration","scope":11276,"src":"963:50:41","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":10941,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":10939,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"963:27:41","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":10940,"name":"uint256","nodeType":"ElementaryTypeName","src":"982:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":10945,"mutability":"mutable","name":"_productIds","nameLocation":"1076:11:41","nodeType":"VariableDeclaration","scope":11276,"src":"1058:29:41","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":10943,"name":"uint256","nodeType":"ElementaryTypeName","src":"1058:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10944,"nodeType":"ArrayTypeName","src":"1058:9:41","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"private"},{"constant":false,"id":10949,"mutability":"mutable","name":"_productIdExists","nameLocation":"1191:16:41","nodeType":"VariableDeclaration","scope":11276,"src":"1158:49:41","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"typeName":{"id":10948,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":10946,"name":"uint256","nodeType":"ElementaryTypeName","src":"1166:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1158:24:41","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":10947,"name":"bool","nodeType":"ElementaryTypeName","src":"1177:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"constant":false,"id":10951,"mutability":"mutable","name":"_baseUri","nameLocation":"1262:8:41","nodeType":"VariableDeclaration","scope":11276,"src":"1247:23:41","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":10950,"name":"string","nodeType":"ElementaryTypeName","src":"1247:6:41","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"anonymous":false,"eventSelector":"1ace3364065011f2a2f041ccf777c9f5394104fb5c15ec40e2ed753531e33b21","id":10959,"name":"ProductMinted","nameLocation":"1301:13:41","nodeType":"EventDefinition","parameters":{"id":10958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10953,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"1331:2:41","nodeType":"VariableDeclaration","scope":10959,"src":"1315:18:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10952,"name":"address","nodeType":"ElementaryTypeName","src":"1315:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10955,"indexed":true,"mutability":"mutable","name":"productId","nameLocation":"1351:9:41","nodeType":"VariableDeclaration","scope":10959,"src":"1335:25:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10954,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10957,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1370:6:41","nodeType":"VariableDeclaration","scope":10959,"src":"1362:14:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10956,"name":"uint256","nodeType":"ElementaryTypeName","src":"1362:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1314:63:41"},"src":"1295:83:41"},{"anonymous":false,"eventSelector":"6741b2fc379fad678116fe3d4d4b9a1a184ab53ba36b86ad0fa66340b1ab41ad","id":10963,"name":"BaseURIUpdated","nameLocation":"1389:14:41","nodeType":"EventDefinition","parameters":{"id":10962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10961,"indexed":false,"mutability":"mutable","name":"newUri","nameLocation":"1411:6:41","nodeType":"VariableDeclaration","scope":10963,"src":"1404:13:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10960,"name":"string","nodeType":"ElementaryTypeName","src":"1404:6:41","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1403:15:41"},"src":"1383:36:41"},{"anonymous":false,"eventSelector":"d215b5584879caeecb087ed93b0d4013d83ced647fd0a905f4f54a948cf0eb8d","id":10971,"name":"ProductBurned","nameLocation":"1430:13:41","nodeType":"EventDefinition","parameters":{"id":10970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10965,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"1460:4:41","nodeType":"VariableDeclaration","scope":10971,"src":"1444:20:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10964,"name":"address","nodeType":"ElementaryTypeName","src":"1444:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10967,"indexed":true,"mutability":"mutable","name":"productId","nameLocation":"1482:9:41","nodeType":"VariableDeclaration","scope":10971,"src":"1466:25:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10966,"name":"uint256","nodeType":"ElementaryTypeName","src":"1466:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10969,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1501:6:41","nodeType":"VariableDeclaration","scope":10971,"src":"1493:14:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10968,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1443:65:41"},"src":"1424:85:41"},{"body":{"id":10978,"nodeType":"Block","src":"1582:39:41","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":10975,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"1592:20:41","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":10976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1592:22:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10977,"nodeType":"ExpressionStatement","src":"1592:22:41"}]},"documentation":{"id":10972,"nodeType":"StructuredDocumentation","src":"1515:48:41","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":10979,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":10973,"nodeType":"ParameterList","parameters":[],"src":"1579:2:41"},"returnParameters":{"id":10974,"nodeType":"ParameterList","parameters":[],"src":"1582:0:41"},"scope":11276,"src":"1568:53:41","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":11019,"nodeType":"Block","src":"1838:274:41","statements":[{"expression":{"arguments":[{"hexValue":"","id":10988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1863:2:41","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":10987,"name":"__ERC1155_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"1848:14:41","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":10989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1848:18:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10990,"nodeType":"ExpressionStatement","src":"1848:18:41"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":10991,"name":"__AccessControl_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"1876:20:41","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":10992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1876:22:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10993,"nodeType":"ExpressionStatement","src":"1876:22:41"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":10994,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"1908:22:41","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":10995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1908:24:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10996,"nodeType":"ExpressionStatement","src":"1908:24:41"},{"expression":{"id":10999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10997,"name":"_baseUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10951,"src":"1943:8:41","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10998,"name":"baseUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10982,"src":"1954:7:41","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1943:18:41","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":11000,"nodeType":"ExpressionStatement","src":"1943:18:41"},{"expression":{"arguments":[{"id":11002,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"1982:18:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":11003,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2002:3:41","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2006:6:41","memberName":"sender","nodeType":"MemberAccess","src":"2002:10:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":11001,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"1971:10:41","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":11005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1971:42:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11006,"nodeType":"ExpressionStatement","src":"1971:42:41"},{"expression":{"arguments":[{"id":11008,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10933,"src":"2034:11:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":11009,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2047:3:41","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2051:6:41","memberName":"sender","nodeType":"MemberAccess","src":"2047:10:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":11007,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"2023:10:41","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":11011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2023:35:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11012,"nodeType":"ExpressionStatement","src":"2023:35:41"},{"expression":{"arguments":[{"id":11014,"name":"UPGRADER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10938,"src":"2079:13:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":11015,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2094:3:41","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2098:6:41","memberName":"sender","nodeType":"MemberAccess","src":"2094:10:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":11013,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"2068:10:41","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":11017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2068:37:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11018,"nodeType":"ExpressionStatement","src":"2068:37:41"}]},"documentation":{"id":10980,"nodeType":"StructuredDocumentation","src":"1627:144:41","text":" @dev Initializer replaces the constructor for upgradeable contracts\n @param baseUri Initial base URI for token metadata"},"functionSelector":"f62d1888","id":11020,"implemented":true,"kind":"function","modifiers":[{"id":10985,"kind":"modifierInvocation","modifierName":{"id":10984,"name":"initializer","nameLocations":["1826:11:41"],"nodeType":"IdentifierPath","referencedDeclaration":733,"src":"1826:11:41"},"nodeType":"ModifierInvocation","src":"1826:11:41"}],"name":"initialize","nameLocation":"1785:10:41","nodeType":"FunctionDefinition","parameters":{"id":10983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10982,"mutability":"mutable","name":"baseUri","nameLocation":"1810:7:41","nodeType":"VariableDeclaration","scope":11020,"src":"1796:21:41","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10981,"name":"string","nodeType":"ElementaryTypeName","src":"1796:6:41","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1795:23:41"},"returnParameters":{"id":10986,"nodeType":"ParameterList","parameters":[],"src":"1838:0:41"},"scope":11276,"src":"1776:336:41","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":11084,"nodeType":"Block","src":"2600:455:41","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11034,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11025,"src":"2618:9:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2630:1:41","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2618:13:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642070726f64756374204944","id":11037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2633:20:41","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5e0edb6b49da0bba96fe195e8e7e332fe468c64ad1a5877c0a12a6c2b7921a6","typeString":"literal_string \"Invalid product ID\""},"value":"Invalid product ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c5e0edb6b49da0bba96fe195e8e7e332fe468c64ad1a5877c0a12a6c2b7921a6","typeString":"literal_string \"Invalid product ID\""}],"id":11033,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2610:7:41","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2610:44:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11039,"nodeType":"ExpressionStatement","src":"2610:44:41"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11041,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11027,"src":"2672:6:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2681:1:41","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2672:10:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420616d6f756e74","id":11044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2684:16:41","typeDescriptions":{"typeIdentifier":"t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1","typeString":"literal_string \"Invalid amount\""},"value":"Invalid amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1","typeString":"literal_string \"Invalid amount\""}],"id":11040,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2664:7:41","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2664:37:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11046,"nodeType":"ExpressionStatement","src":"2664:37:41"},{"condition":{"id":11050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2781:28:41","subExpression":{"baseExpression":{"id":11047,"name":"_productIdExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10949,"src":"2782:16:41","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":11049,"indexExpression":{"id":11048,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11025,"src":"2799:9:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2782:27:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11064,"nodeType":"IfStatement","src":"2777:134:41","trueBody":{"id":11063,"nodeType":"Block","src":"2811:100:41","statements":[{"expression":{"arguments":[{"id":11054,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11025,"src":"2842:9:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":11051,"name":"_productIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10945,"src":"2825:11:41","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":11053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2837:4:41","memberName":"push","nodeType":"MemberAccess","src":"2825:16:41","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":11055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2825:27:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11056,"nodeType":"ExpressionStatement","src":"2825:27:41"},{"expression":{"id":11061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11057,"name":"_productIdExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10949,"src":"2866:16:41","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":11059,"indexExpression":{"id":11058,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11025,"src":"2883:9:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2866:27:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":11060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2896:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2866:34:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11062,"nodeType":"ExpressionStatement","src":"2866:34:41"}]}},{"expression":{"id":11069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11065,"name":"_productSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10942,"src":"2920:14:41","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":11067,"indexExpression":{"id":11066,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11025,"src":"2935:9:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2920:25:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":11068,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11027,"src":"2949:6:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2920:35:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11070,"nodeType":"ExpressionStatement","src":"2920:35:41"},{"expression":{"arguments":[{"id":11072,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11023,"src":"2971:2:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11073,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11025,"src":"2975:9:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11074,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11027,"src":"2986:6:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":11075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2994:2:41","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":11071,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"2965:5:41","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":11076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2965:32:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11077,"nodeType":"ExpressionStatement","src":"2965:32:41"},{"eventCall":{"arguments":[{"id":11079,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11023,"src":"3026:2:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11080,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11025,"src":"3030:9:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11081,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11027,"src":"3041:6:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11078,"name":"ProductMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10959,"src":"3012:13:41","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":11082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3012:36:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11083,"nodeType":"EmitStatement","src":"3007:41:41"}]},"documentation":{"id":11021,"nodeType":"StructuredDocumentation","src":"2118:385:41","text":" @dev Mints tokens for a specific product ID to an address\n @param to The address that will receive the minted tokens\n @param productId The ID of the product to mint\n @param amount The amount of tokens to mint\n @notice Only accounts with MINTER_ROLE can call this function\n @notice If the product ID doesn't exist yet, it will be created"},"functionSelector":"156e29f6","id":11085,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":11030,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10933,"src":"2587:11:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":11031,"kind":"modifierInvocation","modifierName":{"id":11029,"name":"onlyRole","nameLocations":["2578:8:41"],"nodeType":"IdentifierPath","referencedDeclaration":125,"src":"2578:8:41"},"nodeType":"ModifierInvocation","src":"2578:21:41"}],"name":"mint","nameLocation":"2517:4:41","nodeType":"FunctionDefinition","parameters":{"id":11028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11023,"mutability":"mutable","name":"to","nameLocation":"2530:2:41","nodeType":"VariableDeclaration","scope":11085,"src":"2522:10:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11022,"name":"address","nodeType":"ElementaryTypeName","src":"2522:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11025,"mutability":"mutable","name":"productId","nameLocation":"2542:9:41","nodeType":"VariableDeclaration","scope":11085,"src":"2534:17:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11024,"name":"uint256","nodeType":"ElementaryTypeName","src":"2534:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11027,"mutability":"mutable","name":"amount","nameLocation":"2561:6:41","nodeType":"VariableDeclaration","scope":11085,"src":"2553:14:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11026,"name":"uint256","nodeType":"ElementaryTypeName","src":"2553:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2521:47:41"},"returnParameters":{"id":11032,"nodeType":"ParameterList","parameters":[],"src":"2600:0:41"},"scope":11276,"src":"2508:547:41","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1217],"body":{"id":11106,"nodeType":"Block","src":"3404:87:41","statements":[{"expression":{"arguments":[{"arguments":[{"id":11098,"name":"_baseUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10951,"src":"3445:8:41","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":11099,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11088,"src":"3455:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3463:8:41","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":6079,"src":"3455:16:41","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":11101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:18:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2e6a736f6e","id":11102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3475:7:41","typeDescriptions":{"typeIdentifier":"t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972","typeString":"literal_string \".json\""},"value":".json"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972","typeString":"literal_string \".json\""}],"expression":{"id":11096,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3428:3:41","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":11097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3432:12:41","memberName":"encodePacked","nodeType":"MemberAccess","src":"3428:16:41","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":11103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3428:55:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":11095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3421:6:41","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":11094,"name":"string","nodeType":"ElementaryTypeName","src":"3421:6:41","typeDescriptions":{}}},"id":11104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3421:63:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":11093,"id":11105,"nodeType":"Return","src":"3414:70:41"}]},"documentation":{"id":11086,"nodeType":"StructuredDocumentation","src":"3061:255:41","text":" @dev Returns the URI for a given token ID\n @param tokenId The ID of the token to query\n @return The URI string for the token metadata\n @notice URI is constructed by concatenating the base URI, the token ID, and '.json'"},"functionSelector":"0e89341c","id":11107,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"3330:3:41","nodeType":"FunctionDefinition","overrides":{"id":11090,"nodeType":"OverrideSpecifier","overrides":[],"src":"3371:8:41"},"parameters":{"id":11089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11088,"mutability":"mutable","name":"tokenId","nameLocation":"3342:7:41","nodeType":"VariableDeclaration","scope":11107,"src":"3334:15:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11087,"name":"uint256","nodeType":"ElementaryTypeName","src":"3334:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3333:17:41"},"returnParameters":{"id":11093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11107,"src":"3389:13:41","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11091,"name":"string","nodeType":"ElementaryTypeName","src":"3389:6:41","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3388:15:41"},"scope":11276,"src":"3321:170:41","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":11135,"nodeType":"Block","src":"3819:135:41","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":11119,"name":"newUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11110,"src":"3843:6:41","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":11118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3837:5:41","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":11117,"name":"bytes","nodeType":"ElementaryTypeName","src":"3837:5:41","typeDescriptions":{}}},"id":11120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3837:13:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":11121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3851:6:41","memberName":"length","nodeType":"MemberAccess","src":"3837:20:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3860:1:41","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3837:24:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206261736520555249","id":11124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3863:18:41","typeDescriptions":{"typeIdentifier":"t_stringliteral_12fcea89e86e330c52f12c6c8038cf3f0605a190fa278392176d40c1e807e8c4","typeString":"literal_string \"Invalid base URI\""},"value":"Invalid base URI"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12fcea89e86e330c52f12c6c8038cf3f0605a190fa278392176d40c1e807e8c4","typeString":"literal_string \"Invalid base URI\""}],"id":11116,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3829:7:41","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3829:53:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11126,"nodeType":"ExpressionStatement","src":"3829:53:41"},{"expression":{"id":11129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11127,"name":"_baseUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10951,"src":"3893:8:41","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11128,"name":"newUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11110,"src":"3904:6:41","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3893:17:41","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":11130,"nodeType":"ExpressionStatement","src":"3893:17:41"},{"eventCall":{"arguments":[{"id":11132,"name":"newUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11110,"src":"3940:6:41","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":11131,"name":"BaseURIUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10963,"src":"3925:14:41","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":11133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3925:22:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11134,"nodeType":"EmitStatement","src":"3920:27:41"}]},"documentation":{"id":11108,"nodeType":"StructuredDocumentation","src":"3497:237:41","text":" @dev Updates the base URI for all token metadata\n @param newUri New base URI to set\n @notice Only accounts with DEFAULT_ADMIN_ROLE can call this function\n @notice Empty strings are not allowed as URIs"},"functionSelector":"55f804b3","id":11136,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":11113,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3799:18:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":11114,"kind":"modifierInvocation","modifierName":{"id":11112,"name":"onlyRole","nameLocations":["3790:8:41"],"nodeType":"IdentifierPath","referencedDeclaration":125,"src":"3790:8:41"},"nodeType":"ModifierInvocation","src":"3790:28:41"}],"name":"setBaseURI","nameLocation":"3748:10:41","nodeType":"FunctionDefinition","parameters":{"id":11111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11110,"mutability":"mutable","name":"newUri","nameLocation":"3773:6:41","nodeType":"VariableDeclaration","scope":11136,"src":"3759:20:41","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11109,"name":"string","nodeType":"ElementaryTypeName","src":"3759:6:41","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3758:22:41"},"returnParameters":{"id":11115,"nodeType":"ParameterList","parameters":[],"src":"3819:0:41"},"scope":11276,"src":"3739:215:41","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11162,"nodeType":"Block","src":"4303:179:41","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11145,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11139,"src":"4321:9:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:1:41","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4321:13:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642070726f64756374204944","id":11148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4336:20:41","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5e0edb6b49da0bba96fe195e8e7e332fe468c64ad1a5877c0a12a6c2b7921a6","typeString":"literal_string \"Invalid product ID\""},"value":"Invalid product ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c5e0edb6b49da0bba96fe195e8e7e332fe468c64ad1a5877c0a12a6c2b7921a6","typeString":"literal_string \"Invalid product ID\""}],"id":11144,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4313:7:41","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4313:44:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11150,"nodeType":"ExpressionStatement","src":"4313:44:41"},{"expression":{"arguments":[{"baseExpression":{"id":11152,"name":"_productIdExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10949,"src":"4375:16:41","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":11154,"indexExpression":{"id":11153,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11139,"src":"4392:9:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4375:27:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f6475637420494420646f6573206e6f74206578697374","id":11155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4404:27:41","typeDescriptions":{"typeIdentifier":"t_stringliteral_5719dd8bac7c3eae13a47ae5e6bdda498db814f8546412eb0b7edd521962940f","typeString":"literal_string \"Product ID does not exist\""},"value":"Product ID does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5719dd8bac7c3eae13a47ae5e6bdda498db814f8546412eb0b7edd521962940f","typeString":"literal_string \"Product ID does not exist\""}],"id":11151,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4367:7:41","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4367:65:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11157,"nodeType":"ExpressionStatement","src":"4367:65:41"},{"expression":{"baseExpression":{"id":11158,"name":"_productSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10942,"src":"4450:14:41","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":11160,"indexExpression":{"id":11159,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11139,"src":"4465:9:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4450:25:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":11143,"id":11161,"nodeType":"Return","src":"4443:32:41"}]},"documentation":{"id":11137,"nodeType":"StructuredDocumentation","src":"3960:266:41","text":" @dev Gets the current supply of tokens for a specific product ID\n @param productId ID of the product to query\n @return Current total supply of the product tokens\n @notice Will revert if the product ID does not exist or is invalid"},"functionSelector":"ef8593e7","id":11163,"implemented":true,"kind":"function","modifiers":[],"name":"productSupply","nameLocation":"4240:13:41","nodeType":"FunctionDefinition","parameters":{"id":11140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11139,"mutability":"mutable","name":"productId","nameLocation":"4262:9:41","nodeType":"VariableDeclaration","scope":11163,"src":"4254:17:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11138,"name":"uint256","nodeType":"ElementaryTypeName","src":"4254:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4253:19:41"},"returnParameters":{"id":11143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11163,"src":"4294:7:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11141,"name":"uint256","nodeType":"ElementaryTypeName","src":"4294:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4293:9:41"},"scope":11276,"src":"4231:251:41","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":11172,"nodeType":"Block","src":"4684:35:41","statements":[{"expression":{"id":11170,"name":"_productIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10945,"src":"4701:11:41","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":11169,"id":11171,"nodeType":"Return","src":"4694:18:41"}]},"documentation":{"id":11164,"nodeType":"StructuredDocumentation","src":"4488:127:41","text":" @dev Returns an array of all existing product IDs\n @return Array of product IDs that have been created"},"functionSelector":"47428e7b","id":11173,"implemented":true,"kind":"function","modifiers":[],"name":"getProductIds","nameLocation":"4629:13:41","nodeType":"FunctionDefinition","parameters":{"id":11165,"nodeType":"ParameterList","parameters":[],"src":"4642:2:41"},"returnParameters":{"id":11169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11173,"src":"4666:16:41","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":11166,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11167,"nodeType":"ArrayTypeName","src":"4666:9:41","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4665:18:41"},"scope":11276,"src":"4620:99:41","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":11246,"nodeType":"Block","src":"5261:680:41","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11187,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11178,"src":"5279:9:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5291:1:41","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5279:13:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642070726f64756374204944","id":11190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5294:20:41","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5e0edb6b49da0bba96fe195e8e7e332fe468c64ad1a5877c0a12a6c2b7921a6","typeString":"literal_string \"Invalid product ID\""},"value":"Invalid product ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c5e0edb6b49da0bba96fe195e8e7e332fe468c64ad1a5877c0a12a6c2b7921a6","typeString":"literal_string \"Invalid product ID\""}],"id":11186,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5271:7:41","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5271:44:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11192,"nodeType":"ExpressionStatement","src":"5271:44:41"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11194,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11180,"src":"5333:6:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5342:1:41","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5333:10:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420616d6f756e74","id":11197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5345:16:41","typeDescriptions":{"typeIdentifier":"t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1","typeString":"literal_string \"Invalid amount\""},"value":"Invalid amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1","typeString":"literal_string \"Invalid amount\""}],"id":11193,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5325:7:41","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5325:37:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11199,"nodeType":"ExpressionStatement","src":"5325:37:41"},{"expression":{"arguments":[{"baseExpression":{"id":11201,"name":"_productIdExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10949,"src":"5446:16:41","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":11203,"indexExpression":{"id":11202,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11178,"src":"5463:9:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5446:27:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f6475637420494420646f6573206e6f74206578697374","id":11204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5475:27:41","typeDescriptions":{"typeIdentifier":"t_stringliteral_5719dd8bac7c3eae13a47ae5e6bdda498db814f8546412eb0b7edd521962940f","typeString":"literal_string \"Product ID does not exist\""},"value":"Product ID does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5719dd8bac7c3eae13a47ae5e6bdda498db814f8546412eb0b7edd521962940f","typeString":"literal_string \"Product ID does not exist\""}],"id":11200,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5438:7:41","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5438:65:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11206,"nodeType":"ExpressionStatement","src":"5438:65:41"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11208,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11180,"src":"5521:6:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"baseExpression":{"id":11209,"name":"_productSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10942,"src":"5531:14:41","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":11211,"indexExpression":{"id":11210,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11178,"src":"5546:9:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5531:25:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5521:35:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4275726e20616d6f756e74206578636565647320737570706c79","id":11213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5558:28:41","typeDescriptions":{"typeIdentifier":"t_stringliteral_7f84c7e1f6466f7de770985c283f2d527c8059ea1c3398ea1f2b4e9da9d87ee1","typeString":"literal_string \"Burn amount exceeds supply\""},"value":"Burn amount exceeds supply"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7f84c7e1f6466f7de770985c283f2d527c8059ea1c3398ea1f2b4e9da9d87ee1","typeString":"literal_string \"Burn amount exceeds supply\""}],"id":11207,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5513:7:41","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5513:74:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11215,"nodeType":"ExpressionStatement","src":"5513:74:41"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":11218,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11176,"src":"5616:4:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11219,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11178,"src":"5622:9:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11217,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"5606:9:41","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":11220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5606:26:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":11221,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11180,"src":"5636:6:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5606:36:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":11223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5644:22:41","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":11216,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5598:7:41","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5598:69:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11225,"nodeType":"ExpressionStatement","src":"5598:69:41"},{"expression":{"id":11230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11226,"name":"_productSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10942,"src":"5725:14:41","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":11228,"indexExpression":{"id":11227,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11178,"src":"5740:9:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5725:25:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":11229,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11180,"src":"5754:6:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5725:35:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11231,"nodeType":"ExpressionStatement","src":"5725:35:41"},{"expression":{"arguments":[{"id":11235,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11176,"src":"5848:4:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11236,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11178,"src":"5854:9:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11237,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11180,"src":"5865:6:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":11232,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"5836:5:41","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ProductTokenUpgradeable_$11276_$","typeString":"type(contract super ProductTokenUpgradeable)"}},"id":11234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5842:5:41","memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":1968,"src":"5836:11:41","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":11238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5836:36:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11239,"nodeType":"ExpressionStatement","src":"5836:36:41"},{"eventCall":{"arguments":[{"id":11241,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11176,"src":"5910:4:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11242,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11178,"src":"5916:9:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11243,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11180,"src":"5927:6:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11240,"name":"ProductBurned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10971,"src":"5896:13:41","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":11244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5896:38:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11245,"nodeType":"EmitStatement","src":"5891:43:41"}]},"documentation":{"id":11174,"nodeType":"StructuredDocumentation","src":"4725:437:41","text":" @dev Burns tokens from a specific address\n @param from Address from which to burn tokens\n @param productId ID of the product to burn\n @param amount Amount of tokens to burn\n @notice Only accounts with MINTER_ROLE can call this function\n @notice Will revert if the product ID does not exist or amount exceeds supply\n @notice Will revert if the target address has insufficient balance"},"functionSelector":"f5298aca","id":11247,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":11183,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10933,"src":"5248:11:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":11184,"kind":"modifierInvocation","modifierName":{"id":11182,"name":"onlyRole","nameLocations":["5239:8:41"],"nodeType":"IdentifierPath","referencedDeclaration":125,"src":"5239:8:41"},"nodeType":"ModifierInvocation","src":"5239:21:41"}],"name":"burn","nameLocation":"5176:4:41","nodeType":"FunctionDefinition","parameters":{"id":11181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11176,"mutability":"mutable","name":"from","nameLocation":"5189:4:41","nodeType":"VariableDeclaration","scope":11247,"src":"5181:12:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11175,"name":"address","nodeType":"ElementaryTypeName","src":"5181:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11178,"mutability":"mutable","name":"productId","nameLocation":"5203:9:41","nodeType":"VariableDeclaration","scope":11247,"src":"5195:17:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11177,"name":"uint256","nodeType":"ElementaryTypeName","src":"5195:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11180,"mutability":"mutable","name":"amount","nameLocation":"5222:6:41","nodeType":"VariableDeclaration","scope":11247,"src":"5214:14:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11179,"name":"uint256","nodeType":"ElementaryTypeName","src":"5214:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5180:49:41"},"returnParameters":{"id":11185,"nodeType":"ParameterList","parameters":[],"src":"5261:0:41"},"scope":11276,"src":"5167:774:41","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[159,1199],"body":{"id":11263,"nodeType":"Block","src":"6394:60:41","statements":[{"expression":{"arguments":[{"id":11260,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11250,"src":"6435:11:41","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":11258,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"6411:5:41","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ProductTokenUpgradeable_$11276_$","typeString":"type(contract super ProductTokenUpgradeable)"}},"id":11259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6417:17:41","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":159,"src":"6411:23:41","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":11261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6411:36:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":11257,"id":11262,"nodeType":"Return","src":"6404:43:41"}]},"documentation":{"id":11248,"nodeType":"StructuredDocumentation","src":"5947:277:41","text":" @dev See {IERC165-supportsInterface}\n @param interfaceId The interface identifier to check support for\n @return bool True if the contract supports the interface\n @notice This implementation supports both ERC1155 and AccessControl interfaces"},"functionSelector":"01ffc9a7","id":11264,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"6238:17:41","nodeType":"FunctionDefinition","overrides":{"id":11254,"nodeType":"OverrideSpecifier","overrides":[{"id":11252,"name":"ERC1155Upgradeable","nameLocations":["6321:18:41"],"nodeType":"IdentifierPath","referencedDeclaration":2072,"src":"6321:18:41"},{"id":11253,"name":"AccessControlUpgradeable","nameLocations":["6341:24:41"],"nodeType":"IdentifierPath","referencedDeclaration":430,"src":"6341:24:41"}],"src":"6312:54:41"},"parameters":{"id":11251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11250,"mutability":"mutable","name":"interfaceId","nameLocation":"6263:11:41","nodeType":"VariableDeclaration","scope":11264,"src":"6256:18:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":11249,"name":"bytes4","nodeType":"ElementaryTypeName","src":"6256:6:41","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"6255:20:41"},"returnParameters":{"id":11257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11264,"src":"6384:4:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11255,"name":"bool","nodeType":"ElementaryTypeName","src":"6384:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6383:6:41"},"scope":11276,"src":"6229:225:41","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1029],"body":{"id":11274,"nodeType":"Block","src":"6740:2:41","statements":[]},"documentation":{"id":11265,"nodeType":"StructuredDocumentation","src":"6464:175:41","text":" @dev Function that should revert when msg.sender is not authorized to upgrade the contract\n @param newImplementation Address of the new implementation"},"id":11275,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":11271,"name":"UPGRADER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10938,"src":"6725:13:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":11272,"kind":"modifierInvocation","modifierName":{"id":11270,"name":"onlyRole","nameLocations":["6716:8:41"],"nodeType":"IdentifierPath","referencedDeclaration":125,"src":"6716:8:41"},"nodeType":"ModifierInvocation","src":"6716:23:41"}],"name":"_authorizeUpgrade","nameLocation":"6653:17:41","nodeType":"FunctionDefinition","overrides":{"id":11269,"nodeType":"OverrideSpecifier","overrides":[],"src":"6707:8:41"},"parameters":{"id":11268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11267,"mutability":"mutable","name":"newImplementation","nameLocation":"6679:17:41","nodeType":"VariableDeclaration","scope":11275,"src":"6671:25:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11266,"name":"address","nodeType":"ElementaryTypeName","src":"6671:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6670:27:41"},"returnParameters":{"id":11273,"nodeType":"ParameterList","parameters":[],"src":"6740:0:41"},"scope":11276,"src":"6644:98:41","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":11277,"src":"571:6173:41","usedErrors":[642,645,920,925,2457,2460,2753,2758,2763,2770,2775,2780,2787,3207,3220,4378,5650],"usedEvents":[650,2469,2478,2487,2624,3511,3526,3535,3542,10959,10963,10971]}],"src":"32:6713:41"},"id":41},"contracts/USDCFundraiserFactoryUpgradeable.sol":{"ast":{"absolutePath":"contracts/USDCFundraiserFactoryUpgradeable.sol","exportedSymbols":{"AccessControlUpgradeable":[430],"Arrays":[5506],"AutomationBase":[37],"AutomationCompatible":[48],"AutomationCompatibleInterface":[67],"Clones":[3187],"ContextUpgradeable":[2118],"Create2":[5637],"ERC1155Upgradeable":[2072],"ERC1155Utils":[3826],"ERC165Upgradeable":[2447],"ERC1967Utils":[3481],"Errors":[5659],"IAccessControl":[2530],"IERC1155":[3614],"IERC1155Errors":[2788],"IERC1155MetadataURI":[3672],"IERC1363":[2612],"IERC165":[7379],"IERC1822Proxiable":[2651],"IERC20":[3904],"IFactory":[11837],"IProductToken":[11303],"Initializable":[893],"Math":[9000],"OwnableUpgradeable":[625],"PausableUpgradeable":[2278],"ProductConfig":[11814],"ProductTokenUpgradeable":[11276],"ReentrancyGuardUpgradeable":[2407],"SafeCast":[10765],"SafeERC20":[4368],"SignedMath":[10909],"Strings":[7367],"USDCFundraiserFactoryUpgradeable":[11797],"USDCFundraiserUpgradeable":[13024],"UUPSUpgradeable":[1075]},"id":11798,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":11278,"literals":["solidity","^","0.8",".27"],"nodeType":"PragmaDirective","src":"32:24:42"},{"absolutePath":"contracts/USDCFundraiserUpgradeable.sol","file":"./USDCFundraiserUpgradeable.sol","id":11279,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11798,"sourceUnit":13025,"src":"58:41:42","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":11280,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11798,"sourceUnit":626,"src":"100:75:42","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":11281,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11798,"sourceUnit":894,"src":"176:75:42","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":11282,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11798,"sourceUnit":1076,"src":"252:77:42","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":11283,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11798,"sourceUnit":3905,"src":"330:56:42","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/Clones.sol","file":"@openzeppelin/contracts/proxy/Clones.sol","id":11284,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11798,"sourceUnit":3188,"src":"387:50:42","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IProductToken","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":11303,"linearizedBaseContracts":[11303],"name":"IProductToken","nameLocation":"495:13:42","nodeType":"ContractDefinition","nodes":[{"functionSelector":"156e29f6","id":11293,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"524:4:42","nodeType":"FunctionDefinition","parameters":{"id":11291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11286,"mutability":"mutable","name":"to","nameLocation":"537:2:42","nodeType":"VariableDeclaration","scope":11293,"src":"529:10:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11285,"name":"address","nodeType":"ElementaryTypeName","src":"529:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11288,"mutability":"mutable","name":"productId","nameLocation":"549:9:42","nodeType":"VariableDeclaration","scope":11293,"src":"541:17:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11287,"name":"uint256","nodeType":"ElementaryTypeName","src":"541:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11290,"mutability":"mutable","name":"amount","nameLocation":"568:6:42","nodeType":"VariableDeclaration","scope":11293,"src":"560:14:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11289,"name":"uint256","nodeType":"ElementaryTypeName","src":"560:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"528:47:42"},"returnParameters":{"id":11292,"nodeType":"ParameterList","parameters":[],"src":"584:0:42"},"scope":11303,"src":"515:70:42","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f5298aca","id":11302,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"599:4:42","nodeType":"FunctionDefinition","parameters":{"id":11300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11295,"mutability":"mutable","name":"from","nameLocation":"612:4:42","nodeType":"VariableDeclaration","scope":11302,"src":"604:12:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11294,"name":"address","nodeType":"ElementaryTypeName","src":"604:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11297,"mutability":"mutable","name":"productId","nameLocation":"626:9:42","nodeType":"VariableDeclaration","scope":11302,"src":"618:17:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11296,"name":"uint256","nodeType":"ElementaryTypeName","src":"618:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11299,"mutability":"mutable","name":"amount","nameLocation":"645:6:42","nodeType":"VariableDeclaration","scope":11302,"src":"637:14:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11298,"name":"uint256","nodeType":"ElementaryTypeName","src":"637:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"603:49:42"},"returnParameters":{"id":11301,"nodeType":"ParameterList","parameters":[],"src":"661:0:42"},"scope":11303,"src":"590:72:42","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":11798,"src":"485:179:42","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":11304,"name":"Initializable","nameLocations":["711:13:42"],"nodeType":"IdentifierPath","referencedDeclaration":893,"src":"711:13:42"},"id":11305,"nodeType":"InheritanceSpecifier","src":"711:13:42"},{"baseName":{"id":11306,"name":"OwnableUpgradeable","nameLocations":["726:18:42"],"nodeType":"IdentifierPath","referencedDeclaration":625,"src":"726:18:42"},"id":11307,"nodeType":"InheritanceSpecifier","src":"726:18:42"},{"baseName":{"id":11308,"name":"UUPSUpgradeable","nameLocations":["746:15:42"],"nodeType":"IdentifierPath","referencedDeclaration":1075,"src":"746:15:42"},"id":11309,"nodeType":"InheritanceSpecifier","src":"746:15:42"}],"canonicalName":"USDCFundraiserFactoryUpgradeable","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":11797,"linearizedBaseContracts":[11797,1075,2651,625,2118,893],"name":"USDCFundraiserFactoryUpgradeable","nameLocation":"675:32:42","nodeType":"ContractDefinition","nodes":[{"global":false,"id":11312,"libraryName":{"id":11310,"name":"Clones","nameLocations":["774:6:42"],"nodeType":"IdentifierPath","referencedDeclaration":3187,"src":"774:6:42"},"nodeType":"UsingForDirective","src":"768:25:42","typeName":{"id":11311,"name":"address","nodeType":"ElementaryTypeName","src":"785:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"constant":true,"functionSelector":"e1f1c4a7","id":11315,"mutability":"constant","name":"BASIS_POINTS","nameLocation":"823:12:42","nodeType":"VariableDeclaration","scope":11797,"src":"799:44:42","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11313,"name":"uint256","nodeType":"ElementaryTypeName","src":"799:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130303030","id":11314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"838:5:42","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"visibility":"public"},{"constant":false,"functionSelector":"02d45457","id":11317,"mutability":"mutable","name":"usdcAddress","nameLocation":"893:11:42","nodeType":"VariableDeclaration","scope":11797,"src":"878:26:42","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11316,"name":"address","nodeType":"ElementaryTypeName","src":"878:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"396f9701","id":11319,"mutability":"mutable","name":"productTokenAddress","nameLocation":"925:19:42","nodeType":"VariableDeclaration","scope":11797,"src":"910:34:42","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11318,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"b4824034","id":11321,"mutability":"mutable","name":"defaultFeePercentage","nameLocation":"965:20:42","nodeType":"VariableDeclaration","scope":11797,"src":"950:35:42","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11320,"name":"uint256","nodeType":"ElementaryTypeName","src":"950:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"f25f4b56","id":11323,"mutability":"mutable","name":"feeWallet","nameLocation":"1006:9:42","nodeType":"VariableDeclaration","scope":11797,"src":"991:24:42","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11322,"name":"address","nodeType":"ElementaryTypeName","src":"991:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"3119e4b4","id":11325,"mutability":"mutable","name":"fundraiserImplementation","nameLocation":"1099:24:42","nodeType":"VariableDeclaration","scope":11797,"src":"1084:39:42","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11324,"name":"address","nodeType":"ElementaryTypeName","src":"1084:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"20222859","id":11328,"mutability":"mutable","name":"deployedFundraisers","nameLocation":"1198:19:42","nodeType":"VariableDeclaration","scope":11797,"src":"1181:36:42","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":11326,"name":"address","nodeType":"ElementaryTypeName","src":"1181:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11327,"nodeType":"ArrayTypeName","src":"1181:9:42","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"functionSelector":"7f7977d1","id":11332,"mutability":"mutable","name":"isFundraiser","nameLocation":"1255:12:42","nodeType":"VariableDeclaration","scope":11797,"src":"1223:44:42","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":11331,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":11329,"name":"address","nodeType":"ElementaryTypeName","src":"1231:7:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1223:24:42","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":11330,"name":"bool","nodeType":"ElementaryTypeName","src":"1242:4:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"a2398daac0c8053a1e3c0280916c2ec6bc884f0959c27e639a4db829b7eabfb1","id":11338,"name":"FundraiserCreated","nameLocation":"1284:17:42","nodeType":"EventDefinition","parameters":{"id":11337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11334,"indexed":true,"mutability":"mutable","name":"fundraiser","nameLocation":"1318:10:42","nodeType":"VariableDeclaration","scope":11338,"src":"1302:26:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11333,"name":"address","nodeType":"ElementaryTypeName","src":"1302:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11336,"indexed":true,"mutability":"mutable","name":"creator","nameLocation":"1346:7:42","nodeType":"VariableDeclaration","scope":11338,"src":"1330:23:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11335,"name":"address","nodeType":"ElementaryTypeName","src":"1330:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1301:53:42"},"src":"1278:77:42"},{"anonymous":false,"eventSelector":"310ba5f1d2ed074b51e2eccd052a47ae9ab7c6b800d1fca3db3999d6a592ca03","id":11342,"name":"ImplementationUpdated","nameLocation":"1366:21:42","nodeType":"EventDefinition","parameters":{"id":11341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11340,"indexed":true,"mutability":"mutable","name":"newImplementation","nameLocation":"1404:17:42","nodeType":"VariableDeclaration","scope":11342,"src":"1388:33:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11339,"name":"address","nodeType":"ElementaryTypeName","src":"1388:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1387:35:42"},"src":"1360:63:42"},{"anonymous":false,"eventSelector":"46cec2ff6f514e8ed0cc9f2a26c0135dd76e3943279345141bcba88a5af63f51","id":11346,"name":"ProductTokenUpdated","nameLocation":"1434:19:42","nodeType":"EventDefinition","parameters":{"id":11345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11344,"indexed":true,"mutability":"mutable","name":"newProductToken","nameLocation":"1470:15:42","nodeType":"VariableDeclaration","scope":11346,"src":"1454:31:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11343,"name":"address","nodeType":"ElementaryTypeName","src":"1454:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1453:33:42"},"src":"1428:59:42"},{"anonymous":false,"eventSelector":"1bcb4157b04f9d491f72619552c6b6c11567e00613bbb243fffe8e7a7e5e8336","id":11354,"name":"ProductIdMapped","nameLocation":"1498:15:42","nodeType":"EventDefinition","parameters":{"id":11353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11348,"indexed":true,"mutability":"mutable","name":"fundraiser","nameLocation":"1539:10:42","nodeType":"VariableDeclaration","scope":11354,"src":"1523:26:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11347,"name":"address","nodeType":"ElementaryTypeName","src":"1523:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11350,"indexed":true,"mutability":"mutable","name":"originalProductId","nameLocation":"1576:17:42","nodeType":"VariableDeclaration","scope":11354,"src":"1560:33:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11349,"name":"uint256","nodeType":"ElementaryTypeName","src":"1560:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11352,"indexed":true,"mutability":"mutable","name":"uniqueProductId","nameLocation":"1620:15:42","nodeType":"VariableDeclaration","scope":11354,"src":"1604:31:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11351,"name":"uint256","nodeType":"ElementaryTypeName","src":"1604:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1513:128:42"},"src":"1492:150:42"},{"body":{"id":11361,"nodeType":"Block","src":"1719:39:42","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":11358,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"1729:20:42","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":11359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1729:22:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11360,"nodeType":"ExpressionStatement","src":"1729:22:42"}]},"documentation":{"id":11355,"nodeType":"StructuredDocumentation","src":"1652:48:42","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":11362,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":11356,"nodeType":"ParameterList","parameters":[],"src":"1716:2:42"},"returnParameters":{"id":11357,"nodeType":"ParameterList","parameters":[],"src":"1719:0:42"},"scope":11797,"src":"1705:53:42","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":11456,"nodeType":"Block","src":"2018:701:42","statements":[{"expression":{"arguments":[{"id":11380,"name":"_initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11374,"src":"2043:13:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":11379,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"2028:14:42","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":11381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2028:29:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11382,"nodeType":"ExpressionStatement","src":"2028:29:42"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":11383,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"2067:22:42","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":11384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2067:24:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11385,"nodeType":"ExpressionStatement","src":"2067:24:42"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":11392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11387,"name":"_usdcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11364,"src":"2118:12:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":11390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2142:1:42","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":11389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2134:7:42","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11388,"name":"address","nodeType":"ElementaryTypeName","src":"2134:7:42","typeDescriptions":{}}},"id":11391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2134:10:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2118:26:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420555344432061646472657373","id":11393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2146:22:42","typeDescriptions":{"typeIdentifier":"t_stringliteral_768308344d94e849ff3f5e31c8c5ffd3ba25816fc055df9374d86b549adb5dbe","typeString":"literal_string \"Invalid USDC address\""},"value":"Invalid USDC address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_768308344d94e849ff3f5e31c8c5ffd3ba25816fc055df9374d86b549adb5dbe","typeString":"literal_string \"Invalid USDC address\""}],"id":11386,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2110:7:42","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2110:59:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11395,"nodeType":"ExpressionStatement","src":"2110:59:42"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":11402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11397,"name":"_productTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11366,"src":"2187:20:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":11400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2219:1:42","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":11399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2211:7:42","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11398,"name":"address","nodeType":"ElementaryTypeName","src":"2211:7:42","typeDescriptions":{}}},"id":11401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2211:10:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2187:34:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642070726f6475637420746f6b656e2061646472657373","id":11403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2223:31:42","typeDescriptions":{"typeIdentifier":"t_stringliteral_3808bee982e1ebeafbf855c2a564e65d455b41aad1ab2bd4d44b15aef397d156","typeString":"literal_string \"Invalid product token address\""},"value":"Invalid product token address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3808bee982e1ebeafbf855c2a564e65d455b41aad1ab2bd4d44b15aef397d156","typeString":"literal_string \"Invalid product token address\""}],"id":11396,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2179:7:42","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2179:76:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11405,"nodeType":"ExpressionStatement","src":"2179:76:42"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":11412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11407,"name":"_feeWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11370,"src":"2273:10:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":11410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2295:1:42","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":11409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2287:7:42","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11408,"name":"address","nodeType":"ElementaryTypeName","src":"2287:7:42","typeDescriptions":{}}},"id":11411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2287:10:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2273:24:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206665652077616c6c6574","id":11413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2299:20:42","typeDescriptions":{"typeIdentifier":"t_stringliteral_4a20e95700812c61fc815a3eafd2b14e7c5b30d1b7fda875401c829c7555a76b","typeString":"literal_string \"Invalid fee wallet\""},"value":"Invalid fee wallet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4a20e95700812c61fc815a3eafd2b14e7c5b30d1b7fda875401c829c7555a76b","typeString":"literal_string \"Invalid fee wallet\""}],"id":11406,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2265:7:42","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2265:55:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11415,"nodeType":"ExpressionStatement","src":"2265:55:42"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":11422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11417,"name":"_fundraiserImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11372,"src":"2338:25:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":11420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2375:1:42","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":11419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2367:7:42","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11418,"name":"address","nodeType":"ElementaryTypeName","src":"2367:7:42","typeDescriptions":{}}},"id":11421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2367:10:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2338:39:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420696d706c656d656e746174696f6e","id":11423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2379:24:42","typeDescriptions":{"typeIdentifier":"t_stringliteral_26b47a002132cea0a925aef4dbf669c486d2d4b7979ed0c176a2e4f058e38c3c","typeString":"literal_string \"Invalid implementation\""},"value":"Invalid implementation"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_26b47a002132cea0a925aef4dbf669c486d2d4b7979ed0c176a2e4f058e38c3c","typeString":"literal_string \"Invalid implementation\""}],"id":11416,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2330:7:42","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2330:74:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11425,"nodeType":"ExpressionStatement","src":"2330:74:42"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":11432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11427,"name":"_initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11374,"src":"2422:13:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":11430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2447:1:42","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":11429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2439:7:42","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11428,"name":"address","nodeType":"ElementaryTypeName","src":"2439:7:42","typeDescriptions":{}}},"id":11431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2439:10:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2422:27:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206f776e6572","id":11433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2451:15:42","typeDescriptions":{"typeIdentifier":"t_stringliteral_110461b12e459dc76e692e7a47f9621cf45c7d48020c3c7b2066107cdf1f52ae","typeString":"literal_string \"Invalid owner\""},"value":"Invalid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_110461b12e459dc76e692e7a47f9621cf45c7d48020c3c7b2066107cdf1f52ae","typeString":"literal_string \"Invalid owner\""}],"id":11426,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2414:7:42","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2414:53:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11435,"nodeType":"ExpressionStatement","src":"2414:53:42"},{"expression":{"id":11438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11436,"name":"usdcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11317,"src":"2486:11:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11437,"name":"_usdcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11364,"src":"2500:12:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2486:26:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11439,"nodeType":"ExpressionStatement","src":"2486:26:42"},{"expression":{"id":11442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11440,"name":"productTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11319,"src":"2522:19:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11441,"name":"_productTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11366,"src":"2544:20:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2522:42:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11443,"nodeType":"ExpressionStatement","src":"2522:42:42"},{"expression":{"id":11446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11444,"name":"defaultFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11321,"src":"2574:20:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11445,"name":"_defaultFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11368,"src":"2597:21:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2574:44:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11447,"nodeType":"ExpressionStatement","src":"2574:44:42"},{"expression":{"id":11450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11448,"name":"feeWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11323,"src":"2628:9:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11449,"name":"_feeWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11370,"src":"2640:10:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2628:22:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11451,"nodeType":"ExpressionStatement","src":"2628:22:42"},{"expression":{"id":11454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11452,"name":"fundraiserImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11325,"src":"2660:24:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11453,"name":"_fundraiserImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11372,"src":"2687:25:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2660:52:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11455,"nodeType":"ExpressionStatement","src":"2660:52:42"}]},"functionSelector":"ff9935cb","id":11457,"implemented":true,"kind":"function","modifiers":[{"id":11377,"kind":"modifierInvocation","modifierName":{"id":11376,"name":"initializer","nameLocations":["2006:11:42"],"nodeType":"IdentifierPath","referencedDeclaration":733,"src":"2006:11:42"},"nodeType":"ModifierInvocation","src":"2006:11:42"}],"name":"initialize","nameLocation":"1773:10:42","nodeType":"FunctionDefinition","parameters":{"id":11375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11364,"mutability":"mutable","name":"_usdcAddress","nameLocation":"1801:12:42","nodeType":"VariableDeclaration","scope":11457,"src":"1793:20:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11363,"name":"address","nodeType":"ElementaryTypeName","src":"1793:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11366,"mutability":"mutable","name":"_productTokenAddress","nameLocation":"1831:20:42","nodeType":"VariableDeclaration","scope":11457,"src":"1823:28:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11365,"name":"address","nodeType":"ElementaryTypeName","src":"1823:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11368,"mutability":"mutable","name":"_defaultFeePercentage","nameLocation":"1869:21:42","nodeType":"VariableDeclaration","scope":11457,"src":"1861:29:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11367,"name":"uint256","nodeType":"ElementaryTypeName","src":"1861:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11370,"mutability":"mutable","name":"_feeWallet","nameLocation":"1908:10:42","nodeType":"VariableDeclaration","scope":11457,"src":"1900:18:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11369,"name":"address","nodeType":"ElementaryTypeName","src":"1900:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11372,"mutability":"mutable","name":"_fundraiserImplementation","nameLocation":"1936:25:42","nodeType":"VariableDeclaration","scope":11457,"src":"1928:33:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11371,"name":"address","nodeType":"ElementaryTypeName","src":"1928:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11374,"mutability":"mutable","name":"_initialOwner","nameLocation":"1979:13:42","nodeType":"VariableDeclaration","scope":11457,"src":"1971:21:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11373,"name":"address","nodeType":"ElementaryTypeName","src":"1971:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1783:215:42"},"returnParameters":{"id":11378,"nodeType":"ParameterList","parameters":[],"src":"2018:0:42"},"scope":11797,"src":"1764:955:42","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":11588,"nodeType":"Block","src":"3330:1799:42","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":11481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11476,"name":"beneficiaryWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11460,"src":"3348:17:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":11479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3377:1:42","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":11478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3369:7:42","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11477,"name":"address","nodeType":"ElementaryTypeName","src":"3369:7:42","typeDescriptions":{}}},"id":11480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3369:10:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3348:31:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642062656e6566696369617279","id":11482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3381:21:42","typeDescriptions":{"typeIdentifier":"t_stringliteral_86f5acfc12d2804bcf816c0b4c171086bf03352ff286fda75ac8ea27fcfb10a6","typeString":"literal_string \"Invalid beneficiary\""},"value":"Invalid beneficiary"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86f5acfc12d2804bcf816c0b4c171086bf03352ff286fda75ac8ea27fcfb10a6","typeString":"literal_string \"Invalid beneficiary\""}],"id":11475,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3340:7:42","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3340:63:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11484,"nodeType":"ExpressionStatement","src":"3340:63:42"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11486,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11466,"src":"3421:8:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":11487,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3432:5:42","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":11488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3438:9:42","memberName":"timestamp","nodeType":"MemberAccess","src":"3432:15:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3421:26:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420646561646c696e65","id":11490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3449:18:42","typeDescriptions":{"typeIdentifier":"t_stringliteral_8094d03ecc5e0260eb35f07d67a5ccc832dc308ea9feb6dd751d9c2e0d24fb77","typeString":"literal_string \"Invalid deadline\""},"value":"Invalid deadline"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8094d03ecc5e0260eb35f07d67a5ccc832dc308ea9feb6dd751d9c2e0d24fb77","typeString":"literal_string \"Invalid deadline\""}],"id":11485,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3413:7:42","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3413:55:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11492,"nodeType":"ExpressionStatement","src":"3413:55:42"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":11494,"name":"products","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11470,"src":"3486:8:42","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ProductConfig_$11814_memory_ptr_$dyn_memory_ptr","typeString":"struct ProductConfig memory[] memory"}},"id":11495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3495:6:42","memberName":"length","nodeType":"MemberAccess","src":"3486:15:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3504:1:42","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3486:19:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2070726f6475637473","id":11498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3507:13:42","typeDescriptions":{"typeIdentifier":"t_stringliteral_64ca70a7198d8738b2423cda1a0ab630644e821abe7b2cfdcf3529c06ff20384","typeString":"literal_string \"No products\""},"value":"No products"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_64ca70a7198d8738b2423cda1a0ab630644e821abe7b2cfdcf3529c06ff20384","typeString":"literal_string \"No products\""}],"id":11493,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3478:7:42","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3478:43:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11500,"nodeType":"ExpressionStatement","src":"3478:43:42"},{"assignments":[11502],"declarations":[{"constant":false,"id":11502,"mutability":"mutable","name":"campaignAdmin","nameLocation":"3540:13:42","nodeType":"VariableDeclaration","scope":11588,"src":"3532:21:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11501,"name":"address","nodeType":"ElementaryTypeName","src":"3532:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":11505,"initialValue":{"expression":{"id":11503,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3556:3:42","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3560:6:42","memberName":"sender","nodeType":"MemberAccess","src":"3556:10:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3532:34:42"},{"assignments":[11507],"declarations":[{"constant":false,"id":11507,"mutability":"mutable","name":"fundraiserClone","nameLocation":"3645:15:42","nodeType":"VariableDeclaration","scope":11588,"src":"3637:23:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11506,"name":"address","nodeType":"ElementaryTypeName","src":"3637:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":11511,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":11508,"name":"fundraiserImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11325,"src":"3663:24:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3688:5:42","memberName":"clone","nodeType":"MemberAccess","referencedDeclaration":2811,"src":"3663:30:42","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_address_$attached_to$_t_address_$","typeString":"function (address) returns (address)"}},"id":11510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3663:32:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3637:58:42"},{"expression":{"arguments":[{"id":11516,"name":"usdcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11317,"src":"3924:11:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11517,"name":"beneficiaryWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11460,"src":"3949:17:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11518,"name":"feeWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11323,"src":"3980:9:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11519,"name":"defaultFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11321,"src":"4003:20:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11520,"name":"fundingType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11462,"src":"4037:11:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11521,"name":"minimumTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11464,"src":"4062:13:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11522,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11466,"src":"4089:8:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11523,"name":"productTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11319,"src":"4111:19:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":11526,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4152:4:42","typeDescriptions":{"typeIdentifier":"t_contract$_USDCFundraiserFactoryUpgradeable_$11797","typeString":"contract USDCFundraiserFactoryUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_USDCFundraiserFactoryUpgradeable_$11797","typeString":"contract USDCFundraiserFactoryUpgradeable"}],"id":11525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4144:7:42","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11524,"name":"address","nodeType":"ElementaryTypeName","src":"4144:7:42","typeDescriptions":{}}},"id":11527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:13:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11528,"name":"products","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11470,"src":"4216:8:42","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ProductConfig_$11814_memory_ptr_$dyn_memory_ptr","typeString":"struct ProductConfig memory[] memory"}},{"id":11529,"name":"campaignAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11502,"src":"4281:13:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":11530,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"4308:5:42","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":11531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4308:7:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_struct$_ProductConfig_$11814_memory_ptr_$dyn_memory_ptr","typeString":"struct ProductConfig memory[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":11513,"name":"fundraiserClone","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11507,"src":"3883:15:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":11512,"name":"USDCFundraiserUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13024,"src":"3857:25:42","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_USDCFundraiserUpgradeable_$13024_$","typeString":"type(contract USDCFundraiserUpgradeable)"}},"id":11514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3857:42:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_USDCFundraiserUpgradeable_$13024","typeString":"contract USDCFundraiserUpgradeable"}},"id":11515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3900:10:42","memberName":"initialize","nodeType":"MemberAccess","referencedDeclaration":12251,"src":"3857:53:42","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_array$_t_struct$_ProductConfig_$11814_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address,uint256,uint256,uint256,uint256,address,address,struct ProductConfig memory[] memory,address,address) external"}},"id":11532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3857:514:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11533,"nodeType":"ExpressionStatement","src":"3857:514:42"},{"body":{"id":11566,"nodeType":"Block","src":"4501:389:42","statements":[{"assignments":[11546],"declarations":[{"constant":false,"id":11546,"mutability":"mutable","name":"uniqueProductId","nameLocation":"4601:15:42","nodeType":"VariableDeclaration","scope":11566,"src":"4593:23:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11545,"name":"uint256","nodeType":"ElementaryTypeName","src":"4593:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11556,"initialValue":{"arguments":[{"expression":{"baseExpression":{"id":11551,"name":"products","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11470,"src":"4681:8:42","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ProductConfig_$11814_memory_ptr_$dyn_memory_ptr","typeString":"struct ProductConfig memory[] memory"}},"id":11553,"indexExpression":{"id":11552,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11535,"src":"4690:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4681:11:42","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_memory_ptr","typeString":"struct ProductConfig memory"}},"id":11554,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4693:9:42","memberName":"productId","nodeType":"MemberAccess","referencedDeclaration":11809,"src":"4681:21:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":11548,"name":"fundraiserClone","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11507,"src":"4645:15:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":11547,"name":"USDCFundraiserUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13024,"src":"4619:25:42","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_USDCFundraiserUpgradeable_$13024_$","typeString":"type(contract USDCFundraiserUpgradeable)"}},"id":11549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4619:42:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_USDCFundraiserUpgradeable_$13024","typeString":"contract USDCFundraiserUpgradeable"}},"id":11550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4662:18:42","memberName":"getUniqueProductId","nodeType":"MemberAccess","referencedDeclaration":13001,"src":"4619:61:42","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":11555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4619:84:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4593:110:42"},{"eventCall":{"arguments":[{"id":11558,"name":"fundraiserClone","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11507,"src":"4823:15:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":11559,"name":"products","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11470,"src":"4840:8:42","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ProductConfig_$11814_memory_ptr_$dyn_memory_ptr","typeString":"struct ProductConfig memory[] memory"}},"id":11561,"indexExpression":{"id":11560,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11535,"src":"4849:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4840:11:42","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_memory_ptr","typeString":"struct ProductConfig memory"}},"id":11562,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4852:9:42","memberName":"productId","nodeType":"MemberAccess","referencedDeclaration":11809,"src":"4840:21:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11563,"name":"uniqueProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11546,"src":"4863:15:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11557,"name":"ProductIdMapped","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11354,"src":"4807:15:42","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":11564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4807:72:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11565,"nodeType":"EmitStatement","src":"4802:77:42"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11538,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11535,"src":"4475:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":11539,"name":"products","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11470,"src":"4479:8:42","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ProductConfig_$11814_memory_ptr_$dyn_memory_ptr","typeString":"struct ProductConfig memory[] memory"}},"id":11540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4488:6:42","memberName":"length","nodeType":"MemberAccess","src":"4479:15:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4475:19:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11567,"initializationExpression":{"assignments":[11535],"declarations":[{"constant":false,"id":11535,"mutability":"mutable","name":"i","nameLocation":"4468:1:42","nodeType":"VariableDeclaration","scope":11567,"src":"4460:9:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11534,"name":"uint256","nodeType":"ElementaryTypeName","src":"4460:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11537,"initialValue":{"hexValue":"30","id":11536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4472:1:42","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4460:13:42"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":11543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4496:3:42","subExpression":{"id":11542,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11535,"src":"4496:1:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11544,"nodeType":"ExpressionStatement","src":"4496:3:42"},"nodeType":"ForStatement","src":"4455:435:42"},{"expression":{"arguments":[{"id":11571,"name":"fundraiserClone","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11507,"src":"4966:15:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":11568,"name":"deployedFundraisers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11328,"src":"4941:19:42","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":11570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4961:4:42","memberName":"push","nodeType":"MemberAccess","src":"4941:24:42","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":11572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4941:41:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11573,"nodeType":"ExpressionStatement","src":"4941:41:42"},{"expression":{"id":11578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11574,"name":"isFundraiser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11332,"src":"4992:12:42","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":11576,"indexExpression":{"id":11575,"name":"fundraiserClone","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11507,"src":"5005:15:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4992:29:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":11577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5024:4:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4992:36:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11579,"nodeType":"ExpressionStatement","src":"4992:36:42"},{"eventCall":{"arguments":[{"id":11581,"name":"fundraiserClone","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11507,"src":"5062:15:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":11582,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5079:3:42","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5083:6:42","memberName":"sender","nodeType":"MemberAccess","src":"5079:10:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":11580,"name":"FundraiserCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11338,"src":"5044:17:42","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":11584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5044:46:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11585,"nodeType":"EmitStatement","src":"5039:51:42"},{"expression":{"id":11586,"name":"fundraiserClone","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11507,"src":"5107:15:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":11474,"id":11587,"nodeType":"Return","src":"5100:22:42"}]},"documentation":{"id":11458,"nodeType":"StructuredDocumentation","src":"2725:379:42","text":" @dev Create a new fundraiser campaign\n @param beneficiaryWallet The wallet to receive raised funds\n @param fundingType The funding type (0: All or Nothing, 1: Limitless)\n @param minimumTarget The minimum target amount for the campaign\n @param deadline The deadline for the campaign\n @param products The array of products for the campaign"},"functionSelector":"06f5e018","id":11589,"implemented":true,"kind":"function","modifiers":[],"name":"createFundraiser","nameLocation":"3118:16:42","nodeType":"FunctionDefinition","parameters":{"id":11471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11460,"mutability":"mutable","name":"beneficiaryWallet","nameLocation":"3152:17:42","nodeType":"VariableDeclaration","scope":11589,"src":"3144:25:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11459,"name":"address","nodeType":"ElementaryTypeName","src":"3144:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11462,"mutability":"mutable","name":"fundingType","nameLocation":"3187:11:42","nodeType":"VariableDeclaration","scope":11589,"src":"3179:19:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11461,"name":"uint256","nodeType":"ElementaryTypeName","src":"3179:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11464,"mutability":"mutable","name":"minimumTarget","nameLocation":"3216:13:42","nodeType":"VariableDeclaration","scope":11589,"src":"3208:21:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11463,"name":"uint256","nodeType":"ElementaryTypeName","src":"3208:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11466,"mutability":"mutable","name":"deadline","nameLocation":"3247:8:42","nodeType":"VariableDeclaration","scope":11589,"src":"3239:16:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11465,"name":"uint256","nodeType":"ElementaryTypeName","src":"3239:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11470,"mutability":"mutable","name":"products","nameLocation":"3288:8:42","nodeType":"VariableDeclaration","scope":11589,"src":"3265:31:42","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ProductConfig_$11814_memory_ptr_$dyn_memory_ptr","typeString":"struct ProductConfig[]"},"typeName":{"baseType":{"id":11468,"nodeType":"UserDefinedTypeName","pathNode":{"id":11467,"name":"ProductConfig","nameLocations":["3265:13:42"],"nodeType":"IdentifierPath","referencedDeclaration":11814,"src":"3265:13:42"},"referencedDeclaration":11814,"src":"3265:13:42","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_storage_ptr","typeString":"struct ProductConfig"}},"id":11469,"nodeType":"ArrayTypeName","src":"3265:15:42","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ProductConfig_$11814_storage_$dyn_storage_ptr","typeString":"struct ProductConfig[]"}},"visibility":"internal"}],"src":"3134:168:42"},"returnParameters":{"id":11474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11589,"src":"3321:7:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11472,"name":"address","nodeType":"ElementaryTypeName","src":"3321:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3320:9:42"},"scope":11797,"src":"3109:2020:42","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11618,"nodeType":"Block","src":"5607:156:42","statements":[{"expression":{"arguments":[{"baseExpression":{"id":11602,"name":"isFundraiser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11332,"src":"5625:12:42","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":11605,"indexExpression":{"expression":{"id":11603,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5638:3:42","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5642:6:42","memberName":"sender","nodeType":"MemberAccess","src":"5638:10:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5625:24:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792066756e64726169736572732063616e206d696e74","id":11606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5651:27:42","typeDescriptions":{"typeIdentifier":"t_stringliteral_94dfed0ccf0145bb44ad8236953a305dbdb5304c6b46135314c00436ca81fb2e","typeString":"literal_string \"Only fundraisers can mint\""},"value":"Only fundraisers can mint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_94dfed0ccf0145bb44ad8236953a305dbdb5304c6b46135314c00436ca81fb2e","typeString":"literal_string \"Only fundraisers can mint\""}],"id":11601,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5617:7:42","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:62:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11608,"nodeType":"ExpressionStatement","src":"5617:62:42"},{"expression":{"arguments":[{"id":11613,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11594,"src":"5734:2:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11614,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11596,"src":"5738:9:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11615,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11598,"src":"5749:6:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":11610,"name":"givenProductTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11592,"src":"5703:24:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":11609,"name":"IProductToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11303,"src":"5689:13:42","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IProductToken_$11303_$","typeString":"type(contract IProductToken)"}},"id":11611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5689:39:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IProductToken_$11303","typeString":"contract IProductToken"}},"id":11612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5729:4:42","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":11293,"src":"5689:44:42","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) external"}},"id":11616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5689:67:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11617,"nodeType":"ExpressionStatement","src":"5689:67:42"}]},"documentation":{"id":11590,"nodeType":"StructuredDocumentation","src":"5135:350:42","text":" @dev Allows authorized fundraisers to mint tokens through the factory\n @param to Address to mint tokens to\n @param productId Product ID to mint\n @param amount Amount to mint\n @notice Only fundraisers created by this factory can call this function\n @notice Factory must have MINTER_ROLE on ProductToken"},"functionSelector":"8ca0ebc6","id":11619,"implemented":true,"kind":"function","modifiers":[],"name":"mintForFundraiser","nameLocation":"5499:17:42","nodeType":"FunctionDefinition","parameters":{"id":11599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11592,"mutability":"mutable","name":"givenProductTokenAddress","nameLocation":"5525:24:42","nodeType":"VariableDeclaration","scope":11619,"src":"5517:32:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11591,"name":"address","nodeType":"ElementaryTypeName","src":"5517:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11594,"mutability":"mutable","name":"to","nameLocation":"5559:2:42","nodeType":"VariableDeclaration","scope":11619,"src":"5551:10:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11593,"name":"address","nodeType":"ElementaryTypeName","src":"5551:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11596,"mutability":"mutable","name":"productId","nameLocation":"5571:9:42","nodeType":"VariableDeclaration","scope":11619,"src":"5563:17:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11595,"name":"uint256","nodeType":"ElementaryTypeName","src":"5563:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11598,"mutability":"mutable","name":"amount","nameLocation":"5590:6:42","nodeType":"VariableDeclaration","scope":11619,"src":"5582:14:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11597,"name":"uint256","nodeType":"ElementaryTypeName","src":"5582:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5516:81:42"},"returnParameters":{"id":11600,"nodeType":"ParameterList","parameters":[],"src":"5607:0:42"},"scope":11797,"src":"5490:273:42","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11648,"nodeType":"Block","src":"6247:158:42","statements":[{"expression":{"arguments":[{"baseExpression":{"id":11632,"name":"isFundraiser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11332,"src":"6265:12:42","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":11635,"indexExpression":{"expression":{"id":11633,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6278:3:42","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6282:6:42","memberName":"sender","nodeType":"MemberAccess","src":"6278:10:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6265:24:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792066756e64726169736572732063616e206275726e","id":11636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6291:27:42","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8962c90ce1abcbc7b9900caabb4baf5da25ec4be25eecba55770f4b752ac0a1","typeString":"literal_string \"Only fundraisers can burn\""},"value":"Only fundraisers can burn"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8962c90ce1abcbc7b9900caabb4baf5da25ec4be25eecba55770f4b752ac0a1","typeString":"literal_string \"Only fundraisers can burn\""}],"id":11631,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6257:7:42","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6257:62:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11638,"nodeType":"ExpressionStatement","src":"6257:62:42"},{"expression":{"arguments":[{"id":11643,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11624,"src":"6374:4:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11644,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11626,"src":"6380:9:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":11645,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11628,"src":"6391:6:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":11640,"name":"givenProductTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11622,"src":"6343:24:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":11639,"name":"IProductToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11303,"src":"6329:13:42","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IProductToken_$11303_$","typeString":"type(contract IProductToken)"}},"id":11641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6329:39:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IProductToken_$11303","typeString":"contract IProductToken"}},"id":11642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6369:4:42","memberName":"burn","nodeType":"MemberAccess","referencedDeclaration":11302,"src":"6329:44:42","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) external"}},"id":11646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6329:69:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11647,"nodeType":"ExpressionStatement","src":"6329:69:42"}]},"documentation":{"id":11620,"nodeType":"StructuredDocumentation","src":"5769:354:42","text":" @dev Allows authorized fundraisers to burn tokens through the factory\n @param from Address to burn tokens from\n @param productId Product ID to burn\n @param amount Amount to burn\n @notice Only fundraisers created by this factory can call this function\n @notice Factory must have MINTER_ROLE on ProductToken"},"functionSelector":"270a2a65","id":11649,"implemented":true,"kind":"function","modifiers":[],"name":"burnForFundraiser","nameLocation":"6137:17:42","nodeType":"FunctionDefinition","parameters":{"id":11629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11622,"mutability":"mutable","name":"givenProductTokenAddress","nameLocation":"6163:24:42","nodeType":"VariableDeclaration","scope":11649,"src":"6155:32:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11621,"name":"address","nodeType":"ElementaryTypeName","src":"6155:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11624,"mutability":"mutable","name":"from","nameLocation":"6197:4:42","nodeType":"VariableDeclaration","scope":11649,"src":"6189:12:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11623,"name":"address","nodeType":"ElementaryTypeName","src":"6189:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11626,"mutability":"mutable","name":"productId","nameLocation":"6211:9:42","nodeType":"VariableDeclaration","scope":11649,"src":"6203:17:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11625,"name":"uint256","nodeType":"ElementaryTypeName","src":"6203:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11628,"mutability":"mutable","name":"amount","nameLocation":"6230:6:42","nodeType":"VariableDeclaration","scope":11649,"src":"6222:14:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11627,"name":"uint256","nodeType":"ElementaryTypeName","src":"6222:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6154:83:42"},"returnParameters":{"id":11630,"nodeType":"ParameterList","parameters":[],"src":"6247:0:42"},"scope":11797,"src":"6128:277:42","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11668,"nodeType":"Block","src":"6620:147:42","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11658,"name":"newFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11652,"src":"6638:16:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":11659,"name":"BASIS_POINTS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11315,"src":"6657:12:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6638:31:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4665652070657263656e74616765206d757374206265206c657373207468616e2031303025","id":11661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6671:39:42","typeDescriptions":{"typeIdentifier":"t_stringliteral_2b5cb1e8bef3419e42a588db986ea2a0129d3ccbbc2b0d4eaa7a34e0b1df7ed9","typeString":"literal_string \"Fee percentage must be less than 100%\""},"value":"Fee percentage must be less than 100%"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2b5cb1e8bef3419e42a588db986ea2a0129d3ccbbc2b0d4eaa7a34e0b1df7ed9","typeString":"literal_string \"Fee percentage must be less than 100%\""}],"id":11657,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6630:7:42","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6630:81:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11663,"nodeType":"ExpressionStatement","src":"6630:81:42"},{"expression":{"id":11666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11664,"name":"defaultFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11321,"src":"6721:20:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11665,"name":"newFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11652,"src":"6744:16:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6721:39:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11667,"nodeType":"ExpressionStatement","src":"6721:39:42"}]},"documentation":{"id":11650,"nodeType":"StructuredDocumentation","src":"6411:123:42","text":" @dev Change the default fee percentage\n @param newFeePercentage The new fee percentage (basis points)"},"functionSelector":"39d2c669","id":11669,"implemented":true,"kind":"function","modifiers":[{"id":11655,"kind":"modifierInvocation","modifierName":{"id":11654,"name":"onlyOwner","nameLocations":["6610:9:42"],"nodeType":"IdentifierPath","referencedDeclaration":520,"src":"6610:9:42"},"nodeType":"ModifierInvocation","src":"6610:9:42"}],"name":"changeDefaultFeePercentage","nameLocation":"6548:26:42","nodeType":"FunctionDefinition","parameters":{"id":11653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11652,"mutability":"mutable","name":"newFeePercentage","nameLocation":"6583:16:42","nodeType":"VariableDeclaration","scope":11669,"src":"6575:24:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11651,"name":"uint256","nodeType":"ElementaryTypeName","src":"6575:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6574:26:42"},"returnParameters":{"id":11656,"nodeType":"ParameterList","parameters":[],"src":"6620:0:42"},"scope":11797,"src":"6539:228:42","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11691,"nodeType":"Block","src":"6940:108:42","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":11683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11678,"name":"newFeeWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11672,"src":"6958:12:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":11681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6982:1:42","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":11680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6974:7:42","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11679,"name":"address","nodeType":"ElementaryTypeName","src":"6974:7:42","typeDescriptions":{}}},"id":11682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6974:10:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6958:26:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206665652077616c6c6574","id":11684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6986:20:42","typeDescriptions":{"typeIdentifier":"t_stringliteral_4a20e95700812c61fc815a3eafd2b14e7c5b30d1b7fda875401c829c7555a76b","typeString":"literal_string \"Invalid fee wallet\""},"value":"Invalid fee wallet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4a20e95700812c61fc815a3eafd2b14e7c5b30d1b7fda875401c829c7555a76b","typeString":"literal_string \"Invalid fee wallet\""}],"id":11677,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6950:7:42","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6950:57:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11686,"nodeType":"ExpressionStatement","src":"6950:57:42"},{"expression":{"id":11689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11687,"name":"feeWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11323,"src":"7017:9:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11688,"name":"newFeeWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11672,"src":"7029:12:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7017:24:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11690,"nodeType":"ExpressionStatement","src":"7017:24:42"}]},"documentation":{"id":11670,"nodeType":"StructuredDocumentation","src":"6773:96:42","text":" @dev Change the fee wallet\n @param newFeeWallet The new fee wallet address"},"functionSelector":"3e4d0310","id":11692,"implemented":true,"kind":"function","modifiers":[{"id":11675,"kind":"modifierInvocation","modifierName":{"id":11674,"name":"onlyOwner","nameLocations":["6930:9:42"],"nodeType":"IdentifierPath","referencedDeclaration":520,"src":"6930:9:42"},"nodeType":"ModifierInvocation","src":"6930:9:42"}],"name":"changeFeeWallet","nameLocation":"6883:15:42","nodeType":"FunctionDefinition","parameters":{"id":11673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11672,"mutability":"mutable","name":"newFeeWallet","nameLocation":"6907:12:42","nodeType":"VariableDeclaration","scope":11692,"src":"6899:20:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11671,"name":"address","nodeType":"ElementaryTypeName","src":"6899:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6898:22:42"},"returnParameters":{"id":11676,"nodeType":"ParameterList","parameters":[],"src":"6940:0:42"},"scope":11797,"src":"6874:174:42","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11718,"nodeType":"Block","src":"7265:192:42","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":11706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11701,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11695,"src":"7283:17:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":11704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7312:1:42","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":11703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7304:7:42","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11702,"name":"address","nodeType":"ElementaryTypeName","src":"7304:7:42","typeDescriptions":{}}},"id":11705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7304:10:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7283:31:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420696d706c656d656e746174696f6e","id":11707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7316:24:42","typeDescriptions":{"typeIdentifier":"t_stringliteral_26b47a002132cea0a925aef4dbf669c486d2d4b7979ed0c176a2e4f058e38c3c","typeString":"literal_string \"Invalid implementation\""},"value":"Invalid implementation"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_26b47a002132cea0a925aef4dbf669c486d2d4b7979ed0c176a2e4f058e38c3c","typeString":"literal_string \"Invalid implementation\""}],"id":11700,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7275:7:42","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7275:66:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11709,"nodeType":"ExpressionStatement","src":"7275:66:42"},{"expression":{"id":11712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11710,"name":"fundraiserImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11325,"src":"7351:24:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11711,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11695,"src":"7378:17:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7351:44:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11713,"nodeType":"ExpressionStatement","src":"7351:44:42"},{"eventCall":{"arguments":[{"id":11715,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11695,"src":"7432:17:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":11714,"name":"ImplementationUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11342,"src":"7410:21:42","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":11716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7410:40:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11717,"nodeType":"EmitStatement","src":"7405:45:42"}]},"documentation":{"id":11693,"nodeType":"StructuredDocumentation","src":"7054:120:42","text":" @dev Update the fundraiser implementation\n @param newImplementation The new implementation address"},"functionSelector":"7a84379c","id":11719,"implemented":true,"kind":"function","modifiers":[{"id":11698,"kind":"modifierInvocation","modifierName":{"id":11697,"name":"onlyOwner","nameLocations":["7255:9:42"],"nodeType":"IdentifierPath","referencedDeclaration":520,"src":"7255:9:42"},"nodeType":"ModifierInvocation","src":"7255:9:42"}],"name":"updateFundraiserImplementation","nameLocation":"7188:30:42","nodeType":"FunctionDefinition","parameters":{"id":11696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11695,"mutability":"mutable","name":"newImplementation","nameLocation":"7227:17:42","nodeType":"VariableDeclaration","scope":11719,"src":"7219:25:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11694,"name":"address","nodeType":"ElementaryTypeName","src":"7219:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7218:27:42"},"returnParameters":{"id":11699,"nodeType":"ParameterList","parameters":[],"src":"7265:0:42"},"scope":11797,"src":"7179:278:42","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11745,"nodeType":"Block","src":"7830:186:42","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":11733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11728,"name":"newProductToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11722,"src":"7848:15:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":11731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7875:1:42","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":11730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7867:7:42","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11729,"name":"address","nodeType":"ElementaryTypeName","src":"7867:7:42","typeDescriptions":{}}},"id":11732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7867:10:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7848:29:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642070726f6475637420746f6b656e2061646472657373","id":11734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7879:31:42","typeDescriptions":{"typeIdentifier":"t_stringliteral_3808bee982e1ebeafbf855c2a564e65d455b41aad1ab2bd4d44b15aef397d156","typeString":"literal_string \"Invalid product token address\""},"value":"Invalid product token address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3808bee982e1ebeafbf855c2a564e65d455b41aad1ab2bd4d44b15aef397d156","typeString":"literal_string \"Invalid product token address\""}],"id":11727,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7840:7:42","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7840:71:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11736,"nodeType":"ExpressionStatement","src":"7840:71:42"},{"expression":{"id":11739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11737,"name":"productTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11319,"src":"7921:19:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11738,"name":"newProductToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11722,"src":"7943:15:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7921:37:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11740,"nodeType":"ExpressionStatement","src":"7921:37:42"},{"eventCall":{"arguments":[{"id":11742,"name":"newProductToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11722,"src":"7993:15:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":11741,"name":"ProductTokenUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11346,"src":"7973:19:42","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":11743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7973:36:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11744,"nodeType":"EmitStatement","src":"7968:41:42"}]},"documentation":{"id":11720,"nodeType":"StructuredDocumentation","src":"7467:279:42","text":" @dev Updates the product token address\n @param newProductToken The address of the new product token contract\n @notice Only the owner can update the product token address\n @notice This only affects new fundraiser deployments, not existing ones"},"functionSelector":"63025e97","id":11746,"implemented":true,"kind":"function","modifiers":[{"id":11725,"kind":"modifierInvocation","modifierName":{"id":11724,"name":"onlyOwner","nameLocations":["7820:9:42"],"nodeType":"IdentifierPath","referencedDeclaration":520,"src":"7820:9:42"},"nodeType":"ModifierInvocation","src":"7820:9:42"}],"name":"updateProductTokenAddress","nameLocation":"7760:25:42","nodeType":"FunctionDefinition","parameters":{"id":11723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11722,"mutability":"mutable","name":"newProductToken","nameLocation":"7794:15:42","nodeType":"VariableDeclaration","scope":11746,"src":"7786:23:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11721,"name":"address","nodeType":"ElementaryTypeName","src":"7786:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7785:25:42"},"returnParameters":{"id":11726,"nodeType":"ParameterList","parameters":[],"src":"7830:0:42"},"scope":11797,"src":"7751:265:42","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11754,"nodeType":"Block","src":"8160:33:42","statements":[{"expression":{"id":11752,"name":"feeWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11323,"src":"8177:9:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":11751,"id":11753,"nodeType":"Return","src":"8170:16:42"}]},"documentation":{"id":11747,"nodeType":"StructuredDocumentation","src":"8022:77:42","text":" @dev Get the fee wallet\n @return The fee wallet address"},"functionSelector":"5459060d","id":11755,"implemented":true,"kind":"function","modifiers":[],"name":"getFeeWallet","nameLocation":"8113:12:42","nodeType":"FunctionDefinition","parameters":{"id":11748,"nodeType":"ParameterList","parameters":[],"src":"8125:2:42"},"returnParameters":{"id":11751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11750,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11755,"src":"8151:7:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11749,"name":"address","nodeType":"ElementaryTypeName","src":"8151:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8150:9:42"},"scope":11797,"src":"8104:89:42","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":11764,"nodeType":"Block","src":"8384:50:42","statements":[{"expression":{"expression":{"id":11761,"name":"deployedFundraisers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11328,"src":"8401:19:42","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":11762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8421:6:42","memberName":"length","nodeType":"MemberAccess","src":"8401:26:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":11760,"id":11763,"nodeType":"Return","src":"8394:33:42"}]},"documentation":{"id":11756,"nodeType":"StructuredDocumentation","src":"8203:105:42","text":" @dev Get the deployed fundraisers count\n @return The number of deployed fundraisers"},"functionSelector":"be531076","id":11765,"implemented":true,"kind":"function","modifiers":[],"name":"getDeployedFundraisersCount","nameLocation":"8322:27:42","nodeType":"FunctionDefinition","parameters":{"id":11757,"nodeType":"ParameterList","parameters":[],"src":"8349:2:42"},"returnParameters":{"id":11760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11759,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11765,"src":"8375:7:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11758,"name":"uint256","nodeType":"ElementaryTypeName","src":"8375:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8374:9:42"},"scope":11797,"src":"8313:121:42","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":11785,"nodeType":"Block","src":"8695:126:42","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11774,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11768,"src":"8713:5:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":11775,"name":"deployedFundraisers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11328,"src":"8721:19:42","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":11776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8741:6:42","memberName":"length","nodeType":"MemberAccess","src":"8721:26:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8713:34:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e646578206f7574206f6620626f756e6473","id":11778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8749:21:42","typeDescriptions":{"typeIdentifier":"t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367","typeString":"literal_string \"Index out of bounds\""},"value":"Index out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367","typeString":"literal_string \"Index out of bounds\""}],"id":11773,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8705:7:42","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8705:66:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11780,"nodeType":"ExpressionStatement","src":"8705:66:42"},{"expression":{"baseExpression":{"id":11781,"name":"deployedFundraisers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11328,"src":"8788:19:42","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":11783,"indexExpression":{"id":11782,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11768,"src":"8808:5:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8788:26:42","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":11772,"id":11784,"nodeType":"Return","src":"8781:33:42"}]},"documentation":{"id":11766,"nodeType":"StructuredDocumentation","src":"8444:168:42","text":" @dev Get a deployed fundraiser by index\n @param index The index of the fundraiser to retrieve\n @return The address of the deployed fundraiser"},"functionSelector":"eb854690","id":11786,"implemented":true,"kind":"function","modifiers":[],"name":"getDeployedFundraiser","nameLocation":"8626:21:42","nodeType":"FunctionDefinition","parameters":{"id":11769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11768,"mutability":"mutable","name":"index","nameLocation":"8656:5:42","nodeType":"VariableDeclaration","scope":11786,"src":"8648:13:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11767,"name":"uint256","nodeType":"ElementaryTypeName","src":"8648:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8647:15:42"},"returnParameters":{"id":11772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11786,"src":"8686:7:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11770,"name":"address","nodeType":"ElementaryTypeName","src":"8686:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8685:9:42"},"scope":11797,"src":"8617:204:42","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1029],"body":{"id":11795,"nodeType":"Block","src":"9042:2:42","statements":[]},"documentation":{"id":11787,"nodeType":"StructuredDocumentation","src":"8827:128:42","text":" @dev Authorize an upgrade to a new implementation\n @param newImplementation The new implementation address"},"id":11796,"implemented":true,"kind":"function","modifiers":[{"id":11793,"kind":"modifierInvocation","modifierName":{"id":11792,"name":"onlyOwner","nameLocations":["9032:9:42"],"nodeType":"IdentifierPath","referencedDeclaration":520,"src":"9032:9:42"},"nodeType":"ModifierInvocation","src":"9032:9:42"}],"name":"_authorizeUpgrade","nameLocation":"8969:17:42","nodeType":"FunctionDefinition","overrides":{"id":11791,"nodeType":"OverrideSpecifier","overrides":[],"src":"9023:8:42"},"parameters":{"id":11790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11789,"mutability":"mutable","name":"newImplementation","nameLocation":"8995:17:42","nodeType":"VariableDeclaration","scope":11796,"src":"8987:25:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11788,"name":"address","nodeType":"ElementaryTypeName","src":"8987:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8986:27:42"},"returnParameters":{"id":11794,"nodeType":"ParameterList","parameters":[],"src":"9042:0:42"},"scope":11797,"src":"8960:84:42","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":11798,"src":"666:8380:42","usedErrors":[461,466,642,645,920,925,3207,3220,4378,5647,5650,5653],"usedEvents":[472,650,2624,11338,11342,11346,11354]}],"src":"32:9014:42"},"id":42},"contracts/USDCFundraiserUpgradeable.sol":{"ast":{"absolutePath":"contracts/USDCFundraiserUpgradeable.sol","exportedSymbols":{"AccessControlUpgradeable":[430],"Arrays":[5506],"AutomationBase":[37],"AutomationCompatible":[48],"AutomationCompatibleInterface":[67],"ContextUpgradeable":[2118],"ERC1155Upgradeable":[2072],"ERC1155Utils":[3826],"ERC165Upgradeable":[2447],"ERC1967Utils":[3481],"IAccessControl":[2530],"IERC1155":[3614],"IERC1155Errors":[2788],"IERC1155MetadataURI":[3672],"IERC1363":[2612],"IERC165":[7379],"IERC1822Proxiable":[2651],"IERC20":[3904],"IFactory":[11837],"Initializable":[893],"Math":[9000],"OwnableUpgradeable":[625],"PausableUpgradeable":[2278],"ProductConfig":[11814],"ProductTokenUpgradeable":[11276],"ReentrancyGuardUpgradeable":[2407],"SafeCast":[10765],"SafeERC20":[4368],"SignedMath":[10909],"Strings":[7367],"USDCFundraiserUpgradeable":[13024],"UUPSUpgradeable":[1075]},"id":13025,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":11799,"literals":["solidity","^","0.8",".27"],"nodeType":"PragmaDirective","src":"32:24:43"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":11800,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":13025,"sourceUnit":3905,"src":"58:56:43","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":11801,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":13025,"sourceUnit":626,"src":"115:75:43","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","id":11802,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":13025,"sourceUnit":2279,"src":"191:75:43","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","id":11803,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":13025,"sourceUnit":2408,"src":"267:82:43","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":11804,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":13025,"sourceUnit":894,"src":"350:75:43","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":11805,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":13025,"sourceUnit":4369,"src":"426:65:43","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol","file":"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol","id":11806,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":13025,"sourceUnit":49,"src":"492:75:43","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/ProductTokenUpgradeable.sol","file":"./ProductTokenUpgradeable.sol","id":11807,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":13025,"sourceUnit":11277,"src":"568:39:43","symbolAliases":[],"unitAlias":""},{"canonicalName":"ProductConfig","id":11814,"members":[{"constant":false,"id":11809,"mutability":"mutable","name":"productId","nameLocation":"644:9:43","nodeType":"VariableDeclaration","scope":11814,"src":"636:17:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11808,"name":"uint256","nodeType":"ElementaryTypeName","src":"636:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11811,"mutability":"mutable","name":"price","nameLocation":"667:5:43","nodeType":"VariableDeclaration","scope":11814,"src":"659:13:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11810,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11813,"mutability":"mutable","name":"supplyLimit","nameLocation":"686:11:43","nodeType":"VariableDeclaration","scope":11814,"src":"678:19:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11812,"name":"uint256","nodeType":"ElementaryTypeName","src":"678:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ProductConfig","nameLocation":"616:13:43","nodeType":"StructDefinition","scope":13025,"src":"609:120:43","visibility":"public"},{"abstract":false,"baseContracts":[],"canonicalName":"IFactory","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":11837,"linearizedBaseContracts":[11837],"name":"IFactory","nameLocation":"782:8:43","nodeType":"ContractDefinition","nodes":[{"functionSelector":"8ca0ebc6","id":11825,"implemented":false,"kind":"function","modifiers":[],"name":"mintForFundraiser","nameLocation":"806:17:43","nodeType":"FunctionDefinition","parameters":{"id":11823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11816,"mutability":"mutable","name":"productTokenAddress","nameLocation":"832:19:43","nodeType":"VariableDeclaration","scope":11825,"src":"824:27:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11815,"name":"address","nodeType":"ElementaryTypeName","src":"824:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11818,"mutability":"mutable","name":"to","nameLocation":"861:2:43","nodeType":"VariableDeclaration","scope":11825,"src":"853:10:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11817,"name":"address","nodeType":"ElementaryTypeName","src":"853:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11820,"mutability":"mutable","name":"productId","nameLocation":"873:9:43","nodeType":"VariableDeclaration","scope":11825,"src":"865:17:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11819,"name":"uint256","nodeType":"ElementaryTypeName","src":"865:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11822,"mutability":"mutable","name":"amount","nameLocation":"892:6:43","nodeType":"VariableDeclaration","scope":11825,"src":"884:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11821,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"823:76:43"},"returnParameters":{"id":11824,"nodeType":"ParameterList","parameters":[],"src":"908:0:43"},"scope":11837,"src":"797:112:43","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"270a2a65","id":11836,"implemented":false,"kind":"function","modifiers":[],"name":"burnForFundraiser","nameLocation":"923:17:43","nodeType":"FunctionDefinition","parameters":{"id":11834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11827,"mutability":"mutable","name":"productTokenAddress","nameLocation":"949:19:43","nodeType":"VariableDeclaration","scope":11836,"src":"941:27:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11826,"name":"address","nodeType":"ElementaryTypeName","src":"941:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11829,"mutability":"mutable","name":"from","nameLocation":"978:4:43","nodeType":"VariableDeclaration","scope":11836,"src":"970:12:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11828,"name":"address","nodeType":"ElementaryTypeName","src":"970:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11831,"mutability":"mutable","name":"productId","nameLocation":"992:9:43","nodeType":"VariableDeclaration","scope":11836,"src":"984:17:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11830,"name":"uint256","nodeType":"ElementaryTypeName","src":"984:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11833,"mutability":"mutable","name":"amount","nameLocation":"1011:6:43","nodeType":"VariableDeclaration","scope":11836,"src":"1003:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11832,"name":"uint256","nodeType":"ElementaryTypeName","src":"1003:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"940:78:43"},"returnParameters":{"id":11835,"nodeType":"ParameterList","parameters":[],"src":"1027:0:43"},"scope":11837,"src":"914:114:43","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":13025,"src":"772:258:43","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":11838,"name":"Initializable","nameLocations":["1070:13:43"],"nodeType":"IdentifierPath","referencedDeclaration":893,"src":"1070:13:43"},"id":11839,"nodeType":"InheritanceSpecifier","src":"1070:13:43"},{"baseName":{"id":11840,"name":"OwnableUpgradeable","nameLocations":["1085:18:43"],"nodeType":"IdentifierPath","referencedDeclaration":625,"src":"1085:18:43"},"id":11841,"nodeType":"InheritanceSpecifier","src":"1085:18:43"},{"baseName":{"id":11842,"name":"PausableUpgradeable","nameLocations":["1105:19:43"],"nodeType":"IdentifierPath","referencedDeclaration":2278,"src":"1105:19:43"},"id":11843,"nodeType":"InheritanceSpecifier","src":"1105:19:43"},{"baseName":{"id":11844,"name":"ReentrancyGuardUpgradeable","nameLocations":["1126:26:43"],"nodeType":"IdentifierPath","referencedDeclaration":2407,"src":"1126:26:43"},"id":11845,"nodeType":"InheritanceSpecifier","src":"1126:26:43"}],"canonicalName":"USDCFundraiserUpgradeable","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":13024,"linearizedBaseContracts":[13024,2407,2278,625,2118,893],"name":"USDCFundraiserUpgradeable","nameLocation":"1041:25:43","nodeType":"ContractDefinition","nodes":[{"global":false,"id":11849,"libraryName":{"id":11846,"name":"SafeERC20","nameLocations":["1165:9:43"],"nodeType":"IdentifierPath","referencedDeclaration":4368,"src":"1165:9:43"},"nodeType":"UsingForDirective","src":"1159:27:43","typeName":{"id":11848,"nodeType":"UserDefinedTypeName","pathNode":{"id":11847,"name":"IERC20","nameLocations":["1179:6:43"],"nodeType":"IdentifierPath","referencedDeclaration":3904,"src":"1179:6:43"},"referencedDeclaration":3904,"src":"1179:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}}},{"constant":true,"functionSelector":"e1f1c4a7","id":11852,"mutability":"constant","name":"BASIS_POINTS","nameLocation":"1220:12:43","nodeType":"VariableDeclaration","scope":13024,"src":"1196:44:43","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11850,"name":"uint256","nodeType":"ElementaryTypeName","src":"1196:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130303030","id":11851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1235:5:43","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"visibility":"public"},{"constant":false,"functionSelector":"3e413bee","id":11855,"mutability":"mutable","name":"usdc","nameLocation":"1289:4:43","nodeType":"VariableDeclaration","scope":13024,"src":"1275:18:43","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"},"typeName":{"id":11854,"nodeType":"UserDefinedTypeName","pathNode":{"id":11853,"name":"IERC20","nameLocations":["1275:6:43"],"nodeType":"IdentifierPath","referencedDeclaration":3904,"src":"1275:6:43"},"referencedDeclaration":3904,"src":"1275:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"25b4f65f","id":11858,"mutability":"mutable","name":"productToken","nameLocation":"1330:12:43","nodeType":"VariableDeclaration","scope":13024,"src":"1299:43:43","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ProductTokenUpgradeable_$11276","typeString":"contract ProductTokenUpgradeable"},"typeName":{"id":11857,"nodeType":"UserDefinedTypeName","pathNode":{"id":11856,"name":"ProductTokenUpgradeable","nameLocations":["1299:23:43"],"nodeType":"IdentifierPath","referencedDeclaration":11276,"src":"1299:23:43"},"referencedDeclaration":11276,"src":"1299:23:43","typeDescriptions":{"typeIdentifier":"t_contract$_ProductTokenUpgradeable_$11276","typeString":"contract ProductTokenUpgradeable"}},"visibility":"public"},{"constant":false,"functionSelector":"c45a0155","id":11860,"mutability":"mutable","name":"factory","nameLocation":"1363:7:43","nodeType":"VariableDeclaration","scope":13024,"src":"1348:22:43","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11859,"name":"address","nodeType":"ElementaryTypeName","src":"1348:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"c9788631","id":11862,"mutability":"mutable","name":"beneficiaryWallet","nameLocation":"1431:17:43","nodeType":"VariableDeclaration","scope":13024,"src":"1416:32:43","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11861,"name":"address","nodeType":"ElementaryTypeName","src":"1416:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"f25f4b56","id":11864,"mutability":"mutable","name":"feeWallet","nameLocation":"1469:9:43","nodeType":"VariableDeclaration","scope":13024,"src":"1454:24:43","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11863,"name":"address","nodeType":"ElementaryTypeName","src":"1454:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"42235da6","id":11866,"mutability":"mutable","name":"minimumTarget","nameLocation":"1499:13:43","nodeType":"VariableDeclaration","scope":13024,"src":"1484:28:43","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11865,"name":"uint256","nodeType":"ElementaryTypeName","src":"1484:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"29dcb0cf","id":11868,"mutability":"mutable","name":"deadline","nameLocation":"1533:8:43","nodeType":"VariableDeclaration","scope":13024,"src":"1518:23:43","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11867,"name":"uint256","nodeType":"ElementaryTypeName","src":"1518:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"a001ecdd","id":11870,"mutability":"mutable","name":"feePercentage","nameLocation":"1562:13:43","nodeType":"VariableDeclaration","scope":13024,"src":"1547:28:43","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11869,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"c5c4744c","id":11872,"mutability":"mutable","name":"totalRaised","nameLocation":"1646:11:43","nodeType":"VariableDeclaration","scope":13024,"src":"1631:26:43","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11871,"name":"uint256","nodeType":"ElementaryTypeName","src":"1631:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"b3f05b97","id":11874,"mutability":"mutable","name":"finalized","nameLocation":"1675:9:43","nodeType":"VariableDeclaration","scope":13024,"src":"1663:21:43","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11873,"name":"bool","nodeType":"ElementaryTypeName","src":"1663:4:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"66bff1db","id":11878,"mutability":"mutable","name":"tokenDeposits","nameLocation":"1725:13:43","nodeType":"VariableDeclaration","scope":13024,"src":"1690:48:43","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":11877,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":11875,"name":"uint256","nodeType":"ElementaryTypeName","src":"1698:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1690:27:43","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":11876,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"cb51bba9","id":11881,"mutability":"mutable","name":"productIds","nameLocation":"1790:10:43","nodeType":"VariableDeclaration","scope":13024,"src":"1773:27:43","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":11879,"name":"uint256","nodeType":"ElementaryTypeName","src":"1773:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11880,"nodeType":"ArrayTypeName","src":"1773:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"public"},{"constant":false,"functionSelector":"ebd692ea","id":11885,"mutability":"mutable","name":"productSoldCount","nameLocation":"1841:16:43","nodeType":"VariableDeclaration","scope":13024,"src":"1806:51:43","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":11884,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":11882,"name":"uint256","nodeType":"ElementaryTypeName","src":"1814:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1806:27:43","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":11883,"name":"uint256","nodeType":"ElementaryTypeName","src":"1825:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"fa8ab0ee","id":11887,"mutability":"mutable","name":"fundingType","nameLocation":"1917:11:43","nodeType":"VariableDeclaration","scope":13024,"src":"1902:26:43","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11886,"name":"uint256","nodeType":"ElementaryTypeName","src":"1902:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"7acc0b20","id":11892,"mutability":"mutable","name":"products","nameLocation":"2026:8:43","nodeType":"VariableDeclaration","scope":13024,"src":"1985:49:43","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProductConfig_$11814_storage_$","typeString":"mapping(uint256 => struct ProductConfig)"},"typeName":{"id":11891,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":11888,"name":"uint256","nodeType":"ElementaryTypeName","src":"1993:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1985:33:43","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProductConfig_$11814_storage_$","typeString":"mapping(uint256 => struct ProductConfig)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":11890,"nodeType":"UserDefinedTypeName","pathNode":{"id":11889,"name":"ProductConfig","nameLocations":["2004:13:43"],"nodeType":"IdentifierPath","referencedDeclaration":11814,"src":"2004:13:43"},"referencedDeclaration":11814,"src":"2004:13:43","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_storage_ptr","typeString":"struct ProductConfig"}}},"visibility":"public"},{"constant":false,"functionSelector":"2903d9cf","id":11896,"mutability":"mutable","name":"uniqueToOriginalProductId","nameLocation":"2075:25:43","nodeType":"VariableDeclaration","scope":13024,"src":"2040:60:43","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":11895,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":11893,"name":"uint256","nodeType":"ElementaryTypeName","src":"2048:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2040:27:43","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":11894,"name":"uint256","nodeType":"ElementaryTypeName","src":"2059:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"72afddf0","id":11898,"mutability":"mutable","name":"campaignAdmin","nameLocation":"2161:13:43","nodeType":"VariableDeclaration","scope":13024,"src":"2146:28:43","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11897,"name":"address","nodeType":"ElementaryTypeName","src":"2146:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":11915,"nodeType":"Block","src":"2209:107:43","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":11910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":11905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":11901,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2227:3:43","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2231:6:43","memberName":"sender","nodeType":"MemberAccess","src":"2227:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":11903,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"2241:5:43","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":11904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2241:7:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2227:21:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":11909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":11906,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2252:3:43","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2256:6:43","memberName":"sender","nodeType":"MemberAccess","src":"2252:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":11908,"name":"campaignAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11898,"src":"2266:13:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2252:27:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2227:52:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a6564","id":11911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2281:16:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""},"value":"Not authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""}],"id":11900,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2219:7:43","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2219:79:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11913,"nodeType":"ExpressionStatement","src":"2219:79:43"},{"id":11914,"nodeType":"PlaceholderStatement","src":"2308:1:43"}]},"id":11916,"name":"onlyAdminOrOwner","nameLocation":"2190:16:43","nodeType":"ModifierDefinition","parameters":{"id":11899,"nodeType":"ParameterList","parameters":[],"src":"2206:2:43"},"src":"2181:135:43","virtual":false,"visibility":"internal"},{"canonicalName":"USDCFundraiserUpgradeable.RegistrationParams","id":11937,"members":[{"constant":false,"id":11918,"mutability":"mutable","name":"name","nameLocation":"2365:4:43","nodeType":"VariableDeclaration","scope":11937,"src":"2358:11:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":11917,"name":"string","nodeType":"ElementaryTypeName","src":"2358:6:43","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11920,"mutability":"mutable","name":"encryptedEmail","nameLocation":"2385:14:43","nodeType":"VariableDeclaration","scope":11937,"src":"2379:20:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":11919,"name":"bytes","nodeType":"ElementaryTypeName","src":"2379:5:43","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":11922,"mutability":"mutable","name":"upkeepContract","nameLocation":"2417:14:43","nodeType":"VariableDeclaration","scope":11937,"src":"2409:22:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11921,"name":"address","nodeType":"ElementaryTypeName","src":"2409:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11924,"mutability":"mutable","name":"gasLimit","nameLocation":"2448:8:43","nodeType":"VariableDeclaration","scope":11937,"src":"2441:15:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":11923,"name":"uint32","nodeType":"ElementaryTypeName","src":"2441:6:43","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":11926,"mutability":"mutable","name":"adminAddress","nameLocation":"2474:12:43","nodeType":"VariableDeclaration","scope":11937,"src":"2466:20:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11925,"name":"address","nodeType":"ElementaryTypeName","src":"2466:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11928,"mutability":"mutable","name":"triggerType","nameLocation":"2502:11:43","nodeType":"VariableDeclaration","scope":11937,"src":"2496:17:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":11927,"name":"uint8","nodeType":"ElementaryTypeName","src":"2496:5:43","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":11930,"mutability":"mutable","name":"checkData","nameLocation":"2529:9:43","nodeType":"VariableDeclaration","scope":11937,"src":"2523:15:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":11929,"name":"bytes","nodeType":"ElementaryTypeName","src":"2523:5:43","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":11932,"mutability":"mutable","name":"triggerConfig","nameLocation":"2554:13:43","nodeType":"VariableDeclaration","scope":11937,"src":"2548:19:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":11931,"name":"bytes","nodeType":"ElementaryTypeName","src":"2548:5:43","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":11934,"mutability":"mutable","name":"offchainConfig","nameLocation":"2583:14:43","nodeType":"VariableDeclaration","scope":11937,"src":"2577:20:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":11933,"name":"bytes","nodeType":"ElementaryTypeName","src":"2577:5:43","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":11936,"mutability":"mutable","name":"amount","nameLocation":"2614:6:43","nodeType":"VariableDeclaration","scope":11937,"src":"2607:13:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":11935,"name":"uint96","nodeType":"ElementaryTypeName","src":"2607:6:43","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"name":"RegistrationParams","nameLocation":"2329:18:43","nodeType":"StructDefinition","scope":13024,"src":"2322:305:43","visibility":"public"},{"anonymous":false,"eventSelector":"90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15","id":11945,"name":"Deposit","nameLocation":"2639:7:43","nodeType":"EventDefinition","parameters":{"id":11944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11939,"indexed":true,"mutability":"mutable","name":"depositor","nameLocation":"2663:9:43","nodeType":"VariableDeclaration","scope":11945,"src":"2647:25:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11938,"name":"address","nodeType":"ElementaryTypeName","src":"2647:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11941,"indexed":false,"mutability":"mutable","name":"netAmount","nameLocation":"2682:9:43","nodeType":"VariableDeclaration","scope":11945,"src":"2674:17:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11940,"name":"uint256","nodeType":"ElementaryTypeName","src":"2674:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11943,"indexed":false,"mutability":"mutable","name":"feeAmount","nameLocation":"2701:9:43","nodeType":"VariableDeclaration","scope":11945,"src":"2693:17:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11942,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2646:65:43"},"src":"2633:79:43"},{"anonymous":false,"eventSelector":"dd0f555ae5273de37f96c52aa0ba4ae26fc23a0d7b0e2b8904ba8cf1636d6ce0","id":11951,"name":"Finalized","nameLocation":"2723:9:43","nodeType":"EventDefinition","parameters":{"id":11950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11947,"indexed":false,"mutability":"mutable","name":"success","nameLocation":"2738:7:43","nodeType":"VariableDeclaration","scope":11951,"src":"2733:12:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11946,"name":"bool","nodeType":"ElementaryTypeName","src":"2733:4:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":11949,"indexed":false,"mutability":"mutable","name":"totalRaised","nameLocation":"2755:11:43","nodeType":"VariableDeclaration","scope":11951,"src":"2747:19:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11948,"name":"uint256","nodeType":"ElementaryTypeName","src":"2747:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2732:35:43"},"src":"2717:51:43"},{"anonymous":false,"eventSelector":"b7048c2ad36aadee977bb16b4543a18866044d27a2ca753e1c7dbcfa7d7a6962","id":11961,"name":"Refund","nameLocation":"2779:6:43","nodeType":"EventDefinition","parameters":{"id":11960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11953,"indexed":true,"mutability":"mutable","name":"depositor","nameLocation":"2802:9:43","nodeType":"VariableDeclaration","scope":11961,"src":"2786:25:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11952,"name":"address","nodeType":"ElementaryTypeName","src":"2786:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11955,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2821:6:43","nodeType":"VariableDeclaration","scope":11961,"src":"2813:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11954,"name":"uint256","nodeType":"ElementaryTypeName","src":"2813:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11957,"indexed":false,"mutability":"mutable","name":"productId","nameLocation":"2837:9:43","nodeType":"VariableDeclaration","scope":11961,"src":"2829:17:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11956,"name":"uint256","nodeType":"ElementaryTypeName","src":"2829:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11959,"indexed":false,"mutability":"mutable","name":"quantity","nameLocation":"2856:8:43","nodeType":"VariableDeclaration","scope":11961,"src":"2848:16:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11958,"name":"uint256","nodeType":"ElementaryTypeName","src":"2848:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2785:80:43"},"src":"2773:93:43"},{"anonymous":false,"eventSelector":"0bb34bc6bcdd4ba28b7de4669c2e7d94d1b828b2a6a14b82991e087b20d73549","id":11969,"name":"ProductAdded","nameLocation":"2877:12:43","nodeType":"EventDefinition","parameters":{"id":11968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11963,"indexed":true,"mutability":"mutable","name":"productId","nameLocation":"2906:9:43","nodeType":"VariableDeclaration","scope":11969,"src":"2890:25:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11962,"name":"uint256","nodeType":"ElementaryTypeName","src":"2890:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11965,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"2925:5:43","nodeType":"VariableDeclaration","scope":11969,"src":"2917:13:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11964,"name":"uint256","nodeType":"ElementaryTypeName","src":"2917:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11967,"indexed":false,"mutability":"mutable","name":"supplyLimit","nameLocation":"2940:11:43","nodeType":"VariableDeclaration","scope":11969,"src":"2932:19:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11966,"name":"uint256","nodeType":"ElementaryTypeName","src":"2932:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2889:63:43"},"src":"2871:82:43"},{"anonymous":false,"eventSelector":"cbbdbe54b7b042a5d03f5b760745fbebd762875c3197b43499936461abc33950","id":11981,"name":"ProductUpdated","nameLocation":"2964:14:43","nodeType":"EventDefinition","parameters":{"id":11980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11971,"indexed":true,"mutability":"mutable","name":"productId","nameLocation":"2995:9:43","nodeType":"VariableDeclaration","scope":11981,"src":"2979:25:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11970,"name":"uint256","nodeType":"ElementaryTypeName","src":"2979:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11973,"indexed":false,"mutability":"mutable","name":"oldPrice","nameLocation":"3014:8:43","nodeType":"VariableDeclaration","scope":11981,"src":"3006:16:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11972,"name":"uint256","nodeType":"ElementaryTypeName","src":"3006:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11975,"indexed":false,"mutability":"mutable","name":"newPrice","nameLocation":"3032:8:43","nodeType":"VariableDeclaration","scope":11981,"src":"3024:16:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11974,"name":"uint256","nodeType":"ElementaryTypeName","src":"3024:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11977,"indexed":false,"mutability":"mutable","name":"oldSupplyLimit","nameLocation":"3050:14:43","nodeType":"VariableDeclaration","scope":11981,"src":"3042:22:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11976,"name":"uint256","nodeType":"ElementaryTypeName","src":"3042:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11979,"indexed":false,"mutability":"mutable","name":"newSupplyLimit","nameLocation":"3074:14:43","nodeType":"VariableDeclaration","scope":11981,"src":"3066:22:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11978,"name":"uint256","nodeType":"ElementaryTypeName","src":"3066:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2978:111:43"},"src":"2958:132:43"},{"body":{"id":11988,"nodeType":"Block","src":"3163:39:43","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":11985,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"3173:20:43","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":11986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3173:22:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11987,"nodeType":"ExpressionStatement","src":"3173:22:43"}]},"documentation":{"id":11982,"nodeType":"StructuredDocumentation","src":"3096:48:43","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":11989,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":11983,"nodeType":"ParameterList","parameters":[],"src":"3160:2:43"},"returnParameters":{"id":11984,"nodeType":"ParameterList","parameters":[],"src":"3163:0:43"},"scope":13024,"src":"3149:53:43","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":12250,"nodeType":"Block","src":"3637:2107:43","statements":[{"expression":{"arguments":[{"id":12021,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12015,"src":"3662:6:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":12020,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"3647:14:43","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":12022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3647:22:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12023,"nodeType":"ExpressionStatement","src":"3647:22:43"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":12024,"name":"__Pausable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"3679:15:43","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":12025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3679:17:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12026,"nodeType":"ExpressionStatement","src":"3679:17:43"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":12027,"name":"__ReentrancyGuard_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"3706:22:43","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":12028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3706:24:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12029,"nodeType":"ExpressionStatement","src":"3706:24:43"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":12036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12031,"name":"_usdcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11991,"src":"3757:12:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":12034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3781:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":12033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3773:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":12032,"name":"address","nodeType":"ElementaryTypeName","src":"3773:7:43","typeDescriptions":{}}},"id":12035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3773:10:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3757:26:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420555344432061646472657373","id":12037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3785:22:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_768308344d94e849ff3f5e31c8c5ffd3ba25816fc055df9374d86b549adb5dbe","typeString":"literal_string \"Invalid USDC address\""},"value":"Invalid USDC address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_768308344d94e849ff3f5e31c8c5ffd3ba25816fc055df9374d86b549adb5dbe","typeString":"literal_string \"Invalid USDC address\""}],"id":12030,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3749:7:43","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":12038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3749:59:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12039,"nodeType":"ExpressionStatement","src":"3749:59:43"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":12046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12041,"name":"_beneficiaryWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11993,"src":"3826:18:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":12044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3856:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":12043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3848:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":12042,"name":"address","nodeType":"ElementaryTypeName","src":"3848:7:43","typeDescriptions":{}}},"id":12045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3848:10:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3826:32:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642062656e65666963696172792077616c6c6574","id":12047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3860:28:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_4fb404270f8671c9d22f0c1969164c9acfaa49b30ad7eb4e563457da2ef849f5","typeString":"literal_string \"Invalid beneficiary wallet\""},"value":"Invalid beneficiary wallet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4fb404270f8671c9d22f0c1969164c9acfaa49b30ad7eb4e563457da2ef849f5","typeString":"literal_string \"Invalid beneficiary wallet\""}],"id":12040,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3818:7:43","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":12048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3818:71:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12049,"nodeType":"ExpressionStatement","src":"3818:71:43"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":12056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12051,"name":"_feeWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11995,"src":"3907:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":12054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3929:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":12053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3921:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":12052,"name":"address","nodeType":"ElementaryTypeName","src":"3921:7:43","typeDescriptions":{}}},"id":12055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3921:10:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3907:24:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206665652077616c6c6574","id":12057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3933:20:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_4a20e95700812c61fc815a3eafd2b14e7c5b30d1b7fda875401c829c7555a76b","typeString":"literal_string \"Invalid fee wallet\""},"value":"Invalid fee wallet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4a20e95700812c61fc815a3eafd2b14e7c5b30d1b7fda875401c829c7555a76b","typeString":"literal_string \"Invalid fee wallet\""}],"id":12050,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3899:7:43","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":12058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3899:55:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12059,"nodeType":"ExpressionStatement","src":"3899:55:43"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":12066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12061,"name":"_productTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12005,"src":"3972:20:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":12064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4004:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":12063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3996:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":12062,"name":"address","nodeType":"ElementaryTypeName","src":"3996:7:43","typeDescriptions":{}}},"id":12065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3996:10:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3972:34:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642070726f6475637420746f6b656e2061646472657373","id":12067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4008:31:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_3808bee982e1ebeafbf855c2a564e65d455b41aad1ab2bd4d44b15aef397d156","typeString":"literal_string \"Invalid product token address\""},"value":"Invalid product token address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3808bee982e1ebeafbf855c2a564e65d455b41aad1ab2bd4d44b15aef397d156","typeString":"literal_string \"Invalid product token address\""}],"id":12060,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3964:7:43","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":12068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3964:76:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12069,"nodeType":"ExpressionStatement","src":"3964:76:43"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":12076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12071,"name":"_factoryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12007,"src":"4058:15:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":12074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4085:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":12073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4077:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":12072,"name":"address","nodeType":"ElementaryTypeName","src":"4077:7:43","typeDescriptions":{}}},"id":12075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4077:10:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4058:29:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420666163746f72792061646472657373","id":12077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4089:25:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_16cfceb364b99915d337c26d8ba3bdcbce06c3595a535f586d679980d6a44d7d","typeString":"literal_string \"Invalid factory address\""},"value":"Invalid factory address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_16cfceb364b99915d337c26d8ba3bdcbce06c3595a535f586d679980d6a44d7d","typeString":"literal_string \"Invalid factory address\""}],"id":12070,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4050:7:43","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":12078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4050:65:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12079,"nodeType":"ExpressionStatement","src":"4050:65:43"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12081,"name":"_deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12003,"src":"4133:9:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":12082,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4145:5:43","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":12083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4151:9:43","memberName":"timestamp","nodeType":"MemberAccess","src":"4145:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4133:27:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420646561646c696e65","id":12085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4162:18:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_8094d03ecc5e0260eb35f07d67a5ccc832dc308ea9feb6dd751d9c2e0d24fb77","typeString":"literal_string \"Invalid deadline\""},"value":"Invalid deadline"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8094d03ecc5e0260eb35f07d67a5ccc832dc308ea9feb6dd751d9c2e0d24fb77","typeString":"literal_string \"Invalid deadline\""}],"id":12080,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4125:7:43","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":12086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4125:56:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12087,"nodeType":"ExpressionStatement","src":"4125:56:43"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":12089,"name":"_products","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12011,"src":"4199:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ProductConfig_$11814_memory_ptr_$dyn_memory_ptr","typeString":"struct ProductConfig memory[] memory"}},"id":12090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4209:6:43","memberName":"length","nodeType":"MemberAccess","src":"4199:16:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":12091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4218:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4199:20:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2070726f64756374732070726f7669646564","id":12093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4221:22:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_89dd7ec0cefe3769075e8d91de553b100c1372baa96efb8c12d11e65d967cf42","typeString":"literal_string \"No products provided\""},"value":"No products provided"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_89dd7ec0cefe3769075e8d91de553b100c1372baa96efb8c12d11e65d967cf42","typeString":"literal_string \"No products provided\""}],"id":12088,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4191:7:43","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":12094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:53:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12095,"nodeType":"ExpressionStatement","src":"4191:53:43"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":12102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12097,"name":"_campaignAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12013,"src":"4262:14:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":12100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4288:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":12099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4280:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":12098,"name":"address","nodeType":"ElementaryTypeName","src":"4280:7:43","typeDescriptions":{}}},"id":12101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4280:10:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4262:28:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642063616d706169676e2061646d696e","id":12103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4292:24:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_ffdccf97adf9c65d0ef97d36e7c20449a732803454fa5489c03a80c7d31acca8","typeString":"literal_string \"Invalid campaign admin\""},"value":"Invalid campaign admin"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ffdccf97adf9c65d0ef97d36e7c20449a732803454fa5489c03a80c7d31acca8","typeString":"literal_string \"Invalid campaign admin\""}],"id":12096,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4254:7:43","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":12104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4254:63:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12105,"nodeType":"ExpressionStatement","src":"4254:63:43"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":12112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12107,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12015,"src":"4335:6:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":12110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4353:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":12109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4345:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":12108,"name":"address","nodeType":"ElementaryTypeName","src":"4345:7:43","typeDescriptions":{}}},"id":12111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4345:10:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4335:20:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206f776e6572","id":12113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4357:15:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_110461b12e459dc76e692e7a47f9621cf45c7d48020c3c7b2066107cdf1f52ae","typeString":"literal_string \"Invalid owner\""},"value":"Invalid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_110461b12e459dc76e692e7a47f9621cf45c7d48020c3c7b2066107cdf1f52ae","typeString":"literal_string \"Invalid owner\""}],"id":12106,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4327:7:43","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":12114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4327:46:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12115,"nodeType":"ExpressionStatement","src":"4327:46:43"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12117,"name":"_feePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11997,"src":"4391:14:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":12118,"name":"BASIS_POINTS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11852,"src":"4408:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4391:29:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4665652070657263656e74616765206d757374206265206c657373207468616e2031303025","id":12120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4422:39:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_2b5cb1e8bef3419e42a588db986ea2a0129d3ccbbc2b0d4eaa7a34e0b1df7ed9","typeString":"literal_string \"Fee percentage must be less than 100%\""},"value":"Fee percentage must be less than 100%"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2b5cb1e8bef3419e42a588db986ea2a0129d3ccbbc2b0d4eaa7a34e0b1df7ed9","typeString":"literal_string \"Fee percentage must be less than 100%\""}],"id":12116,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4383:7:43","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":12121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4383:79:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12122,"nodeType":"ExpressionStatement","src":"4383:79:43"},{"expression":{"id":12127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12123,"name":"usdc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11855,"src":"4473:4:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":12125,"name":"_usdcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11991,"src":"4487:12:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":12124,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3904,"src":"4480:6:43","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$3904_$","typeString":"type(contract IERC20)"}},"id":12126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4480:20:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}},"src":"4473:27:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}},"id":12128,"nodeType":"ExpressionStatement","src":"4473:27:43"},{"expression":{"id":12131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12129,"name":"beneficiaryWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11862,"src":"4510:17:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":12130,"name":"_beneficiaryWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11993,"src":"4530:18:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4510:38:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":12132,"nodeType":"ExpressionStatement","src":"4510:38:43"},{"expression":{"id":12135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12133,"name":"feeWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11864,"src":"4558:9:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":12134,"name":"_feeWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11995,"src":"4570:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4558:22:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":12136,"nodeType":"ExpressionStatement","src":"4558:22:43"},{"expression":{"id":12139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12137,"name":"feePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11870,"src":"4590:13:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":12138,"name":"_feePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11997,"src":"4606:14:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4590:30:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12140,"nodeType":"ExpressionStatement","src":"4590:30:43"},{"expression":{"id":12143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12141,"name":"minimumTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11866,"src":"4630:13:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":12142,"name":"_minimumTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12001,"src":"4646:14:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4630:30:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12144,"nodeType":"ExpressionStatement","src":"4630:30:43"},{"expression":{"id":12147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12145,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11868,"src":"4670:8:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":12146,"name":"_deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12003,"src":"4681:9:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4670:20:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12148,"nodeType":"ExpressionStatement","src":"4670:20:43"},{"expression":{"id":12153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12149,"name":"productToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11858,"src":"4700:12:43","typeDescriptions":{"typeIdentifier":"t_contract$_ProductTokenUpgradeable_$11276","typeString":"contract ProductTokenUpgradeable"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":12151,"name":"_productTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12005,"src":"4739:20:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":12150,"name":"ProductTokenUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11276,"src":"4715:23:43","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ProductTokenUpgradeable_$11276_$","typeString":"type(contract ProductTokenUpgradeable)"}},"id":12152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4715:45:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ProductTokenUpgradeable_$11276","typeString":"contract ProductTokenUpgradeable"}},"src":"4700:60:43","typeDescriptions":{"typeIdentifier":"t_contract$_ProductTokenUpgradeable_$11276","typeString":"contract ProductTokenUpgradeable"}},"id":12154,"nodeType":"ExpressionStatement","src":"4700:60:43"},{"expression":{"id":12157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12155,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11860,"src":"4770:7:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":12156,"name":"_factoryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12007,"src":"4780:15:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4770:25:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":12158,"nodeType":"ExpressionStatement","src":"4770:25:43"},{"expression":{"id":12161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12159,"name":"campaignAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11898,"src":"4805:13:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":12160,"name":"_campaignAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12013,"src":"4821:14:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4805:30:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":12162,"nodeType":"ExpressionStatement","src":"4805:30:43"},{"expression":{"id":12165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12163,"name":"fundingType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11887,"src":"4845:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":12164,"name":"_fundingType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11999,"src":"4859:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4845:26:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12166,"nodeType":"ExpressionStatement","src":"4845:26:43"},{"body":{"id":12248,"nodeType":"Block","src":"4929:809:43","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":12179,"name":"_products","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12011,"src":"4951:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ProductConfig_$11814_memory_ptr_$dyn_memory_ptr","typeString":"struct ProductConfig memory[] memory"}},"id":12181,"indexExpression":{"id":12180,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12168,"src":"4961:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4951:12:43","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_memory_ptr","typeString":"struct ProductConfig memory"}},"id":12182,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4964:5:43","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":11811,"src":"4951:18:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":12183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4972:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4951:22:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642070726f64756374207072696365","id":12185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4975:23:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a01df042e0d631eda59ceb6fb129bc3e9a3051d9aa3dae4410cfef799bcf831","typeString":"literal_string \"Invalid product price\""},"value":"Invalid product price"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a01df042e0d631eda59ceb6fb129bc3e9a3051d9aa3dae4410cfef799bcf831","typeString":"literal_string \"Invalid product price\""}],"id":12178,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4943:7:43","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":12186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4943:56:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12187,"nodeType":"ExpressionStatement","src":"4943:56:43"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":12189,"name":"_products","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12011,"src":"5021:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ProductConfig_$11814_memory_ptr_$dyn_memory_ptr","typeString":"struct ProductConfig memory[] memory"}},"id":12191,"indexExpression":{"id":12190,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12168,"src":"5031:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5021:12:43","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_memory_ptr","typeString":"struct ProductConfig memory"}},"id":12192,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5034:9:43","memberName":"productId","nodeType":"MemberAccess","referencedDeclaration":11809,"src":"5021:22:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":12193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5046:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5021:26:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642070726f64756374204944","id":12195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5049:20:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5e0edb6b49da0bba96fe195e8e7e332fe468c64ad1a5877c0a12a6c2b7921a6","typeString":"literal_string \"Invalid product ID\""},"value":"Invalid product ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c5e0edb6b49da0bba96fe195e8e7e332fe468c64ad1a5877c0a12a6c2b7921a6","typeString":"literal_string \"Invalid product ID\""}],"id":12188,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5013:7:43","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":12196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5013:57:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12197,"nodeType":"ExpressionStatement","src":"5013:57:43"},{"assignments":[12199],"declarations":[{"constant":false,"id":12199,"mutability":"mutable","name":"uniqueProductId","nameLocation":"5165:15:43","nodeType":"VariableDeclaration","scope":12248,"src":"5157:23:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12198,"name":"uint256","nodeType":"ElementaryTypeName","src":"5157:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":12216,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":12207,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5243:4:43","typeDescriptions":{"typeIdentifier":"t_contract$_USDCFundraiserUpgradeable_$13024","typeString":"contract USDCFundraiserUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_USDCFundraiserUpgradeable_$13024","typeString":"contract USDCFundraiserUpgradeable"}],"id":12206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5235:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":12205,"name":"address","nodeType":"ElementaryTypeName","src":"5235:7:43","typeDescriptions":{}}},"id":12208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5235:13:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":12209,"name":"_products","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12011,"src":"5250:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ProductConfig_$11814_memory_ptr_$dyn_memory_ptr","typeString":"struct ProductConfig memory[] memory"}},"id":12211,"indexExpression":{"id":12210,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12168,"src":"5260:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5250:12:43","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_memory_ptr","typeString":"struct ProductConfig memory"}},"id":12212,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5263:9:43","memberName":"productId","nodeType":"MemberAccess","referencedDeclaration":11809,"src":"5250:22:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":12203,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5218:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":12204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5222:12:43","memberName":"encodePacked","nodeType":"MemberAccess","src":"5218:16:43","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":12213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5218:55:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":12202,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5191:9:43","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":12214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5191:96:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":12201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5183:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":12200,"name":"uint256","nodeType":"ElementaryTypeName","src":"5183:7:43","typeDescriptions":{}}},"id":12215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5183:105:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5157:131:43"},{"expression":{"id":12231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":12217,"name":"products","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11892,"src":"5351:8:43","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProductConfig_$11814_storage_$","typeString":"mapping(uint256 => struct ProductConfig storage ref)"}},"id":12219,"indexExpression":{"id":12218,"name":"uniqueProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12199,"src":"5360:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5351:25:43","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_storage","typeString":"struct ProductConfig storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":12221,"name":"uniqueProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12199,"src":"5422:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":12222,"name":"_products","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12011,"src":"5462:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ProductConfig_$11814_memory_ptr_$dyn_memory_ptr","typeString":"struct ProductConfig memory[] memory"}},"id":12224,"indexExpression":{"id":12223,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12168,"src":"5472:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5462:12:43","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_memory_ptr","typeString":"struct ProductConfig memory"}},"id":12225,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5475:5:43","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":11811,"src":"5462:18:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":12226,"name":"_products","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12011,"src":"5511:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ProductConfig_$11814_memory_ptr_$dyn_memory_ptr","typeString":"struct ProductConfig memory[] memory"}},"id":12228,"indexExpression":{"id":12227,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12168,"src":"5521:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5511:12:43","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_memory_ptr","typeString":"struct ProductConfig memory"}},"id":12229,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5524:11:43","memberName":"supplyLimit","nodeType":"MemberAccess","referencedDeclaration":11813,"src":"5511:24:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":12220,"name":"ProductConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11814,"src":"5379:13:43","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ProductConfig_$11814_storage_ptr_$","typeString":"type(struct ProductConfig storage pointer)"}},"id":12230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5411:9:43","5455:5:43","5498:11:43"],"names":["productId","price","supplyLimit"],"nodeType":"FunctionCall","src":"5379:171:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_memory_ptr","typeString":"struct ProductConfig memory"}},"src":"5351:199:43","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_storage","typeString":"struct ProductConfig storage ref"}},"id":12232,"nodeType":"ExpressionStatement","src":"5351:199:43"},{"expression":{"arguments":[{"id":12236,"name":"uniqueProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12199,"src":"5580:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":12233,"name":"productIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11881,"src":"5564:10:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":12235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5575:4:43","memberName":"push","nodeType":"MemberAccess","src":"5564:15:43","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":12237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5564:32:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12238,"nodeType":"ExpressionStatement","src":"5564:32:43"},{"expression":{"id":12246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":12239,"name":"uniqueToOriginalProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11896,"src":"5660:25:43","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":12241,"indexExpression":{"id":12240,"name":"uniqueProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12199,"src":"5686:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5660:42:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":12242,"name":"_products","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12011,"src":"5705:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ProductConfig_$11814_memory_ptr_$dyn_memory_ptr","typeString":"struct ProductConfig memory[] memory"}},"id":12244,"indexExpression":{"id":12243,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12168,"src":"5715:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5705:12:43","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_memory_ptr","typeString":"struct ProductConfig memory"}},"id":12245,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5718:9:43","memberName":"productId","nodeType":"MemberAccess","referencedDeclaration":11809,"src":"5705:22:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5660:67:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12247,"nodeType":"ExpressionStatement","src":"5660:67:43"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12171,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12168,"src":"4902:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":12172,"name":"_products","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12011,"src":"4906:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ProductConfig_$11814_memory_ptr_$dyn_memory_ptr","typeString":"struct ProductConfig memory[] memory"}},"id":12173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4916:6:43","memberName":"length","nodeType":"MemberAccess","src":"4906:16:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4902:20:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12249,"initializationExpression":{"assignments":[12168],"declarations":[{"constant":false,"id":12168,"mutability":"mutable","name":"i","nameLocation":"4895:1:43","nodeType":"VariableDeclaration","scope":12249,"src":"4887:9:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12167,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":12170,"initialValue":{"hexValue":"30","id":12169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4899:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4887:13:43"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":12176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4924:3:43","subExpression":{"id":12175,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12168,"src":"4924:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12177,"nodeType":"ExpressionStatement","src":"4924:3:43"},"nodeType":"ForStatement","src":"4882:856:43"}]},"functionSelector":"5cb04079","id":12251,"implemented":true,"kind":"function","modifiers":[{"id":12018,"kind":"modifierInvocation","modifierName":{"id":12017,"name":"initializer","nameLocations":["3625:11:43"],"nodeType":"IdentifierPath","referencedDeclaration":733,"src":"3625:11:43"},"nodeType":"ModifierInvocation","src":"3625:11:43"}],"name":"initialize","nameLocation":"3217:10:43","nodeType":"FunctionDefinition","parameters":{"id":12016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11991,"mutability":"mutable","name":"_usdcAddress","nameLocation":"3245:12:43","nodeType":"VariableDeclaration","scope":12251,"src":"3237:20:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11990,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11993,"mutability":"mutable","name":"_beneficiaryWallet","nameLocation":"3275:18:43","nodeType":"VariableDeclaration","scope":12251,"src":"3267:26:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11992,"name":"address","nodeType":"ElementaryTypeName","src":"3267:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11995,"mutability":"mutable","name":"_feeWallet","nameLocation":"3311:10:43","nodeType":"VariableDeclaration","scope":12251,"src":"3303:18:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11994,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11997,"mutability":"mutable","name":"_feePercentage","nameLocation":"3339:14:43","nodeType":"VariableDeclaration","scope":12251,"src":"3331:22:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11996,"name":"uint256","nodeType":"ElementaryTypeName","src":"3331:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11999,"mutability":"mutable","name":"_fundingType","nameLocation":"3371:12:43","nodeType":"VariableDeclaration","scope":12251,"src":"3363:20:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11998,"name":"uint256","nodeType":"ElementaryTypeName","src":"3363:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12001,"mutability":"mutable","name":"_minimumTarget","nameLocation":"3401:14:43","nodeType":"VariableDeclaration","scope":12251,"src":"3393:22:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12000,"name":"uint256","nodeType":"ElementaryTypeName","src":"3393:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12003,"mutability":"mutable","name":"_deadline","nameLocation":"3433:9:43","nodeType":"VariableDeclaration","scope":12251,"src":"3425:17:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12002,"name":"uint256","nodeType":"ElementaryTypeName","src":"3425:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12005,"mutability":"mutable","name":"_productTokenAddress","nameLocation":"3460:20:43","nodeType":"VariableDeclaration","scope":12251,"src":"3452:28:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12004,"name":"address","nodeType":"ElementaryTypeName","src":"3452:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12007,"mutability":"mutable","name":"_factoryAddress","nameLocation":"3498:15:43","nodeType":"VariableDeclaration","scope":12251,"src":"3490:23:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12006,"name":"address","nodeType":"ElementaryTypeName","src":"3490:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12011,"mutability":"mutable","name":"_products","nameLocation":"3546:9:43","nodeType":"VariableDeclaration","scope":12251,"src":"3523:32:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ProductConfig_$11814_memory_ptr_$dyn_memory_ptr","typeString":"struct ProductConfig[]"},"typeName":{"baseType":{"id":12009,"nodeType":"UserDefinedTypeName","pathNode":{"id":12008,"name":"ProductConfig","nameLocations":["3523:13:43"],"nodeType":"IdentifierPath","referencedDeclaration":11814,"src":"3523:13:43"},"referencedDeclaration":11814,"src":"3523:13:43","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_storage_ptr","typeString":"struct ProductConfig"}},"id":12010,"nodeType":"ArrayTypeName","src":"3523:15:43","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ProductConfig_$11814_storage_$dyn_storage_ptr","typeString":"struct ProductConfig[]"}},"visibility":"internal"},{"constant":false,"id":12013,"mutability":"mutable","name":"_campaignAdmin","nameLocation":"3573:14:43","nodeType":"VariableDeclaration","scope":12251,"src":"3565:22:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12012,"name":"address","nodeType":"ElementaryTypeName","src":"3565:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12015,"mutability":"mutable","name":"_owner","nameLocation":"3605:6:43","nodeType":"VariableDeclaration","scope":12251,"src":"3597:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12014,"name":"address","nodeType":"ElementaryTypeName","src":"3597:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3227:390:43"},"returnParameters":{"id":12019,"nodeType":"ParameterList","parameters":[],"src":"3637:0:43"},"scope":13024,"src":"3208:2536:43","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":12447,"nodeType":"Block","src":"6038:2241:43","statements":[{"assignments":[12264],"declarations":[{"constant":false,"id":12264,"mutability":"mutable","name":"uniqueProductId","nameLocation":"6112:15:43","nodeType":"VariableDeclaration","scope":12447,"src":"6104:23:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12263,"name":"uint256","nodeType":"ElementaryTypeName","src":"6104:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":12268,"initialValue":{"arguments":[{"id":12266,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12254,"src":"6155:9:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":12265,"name":"_generateUniqueProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12941,"src":"6130:24:43","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":12267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6130:35:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6104:61:43"},{"assignments":[12271],"declarations":[{"constant":false,"id":12271,"mutability":"mutable","name":"product","nameLocation":"6205:7:43","nodeType":"VariableDeclaration","scope":12447,"src":"6184:28:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_memory_ptr","typeString":"struct ProductConfig"},"typeName":{"id":12270,"nodeType":"UserDefinedTypeName","pathNode":{"id":12269,"name":"ProductConfig","nameLocations":["6184:13:43"],"nodeType":"IdentifierPath","referencedDeclaration":11814,"src":"6184:13:43"},"referencedDeclaration":11814,"src":"6184:13:43","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_storage_ptr","typeString":"struct ProductConfig"}},"visibility":"internal"}],"id":12275,"initialValue":{"baseExpression":{"id":12272,"name":"products","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11892,"src":"6215:8:43","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProductConfig_$11814_storage_$","typeString":"mapping(uint256 => struct ProductConfig storage ref)"}},"id":12274,"indexExpression":{"id":12273,"name":"uniqueProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12264,"src":"6224:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6215:25:43","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_storage","typeString":"struct ProductConfig storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6184:56:43"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":12279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12277,"name":"finalized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11874,"src":"6258:9:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"66616c7365","id":12278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6271:5:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6258:18:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616d706169676e2069732066696e616c697a6564","id":12280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6278:23:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_e1c94f30dd082233af1393f5944da73a0ac698b43027013081ca272990c796cf","typeString":"literal_string \"Campaign is finalized\""},"value":"Campaign is finalized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e1c94f30dd082233af1393f5944da73a0ac698b43027013081ca272990c796cf","typeString":"literal_string \"Campaign is finalized\""}],"id":12276,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6250:7:43","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":12281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6250:52:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12282,"nodeType":"ExpressionStatement","src":"6250:52:43"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12283,"name":"fundingType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11887,"src":"6316:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":12284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6331:1:43","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6316:16:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12295,"nodeType":"IfStatement","src":"6312:104:43","trueBody":{"id":12294,"nodeType":"Block","src":"6334:82:43","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":12287,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6356:5:43","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":12288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6362:9:43","memberName":"timestamp","nodeType":"MemberAccess","src":"6356:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":12289,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11868,"src":"6374:8:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6356:26:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616d706169676e2068617320656e646564","id":12291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6384:20:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_0aa6ac620dafe8972a6bc3dc8dcb82ff075def5918e020291dc9c9232267f372","typeString":"literal_string \"Campaign has ended\""},"value":"Campaign has ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0aa6ac620dafe8972a6bc3dc8dcb82ff075def5918e020291dc9c9232267f372","typeString":"literal_string \"Campaign has ended\""}],"id":12286,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6348:7:43","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":12292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6348:57:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12293,"nodeType":"ExpressionStatement","src":"6348:57:43"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":12297,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12271,"src":"6433:7:43","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_memory_ptr","typeString":"struct ProductConfig memory"}},"id":12298,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6441:5:43","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":11811,"src":"6433:13:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":12299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6449:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6433:17:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642070726f64756374","id":12301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6452:17:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_72fa0d424c413c537a457af2143d82fb42ef09111fc27bea7108a2be9cf0cdbb","typeString":"literal_string \"Invalid product\""},"value":"Invalid product"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_72fa0d424c413c537a457af2143d82fb42ef09111fc27bea7108a2be9cf0cdbb","typeString":"literal_string \"Invalid product\""}],"id":12296,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6425:7:43","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":12302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6425:45:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12303,"nodeType":"ExpressionStatement","src":"6425:45:43"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12305,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12256,"src":"6488:8:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":12306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6499:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6488:12:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207175616e74697479","id":12308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6502:18:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_70657809104b9cebc8451c31180af28b43909695ec40e8ad5022c571e4e8c258","typeString":"literal_string \"Invalid quantity\""},"value":"Invalid quantity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_70657809104b9cebc8451c31180af28b43909695ec40e8ad5022c571e4e8c258","typeString":"literal_string \"Invalid quantity\""}],"id":12304,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6480:7:43","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":12309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6480:41:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12310,"nodeType":"ExpressionStatement","src":"6480:41:43"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":12311,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12271,"src":"6574:7:43","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_memory_ptr","typeString":"struct ProductConfig memory"}},"id":12312,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6582:11:43","memberName":"supplyLimit","nodeType":"MemberAccess","referencedDeclaration":11813,"src":"6574:19:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":12313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6596:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6574:23:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12328,"nodeType":"IfStatement","src":"6570:154:43","trueBody":{"id":12327,"nodeType":"Block","src":"6599:125:43","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":12316,"name":"productSoldCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11885,"src":"6621:16:43","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":12318,"indexExpression":{"id":12317,"name":"uniqueProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12264,"src":"6638:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6621:33:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":12319,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12256,"src":"6657:8:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6621:44:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":12321,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12271,"src":"6669:7:43","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_memory_ptr","typeString":"struct ProductConfig memory"}},"id":12322,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6677:11:43","memberName":"supplyLimit","nodeType":"MemberAccess","referencedDeclaration":11813,"src":"6669:19:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6621:67:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4578636565647320737570706c79206c696d6974","id":12324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6690:22:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_64f5b1db523a04e1d389746299b3459b3d2b1c241f617fcf38cfd4df5f0ca7bf","typeString":"literal_string \"Exceeds supply limit\""},"value":"Exceeds supply limit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_64f5b1db523a04e1d389746299b3459b3d2b1c241f617fcf38cfd4df5f0ca7bf","typeString":"literal_string \"Exceeds supply limit\""}],"id":12315,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6613:7:43","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":12325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6613:100:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12326,"nodeType":"ExpressionStatement","src":"6613:100:43"}]}},{"assignments":[12330],"declarations":[{"constant":false,"id":12330,"mutability":"mutable","name":"totalAmount","nameLocation":"6742:11:43","nodeType":"VariableDeclaration","scope":12447,"src":"6734:19:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12329,"name":"uint256","nodeType":"ElementaryTypeName","src":"6734:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":12335,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":12331,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12271,"src":"6756:7:43","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_memory_ptr","typeString":"struct ProductConfig memory"}},"id":12332,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6764:5:43","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":11811,"src":"6756:13:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":12333,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12256,"src":"6772:8:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6756:24:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6734:46:43"},{"assignments":[12337],"declarations":[{"constant":false,"id":12337,"mutability":"mutable","name":"feeAmount","nameLocation":"6798:9:43","nodeType":"VariableDeclaration","scope":12447,"src":"6790:17:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12336,"name":"uint256","nodeType":"ElementaryTypeName","src":"6790:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":12344,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12338,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12330,"src":"6811:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":12339,"name":"feePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11870,"src":"6825:13:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6811:27:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":12341,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6810:29:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":12342,"name":"BASIS_POINTS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11852,"src":"6842:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6810:44:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6790:64:43"},{"assignments":[12346],"declarations":[{"constant":false,"id":12346,"mutability":"mutable","name":"netAmount","nameLocation":"6872:9:43","nodeType":"VariableDeclaration","scope":12447,"src":"6864:17:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12345,"name":"uint256","nodeType":"ElementaryTypeName","src":"6864:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":12350,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12347,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12330,"src":"6884:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":12348,"name":"feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12337,"src":"6898:9:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6884:23:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6864:43:43"},{"expression":{"arguments":[{"expression":{"id":12354,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6987:3:43","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":12355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6991:6:43","memberName":"sender","nodeType":"MemberAccess","src":"6987:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":12358,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7007:4:43","typeDescriptions":{"typeIdentifier":"t_contract$_USDCFundraiserUpgradeable_$13024","typeString":"contract USDCFundraiserUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_USDCFundraiserUpgradeable_$13024","typeString":"contract USDCFundraiserUpgradeable"}],"id":12357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6999:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":12356,"name":"address","nodeType":"ElementaryTypeName","src":"6999:7:43","typeDescriptions":{}}},"id":12359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6999:13:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":12360,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12330,"src":"7014:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":12351,"name":"usdc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11855,"src":"6965:4:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}},"id":12353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6970:16:43","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":3976,"src":"6965:21:43","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3904_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$3904_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":12361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6965:61:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12362,"nodeType":"ExpressionStatement","src":"6965:61:43"},{"clauses":[{"block":{"id":12405,"nodeType":"Block","src":"7278:528:43","statements":[{"expression":{"id":12380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":12376,"name":"productSoldCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11885,"src":"7419:16:43","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":12378,"indexExpression":{"id":12377,"name":"uniqueProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12264,"src":"7436:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7419:33:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":12379,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12256,"src":"7456:8:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7419:45:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12381,"nodeType":"ExpressionStatement","src":"7419:45:43"},{"expression":{"id":12384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12382,"name":"totalRaised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11872,"src":"7478:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":12383,"name":"netAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12346,"src":"7493:9:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7478:24:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12385,"nodeType":"ExpressionStatement","src":"7478:24:43"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12386,"name":"feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12337,"src":"7636:9:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":12387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7648:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7636:13:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12397,"nodeType":"IfStatement","src":"7632:91:43","trueBody":{"id":12396,"nodeType":"Block","src":"7651:72:43","statements":[{"expression":{"arguments":[{"id":12392,"name":"feeWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11864,"src":"7687:9:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":12393,"name":"feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12337,"src":"7698:9:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":12389,"name":"usdc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11855,"src":"7669:4:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}},"id":12391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7674:12:43","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":3949,"src":"7669:17:43","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3904_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$3904_$","typeString":"function (contract IERC20,address,uint256)"}},"id":12394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7669:39:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12395,"nodeType":"ExpressionStatement","src":"7669:39:43"}]}},{"eventCall":{"arguments":[{"expression":{"id":12399,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7762:3:43","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":12400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7766:6:43","memberName":"sender","nodeType":"MemberAccess","src":"7762:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":12401,"name":"netAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12346,"src":"7774:9:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":12402,"name":"feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12337,"src":"7785:9:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":12398,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11945,"src":"7754:7:43","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":12403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7754:41:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12404,"nodeType":"EmitStatement","src":"7749:46:43"}]},"errorName":"","id":12406,"nodeType":"TryCatchClause","src":"7278:528:43"},{"block":{"id":12427,"nodeType":"Block","src":"7841:206:43","statements":[{"expression":{"arguments":[{"expression":{"id":12413,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7948:3:43","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":12414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7952:6:43","memberName":"sender","nodeType":"MemberAccess","src":"7948:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":12415,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12330,"src":"7960:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":12410,"name":"usdc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11855,"src":"7930:4:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}},"id":12412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7935:12:43","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":3949,"src":"7930:17:43","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3904_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$3904_$","typeString":"function (contract IERC20,address,uint256)"}},"id":12416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7930:42:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12417,"nodeType":"ExpressionStatement","src":"7930:42:43"},{"expression":{"arguments":[{"arguments":[{"hexValue":"4e4654206d696e74206661696c65643a20","id":12422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8007:19:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a3564a34e44e7aeb8f8f21adb951e0de915bd5b8df7715d423bded9f46a29cc","typeString":"literal_string \"NFT mint failed: \""},"value":"NFT mint failed: "},{"id":12423,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12408,"src":"8028:6:43","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_2a3564a34e44e7aeb8f8f21adb951e0de915bd5b8df7715d423bded9f46a29cc","typeString":"literal_string \"NFT mint failed: \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":12420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7993:6:43","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":12419,"name":"string","nodeType":"ElementaryTypeName","src":"7993:6:43","typeDescriptions":{}}},"id":12421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8000:6:43","memberName":"concat","nodeType":"MemberAccess","src":"7993:13:43","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":12424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7993:42:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":12418,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"7986:6:43","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":12425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7986:50:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12426,"nodeType":"ExpressionStatement","src":"7986:50:43"}]},"errorName":"Error","id":12428,"nodeType":"TryCatchClause","parameters":{"id":12409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12408,"mutability":"mutable","name":"reason","nameLocation":"7833:6:43","nodeType":"VariableDeclaration","scope":12428,"src":"7819:20:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12407,"name":"string","nodeType":"ElementaryTypeName","src":"7819:6:43","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7818:22:43"},"src":"7807:240:43"},{"block":{"id":12444,"nodeType":"Block","src":"8086:187:43","statements":[{"expression":{"arguments":[{"expression":{"id":12435,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8178:3:43","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":12436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8182:6:43","memberName":"sender","nodeType":"MemberAccess","src":"8178:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":12437,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12330,"src":"8190:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":12432,"name":"usdc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11855,"src":"8160:4:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}},"id":12434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8165:12:43","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":3949,"src":"8160:17:43","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3904_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$3904_$","typeString":"function (contract IERC20,address,uint256)"}},"id":12438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8160:42:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12439,"nodeType":"ExpressionStatement","src":"8160:42:43"},{"expression":{"arguments":[{"hexValue":"4e4654206d696e74206661696c65642077697468206c6f772d6c6576656c206572726f72","id":12441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8223:38:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_5509d4b7d16d37514d0b2942c29478b3de5cfc3bc8a7593e59f172c66fce9565","typeString":"literal_string \"NFT mint failed with low-level error\""},"value":"NFT mint failed with low-level error"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_5509d4b7d16d37514d0b2942c29478b3de5cfc3bc8a7593e59f172c66fce9565","typeString":"literal_string \"NFT mint failed with low-level error\""}],"id":12440,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"8216:6:43","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":12442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8216:46:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12443,"nodeType":"ExpressionStatement","src":"8216:46:43"}]},"errorName":"","id":12445,"nodeType":"TryCatchClause","parameters":{"id":12431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12445,"src":"8055:12:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12429,"name":"bytes","nodeType":"ElementaryTypeName","src":"8055:5:43","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8054:31:43"},"src":"8048:225:43"}],"externalCall":{"arguments":[{"arguments":[{"id":12369,"name":"productToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11858,"src":"7224:12:43","typeDescriptions":{"typeIdentifier":"t_contract$_ProductTokenUpgradeable_$11276","typeString":"contract ProductTokenUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ProductTokenUpgradeable_$11276","typeString":"contract ProductTokenUpgradeable"}],"id":12368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7216:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":12367,"name":"address","nodeType":"ElementaryTypeName","src":"7216:7:43","typeDescriptions":{}}},"id":12370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7216:21:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":12371,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7239:3:43","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":12372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7243:6:43","memberName":"sender","nodeType":"MemberAccess","src":"7239:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":12373,"name":"uniqueProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12264,"src":"7251:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":12374,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12256,"src":"7268:8:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":12364,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11860,"src":"7189:7:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":12363,"name":"IFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11837,"src":"7180:8:43","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IFactory_$11837_$","typeString":"type(contract IFactory)"}},"id":12365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7180:17:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IFactory_$11837","typeString":"contract IFactory"}},"id":12366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7198:17:43","memberName":"mintForFundraiser","nodeType":"MemberAccess","referencedDeclaration":11825,"src":"7180:35:43","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256) external"}},"id":12375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7180:97:43","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12446,"nodeType":"TryStatement","src":"7176:1097:43"}]},"documentation":{"id":12252,"nodeType":"StructuredDocumentation","src":"5750:193:43","text":" @dev Deposit USDC for a specific product\n @param productId The original product ID (not the unique hashed one)\n @param quantity The quantity of the product to deposit"},"functionSelector":"e2bbb158","id":12448,"implemented":true,"kind":"function","modifiers":[{"id":12259,"kind":"modifierInvocation","modifierName":{"id":12258,"name":"nonReentrant","nameLocations":["6011:12:43"],"nodeType":"IdentifierPath","referencedDeclaration":2347,"src":"6011:12:43"},"nodeType":"ModifierInvocation","src":"6011:12:43"},{"id":12261,"kind":"modifierInvocation","modifierName":{"id":12260,"name":"whenNotPaused","nameLocations":["6024:13:43"],"nodeType":"IdentifierPath","referencedDeclaration":2168,"src":"6024:13:43"},"nodeType":"ModifierInvocation","src":"6024:13:43"}],"name":"deposit","nameLocation":"5957:7:43","nodeType":"FunctionDefinition","parameters":{"id":12257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12254,"mutability":"mutable","name":"productId","nameLocation":"5973:9:43","nodeType":"VariableDeclaration","scope":12448,"src":"5965:17:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12253,"name":"uint256","nodeType":"ElementaryTypeName","src":"5965:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12256,"mutability":"mutable","name":"quantity","nameLocation":"5992:8:43","nodeType":"VariableDeclaration","scope":12448,"src":"5984:16:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12255,"name":"uint256","nodeType":"ElementaryTypeName","src":"5984:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5964:37:43"},"returnParameters":{"id":12262,"nodeType":"ParameterList","parameters":[],"src":"6038:0:43"},"scope":13024,"src":"5948:2331:43","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":12539,"nodeType":"Block","src":"8387:1298:43","statements":[{"expression":{"arguments":[{"id":12458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8405:10:43","subExpression":{"id":12457,"name":"finalized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11874,"src":"8406:9:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c72656164792066696e616c697a6564","id":12459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8417:19:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_c608cfc2c91a4bb42b76b0a5c0095809a7e0bd210c6feb6ebdcb2905abc98251","typeString":"literal_string \"Already finalized\""},"value":"Already finalized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c608cfc2c91a4bb42b76b0a5c0095809a7e0bd210c6feb6ebdcb2905abc98251","typeString":"literal_string \"Already finalized\""}],"id":12456,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8397:7:43","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":12460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8397:40:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12461,"nodeType":"ExpressionStatement","src":"8397:40:43"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12462,"name":"fundingType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11887,"src":"8460:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":12463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8475:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8460:16:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12488,"name":"fundingType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11887,"src":"8995:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":12489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9010:1:43","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8995:16:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12510,"name":"fundingType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11887,"src":"9232:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":12511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9247:1:43","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9232:16:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12536,"nodeType":"IfStatement","src":"9228:451:43","trueBody":{"id":12535,"nodeType":"Block","src":"9250:429:43","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12513,"name":"totalRaised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11872,"src":"9292:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":12514,"name":"minimumTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11866,"src":"9307:13:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9292:28:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":12533,"nodeType":"Block","src":"9474:195:43","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":12522,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9559:5:43","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":12523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9565:9:43","memberName":"timestamp","nodeType":"MemberAccess","src":"9559:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":12524,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11868,"src":"9577:8:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9559:26:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"446561646c696e65206e6f742072656163686564","id":12526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9587:22:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_53e292b015226176e474a9791766536fc304b6afdefdc8e17ad1e85a84510013","typeString":"literal_string \"Deadline not reached\""},"value":"Deadline not reached"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_53e292b015226176e474a9791766536fc304b6afdefdc8e17ad1e85a84510013","typeString":"literal_string \"Deadline not reached\""}],"id":12521,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9551:7:43","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":12527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9551:59:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12528,"nodeType":"ExpressionStatement","src":"9551:59:43"},{"expression":{"arguments":[{"hexValue":"74727565","id":12530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9649:4:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":12529,"name":"_executeFinalization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12580,"src":"9628:20:43","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":12531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9628:26:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12532,"nodeType":"ExpressionStatement","src":"9628:26:43"}]},"id":12534,"nodeType":"IfStatement","src":"9288:381:43","trueBody":{"id":12520,"nodeType":"Block","src":"9322:146:43","statements":[{"expression":{"arguments":[{"hexValue":"74727565","id":12517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9448:4:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":12516,"name":"_executeFinalization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12580,"src":"9427:20:43","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":12518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9427:26:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12519,"nodeType":"ExpressionStatement","src":"9427:26:43"}]}}]}},"id":12537,"nodeType":"IfStatement","src":"8991:688:43","trueBody":{"id":12509,"nodeType":"Block","src":"9013:209:43","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":12501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":12496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":12492,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9100:3:43","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":12493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9104:6:43","memberName":"sender","nodeType":"MemberAccess","src":"9100:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":12494,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"9114:5:43","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":12495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9114:7:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9100:21:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":12500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":12497,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9125:3:43","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":12498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9129:6:43","memberName":"sender","nodeType":"MemberAccess","src":"9125:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":12499,"name":"campaignAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11898,"src":"9139:13:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9125:27:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9100:52:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a6564","id":12502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9154:16:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""},"value":"Not authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""}],"id":12491,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9092:7:43","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":12503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9092:79:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12504,"nodeType":"ExpressionStatement","src":"9092:79:43"},{"expression":{"arguments":[{"hexValue":"74727565","id":12506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9206:4:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":12505,"name":"_executeFinalization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12580,"src":"9185:20:43","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":12507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9185:26:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12508,"nodeType":"ExpressionStatement","src":"9185:26:43"}]}},"id":12538,"nodeType":"IfStatement","src":"8456:1223:43","trueBody":{"id":12487,"nodeType":"Block","src":"8478:507:43","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12465,"name":"totalRaised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11872,"src":"8526:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":12466,"name":"minimumTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11866,"src":"8541:13:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8526:28:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":12485,"nodeType":"Block","src":"8708:267:43","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":12474,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8793:5:43","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":12475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8799:9:43","memberName":"timestamp","nodeType":"MemberAccess","src":"8793:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":12476,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11868,"src":"8811:8:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8793:26:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"446561646c696e65206e6f742072656163686564","id":12478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8821:22:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_53e292b015226176e474a9791766536fc304b6afdefdc8e17ad1e85a84510013","typeString":"literal_string \"Deadline not reached\""},"value":"Deadline not reached"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_53e292b015226176e474a9791766536fc304b6afdefdc8e17ad1e85a84510013","typeString":"literal_string \"Deadline not reached\""}],"id":12473,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8785:7:43","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":12479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8785:59:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12480,"nodeType":"ExpressionStatement","src":"8785:59:43"},{"expression":{"arguments":[{"hexValue":"66616c7365","id":12482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8953:5:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":12481,"name":"_executeFinalization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12580,"src":"8932:20:43","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":12483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8932:27:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12484,"nodeType":"ExpressionStatement","src":"8932:27:43"}]},"id":12486,"nodeType":"IfStatement","src":"8522:453:43","trueBody":{"id":12472,"nodeType":"Block","src":"8556:146:43","statements":[{"expression":{"arguments":[{"hexValue":"74727565","id":12469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8682:4:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":12468,"name":"_executeFinalization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12580,"src":"8661:20:43","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":12470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8661:26:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12471,"nodeType":"ExpressionStatement","src":"8661:26:43"}]}}]}}]},"documentation":{"id":12449,"nodeType":"StructuredDocumentation","src":"8285:43:43","text":" @dev Finalize the campaign"},"functionSelector":"4bb278f3","id":12540,"implemented":true,"kind":"function","modifiers":[{"id":12452,"kind":"modifierInvocation","modifierName":{"id":12451,"name":"nonReentrant","nameLocations":["8360:12:43"],"nodeType":"IdentifierPath","referencedDeclaration":2347,"src":"8360:12:43"},"nodeType":"ModifierInvocation","src":"8360:12:43"},{"id":12454,"kind":"modifierInvocation","modifierName":{"id":12453,"name":"whenNotPaused","nameLocations":["8373:13:43"],"nodeType":"IdentifierPath","referencedDeclaration":2168,"src":"8373:13:43"},"nodeType":"ModifierInvocation","src":"8373:13:43"}],"name":"finalize","nameLocation":"8342:8:43","nodeType":"FunctionDefinition","parameters":{"id":12450,"nodeType":"ParameterList","parameters":[],"src":"8350:2:43"},"returnParameters":{"id":12455,"nodeType":"ParameterList","parameters":[],"src":"8387:0:43"},"scope":13024,"src":"8333:1352:43","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":12579,"nodeType":"Block","src":"9748:446:43","statements":[{"expression":{"id":12547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12545,"name":"finalized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11874,"src":"9758:9:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":12546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9770:4:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9758:16:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12548,"nodeType":"ExpressionStatement","src":"9758:16:43"},{"condition":{"id":12549,"name":"releaseFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12542,"src":"9797:12:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12573,"nodeType":"IfStatement","src":"9793:335:43","trueBody":{"id":12572,"nodeType":"Block","src":"9811:317:43","statements":[{"assignments":[12551],"declarations":[{"constant":false,"id":12551,"mutability":"mutable","name":"contractBalance","nameLocation":"9933:15:43","nodeType":"VariableDeclaration","scope":12572,"src":"9925:23:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12550,"name":"uint256","nodeType":"ElementaryTypeName","src":"9925:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":12559,"initialValue":{"arguments":[{"arguments":[{"id":12556,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9974:4:43","typeDescriptions":{"typeIdentifier":"t_contract$_USDCFundraiserUpgradeable_$13024","typeString":"contract USDCFundraiserUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_USDCFundraiserUpgradeable_$13024","typeString":"contract USDCFundraiserUpgradeable"}],"id":12555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9966:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":12554,"name":"address","nodeType":"ElementaryTypeName","src":"9966:7:43","typeDescriptions":{}}},"id":12557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9966:13:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":12552,"name":"usdc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11855,"src":"9951:4:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}},"id":12553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9956:9:43","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3861,"src":"9951:14:43","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":12558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9951:29:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9925:55:43"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12560,"name":"contractBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12551,"src":"10011:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":12561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10011:19:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12571,"nodeType":"IfStatement","src":"10007:111:43","trueBody":{"id":12570,"nodeType":"Block","src":"10032:86:43","statements":[{"expression":{"arguments":[{"id":12566,"name":"beneficiaryWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11862,"src":"10068:17:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":12567,"name":"contractBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12551,"src":"10087:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":12563,"name":"usdc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11855,"src":"10050:4:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}},"id":12565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10055:12:43","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":3949,"src":"10050:17:43","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3904_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$3904_$","typeString":"function (contract IERC20,address,uint256)"}},"id":12568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10050:53:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12569,"nodeType":"ExpressionStatement","src":"10050:53:43"}]}}]}},{"eventCall":{"arguments":[{"id":12575,"name":"releaseFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12542,"src":"10161:12:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":12576,"name":"totalRaised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11872,"src":"10175:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":12574,"name":"Finalized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11951,"src":"10151:9:43","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256)"}},"id":12577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10151:36:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12578,"nodeType":"EmitStatement","src":"10146:41:43"}]},"id":12580,"implemented":true,"kind":"function","modifiers":[],"name":"_executeFinalization","nameLocation":"9700:20:43","nodeType":"FunctionDefinition","parameters":{"id":12543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12542,"mutability":"mutable","name":"releaseFunds","nameLocation":"9726:12:43","nodeType":"VariableDeclaration","scope":12580,"src":"9721:17:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12541,"name":"bool","nodeType":"ElementaryTypeName","src":"9721:4:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9720:19:43"},"returnParameters":{"id":12544,"nodeType":"ParameterList","parameters":[],"src":"9748:0:43"},"scope":13024,"src":"9691:503:43","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":12738,"nodeType":"Block","src":"10491:1891:43","statements":[{"assignments":[12593],"declarations":[{"constant":false,"id":12593,"mutability":"mutable","name":"uniqueProductId","nameLocation":"10565:15:43","nodeType":"VariableDeclaration","scope":12738,"src":"10557:23:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12592,"name":"uint256","nodeType":"ElementaryTypeName","src":"10557:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":12597,"initialValue":{"arguments":[{"id":12595,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12583,"src":"10608:9:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":12594,"name":"_generateUniqueProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12941,"src":"10583:24:43","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":12596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10583:35:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10557:61:43"},{"assignments":[12600],"declarations":[{"constant":false,"id":12600,"mutability":"mutable","name":"product","nameLocation":"10658:7:43","nodeType":"VariableDeclaration","scope":12738,"src":"10637:28:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_memory_ptr","typeString":"struct ProductConfig"},"typeName":{"id":12599,"nodeType":"UserDefinedTypeName","pathNode":{"id":12598,"name":"ProductConfig","nameLocations":["10637:13:43"],"nodeType":"IdentifierPath","referencedDeclaration":11814,"src":"10637:13:43"},"referencedDeclaration":11814,"src":"10637:13:43","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_storage_ptr","typeString":"struct ProductConfig"}},"visibility":"internal"}],"id":12604,"initialValue":{"baseExpression":{"id":12601,"name":"products","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11892,"src":"10668:8:43","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProductConfig_$11814_storage_$","typeString":"mapping(uint256 => struct ProductConfig storage ref)"}},"id":12603,"indexExpression":{"id":12602,"name":"uniqueProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12593,"src":"10677:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10668:25:43","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_storage","typeString":"struct ProductConfig storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10637:56:43"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":12606,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12600,"src":"10711:7:43","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_memory_ptr","typeString":"struct ProductConfig memory"}},"id":12607,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10719:5:43","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":11811,"src":"10711:13:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":12608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10727:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10711:17:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642070726f64756374","id":12610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10730:17:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_72fa0d424c413c537a457af2143d82fb42ef09111fc27bea7108a2be9cf0cdbb","typeString":"literal_string \"Invalid product\""},"value":"Invalid product"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_72fa0d424c413c537a457af2143d82fb42ef09111fc27bea7108a2be9cf0cdbb","typeString":"literal_string \"Invalid product\""}],"id":12605,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"10703:7:43","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":12611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10703:45:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12612,"nodeType":"ExpressionStatement","src":"10703:45:43"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12613,"name":"fundingType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11887,"src":"10813:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":12614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10828:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10813:16:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12624,"name":"fundingType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11887,"src":"11050:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":12625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11065:1:43","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11050:16:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12635,"name":"fundingType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11887,"src":"11319:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":12636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11334:1:43","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11319:16:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":12658,"nodeType":"Block","src":"11633:55:43","statements":[{"expression":{"arguments":[{"hexValue":"496e76616c69642066756e64696e672074797065","id":12655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11654:22:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_e1ccedd6c928f4af693de5a4092998b9a048d410ec19732b3ad2441b4d6ec187","typeString":"literal_string \"Invalid funding type\""},"value":"Invalid funding type"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e1ccedd6c928f4af693de5a4092998b9a048d410ec19732b3ad2441b4d6ec187","typeString":"literal_string \"Invalid funding type\""}],"id":12654,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"11647:6:43","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":12656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11647:30:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12657,"nodeType":"ExpressionStatement","src":"11647:30:43"}]},"id":12659,"nodeType":"IfStatement","src":"11315:373:43","trueBody":{"id":12653,"nodeType":"Block","src":"11337:290:43","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":12639,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"11458:5:43","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":12640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11464:9:43","memberName":"timestamp","nodeType":"MemberAccess","src":"11458:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":12641,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11868,"src":"11476:8:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11458:26:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"446561646c696e6520706173736564202d20726566756e6473206e6f7420617661696c61626c65","id":12643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11486:41:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_25f046e13f93dcea4e7dbabe401f174763694a6302b90fb3459920c09fd65a9c","typeString":"literal_string \"Deadline passed - refunds not available\""},"value":"Deadline passed - refunds not available"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25f046e13f93dcea4e7dbabe401f174763694a6302b90fb3459920c09fd65a9c","typeString":"literal_string \"Deadline passed - refunds not available\""}],"id":12638,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"11450:7:43","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":12644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11450:78:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12645,"nodeType":"ExpressionStatement","src":"11450:78:43"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12647,"name":"totalRaised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11872,"src":"11550:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":12648,"name":"minimumTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11866,"src":"11564:13:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11550:27:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546172676574206d6574202d20726566756e6473206e6f7420617661696c61626c65","id":12650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11579:36:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_e51dcde649713c3d1774f0bc9b6a08ed97283077a93c692dc275e5ec29e7e3d7","typeString":"literal_string \"Target met - refunds not available\""},"value":"Target met - refunds not available"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e51dcde649713c3d1774f0bc9b6a08ed97283077a93c692dc275e5ec29e7e3d7","typeString":"literal_string \"Target met - refunds not available\""}],"id":12646,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"11542:7:43","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":12651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11542:74:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12652,"nodeType":"ExpressionStatement","src":"11542:74:43"}]}},"id":12660,"nodeType":"IfStatement","src":"11046:642:43","trueBody":{"id":12634,"nodeType":"Block","src":"11068:196:43","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":12630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12628,"name":"finalized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11874,"src":"11188:9:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"66616c7365","id":12629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11201:5:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"11188:18:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616d706169676e2066696e616c697a6564202d20726566756e6473206e6f7420617661696c61626c65","id":12631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11208:44:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_b19d42267eaafef83713b68789791bdf3a046c20f95809d78da26a61d975f1fb","typeString":"literal_string \"Campaign finalized - refunds not available\""},"value":"Campaign finalized - refunds not available"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b19d42267eaafef83713b68789791bdf3a046c20f95809d78da26a61d975f1fb","typeString":"literal_string \"Campaign finalized - refunds not available\""}],"id":12627,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"11180:7:43","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":12632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11180:73:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12633,"nodeType":"ExpressionStatement","src":"11180:73:43"}]}},"id":12661,"nodeType":"IfStatement","src":"10809:879:43","trueBody":{"id":12623,"nodeType":"Block","src":"10831:163:43","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12617,"name":"totalRaised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11872,"src":"10917:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":12618,"name":"minimumTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11866,"src":"10931:13:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10917:27:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546172676574206d6574202d20726566756e6473206e6f7420617661696c61626c65","id":12620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10946:36:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_e51dcde649713c3d1774f0bc9b6a08ed97283077a93c692dc275e5ec29e7e3d7","typeString":"literal_string \"Target met - refunds not available\""},"value":"Target met - refunds not available"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e51dcde649713c3d1774f0bc9b6a08ed97283077a93c692dc275e5ec29e7e3d7","typeString":"literal_string \"Target met - refunds not available\""}],"id":12616,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"10909:7:43","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":12621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10909:74:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12622,"nodeType":"ExpressionStatement","src":"10909:74:43"}]}},{"assignments":[12663],"declarations":[{"constant":false,"id":12663,"mutability":"mutable","name":"balance","nameLocation":"11759:7:43","nodeType":"VariableDeclaration","scope":12738,"src":"11751:15:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12662,"name":"uint256","nodeType":"ElementaryTypeName","src":"11751:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":12670,"initialValue":{"arguments":[{"expression":{"id":12666,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11792:3:43","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":12667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11796:6:43","memberName":"sender","nodeType":"MemberAccess","src":"11792:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":12668,"name":"uniqueProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12593,"src":"11804:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":12664,"name":"productToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11858,"src":"11769:12:43","typeDescriptions":{"typeIdentifier":"t_contract$_ProductTokenUpgradeable_$11276","typeString":"contract ProductTokenUpgradeable"}},"id":12665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11782:9:43","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1241,"src":"11769:22:43","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view external returns (uint256)"}},"id":12669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11769:51:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11751:69:43"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12672,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12663,"src":"11838:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":12673,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12585,"src":"11849:8:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11838:19:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74204e46542062616c616e6365","id":12675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11859:26:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_5aaca2b7cbb98c7f662f24ac27260d255c125d3c34e127534c7081eed9b4a688","typeString":"literal_string \"Insufficient NFT balance\""},"value":"Insufficient NFT balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5aaca2b7cbb98c7f662f24ac27260d255c125d3c34e127534c7081eed9b4a688","typeString":"literal_string \"Insufficient NFT balance\""}],"id":12671,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"11830:7:43","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":12676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11830:56:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12677,"nodeType":"ExpressionStatement","src":"11830:56:43"},{"expression":{"arguments":[{"arguments":[{"id":12684,"name":"productToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11858,"src":"11949:12:43","typeDescriptions":{"typeIdentifier":"t_contract$_ProductTokenUpgradeable_$11276","typeString":"contract ProductTokenUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ProductTokenUpgradeable_$11276","typeString":"contract ProductTokenUpgradeable"}],"id":12683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11941:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":12682,"name":"address","nodeType":"ElementaryTypeName","src":"11941:7:43","typeDescriptions":{}}},"id":12685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11941:21:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":12686,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11964:3:43","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":12687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11968:6:43","memberName":"sender","nodeType":"MemberAccess","src":"11964:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":12688,"name":"uniqueProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12593,"src":"11976:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":12689,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12585,"src":"11993:8:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":12679,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11860,"src":"11914:7:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":12678,"name":"IFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11837,"src":"11905:8:43","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IFactory_$11837_$","typeString":"type(contract IFactory)"}},"id":12680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11905:17:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IFactory_$11837","typeString":"contract IFactory"}},"id":12681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11923:17:43","memberName":"burnForFundraiser","nodeType":"MemberAccess","referencedDeclaration":11836,"src":"11905:35:43","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256) external"}},"id":12690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11905:97:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12691,"nodeType":"ExpressionStatement","src":"11905:97:43"},{"assignments":[12693],"declarations":[{"constant":false,"id":12693,"mutability":"mutable","name":"fee","nameLocation":"12029:3:43","nodeType":"VariableDeclaration","scope":12738,"src":"12021:11:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12692,"name":"uint256","nodeType":"ElementaryTypeName","src":"12021:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":12701,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":12694,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12600,"src":"12036:7:43","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_memory_ptr","typeString":"struct ProductConfig memory"}},"id":12695,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12044:5:43","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":11811,"src":"12036:13:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":12696,"name":"feePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11870,"src":"12052:13:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12036:29:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":12698,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12035:31:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":12699,"name":"BASIS_POINTS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11852,"src":"12069:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12035:46:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12021:60:43"},{"assignments":[12703],"declarations":[{"constant":false,"id":12703,"mutability":"mutable","name":"refundAmount","nameLocation":"12099:12:43","nodeType":"VariableDeclaration","scope":12738,"src":"12091:20:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12702,"name":"uint256","nodeType":"ElementaryTypeName","src":"12091:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":12711,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":12704,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12600,"src":"12115:7:43","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_memory_ptr","typeString":"struct ProductConfig memory"}},"id":12705,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12123:5:43","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":11811,"src":"12115:13:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":12706,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12693,"src":"12131:3:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12115:19:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":12708,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12114:21:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":12709,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12585,"src":"12138:8:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12114:32:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12091:55:43"},{"expression":{"arguments":[{"expression":{"id":12715,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12174:3:43","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":12716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12178:6:43","memberName":"sender","nodeType":"MemberAccess","src":"12174:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":12717,"name":"refundAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12703,"src":"12186:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":12712,"name":"usdc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11855,"src":"12156:4:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3904","typeString":"contract IERC20"}},"id":12714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12161:12:43","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":3949,"src":"12156:17:43","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$3904_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$3904_$","typeString":"function (contract IERC20,address,uint256)"}},"id":12718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12156:43:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12719,"nodeType":"ExpressionStatement","src":"12156:43:43"},{"expression":{"id":12724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":12720,"name":"productSoldCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11885,"src":"12218:16:43","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":12722,"indexExpression":{"id":12721,"name":"uniqueProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12593,"src":"12235:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12218:33:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":12723,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12585,"src":"12255:8:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12218:45:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12725,"nodeType":"ExpressionStatement","src":"12218:45:43"},{"expression":{"id":12728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12726,"name":"totalRaised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11872,"src":"12273:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":12727,"name":"refundAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12703,"src":"12288:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12273:27:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12729,"nodeType":"ExpressionStatement","src":"12273:27:43"},{"eventCall":{"arguments":[{"expression":{"id":12731,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12323:3:43","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":12732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12327:6:43","memberName":"sender","nodeType":"MemberAccess","src":"12323:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":12733,"name":"refundAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12703,"src":"12335:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":12734,"name":"uniqueProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12593,"src":"12349:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":12735,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12585,"src":"12366:8:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":12730,"name":"Refund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11961,"src":"12316:6:43","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256)"}},"id":12736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12316:59:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12737,"nodeType":"EmitStatement","src":"12311:64:43"}]},"documentation":{"id":12581,"nodeType":"StructuredDocumentation","src":"10200:192:43","text":" @dev Claim refund for a specific product\n @param productId The original product ID (not the unique hashed one)\n @param quantity The quantity of the product to refund"},"functionSelector":"8527d58f","id":12739,"implemented":true,"kind":"function","modifiers":[{"id":12588,"kind":"modifierInvocation","modifierName":{"id":12587,"name":"nonReentrant","nameLocations":["10464:12:43"],"nodeType":"IdentifierPath","referencedDeclaration":2347,"src":"10464:12:43"},"nodeType":"ModifierInvocation","src":"10464:12:43"},{"id":12590,"kind":"modifierInvocation","modifierName":{"id":12589,"name":"whenNotPaused","nameLocations":["10477:13:43"],"nodeType":"IdentifierPath","referencedDeclaration":2168,"src":"10477:13:43"},"nodeType":"ModifierInvocation","src":"10477:13:43"}],"name":"claimRefund","nameLocation":"10406:11:43","nodeType":"FunctionDefinition","parameters":{"id":12586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12583,"mutability":"mutable","name":"productId","nameLocation":"10426:9:43","nodeType":"VariableDeclaration","scope":12739,"src":"10418:17:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12582,"name":"uint256","nodeType":"ElementaryTypeName","src":"10418:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12585,"mutability":"mutable","name":"quantity","nameLocation":"10445:8:43","nodeType":"VariableDeclaration","scope":12739,"src":"10437:16:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12584,"name":"uint256","nodeType":"ElementaryTypeName","src":"10437:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10417:37:43"},"returnParameters":{"id":12591,"nodeType":"ParameterList","parameters":[],"src":"10491:0:43"},"scope":13024,"src":"10397:1985:43","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":12814,"nodeType":"Block","src":"12665:809:43","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":12749,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12743,"src":"12683:7:43","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_memory_ptr","typeString":"struct ProductConfig memory"}},"id":12750,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12691:5:43","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":11811,"src":"12683:13:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":12751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12699:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12683:17:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207072696365","id":12753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12702:15:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7","typeString":"literal_string \"Invalid price\""},"value":"Invalid price"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7","typeString":"literal_string \"Invalid price\""}],"id":12748,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"12675:7:43","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":12754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12675:43:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12755,"nodeType":"ExpressionStatement","src":"12675:43:43"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":12757,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12743,"src":"12736:7:43","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_memory_ptr","typeString":"struct ProductConfig memory"}},"id":12758,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12744:9:43","memberName":"productId","nodeType":"MemberAccess","referencedDeclaration":11809,"src":"12736:17:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":12759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12756:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12736:21:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642070726f64756374204944","id":12761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12759:20:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5e0edb6b49da0bba96fe195e8e7e332fe468c64ad1a5877c0a12a6c2b7921a6","typeString":"literal_string \"Invalid product ID\""},"value":"Invalid product ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c5e0edb6b49da0bba96fe195e8e7e332fe468c64ad1a5877c0a12a6c2b7921a6","typeString":"literal_string \"Invalid product ID\""}],"id":12756,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"12728:7:43","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":12762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12728:52:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12763,"nodeType":"ExpressionStatement","src":"12728:52:43"},{"assignments":[12765],"declarations":[{"constant":false,"id":12765,"mutability":"mutable","name":"uniqueProductId","nameLocation":"12855:15:43","nodeType":"VariableDeclaration","scope":12814,"src":"12847:23:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12764,"name":"uint256","nodeType":"ElementaryTypeName","src":"12847:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":12770,"initialValue":{"arguments":[{"expression":{"id":12767,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12743,"src":"12898:7:43","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_memory_ptr","typeString":"struct ProductConfig memory"}},"id":12768,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12906:9:43","memberName":"productId","nodeType":"MemberAccess","referencedDeclaration":11809,"src":"12898:17:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":12766,"name":"_generateUniqueProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12941,"src":"12873:24:43","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":12769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12873:43:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12847:69:43"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":12772,"name":"products","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11892,"src":"12943:8:43","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProductConfig_$11814_storage_$","typeString":"mapping(uint256 => struct ProductConfig storage ref)"}},"id":12774,"indexExpression":{"id":12773,"name":"uniqueProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12765,"src":"12952:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12943:25:43","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_storage","typeString":"struct ProductConfig storage ref"}},"id":12775,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12969:5:43","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":11811,"src":"12943:31:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":12776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12978:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12943:36:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f6475637420616c726561647920657869737473","id":12778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12981:24:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_8fb2d4317480fa2b58c8559dbcf8d78d5def7e953bd99a3f449349173377ae35","typeString":"literal_string \"Product already exists\""},"value":"Product already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8fb2d4317480fa2b58c8559dbcf8d78d5def7e953bd99a3f449349173377ae35","typeString":"literal_string \"Product already exists\""}],"id":12771,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"12935:7:43","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":12779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12935:71:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12780,"nodeType":"ExpressionStatement","src":"12935:71:43"},{"expression":{"id":12791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":12781,"name":"products","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11892,"src":"13049:8:43","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProductConfig_$11814_storage_$","typeString":"mapping(uint256 => struct ProductConfig storage ref)"}},"id":12783,"indexExpression":{"id":12782,"name":"uniqueProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12765,"src":"13058:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13049:25:43","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_storage","typeString":"struct ProductConfig storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":12785,"name":"uniqueProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12765,"src":"13116:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":12786,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12743,"src":"13152:7:43","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_memory_ptr","typeString":"struct ProductConfig memory"}},"id":12787,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13160:5:43","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":11811,"src":"13152:13:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":12788,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12743,"src":"13192:7:43","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_memory_ptr","typeString":"struct ProductConfig memory"}},"id":12789,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13200:11:43","memberName":"supplyLimit","nodeType":"MemberAccess","referencedDeclaration":11813,"src":"13192:19:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":12784,"name":"ProductConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11814,"src":"13077:13:43","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ProductConfig_$11814_storage_ptr_$","typeString":"type(struct ProductConfig storage pointer)"}},"id":12790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["13105:9:43","13145:5:43","13179:11:43"],"names":["productId","price","supplyLimit"],"nodeType":"FunctionCall","src":"13077:145:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_memory_ptr","typeString":"struct ProductConfig memory"}},"src":"13049:173:43","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_storage","typeString":"struct ProductConfig storage ref"}},"id":12792,"nodeType":"ExpressionStatement","src":"13049:173:43"},{"expression":{"arguments":[{"id":12796,"name":"uniqueProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12765,"src":"13248:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":12793,"name":"productIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11881,"src":"13232:10:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":12795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13243:4:43","memberName":"push","nodeType":"MemberAccess","src":"13232:15:43","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":12797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13232:32:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12798,"nodeType":"ExpressionStatement","src":"13232:32:43"},{"expression":{"id":12804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":12799,"name":"uniqueToOriginalProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11896,"src":"13316:25:43","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":12801,"indexExpression":{"id":12800,"name":"uniqueProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12765,"src":"13342:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13316:42:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":12802,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12743,"src":"13361:7:43","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_memory_ptr","typeString":"struct ProductConfig memory"}},"id":12803,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13369:9:43","memberName":"productId","nodeType":"MemberAccess","referencedDeclaration":11809,"src":"13361:17:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13316:62:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12805,"nodeType":"ExpressionStatement","src":"13316:62:43"},{"eventCall":{"arguments":[{"id":12807,"name":"uniqueProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12765,"src":"13415:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":12808,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12743,"src":"13432:7:43","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_memory_ptr","typeString":"struct ProductConfig memory"}},"id":12809,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13440:5:43","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":11811,"src":"13432:13:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":12810,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12743,"src":"13447:7:43","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_memory_ptr","typeString":"struct ProductConfig memory"}},"id":12811,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13455:11:43","memberName":"supplyLimit","nodeType":"MemberAccess","referencedDeclaration":11813,"src":"13447:19:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":12806,"name":"ProductAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11969,"src":"13402:12:43","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":12812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13402:65:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12813,"nodeType":"EmitStatement","src":"13397:70:43"}]},"documentation":{"id":12740,"nodeType":"StructuredDocumentation","src":"12388:196:43","text":" @dev Add a new product to the campaign\n @param product Product configuration with original product ID\n @notice The product ID will be converted to a unique ID internally"},"functionSelector":"dd5934b3","id":12815,"implemented":true,"kind":"function","modifiers":[{"id":12746,"kind":"modifierInvocation","modifierName":{"id":12745,"name":"onlyAdminOrOwner","nameLocations":["12648:16:43"],"nodeType":"IdentifierPath","referencedDeclaration":11916,"src":"12648:16:43"},"nodeType":"ModifierInvocation","src":"12648:16:43"}],"name":"addProduct","nameLocation":"12598:10:43","nodeType":"FunctionDefinition","parameters":{"id":12744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12743,"mutability":"mutable","name":"product","nameLocation":"12630:7:43","nodeType":"VariableDeclaration","scope":12815,"src":"12609:28:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_memory_ptr","typeString":"struct ProductConfig"},"typeName":{"id":12742,"nodeType":"UserDefinedTypeName","pathNode":{"id":12741,"name":"ProductConfig","nameLocations":["12609:13:43"],"nodeType":"IdentifierPath","referencedDeclaration":11814,"src":"12609:13:43"},"referencedDeclaration":11814,"src":"12609:13:43","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_storage_ptr","typeString":"struct ProductConfig"}},"visibility":"internal"}],"src":"12608:30:43"},"returnParameters":{"id":12747,"nodeType":"ParameterList","parameters":[],"src":"12665:0:43"},"scope":13024,"src":"12589:885:43","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":12917,"nodeType":"Block","src":"13834:1109:43","statements":[{"assignments":[12828],"declarations":[{"constant":false,"id":12828,"mutability":"mutable","name":"uniqueProductId","nameLocation":"13890:15:43","nodeType":"VariableDeclaration","scope":12917,"src":"13882:23:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12827,"name":"uint256","nodeType":"ElementaryTypeName","src":"13882:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":12832,"initialValue":{"arguments":[{"id":12830,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12818,"src":"13933:9:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":12829,"name":"_generateUniqueProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12941,"src":"13908:24:43","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":12831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13908:35:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13882:61:43"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":12834,"name":"products","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11892,"src":"13966:8:43","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProductConfig_$11814_storage_$","typeString":"mapping(uint256 => struct ProductConfig storage ref)"}},"id":12836,"indexExpression":{"id":12835,"name":"uniqueProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12828,"src":"13975:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13966:25:43","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_storage","typeString":"struct ProductConfig storage ref"}},"id":12837,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13992:5:43","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":11811,"src":"13966:31:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":12838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14000:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13966:35:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f6475637420646f6573206e6f74206578697374","id":12840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14003:24:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_024c62f1b19c7769a4597e49b2c712fccb7b90866e80d0db4592b32e89de4592","typeString":"literal_string \"Product does not exist\""},"value":"Product does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_024c62f1b19c7769a4597e49b2c712fccb7b90866e80d0db4592b32e89de4592","typeString":"literal_string \"Product does not exist\""}],"id":12833,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"13958:7:43","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":12841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13958:70:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12842,"nodeType":"ExpressionStatement","src":"13958:70:43"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12844,"name":"newPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12820,"src":"14046:8:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":12845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14057:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14046:12:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207072696365","id":12847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14060:15:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7","typeString":"literal_string \"Invalid price\""},"value":"Invalid price"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7","typeString":"literal_string \"Invalid price\""}],"id":12843,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"14038:7:43","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":12848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14038:38:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12849,"nodeType":"ExpressionStatement","src":"14038:38:43"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12850,"name":"newPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12820,"src":"14140:8:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"baseExpression":{"id":12851,"name":"products","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11892,"src":"14152:8:43","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProductConfig_$11814_storage_$","typeString":"mapping(uint256 => struct ProductConfig storage ref)"}},"id":12853,"indexExpression":{"id":12852,"name":"uniqueProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12828,"src":"14161:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14152:25:43","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_storage","typeString":"struct ProductConfig storage ref"}},"id":12854,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14178:5:43","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":11811,"src":"14152:31:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14140:43:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12866,"nodeType":"IfStatement","src":"14136:156:43","trueBody":{"id":12865,"nodeType":"Block","src":"14185:107:43","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":12857,"name":"productSoldCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11885,"src":"14207:16:43","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":12859,"indexExpression":{"id":12858,"name":"uniqueProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12828,"src":"14224:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14207:33:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":12860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14244:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14207:38:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f74206368616e67652070726963652061667465722073616c6573","id":12862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14247:33:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_f679c4b85c1537fa8a34cb6238818a6a0f00065b3996002cc2a0999a306dc5e8","typeString":"literal_string \"Cannot change price after sales\""},"value":"Cannot change price after sales"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f679c4b85c1537fa8a34cb6238818a6a0f00065b3996002cc2a0999a306dc5e8","typeString":"literal_string \"Cannot change price after sales\""}],"id":12856,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"14199:7:43","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":12863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14199:82:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12864,"nodeType":"ExpressionStatement","src":"14199:82:43"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12867,"name":"newSupplyLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12822,"src":"14428:14:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":12868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14445:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14428:18:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12880,"nodeType":"IfStatement","src":"14424:156:43","trueBody":{"id":12879,"nodeType":"Block","src":"14448:132:43","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12871,"name":"newSupplyLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12822,"src":"14470:14:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"baseExpression":{"id":12872,"name":"productSoldCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11885,"src":"14488:16:43","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":12874,"indexExpression":{"id":12873,"name":"uniqueProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12828,"src":"14505:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14488:33:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14470:51:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537570706c79206c696d69742063616e6e6f74206265206c657373207468616e20736f6c6420636f756e74","id":12876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14523:45:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_b448fc4b5ad1d4ea5827d0d3ec37a33a798a6032d0d72a52e662f446d441bb2c","typeString":"literal_string \"Supply limit cannot be less than sold count\""},"value":"Supply limit cannot be less than sold count"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b448fc4b5ad1d4ea5827d0d3ec37a33a798a6032d0d72a52e662f446d441bb2c","typeString":"literal_string \"Supply limit cannot be less than sold count\""}],"id":12870,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"14462:7:43","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":12877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:107:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12878,"nodeType":"ExpressionStatement","src":"14462:107:43"}]}},{"assignments":[12882],"declarations":[{"constant":false,"id":12882,"mutability":"mutable","name":"oldPrice","nameLocation":"14598:8:43","nodeType":"VariableDeclaration","scope":12917,"src":"14590:16:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12881,"name":"uint256","nodeType":"ElementaryTypeName","src":"14590:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":12887,"initialValue":{"expression":{"baseExpression":{"id":12883,"name":"products","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11892,"src":"14609:8:43","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProductConfig_$11814_storage_$","typeString":"mapping(uint256 => struct ProductConfig storage ref)"}},"id":12885,"indexExpression":{"id":12884,"name":"uniqueProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12828,"src":"14618:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14609:25:43","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_storage","typeString":"struct ProductConfig storage ref"}},"id":12886,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14635:5:43","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":11811,"src":"14609:31:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14590:50:43"},{"assignments":[12889],"declarations":[{"constant":false,"id":12889,"mutability":"mutable","name":"oldSupplyLimit","nameLocation":"14658:14:43","nodeType":"VariableDeclaration","scope":12917,"src":"14650:22:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12888,"name":"uint256","nodeType":"ElementaryTypeName","src":"14650:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":12894,"initialValue":{"expression":{"baseExpression":{"id":12890,"name":"products","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11892,"src":"14675:8:43","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProductConfig_$11814_storage_$","typeString":"mapping(uint256 => struct ProductConfig storage ref)"}},"id":12892,"indexExpression":{"id":12891,"name":"uniqueProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12828,"src":"14684:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14675:25:43","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_storage","typeString":"struct ProductConfig storage ref"}},"id":12893,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14701:11:43","memberName":"supplyLimit","nodeType":"MemberAccess","referencedDeclaration":11813,"src":"14675:37:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14650:62:43"},{"expression":{"id":12900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":12895,"name":"products","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11892,"src":"14723:8:43","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProductConfig_$11814_storage_$","typeString":"mapping(uint256 => struct ProductConfig storage ref)"}},"id":12897,"indexExpression":{"id":12896,"name":"uniqueProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12828,"src":"14732:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14723:25:43","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_storage","typeString":"struct ProductConfig storage ref"}},"id":12898,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14749:5:43","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":11811,"src":"14723:31:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":12899,"name":"newPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12820,"src":"14757:8:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14723:42:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12901,"nodeType":"ExpressionStatement","src":"14723:42:43"},{"expression":{"id":12907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":12902,"name":"products","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11892,"src":"14775:8:43","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProductConfig_$11814_storage_$","typeString":"mapping(uint256 => struct ProductConfig storage ref)"}},"id":12904,"indexExpression":{"id":12903,"name":"uniqueProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12828,"src":"14784:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14775:25:43","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_storage","typeString":"struct ProductConfig storage ref"}},"id":12905,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14801:11:43","memberName":"supplyLimit","nodeType":"MemberAccess","referencedDeclaration":11813,"src":"14775:37:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":12906,"name":"newSupplyLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12822,"src":"14815:14:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14775:54:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12908,"nodeType":"ExpressionStatement","src":"14775:54:43"},{"eventCall":{"arguments":[{"id":12910,"name":"uniqueProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12828,"src":"14868:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":12911,"name":"oldPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12882,"src":"14885:8:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":12912,"name":"newPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12820,"src":"14895:8:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":12913,"name":"oldSupplyLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12889,"src":"14905:14:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":12914,"name":"newSupplyLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12822,"src":"14921:14:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":12909,"name":"ProductUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11981,"src":"14853:14:43","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256,uint256,uint256)"}},"id":12915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14853:83:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12916,"nodeType":"EmitStatement","src":"14848:88:43"}]},"documentation":{"id":12816,"nodeType":"StructuredDocumentation","src":"13480:239:43","text":" @dev Update an existing product\n @param productId The original product ID (will be converted to unique ID)\n @param newPrice New price for the product\n @param newSupplyLimit New supply limit (0 for unlimited)"},"functionSelector":"f85292ca","id":12918,"implemented":true,"kind":"function","modifiers":[{"id":12825,"kind":"modifierInvocation","modifierName":{"id":12824,"name":"onlyAdminOrOwner","nameLocations":["13817:16:43"],"nodeType":"IdentifierPath","referencedDeclaration":11916,"src":"13817:16:43"},"nodeType":"ModifierInvocation","src":"13817:16:43"}],"name":"updateProduct","nameLocation":"13733:13:43","nodeType":"FunctionDefinition","parameters":{"id":12823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12818,"mutability":"mutable","name":"productId","nameLocation":"13755:9:43","nodeType":"VariableDeclaration","scope":12918,"src":"13747:17:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12817,"name":"uint256","nodeType":"ElementaryTypeName","src":"13747:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12820,"mutability":"mutable","name":"newPrice","nameLocation":"13774:8:43","nodeType":"VariableDeclaration","scope":12918,"src":"13766:16:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12819,"name":"uint256","nodeType":"ElementaryTypeName","src":"13766:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12822,"mutability":"mutable","name":"newSupplyLimit","nameLocation":"13792:14:43","nodeType":"VariableDeclaration","scope":12918,"src":"13784:22:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12821,"name":"uint256","nodeType":"ElementaryTypeName","src":"13784:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13746:61:43"},"returnParameters":{"id":12826,"nodeType":"ParameterList","parameters":[],"src":"13834:0:43"},"scope":13024,"src":"13724:1219:43","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":12940,"nodeType":"Block","src":"15281:116:43","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":12933,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"15354:4:43","typeDescriptions":{"typeIdentifier":"t_contract$_USDCFundraiserUpgradeable_$13024","typeString":"contract USDCFundraiserUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_USDCFundraiserUpgradeable_$13024","typeString":"contract USDCFundraiserUpgradeable"}],"id":12932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15346:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":12931,"name":"address","nodeType":"ElementaryTypeName","src":"15346:7:43","typeDescriptions":{}}},"id":12934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15346:13:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":12935,"name":"originalProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12921,"src":"15361:17:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":12929,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"15329:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":12930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15333:12:43","memberName":"encodePacked","nodeType":"MemberAccess","src":"15329:16:43","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":12936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15329:50:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":12928,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"15306:9:43","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":12937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15306:83:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":12927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15298:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":12926,"name":"uint256","nodeType":"ElementaryTypeName","src":"15298:7:43","typeDescriptions":{}}},"id":12938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15298:92:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":12925,"id":12939,"nodeType":"Return","src":"15291:99:43"}]},"documentation":{"id":12919,"nodeType":"StructuredDocumentation","src":"14949:234:43","text":" @dev Generates a unique product ID by hashing campaign address with original product ID\n @param originalProductId The original product ID provided by the user\n @return The unique product ID for this campaign"},"id":12941,"implemented":true,"kind":"function","modifiers":[],"name":"_generateUniqueProductId","nameLocation":"15197:24:43","nodeType":"FunctionDefinition","parameters":{"id":12922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12921,"mutability":"mutable","name":"originalProductId","nameLocation":"15230:17:43","nodeType":"VariableDeclaration","scope":12941,"src":"15222:25:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12920,"name":"uint256","nodeType":"ElementaryTypeName","src":"15222:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15221:27:43"},"returnParameters":{"id":12925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12924,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12941,"src":"15272:7:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12923,"name":"uint256","nodeType":"ElementaryTypeName","src":"15272:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15271:9:43"},"scope":13024,"src":"15188:209:43","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":12949,"nodeType":"Block","src":"15439:25:43","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":12946,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"15449:6:43","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":12947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15449:8:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12948,"nodeType":"ExpressionStatement","src":"15449:8:43"}]},"functionSelector":"8456cb59","id":12950,"implemented":true,"kind":"function","modifiers":[{"id":12944,"kind":"modifierInvocation","modifierName":{"id":12943,"name":"onlyOwner","nameLocations":["15429:9:43"],"nodeType":"IdentifierPath","referencedDeclaration":520,"src":"15429:9:43"},"nodeType":"ModifierInvocation","src":"15429:9:43"}],"name":"pause","nameLocation":"15412:5:43","nodeType":"FunctionDefinition","parameters":{"id":12942,"nodeType":"ParameterList","parameters":[],"src":"15417:2:43"},"returnParameters":{"id":12945,"nodeType":"ParameterList","parameters":[],"src":"15439:0:43"},"scope":13024,"src":"15403:61:43","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":12958,"nodeType":"Block","src":"15508:27:43","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":12955,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"15518:8:43","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":12956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15518:10:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12957,"nodeType":"ExpressionStatement","src":"15518:10:43"}]},"functionSelector":"3f4ba83a","id":12959,"implemented":true,"kind":"function","modifiers":[{"id":12953,"kind":"modifierInvocation","modifierName":{"id":12952,"name":"onlyOwner","nameLocations":["15498:9:43"],"nodeType":"IdentifierPath","referencedDeclaration":520,"src":"15498:9:43"},"nodeType":"ModifierInvocation","src":"15498:9:43"}],"name":"unpause","nameLocation":"15479:7:43","nodeType":"FunctionDefinition","parameters":{"id":12951,"nodeType":"ParameterList","parameters":[],"src":"15486:2:43"},"returnParameters":{"id":12954,"nodeType":"ParameterList","parameters":[],"src":"15508:0:43"},"scope":13024,"src":"15470:65:43","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":12967,"nodeType":"Block","src":"15607:34:43","statements":[{"expression":{"id":12965,"name":"productIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11881,"src":"15624:10:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":12964,"id":12966,"nodeType":"Return","src":"15617:17:43"}]},"functionSelector":"47428e7b","id":12968,"implemented":true,"kind":"function","modifiers":[],"name":"getProductIds","nameLocation":"15550:13:43","nodeType":"FunctionDefinition","parameters":{"id":12960,"nodeType":"ParameterList","parameters":[],"src":"15563:2:43"},"returnParameters":{"id":12964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12968,"src":"15589:16:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":12961,"name":"uint256","nodeType":"ElementaryTypeName","src":"15589:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12962,"nodeType":"ArrayTypeName","src":"15589:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"15588:18:43"},"scope":13024,"src":"15541:100:43","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":12987,"nodeType":"Block","src":"15907:120:43","statements":[{"assignments":[12978],"declarations":[{"constant":false,"id":12978,"mutability":"mutable","name":"uniqueProductId","nameLocation":"15925:15:43","nodeType":"VariableDeclaration","scope":12987,"src":"15917:23:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12977,"name":"uint256","nodeType":"ElementaryTypeName","src":"15917:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":12982,"initialValue":{"arguments":[{"id":12980,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12971,"src":"15968:9:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":12979,"name":"_generateUniqueProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12941,"src":"15943:24:43","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":12981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15943:35:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15917:61:43"},{"expression":{"baseExpression":{"id":12983,"name":"products","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11892,"src":"15995:8:43","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProductConfig_$11814_storage_$","typeString":"mapping(uint256 => struct ProductConfig storage ref)"}},"id":12985,"indexExpression":{"id":12984,"name":"uniqueProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12978,"src":"16004:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15995:25:43","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_storage","typeString":"struct ProductConfig storage ref"}},"functionReturnParameters":12976,"id":12986,"nodeType":"Return","src":"15988:32:43"}]},"documentation":{"id":12969,"nodeType":"StructuredDocumentation","src":"15647:171:43","text":" @dev Get product by original product ID\n @param productId The original product ID (not the unique hashed one)\n @return The product configuration"},"functionSelector":"b9db15b4","id":12988,"implemented":true,"kind":"function","modifiers":[],"name":"getProduct","nameLocation":"15832:10:43","nodeType":"FunctionDefinition","parameters":{"id":12972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12971,"mutability":"mutable","name":"productId","nameLocation":"15851:9:43","nodeType":"VariableDeclaration","scope":12988,"src":"15843:17:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12970,"name":"uint256","nodeType":"ElementaryTypeName","src":"15843:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15842:19:43"},"returnParameters":{"id":12976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12988,"src":"15885:20:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_memory_ptr","typeString":"struct ProductConfig"},"typeName":{"id":12974,"nodeType":"UserDefinedTypeName","pathNode":{"id":12973,"name":"ProductConfig","nameLocations":["15885:13:43"],"nodeType":"IdentifierPath","referencedDeclaration":11814,"src":"15885:13:43"},"referencedDeclaration":11814,"src":"15885:13:43","typeDescriptions":{"typeIdentifier":"t_struct$_ProductConfig_$11814_storage_ptr","typeString":"struct ProductConfig"}},"visibility":"internal"}],"src":"15884:22:43"},"scope":13024,"src":"15823:204:43","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":13000,"nodeType":"Block","src":"16286:59:43","statements":[{"expression":{"arguments":[{"id":12997,"name":"productId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12991,"src":"16328:9:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":12996,"name":"_generateUniqueProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12941,"src":"16303:24:43","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":12998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16303:35:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":12995,"id":12999,"nodeType":"Return","src":"16296:42:43"}]},"documentation":{"id":12989,"nodeType":"StructuredDocumentation","src":"16033:169:43","text":" @dev Get unique product ID from original product ID\n @param productId The original product ID\n @return The unique product ID for this campaign"},"functionSelector":"8500efa1","id":13001,"implemented":true,"kind":"function","modifiers":[],"name":"getUniqueProductId","nameLocation":"16216:18:43","nodeType":"FunctionDefinition","parameters":{"id":12992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12991,"mutability":"mutable","name":"productId","nameLocation":"16243:9:43","nodeType":"VariableDeclaration","scope":13001,"src":"16235:17:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12990,"name":"uint256","nodeType":"ElementaryTypeName","src":"16235:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16234:19:43"},"returnParameters":{"id":12995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12994,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13001,"src":"16277:7:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12993,"name":"uint256","nodeType":"ElementaryTypeName","src":"16277:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16276:9:43"},"scope":13024,"src":"16207:138:43","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":13022,"nodeType":"Block","src":"16600:157:43","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":13014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":13010,"name":"uniqueToOriginalProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11896,"src":"16618:25:43","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":13012,"indexExpression":{"id":13011,"name":"uniqueProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13004,"src":"16644:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16618:42:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":13013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16663:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16618:46:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f6475637420646f6573206e6f74206578697374","id":13015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16666:24:43","typeDescriptions":{"typeIdentifier":"t_stringliteral_024c62f1b19c7769a4597e49b2c712fccb7b90866e80d0db4592b32e89de4592","typeString":"literal_string \"Product does not exist\""},"value":"Product does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_024c62f1b19c7769a4597e49b2c712fccb7b90866e80d0db4592b32e89de4592","typeString":"literal_string \"Product does not exist\""}],"id":13009,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"16610:7:43","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":13016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16610:81:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":13017,"nodeType":"ExpressionStatement","src":"16610:81:43"},{"expression":{"baseExpression":{"id":13018,"name":"uniqueToOriginalProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11896,"src":"16708:25:43","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":13020,"indexExpression":{"id":13019,"name":"uniqueProductId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13004,"src":"16734:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16708:42:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":13008,"id":13021,"nodeType":"Return","src":"16701:49:43"}]},"documentation":{"id":13002,"nodeType":"StructuredDocumentation","src":"16351:157:43","text":" @dev Get original product ID from unique product ID\n @param uniqueProductId The unique product ID\n @return The original product ID"},"functionSelector":"75390e73","id":13023,"implemented":true,"kind":"function","modifiers":[],"name":"getOriginalProductId","nameLocation":"16522:20:43","nodeType":"FunctionDefinition","parameters":{"id":13005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13004,"mutability":"mutable","name":"uniqueProductId","nameLocation":"16551:15:43","nodeType":"VariableDeclaration","scope":13023,"src":"16543:23:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13003,"name":"uint256","nodeType":"ElementaryTypeName","src":"16543:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16542:25:43"},"returnParameters":{"id":13008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13007,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13023,"src":"16591:7:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13006,"name":"uint256","nodeType":"ElementaryTypeName","src":"16591:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16590:9:43"},"scope":13024,"src":"16513:244:43","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":13025,"src":"1032:15727:43","usedErrors":[461,466,642,645,2157,2160,2309,3916],"usedEvents":[472,650,2149,2154,11945,11951,11961,11969,11981]}],"src":"32:16728:43"},"id":43}},"contracts":{"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol":{"AutomationBase":{"abi":[{"inputs":[],"name":"OnlySimulatedBackend","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601357603a908160198239f35b600080fdfe600080fdfea264697066735822122070923a5117710055482db09ba072e8ecbddb84e87b89891fb3fe89c123a4d68064736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x13 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x19 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x923A5117710055482DB09BA072E8ECBDDB DUP5 0xE8 PUSH28 0x89891FB3FE89C123A4D68064736F6C634300081B0033000000000000 ","sourceMap":"57:634:0:-:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122070923a5117710055482db09ba072e8ecbddb84e87b89891fb3fe89c123a4d68064736f6c634300081b0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x923A5117710055482DB09BA072E8ECBDDB DUP5 0xE8 PUSH28 0x89891FB3FE89C123A4D68064736F6C634300081B0033000000000000 ","sourceMap":"57:634:0:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":\"AutomationBase\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"keccak256\":\"0x8c97744adc25cf30d1a2509bff6c0ddc9b36feb75f8e38c85d5c62b8ec773159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c53c8736dacbf8c517c63937d556c3e4873a62f509c5d84b89e32fc5c9c6c2c\",\"dweb:/ipfs/QmeR6RSce5dTDcPgbwBnG7E8U89716bqsUcv1NeWnX5RJf\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol":{"AutomationCompatible":{"abi":[{"inputs":[],"name":"OnlySimulatedBackend","type":"error"},{"inputs":[{"internalType":"bytes","name":"checkData","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"performData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"performData","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"checkUpkeep(bytes)":"6e04ff0d","performUpkeep(bytes)":"4585e33b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":\"AutomationCompatible\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"keccak256\":\"0x8c97744adc25cf30d1a2509bff6c0ddc9b36feb75f8e38c85d5c62b8ec773159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c53c8736dacbf8c517c63937d556c3e4873a62f509c5d84b89e32fc5c9c6c2c\",\"dweb:/ipfs/QmeR6RSce5dTDcPgbwBnG7E8U89716bqsUcv1NeWnX5RJf\"]},\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":{\"keccak256\":\"0xce623f3e7fa4addf240032d2817b2b489ac08e79fae14a5cc5850ed3f1acddf8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0546b2739f3989b897c5cb591d01211e2db22e1a8578f68117f1a8a692abd85c\",\"dweb:/ipfs/QmW6guw8uUk2Dq49PWdjeZeEvnDDRg3CVX2BVcVNcT6QNL\"]},\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e35eb46dfadf12396e92dd970547209dfd99f0ae5b1ec7b5a3e81617f620a1\",\"dweb:/ipfs/Qmanoi2CDi9MwkP44HosagvewfMEvCMN1YthGRmCexVjwY\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol":{"AutomationCompatibleInterface":{"abi":[{"inputs":[{"internalType":"bytes","name":"checkData","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"performData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"performData","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"checkUpkeep(bytes)":"6e04ff0d","performUpkeep(bytes)":"4585e33b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":\"AutomationCompatibleInterface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e35eb46dfadf12396e92dd970547209dfd99f0ae5b1ec7b5a3e81617f620a1\",\"dweb:/ipfs/Qmanoi2CDi9MwkP44HosagvewfMEvCMN1YthGRmCexVjwY\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"AccessControlUpgradeable":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da\",\"dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","proxiableUUID()":"52d1902d","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol":{"ERC1155Upgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol\":\"ERC1155Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol\":{\"keccak256\":\"0x3a0d63838dff3fd8b77c8c44ecf37cc39b15f26fd5269da3b690879478fa3cf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://502cec8d2ef132cce69840b1c2aef2209092554292a50d628b27477ef7a441ca\",\"dweb:/ipfs/QmaSxcHDndhVuWm4E6LcSMRkhFYsMXxrgLWMLCQnyG3qHr\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x1d7a05b3219532ea5ece50a80cf390cac9109dc74e07763adfa463ab5a3af0dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://687e2ec572d0e63827bb0025b91f2246be4c938f830ef4b4c288ee2e3727d5ca\",\"dweb:/ipfs/QmZXWSAQ9ftVrqNEa5ZTpN4wxvzCgsSW12cgiSRkrLTpQ8\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x22f099c02c252dd1f6ddc464916ce683294a63b23b3c6ee3d290b77398e2474b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82d2ba4b77ecc4f70211e0de1a920e3ea29eb86c3e16ef8f2a7d746c72a97f1e\",\"dweb:/ipfs/QmYBqATARQEnxd33jW6iYCuEPaL6KdYyYSoQrjFXZka3of\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"PausableUpgradeable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"ReentrancyGuardUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf\",\"dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ERC165Upgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"IERC1363":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","approveAndCall(address,uint256)":"3177029f","approveAndCall(address,uint256,bytes)":"cae9ca51","balanceOf(address)":"70a08231","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256)":"1296ee62","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd","transferFromAndCall(address,address,uint256)":"d8fbe994","transferFromAndCall(address,address,uint256,bytes)":"c1d34b89"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"IERC1967":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/proxy/Clones.sol":{"Clones":{"abi":[{"inputs":[],"name":"CloneArgumentsTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220dee6236937bd24844e3184410585e95450cabbdbb75c6c1cb04b7a5fe4de572464736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xE6 0x23 PUSH10 0x37BD24844E3184410585 0xE9 SLOAD POP 0xCA 0xBB 0xDB 0xB7 TLOAD PUSH13 0x1CB04B7A5FE4DE572464736F6C PUSH4 0x4300081B STOP CALLER ","sourceMap":"817:11023:19:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220dee6236937bd24844e3184410585e95450cabbdbb75c6c1cb04b7a5fe4de572464736f6c634300081b0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xE6 0x23 PUSH10 0x37BD24844E3184410585 0xE9 SLOAD POP 0xCA 0xBB 0xDB 0xB7 TLOAD PUSH13 0x1CB04B7A5FE4DE572464736F6C PUSH4 0x4300081B STOP CALLER ","sourceMap":"817:11023:19:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CloneArgumentsTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for deploying minimal proxy contracts, also known as \\\"clones\\\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Clones.sol\":\"Clones\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x7162fa3c6971aa6f0a70160fed018edbb8b1db3af9b034ef3f7c224c3bdb7431\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f212d25e8f357209838ad7ce8ebc89de79906d9fe580566962e889ecb090e6b4\",\"dweb:/ipfs/QmdbLuLwX24VB1Gdrabke584WyaUkuJSWuDzzuRgqAMFge\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ERC1967Utils":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"ERC1967InvalidAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"beacon","type":"address"}],"name":"ERC1967InvalidBeacon","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220ab0f3e8acf8732a0a6324e97166a7f24220df7944e3a52fa58ae762757d2c88c64736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0xF RETURNDATACOPY DUP11 0xCF DUP8 ORIGIN LOG0 0xA6 ORIGIN 0x4E SWAP8 AND PUSH11 0x7F24220DF7944E3A52FA58 0xAE PUSH23 0x2757D2C88C64736F6C634300081B003300000000000000 ","sourceMap":"496:5741:20:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220ab0f3e8acf8732a0a6324e97166a7f24220df7944e3a52fa58ae762757d2c88c64736f6c634300081b0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0xF RETURNDATACOPY DUP11 0xCF DUP8 ORIGIN LOG0 0xA6 ORIGIN 0x4E SWAP8 AND PUSH11 0x7F24220DF7944E3A52FA58 0xAE PUSH23 0x2757D2C88C64736F6C634300081B003300000000000000 ","sourceMap":"496:5741:20:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"IERC1155":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x1d7a05b3219532ea5ece50a80cf390cac9109dc74e07763adfa463ab5a3af0dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://687e2ec572d0e63827bb0025b91f2246be4c938f830ef4b4c288ee2e3727d5ca\",\"dweb:/ipfs/QmZXWSAQ9ftVrqNEa5ZTpN4wxvzCgsSW12cgiSRkrLTpQ8\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC-1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC-1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"IERC1155MetadataURI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x1d7a05b3219532ea5ece50a80cf390cac9109dc74e07763adfa463ab5a3af0dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://687e2ec572d0e63827bb0025b91f2246be4c938f830ef4b4c288ee2e3727d5ca\",\"dweb:/ipfs/QmZXWSAQ9ftVrqNEa5ZTpN4wxvzCgsSW12cgiSRkrLTpQ8\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ERC1155Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122003c825062e860660534c78d31a0fc42e39d73d61c699c2ce46720d2aa44bb14164736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB 0xC8 0x25 MOD 0x2E DUP7 MOD PUSH1 0x53 0x4C PUSH25 0xD31A0FC42E39D73D61C699C2CE46720D2AA44BB14164736F6C PUSH4 0x4300081B STOP CALLER ","sourceMap":"439:3110:25:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122003c825062e860660534c78d31a0fc42e39d73d61c699c2ce46720d2aa44bb14164736f6c634300081b0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB 0xC8 0x25 MOD 0x2E DUP7 MOD PUSH1 0x53 0x4C PUSH25 0xD31A0FC42E39D73D61C699C2CE46720D2AA44BB14164736F6C PUSH4 0x4300081B STOP CALLER ","sourceMap":"439:3110:25:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-1155 utility functions. See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":\"ERC1155Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x22f099c02c252dd1f6ddc464916ce683294a63b23b3c6ee3d290b77398e2474b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82d2ba4b77ecc4f70211e0de1a920e3ea29eb86c3e16ef8f2a7d746c72a97f1e\",\"dweb:/ipfs/QmYBqATARQEnxd33jW6iYCuEPaL6KdYyYSoQrjFXZka3of\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220cd4cd02609b3057743ed859bd4b0159b29f9cdcc4bca700f1a375a9510f9bd1564736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0x4C 0xD0 0x26 MULMOD 0xB3 SDIV PUSH24 0x43ED859BD4B0159B29F9CDCC4BCA700F1A375A9510F9BD15 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"698:9376:27:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220cd4cd02609b3057743ed859bd4b0159b29f9cdcc4bca700f1a375a9510f9bd1564736f6c634300081b0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0x4C 0xD0 0x26 MULMOD 0xB3 SDIV PUSH24 0x43ED859BD4B0159B29F9CDCC4BCA700F1A375A9510F9BD15 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"698:9376:27:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220a4404e2c0fffa88bf5aea155f8cb795ee28001d6ab56d570d4d4fa3e1212611464736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 BLOCKHASH 0x4E 0x2C 0xF SELFDESTRUCT 0xA8 DUP12 CREATE2 0xAE LOG1 SSTORE 0xF8 0xCB PUSH26 0x5EE28001D6AB56D570D4D4FA3E1212611464736F6C634300081B STOP CALLER ","sourceMap":"233:5815:28:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220a4404e2c0fffa88bf5aea155f8cb795ee28001d6ab56d570d4d4fa3e1212611464736f6c634300081b0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 BLOCKHASH 0x4E 0x2C 0xF SELFDESTRUCT 0xA8 DUP12 CREATE2 0xAE LOG1 SSTORE 0xF8 0xCB PUSH26 0x5EE28001D6AB56D570D4D4FA3E1212611464736F6C634300081B STOP CALLER ","sourceMap":"233:5815:28:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Arrays.sol":{"Arrays":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212206e1a0317ab784890e4183cfac2cf599e16bc8be0ed74757cde7504ce2322d85564736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x1A0317AB784890E4183CFAC2CF599E AND 0xBC DUP12 0xE0 0xED PUSH21 0x757CDE7504CE2322D85564736F6C634300081B0033 ","sourceMap":"459:17878:29:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212206e1a0317ab784890e4183cfac2cf599e16bc8be0ed74757cde7504ce2322d85564736f6c634300081b0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x1A0317AB784890E4183CFAC2CF599E AND 0xBC DUP12 0xE0 0xED PUSH21 0x757CDE7504CE2322D85564736F6C634300081B0033 ","sourceMap":"459:17878:29:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Comparators.sol":{"Comparators":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220ae2526edf2e484d72220e5166192877dacf5540312f704ddbf0d5a905c5ccb0864736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0x25 0x26 0xED CALLCODE 0xE4 DUP5 0xD7 0x22 KECCAK256 0xE5 AND PUSH2 0x9287 PUSH30 0xACF5540312F704DDBF0D5A905C5CCB0864736F6C634300081B0033000000 ","sourceMap":"224:218:30:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220ae2526edf2e484d72220e5166192877dacf5540312f704ddbf0d5a905c5ccb0864736f6c634300081b0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0x25 0x26 0xED CALLCODE 0xE4 DUP5 0xD7 0x22 KECCAK256 0xE5 AND PUSH2 0x9287 PUSH30 0xACF5540312F704DDBF0D5A905C5CCB0864736F6C634300081B0033000000 ","sourceMap":"224:218:30:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to compare values. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Comparators.sol\":\"Comparators\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Create2.sol":{"Create2":{"abi":[{"inputs":[],"name":"Create2EmptyBytecode","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212205b41f9e9275126d4a94eebb8f6fb1839623d33a70f43bb408c708104b2369d4f64736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST COINBASE 0xF9 0xE9 0x27 MLOAD 0x26 0xD4 0xA9 0x4E 0xEB 0xB8 0xF6 0xFB XOR CODECOPY PUSH3 0x3D33A7 0xF NUMBER 0xBB BLOCKHASH DUP13 PUSH17 0x8104B2369D4F64736F6C634300081B0033 ","sourceMap":"533:3932:31:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212205b41f9e9275126d4a94eebb8f6fb1839623d33a70f43bb408c708104b2369d4f64736f6c634300081b0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST COINBASE 0xF9 0xE9 0x27 MLOAD 0x26 0xD4 0xA9 0x4E 0xEB 0xB8 0xF6 0xFB XOR CODECOPY PUSH3 0x3D33A7 0xF NUMBER 0xBB BLOCKHASH DUP13 PUSH17 0x8104B2369D4F64736F6C634300081B0033 ","sourceMap":"533:3932:31:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Create2EmptyBytecode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.\",\"errors\":{\"Create2EmptyBytecode()\":[{\"details\":\"There's no code to deploy.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Create2.sol\":\"Create2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Errors.sol":{"Errors":{"abi":[{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"MissingPrecompile","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212204128d9bbfe4f25d5dc1486ca48df36aebfdcdfef26515cbfa20ef94a5948d10b64736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0x28 0xD9 0xBB INVALID 0x4F 0x25 0xD5 0xDC EQ DUP7 0xCA BASEFEE 0xDF CALLDATASIZE 0xAE 0xBF 0xDC 0xDF 0xEF 0x26 MLOAD TLOAD 0xBF LOG2 0xE 0xF9 BLOBBASEFEE MSIZE BASEFEE 0xD1 SIGNEXTEND PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"411:484:32:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212204128d9bbfe4f25d5dc1486ca48df36aebfdcdfef26515cbfa20ef94a5948d10b64736f6c634300081b0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0x28 0xD9 0xBB INVALID 0x4F 0x25 0xD5 0xDC EQ DUP7 0xCA BASEFEE 0xDF CALLDATASIZE 0xAE 0xBF 0xDC 0xDF 0xEF 0x26 MLOAD TLOAD 0xBF LOG2 0xE 0xF9 BLOBBASEFEE MSIZE BASEFEE 0xD1 SIGNEXTEND PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"411:484:32:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220373b6658416fa67f587bd31b0fda24785851a27822b133650316753c7967f10a64736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY EXTCODESIZE PUSH7 0x58416FA67F587B 0xD3 SHL 0xF 0xDA 0x24 PUSH25 0x5851A27822B133650316753C7967F10A64736F6C634300081B STOP CALLER ","sourceMap":"657:1315:33:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220373b6658416fa67f587bd31b0fda24785851a27822b133650316753c7967f10a64736f6c634300081b0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY EXTCODESIZE PUSH7 0x58416FA67F587B 0xD3 SHL 0xF 0xDA 0x24 PUSH25 0x5851A27822B133650316753C7967F10A64736F6C634300081B STOP CALLER ","sourceMap":"657:1315:33:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"SlotDerivation":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220a67a23352a27b6b560fcd95699686bb9c0f10c5ecf9de642b617923c6690137664736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 PUSH27 0x23352A27B6B560FCD95699686BB9C0F10C5ECF9DE642B617923C66 SWAP1 SGT PUSH23 0x64736F6C634300081B0033000000000000000000000000 ","sourceMap":"1599:3723:34:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220a67a23352a27b6b560fcd95699686bb9c0f10c5ecf9de642b617923c6690137664736f6c634300081b0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 PUSH27 0x23352A27B6B560FCD95699686BB9C0F10C5ECF9DE642B617923C66 SWAP1 SGT PUSH23 0x64736F6C634300081B0033000000000000000000000000 ","sourceMap":"1599:3723:34:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for computing storage (and transient storage) locations from namespaces and deriving slots corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by the solidity language / compiler. See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.]. Example usage: ```solidity contract Example {     // Add the library methods     using StorageSlot for bytes32;     using SlotDerivation for bytes32;     // Declare a namespace     string private constant _NAMESPACE = \\\"<namespace>\\\"; // eg. OpenZeppelin.Slot     function setValueInNamespace(uint256 key, address newValue) internal {         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;     }     function getValueInNamespace(uint256 key) internal view returns (address) {         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;     } } ``` TIP: Consider using this library along with {StorageSlot}. NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking upgrade safety will ignore the slots accessed through this library. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":\"SlotDerivation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122026c44db60a74befea2ffa47b111b90f5693c749f869a86e412c4e3604debc3b064736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xC4 0x4D 0xB6 EXP PUSH21 0xBEFEA2FFA47B111B90F5693C749F869A86E412C4E3 PUSH1 0x4D 0xEB 0xC3 0xB0 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"1407:2774:35:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122026c44db60a74befea2ffa47b111b90f5693c749f869a86e412c4e3604debc3b064736f6c634300081b0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xC4 0x4D 0xB6 EXP PUSH21 0xBEFEA2FFA47B111B90F5693C749F869A86E412C4E3 PUSH1 0x4D 0xEB 0xC3 0xB0 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"1407:2774:35:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220c1e7ab00116aff9adfc3e50a4ef6d2d191c241645b2b31f90f137de45a3e1d2864736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 0xE7 0xAB STOP GT PUSH11 0xFF9ADFC3E50A4EF6D2D191 0xC2 COINBASE PUSH5 0x5B2B31F90F SGT PUSH30 0xE45A3E1D2864736F6C634300081B00330000000000000000000000000000 ","sourceMap":"297:18980:36:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220c1e7ab00116aff9adfc3e50a4ef6d2d191c241645b2b31f90f137de45a3e1d2864736f6c634300081b0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 0xE7 0xAB STOP GT PUSH11 0xFF9ADFC3E50A4EF6D2D191 0xC2 COINBASE PUSH5 0x5B2B31F90F SGT PUSH30 0xE45A3E1D2864736F6C634300081B00330000000000000000000000000000 ","sourceMap":"297:18980:36:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220d63bbf7d017db8eedbf70fc66a83ae44728e4d57b4cb97fd130f60df38b9b2d764736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 EXTCODESIZE 0xBF PUSH30 0x17DB8EEDBF70FC66A83AE44728E4D57B4CB97FD130F60DF38B9B2D76473 PUSH16 0x6C634300081B00330000000000000000 ","sourceMap":"281:31863:38:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220d63bbf7d017db8eedbf70fc66a83ae44728e4d57b4cb97fd130f60df38b9b2d764736f6c634300081b0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 EXTCODESIZE 0xBF PUSH30 0x17DB8EEDBF70FC66A83AE44728E4D57B4CB97FD130F60DF38B9B2D76473 PUSH16 0x6C634300081B00330000000000000000 ","sourceMap":"281:31863:38:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220f989b9f7ecc8b58b54c4c9c4a5abc2f90b9924b22763f537486185cc903d0d8964736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 DUP10 0xB9 0xF7 0xEC 0xC8 0xB5 DUP12 SLOAD 0xC4 0xC9 0xC4 0xA5 0xAB 0xC2 0xF9 SIGNEXTEND SWAP10 0x24 0xB2 0x27 PUSH4 0xF5374861 DUP6 0xCC SWAP1 RETURNDATASIZE 0xD DUP10 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"769:34173:39:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220f989b9f7ecc8b58b54c4c9c4a5abc2f90b9924b22763f537486185cc903d0d8964736f6c634300081b0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 DUP10 0xB9 0xF7 0xEC 0xC8 0xB5 DUP12 SLOAD 0xC4 0xC9 0xC4 0xA5 0xAB 0xC2 0xF9 SIGNEXTEND SWAP10 0x24 0xB2 0x27 PUSH4 0xF5374861 DUP6 0xCC SWAP1 RETURNDATASIZE 0xD DUP10 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"769:34173:39:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212201a35a282a1ec24fc1605e35a0b72678cbe82ea84872194e77d3918c5c3ecebf464736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE CALLDATALOAD LOG2 DUP3 LOG1 0xEC 0x24 0xFC AND SDIV 0xE3 GAS SIGNEXTEND PUSH19 0x678CBE82EA84872194E77D3918C5C3ECEBF464 PUSH20 0x6F6C634300081B00330000000000000000000000 ","sourceMap":"258:2354:40:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212201a35a282a1ec24fc1605e35a0b72678cbe82ea84872194e77d3918c5c3ecebf464736f6c634300081b0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE CALLDATALOAD LOG2 DUP3 LOG1 0xEC 0x24 0xFC AND SDIV 0xE3 GAS SIGNEXTEND PUSH19 0x678CBE82EA84872194E77D3918C5C3ECEBF464 PUSH20 0x6F6C634300081B00330000000000000000000000 ","sourceMap":"258:2354:40:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/ProductTokenUpgradeable.sol":{"ProductTokenUpgradeable":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"newUri","type":"string"}],"name":"BaseURIUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"uint256","name":"productId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ProductBurned","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"productId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ProductMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UPGRADER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"productId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getProductIds","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"baseUri","type":"string"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"productId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"productId","type":"uint256"}],"name":"productSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"newUri","type":"string"}],"name":"setBaseURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a080604052346100ea57306080527ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460ff8160401c166100d9576002600160401b03196001600160401b03821601610073575b6040516129e290816100f08239608051818181610a8d0152610bbf0152f35b6001600160401b0319166001600160401b039081177ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005581527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a13880610054565b63f92ee8a960e01b60005260046000fd5b600080fdfe6080604052600436101561001257600080fd5b60003560e01c8062fdd58e146101a657806301ffc9a7146101a15780630e89341c1461019c578063156e29f614610197578063248a9ca3146101925780632eb2c2d61461018d5780632f2ff15d1461018857806336568abe1461018357806347428e7b1461017e5780634e1273f4146101795780634f1ef2861461017457806352d1902d1461016f57806355f804b31461016a57806391d1485414610165578063a217fddf14610160578063a22cb4651461015b578063ad3cb1cc14610156578063d539139314610151578063d547741f1461014c578063e985e9c514610147578063ef8593e714610142578063f242432a1461013d578063f5298aca14610138578063f62d1888146101335763f72c0d8b1461012e57600080fd5b611378565b61120f565b611141565b611045565b610ff4565b610fc3565b610f92565b610f57565b610f10565b610e50565b610e34565b610dd4565b610c40565b610bac565b610a4f565b61099c565b610919565b61088e565b610858565b6107cc565b61068e565b610536565b610353565b61026e565b6101f0565b600435906001600160a01b03821682036101c157565b600080fd5b602435906001600160a01b03821682036101c157565b35906001600160a01b03821682036101c157565b346101c15760403660031901126101c157602061025361020e6101ab565b6024356000527f88be536d5240c274a3b1d3a1be54482fd9caa294f08c62a7cde569f49a3c4500835260406000209060018060a01b0316600052602052604060002090565b54604051908152f35b6001600160e01b03198116036101c157565b346101c15760203660031901126101c15760043561028b8161025c565b63ffffffff60e01b16637965db0b60e01b81149081156102b4575b506040519015158152602090f35b636cdb3d1360e11b8114915081156102e6575b81156102d5575b50386102a6565b6301ffc9a760e01b149050386102ce565b6303a24d0760e21b811491506102c7565b60005b83811061030a5750506000910152565b81810151838201526020016102fa565b90602091610333815180928185528580860191016102f7565b601f01601f1916010190565b90602061035092818152019061031a565b90565b346101c15760203660031901126101c15760006004358072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8110156104e9575b806d04ee2d6d415b85acef8100000000600a9210156104cd575b662386f26fc100008110156104b8575b6305f5e1008110156104a6575b612710811015610496575b6064811015610487575b101561047c575b61041960216103ed60018501611b7a565b938401015b60001901916f181899199a1a9b1b9c1cb0b131b232b360811b600a82061a8353600a900490565b90811561042957610419906103f2565b6040516104789061046c8161045e61044d88610447602085016114a0565b90611529565b64173539b7b760d91b815260050190565b03601f1981018352826106ca565b6040519182918261033f565b0390f35b6001909101906103dc565b600290606490049301926103d5565b60049061271090049301926103cb565b6008906305f5e10090049301926103c0565b601090662386f26fc1000090049301926103b3565b6020906d04ee2d6d415b85acef810000000090049301926103a3565b506040915072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8104610389565b60609060031901126101c1576004356001600160a01b03811681036101c157906024359060443590565b346101c1576105443661050c565b909161054e611bac565b610559831515611540565b610564821515611581565b82600052600260205260ff60406000205416156105f4575b6105ef7f1ace3364065011f2a2f041ccf777c9f5394104fb5c15ec40e2ed753531e33b21916105b5856000526000602052604060002090565b6105c08582546115ea565b90556105d56105cd610efb565b858784611d2d565b6040519384526001600160a01b0316929081906020820190565b0390a3005b600154600160401b811015610689576001810180600155811015610684577fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60183905560008381526002602052604090207f1ace3364065011f2a2f041ccf777c9f5394104fb5c15ec40e2ed753531e33b21916105ef9161067c90805460ff19166001179055565b91505061057c565b6115be565b6106b4565b346101c15760203660031901126101c15760206106ac6004356115fc565b604051908152f35b634e487b7160e01b600052604160045260246000fd5b90601f801991011681019081106001600160401b0382111761068957604052565b6001600160401b0381116106895760051b60200190565b9080601f830112156101c1578135610719816106eb565b9261072760405194856106ca565b81845260208085019260051b8201019283116101c157602001905b82821061074f5750505090565b8135815260209182019101610742565b6001600160401b03811161068957601f01601f191660200190565b9291926107868261075f565b9161079460405193846106ca565b8294818452818301116101c1578281602093846000960137010152565b9080601f830112156101c1578160206103509335910161077a565b346101c15760a03660031901126101c1576107e56101ab565b6107ed6101c6565b906044356001600160401b0381116101c15761080d903690600401610702565b6064356001600160401b0381116101c15761082c903690600401610702565b90608435936001600160401b0385116101c1576108506108569536906004016107b1565b9361161d565b005b346101c15760403660031901126101c1576108566004356108776101c6565b90610889610884826115fc565b611ce3565b6120b0565b346101c15760403660031901126101c1576004356108aa6101c6565b336001600160a01b038216036108c3576108569161214c565b63334bd91960e11b60005260046000fd5b906020808351928381520192019060005b8181106108f25750505090565b82518452602093840193909201916001016108e5565b9060206103509281815201906108d4565b346101c15760003660031901126101c15760405180602060015491828152019060016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf69060005b818110610986576104788561097a818703826106ca565b60405191829182610908565b8254845260209093019260019283019201610963565b346101c15760403660031901126101c1576004356001600160401b0381116101c157366023820112156101c1578060040135906109d8826106eb565b916109e660405193846106ca565b8083526024602084019160051b830101913683116101c157602401905b828210610a3757836024356001600160401b0381116101c15761047891610a3161097a923690600401610702565b90611684565b60208091610a44846101dc565b815201910190610a03565b60403660031901126101c157610a636101ab565b6024356001600160401b0381116101c157610a829036906004016107b1565b906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016308114908115610b89575b50610b7857610ac5611c1e565b6040516352d1902d60e01b8152916020836004816001600160a01b0386165afa60009381610b47575b50610b1157634c9c8ce360e01b6000526001600160a01b03821660045260246000fd5b9060008051602061292d8339815191528303610b3157610856925061252e565b632a87526960e21b600052600483905260246000fd5b610b6a91945060203d602011610b71575b610b6281836106ca565b8101906121f1565b9238610aee565b503d610b58565b63703e46dd60e11b60005260046000fd5b60008051602061292d833981519152546001600160a01b03161415905038610ab8565b346101c15760003660031901126101c1577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003610b7857602060405160008051602061292d8339815191528152f35b60206003198201126101c157600435906001600160401b0382116101c157806023830112156101c1578160246103509360040135910161077a565b346101c157610c4e36610c05565b610c56611c90565b805115610d9c5780516001600160401b03811161068957610c8181610c7c600354611466565b61171c565b6020601f8211600114610cf45791610cd582610ce4937f6741b2fc379fad678116fe3d4d4b9a1a184ab53ba36b86ad0fa66340b1ab41ad95600091610ce9575b508160011b916000199060031b1c19161790565b6003556040519182918261033f565b0390a1005b905083015138610cc1565b6003600052601f198216907fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9160005b818110610d845750927f6741b2fc379fad678116fe3d4d4b9a1a184ab53ba36b86ad0fa66340b1ab41ad949260019282610ce49610610d6b575b5050811b0160035561046c565b84015160001960f88460031b161c191690553880610d5e565b91926020600181928689015181550194019201610d24565b60405162461bcd60e51b815260206004820152601060248201526f496e76616c696420626173652055524960801b6044820152606490fd5b346101c15760403660031901126101c157602060ff610e28600435610df76101c6565b9060005260008051602061294d833981519152845260406000209060018060a01b0316600052602052604060002090565b54166040519015158152f35b346101c15760003660031901126101c157602060405160008152f35b346101c15760403660031901126101c157610e696101ab565b6024358015158091036101c1576001600160a01b038216918215610ee657610eab90610e94336113e2565b9060018060a01b0316600052602052604060002090565b60ff1981541660ff83161790556040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b62ced3e160e81b600052600060045260246000fd5b60405190610f0a6020836106ca565b60008252565b346101c15760003660031901126101c1576104786040805190610f3381836106ca565b60058252640352e302e360dc1b60208301525191829160208352602083019061031a565b346101c15760003660031901126101c15760206040517f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68152f35b346101c15760403660031901126101c157610856600435610fb16101c6565b90610fbe610884826115fc565b61214c565b346101c15760403660031901126101c157602060ff610e28610fe36101ab565b610e94610fee6101c6565b916113e2565b346101c15760203660031901126101c157600435611013811515611540565b80600052600260205261102d60ff6040600020541661191d565b60005260006020526020604060002054604051908152f35b346101c15760a03660031901126101c15761105e6101ab565b6110666101c6565b60443590606435926084356001600160401b0381116101c15761108d9036906004016107b1565b926001600160a01b0382163381141580611130575b611118576001600160a01b0384161561110257156110ed57610856946110e560405192600184526020840152604083019160018352606084015260808301604052565b92909161236e565b626a0d4560e21b600052600060045260246000fd5b632bfa23e760e11b600052600060045260246000fd5b63711bec9160e11b6000523360045260245260446000fd5b5061113b3384611909565b156110a2565b346101c1576105ef7fd215b5584879caeecb087ed93b0d4013d83ced647fd0a905f4f54a948cf0eb8d6111733661050c565b9291611180949194611bac565b61118b851515611540565b611196841515611581565b8460005260026020526111b060ff6040600020541661191d565b8460005260006020526111ca604060002054851115611969565b6111e3846111db83610e94896113b3565b5410156119b5565b6111f7856000526000602052604060002090565b6112028582546119f8565b90556105d5848683612200565b346101c15761121d36610c05565b60008051602061296d83398151915254906001600160401b0361124f60ff604085901c1615936001600160401b031690565b1680159081611370575b6001149081611366575b15908161135d575b5061134c576112b090826112a760016001600160401b031960008051602061296d83398151915254161760008051602061296d83398151915255565b61131557611a05565b6112b657005b6112e260ff60401b1960008051602061296d833981519152541660008051602061296d83398151915255565b604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2908060208101610ce4565b611347600160401b60ff60401b1960008051602061296d83398151915254161760008051602061296d83398151915255565b611a05565b63f92ee8a960e01b60005260046000fd5b9050153861126b565b303b159150611263565b839150611259565b346101c15760003660031901126101c15760206040517f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e38152f35b6000527f88be536d5240c274a3b1d3a1be54482fd9caa294f08c62a7cde569f49a3c4500602052604060002090565b6001600160a01b031660009081527f88be536d5240c274a3b1d3a1be54482fd9caa294f08c62a7cde569f49a3c45016020526040902090565b611462916000527f88be536d5240c274a3b1d3a1be54482fd9caa294f08c62a7cde569f49a3c450060205260406000209060018060a01b0316600052602052604060002090565b5490565b90600182811c92168015611496575b602083101461148057565b634e487b7160e01b600052602260045260246000fd5b91607f1691611475565b600354600092916114b082611466565b916001811690811561151757506001146114c8575050565b6003600090815292935090917fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8382106115035750500190565b6001816020925484860152019101906114f6565b60ff1916825250811515909102019150565b9061153c602092828151948592016102f7565b0190565b1561154757565b60405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c1c9bd91d58dd08125160721b6044820152606490fd5b1561158857565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a5908185b5bdd5b9d60921b6044820152606490fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b919082018092116115f757565b6115d4565b60005260008051602061294d83398151915260205260016040600020015490565b939291906001600160a01b0385163381141580611658575b611118576001600160a01b0382161561110257156110ed576116569461236e565b565b5060ff61166833610e94896113e2565b541615611635565b80518210156106845760209160051b010190565b919091805183518082036117055750508051906116a0826106eb565b916116ae60405193846106ca565b8083526116bd601f19916106eb565b0136602084013760005b81518110156116fe57806116ed60019260051b602080828701015191890101519061141b565b6116f78286611670565b52016116c7565b5090925050565b635b05999160e01b60005260045260245260446000fd5b601f8111611728575050565b60036000526020600020906020601f840160051c83019310611765575b601f0160051c01905b818110611759575050565b6000815560010161174e565b9091508190611745565b601f811161177b575050565b60008051602061298d8339815191526000526020600020906020601f840160051c830193106117c5575b601f0160051c01905b8181106117b9575050565b600081556001016117ae565b90915081906117a5565b601f82116117dc57505050565b6000526020600020906020601f840160051c83019310611817575b601f0160051c01905b81811061180b575050565b60008155600101611800565b90915081906117f7565b9081516001600160401b0381116106895761184881611841600354611466565b60036117cf565b602092601f821160011461188a5761187a9293829160009261187f575b50508160011b916000199060031b1c19161790565b600355565b015190503880611865565b6003600052601f198216937fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9160005b8681106118f157508360019596106118d8575b505050811b01600355565b015160001960f88460031b161c191690553880806118cd565b919260206001819286850151815501940192016118ba565b60ff91610e94611918926113e2565b541690565b1561192457565b60405162461bcd60e51b815260206004820152601960248201527f50726f6475637420494420646f6573206e6f74206578697374000000000000006044820152606490fd5b1561197057565b60405162461bcd60e51b815260206004820152601a60248201527f4275726e20616d6f756e74206578636565647320737570706c790000000000006044820152606490fd5b156119bc57565b60405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606490fd5b919082039182116115f757565b6040516020611a1481836106ca565b60008252611a206125d2565b611a286125d2565b8151916001600160401b03831161068957611a5a83611a5560008051602061298d83398151915254611466565b61176f565b81601f8411600114611ad457509180611a8e92611ab4959460009261187f5750508160011b916000199060031b1c19161790565b60008051602061298d833981519152555b611aa76125d2565b611aaf6125d2565b611821565b611abd33611e86565b50611ac733611f26565b50611ad133611feb565b50565b60008051602061298d8339815191526000529190601f1984167ff429cb5e2ec84cbb765e76b31964a56ccde03e7a6122d6cc4afb19edc55edeed936000905b828210611b62575050916001939185611ab497969410611b49575b505050811b0160008051602061298d83398151915255611a9f565b015160001960f88460031b161c19169055388080611b2e565b80600186978294978701518155019601940190611b13565b90611b848261075f565b611b9160405191826106ca565b8281528092611ba2601f199161075f565b0190602036910137565b3360009081527f549fe2656c81d2947b3b913f0a53b9ea86c71e049f3a1b8aa23c09a8a05cb8d4602052604090205460ff1615611be557565b63e2517d3f60e01b600052336004527f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a660245260446000fd5b3360009081527fab71e3f32666744d246edff3f96e4bdafee2e9867098cdd118a979a7464786a8602052604090205460ff1615611c5757565b63e2517d3f60e01b600052336004527f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e360245260446000fd5b3360009081527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d602052604090205460ff1615611cc957565b63e2517d3f60e01b60005233600452600060245260446000fd5b600081815260008051602061294d8339815191526020908152604080832033845290915290205460ff1615611d155750565b63e2517d3f60e01b6000523360045260245260446000fd5b6001600160a01b0381169392909190841561110257611d6960405192600184526020840152604083019160018352606084015260808301604052565b928151845190818103611e6f57505060005b8251811015611db8578060019160051b611db0611da887610e94602080868b010151958c010151946113b3565b9182546115ea565b905501611d7b565b509291936001825114600014611e335760208281015184820151604080519283529282015260009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629190a45b8051600103611e27579060208061165695930151910151916000336127f2565b611656936000336126bd565b60006040517f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb339180611e67888883612600565b0390a4611e07565b635b05999160e01b60005260045260245260446000fd5b6001600160a01b03811660009081527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d602052604090205460ff16611f20576001600160a01b031660008181527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d60205260408120805460ff1916600117905533919060008051602061290d8339815191528180a4600190565b50600090565b6001600160a01b03811660009081527f549fe2656c81d2947b3b913f0a53b9ea86c71e049f3a1b8aa23c09a8a05cb8d4602052604090205460ff16611f20576001600160a01b03811660009081527f549fe2656c81d2947b3b913f0a53b9ea86c71e049f3a1b8aa23c09a8a05cb8d460205260409020805460ff1916600117905533906001600160a01b03167f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a660008051602061290d833981519152600080a4600190565b6001600160a01b03811660009081527fab71e3f32666744d246edff3f96e4bdafee2e9867098cdd118a979a7464786a8602052604090205460ff16611f20576001600160a01b03811660009081527fab71e3f32666744d246edff3f96e4bdafee2e9867098cdd118a979a7464786a860205260409020805460ff1916600117905533906001600160a01b03167f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e360008051602061290d833981519152600080a4600190565b600081815260008051602061294d833981519152602090815260408083206001600160a01b038616845290915290205460ff1661214557600081815260008051602061294d833981519152602090815260408083206001600160a01b03861684529091529020805460ff1916600117905533916001600160a01b03169060008051602061290d833981519152600080a4600190565b5050600090565b600081815260008051602061294d833981519152602090815260408083206001600160a01b038616845290915290205460ff161561214557600081815260008051602061294d833981519152602090815260408083206001600160a01b03861684529091529020805460ff1916905533916001600160a01b0316907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b600080a4600190565b908160209103126101c1575190565b926001600160a01b0384169290919083156110ed5761223c60405192600184526020840152604083019160018352606084015260808301604052565b9190602091600060405161225085826106ca565b528151845190818103611e6f57505060005b82518110156122e2578060051b84808286010151918701015161228889610e94846113b3565b548181106122ab5789610e9460019594936122a49303936113b3565b5501612262565b6040516303dee4c560e01b81526001600160a01b038b16600482015260248101919091526044810182905260648101839052608490fd5b5094509091600093926001835114851461233a579182015191015160408051928352602083019190915233917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291819081015b0390a4565b506123357f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb91604051918291339583612600565b9493929091938451825190818103611e6f5750506001600160a01b0386811695861515959185168015159391929060005b8451811015612460578060051b90898988602080868b010151958c010151926123ef575b936001946123d5575b5050500161239f565b6123e591610e94611da8926113b3565b90553889816123cc565b505090916124008d610e94836113b3565b54828110612429578291898f612420600197968f950391610e94856113b3565b559094506123c3565b6040516303dee4c560e01b81526001600160a01b038f16600482015260248101919091526044810183905260648101829052608490fd5b5091989593929790965060018851146000146124f45760208881015186820151604080519283529282015233917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291a45b6124bd575b5050505050565b84516001036124e3576020806124d996015192015192336127f2565b38808080806124b6565b6124ef949192336126bd565b6124d9565b6040517f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb339180612526898d83612600565b0390a46124b1565b90813b156125b05760008051602061292d83398151915280546001600160a01b0319166001600160a01b0384169081179091557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a280511561259657611ad191612892565b50503461259f57565b63b398979f60e01b60005260046000fd5b50634c9c8ce360e01b60009081526001600160a01b0391909116600452602490fd5b60ff60008051602061296d8339815191525460401c16156125ef57565b631afcd79f60e31b60005260046000fd5b9091612617610350936040845260408401906108d4565b9160208184039101526108d4565b908160209103126101c157516103508161025c565b6001600160a01b0391821681529116602082015260a060408201819052610350949193919261267f929161267191908601906108d4565b9084820360608601526108d4565b91608081840391015261031a565b3d156126b8573d9061269e8261075f565b916126ac60405193846106ca565b82523d6000602084013e565b606090565b9091949293853b6126d1575b505050505050565b6020936126f391604051968795869563bc197c8160e01b87526004870161263a565b038160006001600160a01b0387165af160009181612788575b50612748575061271a61268d565b805191908261274157632bfa23e760e11b6000526001600160a01b03821660045260246000fd5b9050602001fd5b6001600160e01b0319166343e6837f60e01b0161276b57503880808080806126c9565b632bfa23e760e11b6000526001600160a01b031660045260246000fd5b6127ab91925060203d6020116127b2575b6127a381836106ca565b810190612625565b903861270c565b503d612799565b6001600160a01b039182168152911660208201526040810191909152606081019190915260a0608082018190526103509291019061031a565b9091949293853b61280557505050505050565b60209361282791604051968795869563f23a6e6160e01b8752600487016127b9565b038160006001600160a01b0387165af160009181612871575b5061284e575061271a61268d565b6001600160e01b031916630dc5919f60e01b0161276b57503880808080806126c9565b61288b91925060203d6020116127b2576127a381836106ca565b9038612840565b60008061035093602081519101845af46128aa61268d565b91906128d157508051156128c057805190602001fd5b63d6bda27560e01b60005260046000fd5b81511580612903575b6128e2575090565b639996b31560e01b60009081526001600160a01b0391909116600452602490fd5b50803b156128da56fe2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0088be536d5240c274a3b1d3a1be54482fd9caa294f08c62a7cde569f49a3c4502a26469706673582212208e75664aa1d99035665650b3bdc4f98de662bbc8c4777eaf7656f78e37a9da6964736f6c634300081b0033","opcodes":"PUSH1 0xA0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0xEA JUMPI ADDRESS PUSH1 0x80 MSTORE PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0xFF DUP2 PUSH1 0x40 SHR AND PUSH2 0xD9 JUMPI PUSH1 0x2 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND ADD PUSH2 0x73 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29E2 SWAP1 DUP2 PUSH2 0xF0 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0xA8D ADD MSTORE PUSH2 0xBBF ADD MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 OR PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SSTORE DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 SWAP1 LOG1 CODESIZE DUP1 PUSH2 0x54 JUMP JUMPDEST PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xFDD58E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x156E29F6 EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x47428E7B EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0xEF8593E7 EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xF62D1888 EQ PUSH2 0x133 JUMPI PUSH4 0xF72C0D8B EQ PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1378 JUMP JUMPDEST PUSH2 0x120F JUMP JUMPDEST PUSH2 0x1141 JUMP JUMPDEST PUSH2 0x1045 JUMP JUMPDEST PUSH2 0xFF4 JUMP JUMPDEST PUSH2 0xFC3 JUMP JUMPDEST PUSH2 0xF92 JUMP JUMPDEST PUSH2 0xF57 JUMP JUMPDEST PUSH2 0xF10 JUMP JUMPDEST PUSH2 0xE50 JUMP JUMPDEST PUSH2 0xE34 JUMP JUMPDEST PUSH2 0xDD4 JUMP JUMPDEST PUSH2 0xC40 JUMP JUMPDEST PUSH2 0xBAC JUMP JUMPDEST PUSH2 0xA4F JUMP JUMPDEST PUSH2 0x99C JUMP JUMPDEST PUSH2 0x919 JUMP JUMPDEST PUSH2 0x88E JUMP JUMPDEST PUSH2 0x858 JUMP JUMPDEST PUSH2 0x7CC JUMP JUMPDEST PUSH2 0x68E JUMP JUMPDEST PUSH2 0x536 JUMP JUMPDEST PUSH2 0x353 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0x1F0 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1C1 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1C1 JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1C1 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x20 PUSH2 0x253 PUSH2 0x20E PUSH2 0x1AB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x0 MSTORE PUSH32 0x88BE536D5240C274A3B1D3A1BE54482FD9CAA294F08C62A7CDE569F49A3C4500 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND SUB PUSH2 0x1C1 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x28B DUP2 PUSH2 0x25C JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x2B4 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x2E6 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x2D5 JUMPI JUMPDEST POP CODESIZE PUSH2 0x2A6 JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x2CE JUMP JUMPDEST PUSH4 0x3A24D07 PUSH1 0xE2 SHL DUP2 EQ SWAP2 POP PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x30A JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2FA JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x333 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x350 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x31A JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x0 PUSH1 0x4 CALLDATALOAD DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x4E9 JUMPI JUMPDEST DUP1 PUSH14 0x4EE2D6D415B85ACEF8100000000 PUSH1 0xA SWAP3 LT ISZERO PUSH2 0x4CD JUMPI JUMPDEST PUSH7 0x2386F26FC10000 DUP2 LT ISZERO PUSH2 0x4B8 JUMPI JUMPDEST PUSH4 0x5F5E100 DUP2 LT ISZERO PUSH2 0x4A6 JUMPI JUMPDEST PUSH2 0x2710 DUP2 LT ISZERO PUSH2 0x496 JUMPI JUMPDEST PUSH1 0x64 DUP2 LT ISZERO PUSH2 0x487 JUMPI JUMPDEST LT ISZERO PUSH2 0x47C JUMPI JUMPDEST PUSH2 0x419 PUSH1 0x21 PUSH2 0x3ED PUSH1 0x1 DUP6 ADD PUSH2 0x1B7A JUMP JUMPDEST SWAP4 DUP5 ADD ADD JUMPDEST PUSH1 0x0 NOT ADD SWAP2 PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP3 MOD BYTE DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV SWAP1 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x429 JUMPI PUSH2 0x419 SWAP1 PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x478 SWAP1 PUSH2 0x46C DUP2 PUSH2 0x45E PUSH2 0x44D DUP9 PUSH2 0x447 PUSH1 0x20 DUP6 ADD PUSH2 0x14A0 JUMP JUMPDEST SWAP1 PUSH2 0x1529 JUMP JUMPDEST PUSH5 0x173539B7B7 PUSH1 0xD9 SHL DUP2 MSTORE PUSH1 0x5 ADD SWAP1 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x33F JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x2 SWAP1 PUSH1 0x64 SWAP1 DIV SWAP4 ADD SWAP3 PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x4 SWAP1 PUSH2 0x2710 SWAP1 DIV SWAP4 ADD SWAP3 PUSH2 0x3CB JUMP JUMPDEST PUSH1 0x8 SWAP1 PUSH4 0x5F5E100 SWAP1 DIV SWAP4 ADD SWAP3 PUSH2 0x3C0 JUMP JUMPDEST PUSH1 0x10 SWAP1 PUSH7 0x2386F26FC10000 SWAP1 DIV SWAP4 ADD SWAP3 PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH14 0x4EE2D6D415B85ACEF8100000000 SWAP1 DIV SWAP4 ADD SWAP3 PUSH2 0x3A3 JUMP JUMPDEST POP PUSH1 0x40 SWAP2 POP PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP2 DIV PUSH2 0x389 JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1C1 JUMPI SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH2 0x544 CALLDATASIZE PUSH2 0x50C JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x54E PUSH2 0x1BAC JUMP JUMPDEST PUSH2 0x559 DUP4 ISZERO ISZERO PUSH2 0x1540 JUMP JUMPDEST PUSH2 0x564 DUP3 ISZERO ISZERO PUSH2 0x1581 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x5F4 JUMPI JUMPDEST PUSH2 0x5EF PUSH32 0x1ACE3364065011F2A2F041CCF777C9F5394104FB5C15EC40E2ED753531E33B21 SWAP2 PUSH2 0x5B5 DUP6 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x5C0 DUP6 DUP3 SLOAD PUSH2 0x15EA JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x5D5 PUSH2 0x5CD PUSH2 0xEFB JUMP JUMPDEST DUP6 DUP8 DUP5 PUSH2 0x1D2D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG3 STOP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x689 JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x1 SSTORE DUP2 LT ISZERO PUSH2 0x684 JUMPI PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD DUP4 SWAP1 SSTORE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH32 0x1ACE3364065011F2A2F041CCF777C9F5394104FB5C15EC40E2ED753531E33B21 SWAP2 PUSH2 0x5EF SWAP2 PUSH2 0x67C SWAP1 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x57C JUMP JUMPDEST PUSH2 0x15BE JUMP JUMPDEST PUSH2 0x6B4 JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x20 PUSH2 0x6AC PUSH1 0x4 CALLDATALOAD PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x689 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x689 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x1C1 JUMPI DUP2 CALLDATALOAD PUSH2 0x719 DUP2 PUSH2 0x6EB JUMP JUMPDEST SWAP3 PUSH2 0x727 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x6CA JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x1C1 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x74F JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x742 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x689 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x786 DUP3 PUSH2 0x75F JUMP JUMPDEST SWAP2 PUSH2 0x794 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x6CA JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x1C1 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x1C1 JUMPI DUP2 PUSH1 0x20 PUSH2 0x350 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x77A JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0x7E5 PUSH2 0x1AB JUMP JUMPDEST PUSH2 0x7ED PUSH2 0x1C6 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1C1 JUMPI PUSH2 0x80D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x702 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1C1 JUMPI PUSH2 0x82C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x702 JUMP JUMPDEST SWAP1 PUSH1 0x84 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 GT PUSH2 0x1C1 JUMPI PUSH2 0x850 PUSH2 0x856 SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x7B1 JUMP JUMPDEST SWAP4 PUSH2 0x161D JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0x856 PUSH1 0x4 CALLDATALOAD PUSH2 0x877 PUSH2 0x1C6 JUMP JUMPDEST SWAP1 PUSH2 0x889 PUSH2 0x884 DUP3 PUSH2 0x15FC JUMP JUMPDEST PUSH2 0x1CE3 JUMP JUMPDEST PUSH2 0x20B0 JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x8AA PUSH2 0x1C6 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x8C3 JUMPI PUSH2 0x856 SWAP2 PUSH2 0x214C JUMP JUMPDEST PUSH4 0x334BD919 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x8F2 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x8E5 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x350 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x8D4 JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x1 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 PUSH1 0x1 PUSH1 0x0 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x986 JUMPI PUSH2 0x478 DUP6 PUSH2 0x97A DUP2 DUP8 SUB DUP3 PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x908 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x963 JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1C1 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x1C1 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH2 0x9D8 DUP3 PUSH2 0x6EB JUMP JUMPDEST SWAP2 PUSH2 0x9E6 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x6CA JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x24 PUSH1 0x20 DUP5 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x1C1 JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xA37 JUMPI DUP4 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1C1 JUMPI PUSH2 0x478 SWAP2 PUSH2 0xA31 PUSH2 0x97A SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x702 JUMP JUMPDEST SWAP1 PUSH2 0x1684 JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0xA44 DUP5 PUSH2 0x1DC JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0xA63 PUSH2 0x1AB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1C1 JUMPI PUSH2 0xA82 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x7B1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0xB89 JUMPI JUMPDEST POP PUSH2 0xB78 JUMPI PUSH2 0xAC5 PUSH2 0x1C1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 PUSH1 0x20 DUP4 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND GAS STATICCALL PUSH1 0x0 SWAP4 DUP2 PUSH2 0xB47 JUMPI JUMPDEST POP PUSH2 0xB11 JUMPI PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x292D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 SUB PUSH2 0xB31 JUMPI PUSH2 0x856 SWAP3 POP PUSH2 0x252E JUMP JUMPDEST PUSH4 0x2A875269 PUSH1 0xE2 SHL PUSH1 0x0 MSTORE PUSH1 0x4 DUP4 SWAP1 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xB6A SWAP2 SWAP5 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB71 JUMPI JUMPDEST PUSH2 0xB62 DUP2 DUP4 PUSH2 0x6CA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x21F1 JUMP JUMPDEST SWAP3 CODESIZE PUSH2 0xAEE JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xB58 JUMP JUMPDEST PUSH4 0x703E46DD PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x292D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO SWAP1 POP CODESIZE PUSH2 0xAB8 JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0xB78 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x292D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1C1 JUMPI DUP1 PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x1C1 JUMPI DUP2 PUSH1 0x24 PUSH2 0x350 SWAP4 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x77A JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH2 0xC4E CALLDATASIZE PUSH2 0xC05 JUMP JUMPDEST PUSH2 0xC56 PUSH2 0x1C90 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xD9C JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x689 JUMPI PUSH2 0xC81 DUP2 PUSH2 0xC7C PUSH1 0x3 SLOAD PUSH2 0x1466 JUMP JUMPDEST PUSH2 0x171C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0xCF4 JUMPI SWAP2 PUSH2 0xCD5 DUP3 PUSH2 0xCE4 SWAP4 PUSH32 0x6741B2FC379FAD678116FE3D4D4B9A1A184AB53BA36B86AD0FA66340B1AB41AD SWAP6 PUSH1 0x0 SWAP2 PUSH2 0xCE9 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x33F JUMP JUMPDEST SUB SWAP1 LOG1 STOP JUMPDEST SWAP1 POP DUP4 ADD MLOAD CODESIZE PUSH2 0xCC1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE PUSH1 0x1F NOT DUP3 AND SWAP1 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xD84 JUMPI POP SWAP3 PUSH32 0x6741B2FC379FAD678116FE3D4D4B9A1A184AB53BA36B86AD0FA66340B1AB41AD SWAP5 SWAP3 PUSH1 0x1 SWAP3 DUP3 PUSH2 0xCE4 SWAP7 LT PUSH2 0xD6B JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH2 0x46C JUMP JUMPDEST DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0xD5E JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP10 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0xD24 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x496E76616C6964206261736520555249 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0xE28 PUSH1 0x4 CALLDATALOAD PUSH2 0xDF7 PUSH2 0x1C6 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x294D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0xE69 PUSH2 0x1AB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x1C1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP2 DUP3 ISZERO PUSH2 0xEE6 JUMPI PUSH2 0xEAB SWAP1 PUSH2 0xE94 CALLER PUSH2 0x13E2 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH3 0xCED3E1 PUSH1 0xE8 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0xF0A PUSH1 0x20 DUP4 PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0x478 PUSH1 0x40 DUP1 MLOAD SWAP1 PUSH2 0xF33 DUP2 DUP4 PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x5 DUP3 MSTORE PUSH5 0x352E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP4 ADD MSTORE MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x31A JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0x856 PUSH1 0x4 CALLDATALOAD PUSH2 0xFB1 PUSH2 0x1C6 JUMP JUMPDEST SWAP1 PUSH2 0xFBE PUSH2 0x884 DUP3 PUSH2 0x15FC JUMP JUMPDEST PUSH2 0x214C JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0xE28 PUSH2 0xFE3 PUSH2 0x1AB JUMP JUMPDEST PUSH2 0xE94 PUSH2 0xFEE PUSH2 0x1C6 JUMP JUMPDEST SWAP2 PUSH2 0x13E2 JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1013 DUP2 ISZERO ISZERO PUSH2 0x1540 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x102D PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x191D JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0x105E PUSH2 0x1AB JUMP JUMPDEST PUSH2 0x1066 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD SWAP3 PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1C1 JUMPI PUSH2 0x108D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x7B1 JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER DUP2 EQ ISZERO DUP1 PUSH2 0x1130 JUMPI JUMPDEST PUSH2 0x1118 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x1102 JUMPI ISZERO PUSH2 0x10ED JUMPI PUSH2 0x856 SWAP5 PUSH2 0x10E5 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH2 0x236E JUMP JUMPDEST PUSH3 0x6A0D45 PUSH1 0xE2 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x711BEC91 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x113B CALLER DUP5 PUSH2 0x1909 JUMP JUMPDEST ISZERO PUSH2 0x10A2 JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH2 0x5EF PUSH32 0xD215B5584879CAEECB087ED93B0D4013D83CED647FD0A905F4F54A948CF0EB8D PUSH2 0x1173 CALLDATASIZE PUSH2 0x50C JUMP JUMPDEST SWAP3 SWAP2 PUSH2 0x1180 SWAP5 SWAP2 SWAP5 PUSH2 0x1BAC JUMP JUMPDEST PUSH2 0x118B DUP6 ISZERO ISZERO PUSH2 0x1540 JUMP JUMPDEST PUSH2 0x1196 DUP5 ISZERO ISZERO PUSH2 0x1581 JUMP JUMPDEST DUP5 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x11B0 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x191D JUMP JUMPDEST DUP5 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0x11CA PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP6 GT ISZERO PUSH2 0x1969 JUMP JUMPDEST PUSH2 0x11E3 DUP5 PUSH2 0x11DB DUP4 PUSH2 0xE94 DUP10 PUSH2 0x13B3 JUMP JUMPDEST SLOAD LT ISZERO PUSH2 0x19B5 JUMP JUMPDEST PUSH2 0x11F7 DUP6 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1202 DUP6 DUP3 SLOAD PUSH2 0x19F8 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x5D5 DUP5 DUP7 DUP4 PUSH2 0x2200 JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH2 0x121D CALLDATASIZE PUSH2 0xC05 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x296D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x124F PUSH1 0xFF PUSH1 0x40 DUP6 SWAP1 SHR AND ISZERO SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 JUMP JUMPDEST AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x1370 JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x1366 JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x135D JUMPI JUMPDEST POP PUSH2 0x134C JUMPI PUSH2 0x12B0 SWAP1 DUP3 PUSH2 0x12A7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x296D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x296D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST PUSH2 0x1315 JUMPI PUSH2 0x1A05 JUMP JUMPDEST PUSH2 0x12B6 JUMPI STOP JUMPDEST PUSH2 0x12E2 PUSH1 0xFF PUSH1 0x40 SHL NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x296D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x296D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 DUP1 PUSH1 0x20 DUP2 ADD PUSH2 0xCE4 JUMP JUMPDEST PUSH2 0x1347 PUSH1 0x1 PUSH1 0x40 SHL PUSH1 0xFF PUSH1 0x40 SHL NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x296D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x296D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST PUSH2 0x1A05 JUMP JUMPDEST PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP ISZERO CODESIZE PUSH2 0x126B JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x1263 JUMP JUMPDEST DUP4 SWAP2 POP PUSH2 0x1259 JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 MSTORE PUSH32 0x88BE536D5240C274A3B1D3A1BE54482FD9CAA294F08C62A7CDE569F49A3C4500 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x88BE536D5240C274A3B1D3A1BE54482FD9CAA294F08C62A7CDE569F49A3C4501 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1462 SWAP2 PUSH1 0x0 MSTORE PUSH32 0x88BE536D5240C274A3B1D3A1BE54482FD9CAA294F08C62A7CDE569F49A3C4500 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1496 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1480 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1475 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x14B0 DUP3 PUSH2 0x1466 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1517 JUMPI POP PUSH1 0x1 EQ PUSH2 0x14C8 JUMPI POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP4 DUP3 LT PUSH2 0x1503 JUMPI POP POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP5 DUP7 ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x14F6 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP3 MSTORE POP DUP2 ISZERO ISZERO SWAP1 SWAP2 MUL ADD SWAP2 POP JUMP JUMPDEST SWAP1 PUSH2 0x153C PUSH1 0x20 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x2F7 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1547 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081C1C9BD91D58DD081251 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1588 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A5908185B5BDD5B9D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x15F7 JUMPI JUMP JUMPDEST PUSH2 0x15D4 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x294D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER DUP2 EQ ISZERO DUP1 PUSH2 0x1658 JUMPI JUMPDEST PUSH2 0x1118 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x1102 JUMPI ISZERO PUSH2 0x10ED JUMPI PUSH2 0x1656 SWAP5 PUSH2 0x236E JUMP JUMPDEST JUMP JUMPDEST POP PUSH1 0xFF PUSH2 0x1668 CALLER PUSH2 0xE94 DUP10 PUSH2 0x13E2 JUMP JUMPDEST SLOAD AND ISZERO PUSH2 0x1635 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x684 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 MLOAD DUP4 MLOAD DUP1 DUP3 SUB PUSH2 0x1705 JUMPI POP POP DUP1 MLOAD SWAP1 PUSH2 0x16A0 DUP3 PUSH2 0x6EB JUMP JUMPDEST SWAP2 PUSH2 0x16AE PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x6CA JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH2 0x16BD PUSH1 0x1F NOT SWAP2 PUSH2 0x6EB JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x16FE JUMPI DUP1 PUSH2 0x16ED PUSH1 0x1 SWAP3 PUSH1 0x5 SHL PUSH1 0x20 DUP1 DUP3 DUP8 ADD ADD MLOAD SWAP2 DUP10 ADD ADD MLOAD SWAP1 PUSH2 0x141B JUMP JUMPDEST PUSH2 0x16F7 DUP3 DUP7 PUSH2 0x1670 JUMP JUMPDEST MSTORE ADD PUSH2 0x16C7 JUMP JUMPDEST POP SWAP1 SWAP3 POP POP JUMP JUMPDEST PUSH4 0x5B059991 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1728 JUMPI POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 LT PUSH2 0x1765 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1759 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x174E JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1745 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x177B JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x298D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 LT PUSH2 0x17C5 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x17B9 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x17AE JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x17A5 JUMP JUMPDEST PUSH1 0x1F DUP3 GT PUSH2 0x17DC JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 LT PUSH2 0x1817 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x180B JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1800 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x17F7 JUMP JUMPDEST SWAP1 DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x689 JUMPI PUSH2 0x1848 DUP2 PUSH2 0x1841 PUSH1 0x3 SLOAD PUSH2 0x1466 JUMP JUMPDEST PUSH1 0x3 PUSH2 0x17CF JUMP JUMPDEST PUSH1 0x20 SWAP3 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x188A JUMPI PUSH2 0x187A SWAP3 SWAP4 DUP3 SWAP2 PUSH1 0x0 SWAP3 PUSH2 0x187F JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x1865 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE PUSH1 0x1F NOT DUP3 AND SWAP4 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP2 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT PUSH2 0x18F1 JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x18D8 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x18CD JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x18BA JUMP JUMPDEST PUSH1 0xFF SWAP2 PUSH2 0xE94 PUSH2 0x1918 SWAP3 PUSH2 0x13E2 JUMP JUMPDEST SLOAD AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1924 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6475637420494420646F6573206E6F7420657869737400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1970 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4275726E20616D6F756E74206578636565647320737570706C79000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x19BC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x15F7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 PUSH2 0x1A14 DUP2 DUP4 PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE PUSH2 0x1A20 PUSH2 0x25D2 JUMP JUMPDEST PUSH2 0x1A28 PUSH2 0x25D2 JUMP JUMPDEST DUP2 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x689 JUMPI PUSH2 0x1A5A DUP4 PUSH2 0x1A55 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x298D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0x1466 JUMP JUMPDEST PUSH2 0x176F JUMP JUMPDEST DUP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0x1AD4 JUMPI POP SWAP2 DUP1 PUSH2 0x1A8E SWAP3 PUSH2 0x1AB4 SWAP6 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x187F JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x298D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMPDEST PUSH2 0x1AA7 PUSH2 0x25D2 JUMP JUMPDEST PUSH2 0x1AAF PUSH2 0x25D2 JUMP JUMPDEST PUSH2 0x1821 JUMP JUMPDEST PUSH2 0x1ABD CALLER PUSH2 0x1E86 JUMP JUMPDEST POP PUSH2 0x1AC7 CALLER PUSH2 0x1F26 JUMP JUMPDEST POP PUSH2 0x1AD1 CALLER PUSH2 0x1FEB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x298D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 MSTORE SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND PUSH32 0xF429CB5E2EC84CBB765E76B31964A56CCDE03E7A6122D6CC4AFB19EDC55EDEED SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1B62 JUMPI POP POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP6 PUSH2 0x1AB4 SWAP8 SWAP7 SWAP5 LT PUSH2 0x1B49 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x298D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0x1A9F JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1B2E JUMP JUMPDEST DUP1 PUSH1 0x1 DUP7 SWAP8 DUP3 SWAP5 SWAP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP7 ADD SWAP5 ADD SWAP1 PUSH2 0x1B13 JUMP JUMPDEST SWAP1 PUSH2 0x1B84 DUP3 PUSH2 0x75F JUMP JUMPDEST PUSH2 0x1B91 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x6CA JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1BA2 PUSH1 0x1F NOT SWAP2 PUSH2 0x75F JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x549FE2656C81D2947B3B913F0A53B9EA86C71E049F3A1B8AA23C09A8A05CB8D4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1BE5 JUMPI JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAB71E3F32666744D246EDFF3F96E4BDAFEE2E9867098CDD118A979A7464786A8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1C57 JUMPI JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xB7DB2DD08FCB62D0C9E08C51941CAE53C267786A0B75803FB7960902FC8EF97D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1CC9 JUMPI JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x0 PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x294D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1D15 JUMPI POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP4 SWAP3 SWAP1 SWAP2 SWAP1 DUP5 ISZERO PUSH2 0x1102 JUMPI PUSH2 0x1D69 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP3 DUP2 MLOAD DUP5 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x1E6F JUMPI POP POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1DB8 JUMPI DUP1 PUSH1 0x1 SWAP2 PUSH1 0x5 SHL PUSH2 0x1DB0 PUSH2 0x1DA8 DUP8 PUSH2 0xE94 PUSH1 0x20 DUP1 DUP7 DUP12 ADD ADD MLOAD SWAP6 DUP13 ADD ADD MLOAD SWAP5 PUSH2 0x13B3 JUMP JUMPDEST SWAP2 DUP3 SLOAD PUSH2 0x15EA JUMP JUMPDEST SWAP1 SSTORE ADD PUSH2 0x1D7B JUMP JUMPDEST POP SWAP3 SWAP2 SWAP4 PUSH1 0x1 DUP3 MLOAD EQ PUSH1 0x0 EQ PUSH2 0x1E33 JUMPI PUSH1 0x20 DUP3 DUP2 ADD MLOAD DUP5 DUP3 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP3 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 CALLER SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 SWAP1 LOG4 JUMPDEST DUP1 MLOAD PUSH1 0x1 SUB PUSH2 0x1E27 JUMPI SWAP1 PUSH1 0x20 DUP1 PUSH2 0x1656 SWAP6 SWAP4 ADD MLOAD SWAP2 ADD MLOAD SWAP2 PUSH1 0x0 CALLER PUSH2 0x27F2 JUMP JUMPDEST PUSH2 0x1656 SWAP4 PUSH1 0x0 CALLER PUSH2 0x26BD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB CALLER SWAP2 DUP1 PUSH2 0x1E67 DUP9 DUP9 DUP4 PUSH2 0x2600 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x1E07 JUMP JUMPDEST PUSH4 0x5B059991 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xB7DB2DD08FCB62D0C9E08C51941CAE53C267786A0B75803FB7960902FC8EF97D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1F20 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xB7DB2DD08FCB62D0C9E08C51941CAE53C267786A0B75803FB7960902FC8EF97D PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x290D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x549FE2656C81D2947B3B913F0A53B9EA86C71E049F3A1B8AA23C09A8A05CB8D4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1F20 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x549FE2656C81D2947B3B913F0A53B9EA86C71E049F3A1B8AA23C09A8A05CB8D4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x290D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAB71E3F32666744D246EDFF3F96E4BDAFEE2E9867098CDD118A979A7464786A8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1F20 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAB71E3F32666744D246EDFF3F96E4BDAFEE2E9867098CDD118A979A7464786A8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x290D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x294D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2145 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x294D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x290D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x294D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2145 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x294D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1C1 JUMPI MLOAD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP3 SWAP1 SWAP2 SWAP1 DUP4 ISZERO PUSH2 0x10ED JUMPI PUSH2 0x223C PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x20 SWAP2 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x2250 DUP6 DUP3 PUSH2 0x6CA JUMP JUMPDEST MSTORE DUP2 MLOAD DUP5 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x1E6F JUMPI POP POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x22E2 JUMPI DUP1 PUSH1 0x5 SHL DUP5 DUP1 DUP3 DUP7 ADD ADD MLOAD SWAP2 DUP8 ADD ADD MLOAD PUSH2 0x2288 DUP10 PUSH2 0xE94 DUP5 PUSH2 0x13B3 JUMP JUMPDEST SLOAD DUP2 DUP2 LT PUSH2 0x22AB JUMPI DUP10 PUSH2 0xE94 PUSH1 0x1 SWAP6 SWAP5 SWAP4 PUSH2 0x22A4 SWAP4 SUB SWAP4 PUSH2 0x13B3 JUMP JUMPDEST SSTORE ADD PUSH2 0x2262 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP SWAP5 POP SWAP1 SWAP2 PUSH1 0x0 SWAP4 SWAP3 PUSH1 0x1 DUP4 MLOAD EQ DUP6 EQ PUSH2 0x233A JUMPI SWAP2 DUP3 ADD MLOAD SWAP2 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 DUP2 SWAP1 DUP2 ADD JUMPDEST SUB SWAP1 LOG4 JUMP JUMPDEST POP PUSH2 0x2335 PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB SWAP2 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH2 0x2600 JUMP JUMPDEST SWAP5 SWAP4 SWAP3 SWAP1 SWAP2 SWAP4 DUP5 MLOAD DUP3 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x1E6F JUMPI POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP6 DUP7 ISZERO ISZERO SWAP6 SWAP2 DUP6 AND DUP1 ISZERO ISZERO SWAP4 SWAP2 SWAP3 SWAP1 PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x2460 JUMPI DUP1 PUSH1 0x5 SHL SWAP1 DUP10 DUP10 DUP9 PUSH1 0x20 DUP1 DUP7 DUP12 ADD ADD MLOAD SWAP6 DUP13 ADD ADD MLOAD SWAP3 PUSH2 0x23EF JUMPI JUMPDEST SWAP4 PUSH1 0x1 SWAP5 PUSH2 0x23D5 JUMPI JUMPDEST POP POP POP ADD PUSH2 0x239F JUMP JUMPDEST PUSH2 0x23E5 SWAP2 PUSH2 0xE94 PUSH2 0x1DA8 SWAP3 PUSH2 0x13B3 JUMP JUMPDEST SWAP1 SSTORE CODESIZE DUP10 DUP2 PUSH2 0x23CC JUMP JUMPDEST POP POP SWAP1 SWAP2 PUSH2 0x2400 DUP14 PUSH2 0xE94 DUP4 PUSH2 0x13B3 JUMP JUMPDEST SLOAD DUP3 DUP2 LT PUSH2 0x2429 JUMPI DUP3 SWAP2 DUP10 DUP16 PUSH2 0x2420 PUSH1 0x1 SWAP8 SWAP7 DUP16 SWAP6 SUB SWAP2 PUSH2 0xE94 DUP6 PUSH2 0x13B3 JUMP JUMPDEST SSTORE SWAP1 SWAP5 POP PUSH2 0x23C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP SWAP2 SWAP9 SWAP6 SWAP4 SWAP3 SWAP8 SWAP1 SWAP7 POP PUSH1 0x1 DUP9 MLOAD EQ PUSH1 0x0 EQ PUSH2 0x24F4 JUMPI PUSH1 0x20 DUP9 DUP2 ADD MLOAD DUP7 DUP3 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP3 DUP3 ADD MSTORE CALLER SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 LOG4 JUMPDEST PUSH2 0x24BD JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP5 MLOAD PUSH1 0x1 SUB PUSH2 0x24E3 JUMPI PUSH1 0x20 DUP1 PUSH2 0x24D9 SWAP7 ADD MLOAD SWAP3 ADD MLOAD SWAP3 CALLER PUSH2 0x27F2 JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x24B6 JUMP JUMPDEST PUSH2 0x24EF SWAP5 SWAP2 SWAP3 CALLER PUSH2 0x26BD JUMP JUMPDEST PUSH2 0x24D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB CALLER SWAP2 DUP1 PUSH2 0x2526 DUP10 DUP14 DUP4 PUSH2 0x2600 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x24B1 JUMP JUMPDEST SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x25B0 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x292D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x2596 JUMPI PUSH2 0x1AD1 SWAP2 PUSH2 0x2892 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x259F JUMPI JUMP JUMPDEST PUSH4 0xB398979F PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST POP PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x296D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x25EF JUMPI JUMP JUMPDEST PUSH4 0x1AFCD79F PUSH1 0xE3 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP2 PUSH2 0x2617 PUSH2 0x350 SWAP4 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x8D4 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x8D4 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1C1 JUMPI MLOAD PUSH2 0x350 DUP2 PUSH2 0x25C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x350 SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 PUSH2 0x267F SWAP3 SWAP2 PUSH2 0x2671 SWAP2 SWAP1 DUP7 ADD SWAP1 PUSH2 0x8D4 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x8D4 JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x31A JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x26B8 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x269E DUP3 PUSH2 0x75F JUMP JUMPDEST SWAP2 PUSH2 0x26AC PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x6CA JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP5 SWAP3 SWAP4 DUP6 EXTCODESIZE PUSH2 0x26D1 JUMPI JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP4 PUSH2 0x26F3 SWAP2 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP6 PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0x263A JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x2788 JUMPI JUMPDEST POP PUSH2 0x2748 JUMPI POP PUSH2 0x271A PUSH2 0x268D JUMP JUMPDEST DUP1 MLOAD SWAP2 SWAP1 DUP3 PUSH2 0x2741 JUMPI PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x43E6837F PUSH1 0xE0 SHL ADD PUSH2 0x276B JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x26C9 JUMP JUMPDEST PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x27AB SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x27B2 JUMPI JUMPDEST PUSH2 0x27A3 DUP2 DUP4 PUSH2 0x6CA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2625 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x270C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2799 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x350 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x31A JUMP JUMPDEST SWAP1 SWAP2 SWAP5 SWAP3 SWAP4 DUP6 EXTCODESIZE PUSH2 0x2805 JUMPI POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP4 PUSH2 0x2827 SWAP2 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP6 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0x27B9 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x2871 JUMPI JUMPDEST POP PUSH2 0x284E JUMPI POP PUSH2 0x271A PUSH2 0x268D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xDC5919F PUSH1 0xE0 SHL ADD PUSH2 0x276B JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x26C9 JUMP JUMPDEST PUSH2 0x288B SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x27B2 JUMPI PUSH2 0x27A3 DUP2 DUP4 PUSH2 0x6CA JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x2840 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x350 SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL PUSH2 0x28AA PUSH2 0x268D JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x28D1 JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x28C0 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xD6BDA275 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x2903 JUMPI JUMPDEST PUSH2 0x28E2 JUMPI POP SWAP1 JUMP JUMPDEST PUSH4 0x9996B315 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x28DA JUMP INVALID 0x2F DUP8 DUP9 GT PUSH31 0x7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D360894A1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC02DD7BC7DEC4DCEEDDA775 0xE5 DUP14 0xD5 COINBASE 0xE0 DUP11 GT PUSH13 0x6C53815C0BD028192F7B626800 CREATE 0xC5 PUSH31 0x16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A0088BE MSTORE8 PUSH14 0x5240C274A3B1D3A1BE54482FD9CA LOG2 SWAP5 CREATE DUP13 PUSH3 0xA7CDE5 PUSH10 0xF49A3C4502A264697066 PUSH20 0x582212208E75664AA1D99035665650B3BDC4F98D 0xE6 PUSH3 0xBBC8C4 PUSH24 0x7EAF7656F78E37A9DA6964736F6C634300081B0033000000 ","sourceMap":"571:6173:41:-:0;;;;;;;1171:4:6;1163:13;;3147:66:5;571:6173:41;;;;;;7894:76:5;;-1:-1:-1;;;;;;;;;;;571:6173:41;;7983:34:5;7979:146;;-1:-1:-1;571:6173:41;;;;;;;;1163:13:6;571:6173:41;;;;;;;;;;;7979:146:5;-1:-1:-1;;;;;;571:6173:41;-1:-1:-1;;;;;571:6173:41;;;3147:66:5;571:6173:41;;;8085:29:5;;571:6173:41;;8085:29:5;7979:146;;;;7894:76;7936:23;;;-1:-1:-1;7936:23:5;;-1:-1:-1;7936:23:5;571:6173:41;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":476,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_address_11126":{"entryPoint":427,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_11146":{"entryPoint":454,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_addresst_uint256t_uint256":{"entryPoint":1292,"id":null,"parameterSlots":1,"returnSlots":3},"abi_decode_array_uint256_dyn":{"entryPoint":1794,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_available_length_bytes":{"entryPoint":1914,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bytes":{"entryPoint":1969,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes32_fromMemory":{"entryPoint":8689,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes4_fromMemory":{"entryPoint":9765,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string":{"entryPoint":3077,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_uint256":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint256_11128":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint256_11172":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_address_address_array_uint256_dyn_array_uint256_dyn_bytes":{"entryPoint":9786,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_address_address_uint256_uint256_bytes":{"entryPoint":10169,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_address_uint256_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":2312,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn_array_uint256_dyn":{"entryPoint":9728,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_array_uint256_dyn_memory_ptr":{"entryPoint":2260,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_string":{"entryPoint":831,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_memory_ptr":{"entryPoint":5417,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_storage":{"entryPoint":5280,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_string_to_string":{"entryPoint":794,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_stringliteral":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_uint256_uint256_11281":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_and_zero_memory_array_string":{"entryPoint":7034,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_string":{"entryPoint":3835,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":1771,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":1887,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage_11158":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_string_storage_11244":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"checked_add_uint256":{"entryPoint":5610,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":6648,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":6095,"id":null,"parameterSlots":3,"returnSlots":0},"clean_up_bytearray_end_slots_string_storage_11157":{"entryPoint":5916,"id":null,"parameterSlots":2,"returnSlots":0},"clean_up_bytearray_end_slots_string_storage_11243":{"entryPoint":5999,"id":null,"parameterSlots":2,"returnSlots":0},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_string_to_string":{"entryPoint":6177,"id":null,"parameterSlots":1,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":759,"id":null,"parameterSlots":3,"returnSlots":0},"external_fun_DEFAULT_ADMIN_ROLE":{"entryPoint":3636,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_MINTER_ROLE":{"entryPoint":3927,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_UPGRADER_ROLE":{"entryPoint":4984,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_UPGRADE_INTERFACE_VERSION":{"entryPoint":3856,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_balanceOf":{"entryPoint":496,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_balanceOfBatch":{"entryPoint":2460,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_burn":{"entryPoint":4417,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getProductIds":{"entryPoint":2329,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getRoleAdmin":{"entryPoint":1678,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_grantRole":{"entryPoint":2136,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_hasRole":{"entryPoint":3540,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_initialize":{"entryPoint":4623,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_isApprovedForAll":{"entryPoint":4035,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_mint":{"entryPoint":1334,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_productSupply":{"entryPoint":4084,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_proxiableUUID":{"entryPoint":2988,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_renounceRole":{"entryPoint":2190,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_revokeRole":{"entryPoint":3986,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_safeBatchTransferFrom":{"entryPoint":1996,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_safeTransferFrom":{"entryPoint":4165,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setApprovalForAll":{"entryPoint":3664,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setBaseURI":{"entryPoint":3136,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_supportsInterface":{"entryPoint":622,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_upgradeToAndCall":{"entryPoint":2639,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_uri":{"entryPoint":851,"id":null,"parameterSlots":0,"returnSlots":0},"extract_byte_array_length":{"entryPoint":5222,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_uint64":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_returndata":{"entryPoint":9869,"id":null,"parameterSlots":0,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":1738,"id":null,"parameterSlots":2,"returnSlots":0},"fun_asSingletonArrays":{"entryPoint":null,"id":2071,"parameterSlots":2,"returnSlots":2},"fun_balanceOf":{"entryPoint":5147,"id":1241,"parameterSlots":2,"returnSlots":1},"fun_balanceOfBatch":{"entryPoint":5764,"id":1311,"parameterSlots":2,"returnSlots":1},"fun_burn":{"entryPoint":8704,"id":1968,"parameterSlots":3,"returnSlots":0},"fun_checkInitializing":{"entryPoint":9682,"id":801,"parameterSlots":0,"returnSlots":0},"fun_checkOnERC1155BatchReceived":{"entryPoint":9917,"id":3825,"parameterSlots":6,"returnSlots":0},"fun_checkOnERC1155Received":{"entryPoint":10226,"id":3751,"parameterSlots":6,"returnSlots":0},"fun_checkRole":{"entryPoint":7395,"id":197,"parameterSlots":1,"returnSlots":0},"fun_checkRole_11138":{"entryPoint":7084,"id":197,"parameterSlots":0,"returnSlots":0},"fun_checkRole_11152":{"entryPoint":7198,"id":197,"parameterSlots":0,"returnSlots":0},"fun_checkRole_11156":{"entryPoint":7312,"id":197,"parameterSlots":0,"returnSlots":0},"fun_functionDelegateCall":{"entryPoint":10386,"id":4545,"parameterSlots":2,"returnSlots":1},"fun_getRoleAdmin":{"entryPoint":5628,"id":239,"parameterSlots":1,"returnSlots":1},"fun_grantRole":{"entryPoint":8368,"id":383,"parameterSlots":2,"returnSlots":1},"fun_grantRole_11246":{"entryPoint":7814,"id":383,"parameterSlots":1,"returnSlots":1},"fun_grantRole_11247":{"entryPoint":7974,"id":383,"parameterSlots":1,"returnSlots":1},"fun_grantRole_11248":{"entryPoint":8171,"id":383,"parameterSlots":1,"returnSlots":1},"fun_initialize_inner":{"entryPoint":6661,"id":null,"parameterSlots":1,"returnSlots":0},"fun_isApprovedForAll":{"entryPoint":6409,"id":1351,"parameterSlots":2,"returnSlots":1},"fun_mint":{"entryPoint":7469,"id":1877,"parameterSlots":4,"returnSlots":0},"fun_revokeRole":{"entryPoint":8524,"id":429,"parameterSlots":2,"returnSlots":1},"fun_safeBatchTransferFrom":{"entryPoint":5661,"id":1441,"parameterSlots":5,"returnSlots":0},"fun_updateWithAcceptanceCheck":{"entryPoint":9070,"id":1685,"parameterSlots":5,"returnSlots":0},"fun_upgradeToAndCall":{"entryPoint":9518,"id":3296,"parameterSlots":2,"returnSlots":0},"fun_verifyCallResultFromTarget":{"entryPoint":null,"id":4585,"parameterSlots":3,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address_11162":{"entryPoint":5090,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_mapping_address_uint256__of_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_mapping_address_uint256_of_uint256":{"entryPoint":5043,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_mapping_address_uint256_of_uint256_11142":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_uint256_dyn":{"entryPoint":5744,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":5588,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":5566,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1716,"id":null,"parameterSlots":0,"returnSlots":0},"require_helper_stringliteral":{"entryPoint":6429,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_2fd1":{"entryPoint":5505,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_4753":{"entryPoint":6581,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_7f84":{"entryPoint":6505,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_c5e0":{"entryPoint":5440,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_bool_to_bool_11180":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"update_storage_value_offsett_bool_to_bool_11181":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"update_storage_value_offsett_uint64_to_uint64":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":604,"id":null,"parameterSlots":1,"returnSlots":0},"wrapping_div_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"wrapping_div_uint256_11129":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"wrapping_div_uint256_11130":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"wrapping_div_uint256_11131":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"wrapping_div_uint256_11132":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"wrapping_div_uint256_11133":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"wrapping_div_uint256_11135":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"immutableReferences":{"913":[{"length":32,"start":2701},{"length":32,"start":3007}]},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c8062fdd58e146101a657806301ffc9a7146101a15780630e89341c1461019c578063156e29f614610197578063248a9ca3146101925780632eb2c2d61461018d5780632f2ff15d1461018857806336568abe1461018357806347428e7b1461017e5780634e1273f4146101795780634f1ef2861461017457806352d1902d1461016f57806355f804b31461016a57806391d1485414610165578063a217fddf14610160578063a22cb4651461015b578063ad3cb1cc14610156578063d539139314610151578063d547741f1461014c578063e985e9c514610147578063ef8593e714610142578063f242432a1461013d578063f5298aca14610138578063f62d1888146101335763f72c0d8b1461012e57600080fd5b611378565b61120f565b611141565b611045565b610ff4565b610fc3565b610f92565b610f57565b610f10565b610e50565b610e34565b610dd4565b610c40565b610bac565b610a4f565b61099c565b610919565b61088e565b610858565b6107cc565b61068e565b610536565b610353565b61026e565b6101f0565b600435906001600160a01b03821682036101c157565b600080fd5b602435906001600160a01b03821682036101c157565b35906001600160a01b03821682036101c157565b346101c15760403660031901126101c157602061025361020e6101ab565b6024356000527f88be536d5240c274a3b1d3a1be54482fd9caa294f08c62a7cde569f49a3c4500835260406000209060018060a01b0316600052602052604060002090565b54604051908152f35b6001600160e01b03198116036101c157565b346101c15760203660031901126101c15760043561028b8161025c565b63ffffffff60e01b16637965db0b60e01b81149081156102b4575b506040519015158152602090f35b636cdb3d1360e11b8114915081156102e6575b81156102d5575b50386102a6565b6301ffc9a760e01b149050386102ce565b6303a24d0760e21b811491506102c7565b60005b83811061030a5750506000910152565b81810151838201526020016102fa565b90602091610333815180928185528580860191016102f7565b601f01601f1916010190565b90602061035092818152019061031a565b90565b346101c15760203660031901126101c15760006004358072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8110156104e9575b806d04ee2d6d415b85acef8100000000600a9210156104cd575b662386f26fc100008110156104b8575b6305f5e1008110156104a6575b612710811015610496575b6064811015610487575b101561047c575b61041960216103ed60018501611b7a565b938401015b60001901916f181899199a1a9b1b9c1cb0b131b232b360811b600a82061a8353600a900490565b90811561042957610419906103f2565b6040516104789061046c8161045e61044d88610447602085016114a0565b90611529565b64173539b7b760d91b815260050190565b03601f1981018352826106ca565b6040519182918261033f565b0390f35b6001909101906103dc565b600290606490049301926103d5565b60049061271090049301926103cb565b6008906305f5e10090049301926103c0565b601090662386f26fc1000090049301926103b3565b6020906d04ee2d6d415b85acef810000000090049301926103a3565b506040915072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8104610389565b60609060031901126101c1576004356001600160a01b03811681036101c157906024359060443590565b346101c1576105443661050c565b909161054e611bac565b610559831515611540565b610564821515611581565b82600052600260205260ff60406000205416156105f4575b6105ef7f1ace3364065011f2a2f041ccf777c9f5394104fb5c15ec40e2ed753531e33b21916105b5856000526000602052604060002090565b6105c08582546115ea565b90556105d56105cd610efb565b858784611d2d565b6040519384526001600160a01b0316929081906020820190565b0390a3005b600154600160401b811015610689576001810180600155811015610684577fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60183905560008381526002602052604090207f1ace3364065011f2a2f041ccf777c9f5394104fb5c15ec40e2ed753531e33b21916105ef9161067c90805460ff19166001179055565b91505061057c565b6115be565b6106b4565b346101c15760203660031901126101c15760206106ac6004356115fc565b604051908152f35b634e487b7160e01b600052604160045260246000fd5b90601f801991011681019081106001600160401b0382111761068957604052565b6001600160401b0381116106895760051b60200190565b9080601f830112156101c1578135610719816106eb565b9261072760405194856106ca565b81845260208085019260051b8201019283116101c157602001905b82821061074f5750505090565b8135815260209182019101610742565b6001600160401b03811161068957601f01601f191660200190565b9291926107868261075f565b9161079460405193846106ca565b8294818452818301116101c1578281602093846000960137010152565b9080601f830112156101c1578160206103509335910161077a565b346101c15760a03660031901126101c1576107e56101ab565b6107ed6101c6565b906044356001600160401b0381116101c15761080d903690600401610702565b6064356001600160401b0381116101c15761082c903690600401610702565b90608435936001600160401b0385116101c1576108506108569536906004016107b1565b9361161d565b005b346101c15760403660031901126101c1576108566004356108776101c6565b90610889610884826115fc565b611ce3565b6120b0565b346101c15760403660031901126101c1576004356108aa6101c6565b336001600160a01b038216036108c3576108569161214c565b63334bd91960e11b60005260046000fd5b906020808351928381520192019060005b8181106108f25750505090565b82518452602093840193909201916001016108e5565b9060206103509281815201906108d4565b346101c15760003660031901126101c15760405180602060015491828152019060016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf69060005b818110610986576104788561097a818703826106ca565b60405191829182610908565b8254845260209093019260019283019201610963565b346101c15760403660031901126101c1576004356001600160401b0381116101c157366023820112156101c1578060040135906109d8826106eb565b916109e660405193846106ca565b8083526024602084019160051b830101913683116101c157602401905b828210610a3757836024356001600160401b0381116101c15761047891610a3161097a923690600401610702565b90611684565b60208091610a44846101dc565b815201910190610a03565b60403660031901126101c157610a636101ab565b6024356001600160401b0381116101c157610a829036906004016107b1565b906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016308114908115610b89575b50610b7857610ac5611c1e565b6040516352d1902d60e01b8152916020836004816001600160a01b0386165afa60009381610b47575b50610b1157634c9c8ce360e01b6000526001600160a01b03821660045260246000fd5b9060008051602061292d8339815191528303610b3157610856925061252e565b632a87526960e21b600052600483905260246000fd5b610b6a91945060203d602011610b71575b610b6281836106ca565b8101906121f1565b9238610aee565b503d610b58565b63703e46dd60e11b60005260046000fd5b60008051602061292d833981519152546001600160a01b03161415905038610ab8565b346101c15760003660031901126101c1577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003610b7857602060405160008051602061292d8339815191528152f35b60206003198201126101c157600435906001600160401b0382116101c157806023830112156101c1578160246103509360040135910161077a565b346101c157610c4e36610c05565b610c56611c90565b805115610d9c5780516001600160401b03811161068957610c8181610c7c600354611466565b61171c565b6020601f8211600114610cf45791610cd582610ce4937f6741b2fc379fad678116fe3d4d4b9a1a184ab53ba36b86ad0fa66340b1ab41ad95600091610ce9575b508160011b916000199060031b1c19161790565b6003556040519182918261033f565b0390a1005b905083015138610cc1565b6003600052601f198216907fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9160005b818110610d845750927f6741b2fc379fad678116fe3d4d4b9a1a184ab53ba36b86ad0fa66340b1ab41ad949260019282610ce49610610d6b575b5050811b0160035561046c565b84015160001960f88460031b161c191690553880610d5e565b91926020600181928689015181550194019201610d24565b60405162461bcd60e51b815260206004820152601060248201526f496e76616c696420626173652055524960801b6044820152606490fd5b346101c15760403660031901126101c157602060ff610e28600435610df76101c6565b9060005260008051602061294d833981519152845260406000209060018060a01b0316600052602052604060002090565b54166040519015158152f35b346101c15760003660031901126101c157602060405160008152f35b346101c15760403660031901126101c157610e696101ab565b6024358015158091036101c1576001600160a01b038216918215610ee657610eab90610e94336113e2565b9060018060a01b0316600052602052604060002090565b60ff1981541660ff83161790556040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b62ced3e160e81b600052600060045260246000fd5b60405190610f0a6020836106ca565b60008252565b346101c15760003660031901126101c1576104786040805190610f3381836106ca565b60058252640352e302e360dc1b60208301525191829160208352602083019061031a565b346101c15760003660031901126101c15760206040517f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68152f35b346101c15760403660031901126101c157610856600435610fb16101c6565b90610fbe610884826115fc565b61214c565b346101c15760403660031901126101c157602060ff610e28610fe36101ab565b610e94610fee6101c6565b916113e2565b346101c15760203660031901126101c157600435611013811515611540565b80600052600260205261102d60ff6040600020541661191d565b60005260006020526020604060002054604051908152f35b346101c15760a03660031901126101c15761105e6101ab565b6110666101c6565b60443590606435926084356001600160401b0381116101c15761108d9036906004016107b1565b926001600160a01b0382163381141580611130575b611118576001600160a01b0384161561110257156110ed57610856946110e560405192600184526020840152604083019160018352606084015260808301604052565b92909161236e565b626a0d4560e21b600052600060045260246000fd5b632bfa23e760e11b600052600060045260246000fd5b63711bec9160e11b6000523360045260245260446000fd5b5061113b3384611909565b156110a2565b346101c1576105ef7fd215b5584879caeecb087ed93b0d4013d83ced647fd0a905f4f54a948cf0eb8d6111733661050c565b9291611180949194611bac565b61118b851515611540565b611196841515611581565b8460005260026020526111b060ff6040600020541661191d565b8460005260006020526111ca604060002054851115611969565b6111e3846111db83610e94896113b3565b5410156119b5565b6111f7856000526000602052604060002090565b6112028582546119f8565b90556105d5848683612200565b346101c15761121d36610c05565b60008051602061296d83398151915254906001600160401b0361124f60ff604085901c1615936001600160401b031690565b1680159081611370575b6001149081611366575b15908161135d575b5061134c576112b090826112a760016001600160401b031960008051602061296d83398151915254161760008051602061296d83398151915255565b61131557611a05565b6112b657005b6112e260ff60401b1960008051602061296d833981519152541660008051602061296d83398151915255565b604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2908060208101610ce4565b611347600160401b60ff60401b1960008051602061296d83398151915254161760008051602061296d83398151915255565b611a05565b63f92ee8a960e01b60005260046000fd5b9050153861126b565b303b159150611263565b839150611259565b346101c15760003660031901126101c15760206040517f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e38152f35b6000527f88be536d5240c274a3b1d3a1be54482fd9caa294f08c62a7cde569f49a3c4500602052604060002090565b6001600160a01b031660009081527f88be536d5240c274a3b1d3a1be54482fd9caa294f08c62a7cde569f49a3c45016020526040902090565b611462916000527f88be536d5240c274a3b1d3a1be54482fd9caa294f08c62a7cde569f49a3c450060205260406000209060018060a01b0316600052602052604060002090565b5490565b90600182811c92168015611496575b602083101461148057565b634e487b7160e01b600052602260045260246000fd5b91607f1691611475565b600354600092916114b082611466565b916001811690811561151757506001146114c8575050565b6003600090815292935090917fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8382106115035750500190565b6001816020925484860152019101906114f6565b60ff1916825250811515909102019150565b9061153c602092828151948592016102f7565b0190565b1561154757565b60405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c1c9bd91d58dd08125160721b6044820152606490fd5b1561158857565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a5908185b5bdd5b9d60921b6044820152606490fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b919082018092116115f757565b6115d4565b60005260008051602061294d83398151915260205260016040600020015490565b939291906001600160a01b0385163381141580611658575b611118576001600160a01b0382161561110257156110ed576116569461236e565b565b5060ff61166833610e94896113e2565b541615611635565b80518210156106845760209160051b010190565b919091805183518082036117055750508051906116a0826106eb565b916116ae60405193846106ca565b8083526116bd601f19916106eb565b0136602084013760005b81518110156116fe57806116ed60019260051b602080828701015191890101519061141b565b6116f78286611670565b52016116c7565b5090925050565b635b05999160e01b60005260045260245260446000fd5b601f8111611728575050565b60036000526020600020906020601f840160051c83019310611765575b601f0160051c01905b818110611759575050565b6000815560010161174e565b9091508190611745565b601f811161177b575050565b60008051602061298d8339815191526000526020600020906020601f840160051c830193106117c5575b601f0160051c01905b8181106117b9575050565b600081556001016117ae565b90915081906117a5565b601f82116117dc57505050565b6000526020600020906020601f840160051c83019310611817575b601f0160051c01905b81811061180b575050565b60008155600101611800565b90915081906117f7565b9081516001600160401b0381116106895761184881611841600354611466565b60036117cf565b602092601f821160011461188a5761187a9293829160009261187f575b50508160011b916000199060031b1c19161790565b600355565b015190503880611865565b6003600052601f198216937fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9160005b8681106118f157508360019596106118d8575b505050811b01600355565b015160001960f88460031b161c191690553880806118cd565b919260206001819286850151815501940192016118ba565b60ff91610e94611918926113e2565b541690565b1561192457565b60405162461bcd60e51b815260206004820152601960248201527f50726f6475637420494420646f6573206e6f74206578697374000000000000006044820152606490fd5b1561197057565b60405162461bcd60e51b815260206004820152601a60248201527f4275726e20616d6f756e74206578636565647320737570706c790000000000006044820152606490fd5b156119bc57565b60405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606490fd5b919082039182116115f757565b6040516020611a1481836106ca565b60008252611a206125d2565b611a286125d2565b8151916001600160401b03831161068957611a5a83611a5560008051602061298d83398151915254611466565b61176f565b81601f8411600114611ad457509180611a8e92611ab4959460009261187f5750508160011b916000199060031b1c19161790565b60008051602061298d833981519152555b611aa76125d2565b611aaf6125d2565b611821565b611abd33611e86565b50611ac733611f26565b50611ad133611feb565b50565b60008051602061298d8339815191526000529190601f1984167ff429cb5e2ec84cbb765e76b31964a56ccde03e7a6122d6cc4afb19edc55edeed936000905b828210611b62575050916001939185611ab497969410611b49575b505050811b0160008051602061298d83398151915255611a9f565b015160001960f88460031b161c19169055388080611b2e565b80600186978294978701518155019601940190611b13565b90611b848261075f565b611b9160405191826106ca565b8281528092611ba2601f199161075f565b0190602036910137565b3360009081527f549fe2656c81d2947b3b913f0a53b9ea86c71e049f3a1b8aa23c09a8a05cb8d4602052604090205460ff1615611be557565b63e2517d3f60e01b600052336004527f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a660245260446000fd5b3360009081527fab71e3f32666744d246edff3f96e4bdafee2e9867098cdd118a979a7464786a8602052604090205460ff1615611c5757565b63e2517d3f60e01b600052336004527f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e360245260446000fd5b3360009081527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d602052604090205460ff1615611cc957565b63e2517d3f60e01b60005233600452600060245260446000fd5b600081815260008051602061294d8339815191526020908152604080832033845290915290205460ff1615611d155750565b63e2517d3f60e01b6000523360045260245260446000fd5b6001600160a01b0381169392909190841561110257611d6960405192600184526020840152604083019160018352606084015260808301604052565b928151845190818103611e6f57505060005b8251811015611db8578060019160051b611db0611da887610e94602080868b010151958c010151946113b3565b9182546115ea565b905501611d7b565b509291936001825114600014611e335760208281015184820151604080519283529282015260009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629190a45b8051600103611e27579060208061165695930151910151916000336127f2565b611656936000336126bd565b60006040517f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb339180611e67888883612600565b0390a4611e07565b635b05999160e01b60005260045260245260446000fd5b6001600160a01b03811660009081527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d602052604090205460ff16611f20576001600160a01b031660008181527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d60205260408120805460ff1916600117905533919060008051602061290d8339815191528180a4600190565b50600090565b6001600160a01b03811660009081527f549fe2656c81d2947b3b913f0a53b9ea86c71e049f3a1b8aa23c09a8a05cb8d4602052604090205460ff16611f20576001600160a01b03811660009081527f549fe2656c81d2947b3b913f0a53b9ea86c71e049f3a1b8aa23c09a8a05cb8d460205260409020805460ff1916600117905533906001600160a01b03167f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a660008051602061290d833981519152600080a4600190565b6001600160a01b03811660009081527fab71e3f32666744d246edff3f96e4bdafee2e9867098cdd118a979a7464786a8602052604090205460ff16611f20576001600160a01b03811660009081527fab71e3f32666744d246edff3f96e4bdafee2e9867098cdd118a979a7464786a860205260409020805460ff1916600117905533906001600160a01b03167f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e360008051602061290d833981519152600080a4600190565b600081815260008051602061294d833981519152602090815260408083206001600160a01b038616845290915290205460ff1661214557600081815260008051602061294d833981519152602090815260408083206001600160a01b03861684529091529020805460ff1916600117905533916001600160a01b03169060008051602061290d833981519152600080a4600190565b5050600090565b600081815260008051602061294d833981519152602090815260408083206001600160a01b038616845290915290205460ff161561214557600081815260008051602061294d833981519152602090815260408083206001600160a01b03861684529091529020805460ff1916905533916001600160a01b0316907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b600080a4600190565b908160209103126101c1575190565b926001600160a01b0384169290919083156110ed5761223c60405192600184526020840152604083019160018352606084015260808301604052565b9190602091600060405161225085826106ca565b528151845190818103611e6f57505060005b82518110156122e2578060051b84808286010151918701015161228889610e94846113b3565b548181106122ab5789610e9460019594936122a49303936113b3565b5501612262565b6040516303dee4c560e01b81526001600160a01b038b16600482015260248101919091526044810182905260648101839052608490fd5b5094509091600093926001835114851461233a579182015191015160408051928352602083019190915233917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291819081015b0390a4565b506123357f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb91604051918291339583612600565b9493929091938451825190818103611e6f5750506001600160a01b0386811695861515959185168015159391929060005b8451811015612460578060051b90898988602080868b010151958c010151926123ef575b936001946123d5575b5050500161239f565b6123e591610e94611da8926113b3565b90553889816123cc565b505090916124008d610e94836113b3565b54828110612429578291898f612420600197968f950391610e94856113b3565b559094506123c3565b6040516303dee4c560e01b81526001600160a01b038f16600482015260248101919091526044810183905260648101829052608490fd5b5091989593929790965060018851146000146124f45760208881015186820151604080519283529282015233917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291a45b6124bd575b5050505050565b84516001036124e3576020806124d996015192015192336127f2565b38808080806124b6565b6124ef949192336126bd565b6124d9565b6040517f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb339180612526898d83612600565b0390a46124b1565b90813b156125b05760008051602061292d83398151915280546001600160a01b0319166001600160a01b0384169081179091557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a280511561259657611ad191612892565b50503461259f57565b63b398979f60e01b60005260046000fd5b50634c9c8ce360e01b60009081526001600160a01b0391909116600452602490fd5b60ff60008051602061296d8339815191525460401c16156125ef57565b631afcd79f60e31b60005260046000fd5b9091612617610350936040845260408401906108d4565b9160208184039101526108d4565b908160209103126101c157516103508161025c565b6001600160a01b0391821681529116602082015260a060408201819052610350949193919261267f929161267191908601906108d4565b9084820360608601526108d4565b91608081840391015261031a565b3d156126b8573d9061269e8261075f565b916126ac60405193846106ca565b82523d6000602084013e565b606090565b9091949293853b6126d1575b505050505050565b6020936126f391604051968795869563bc197c8160e01b87526004870161263a565b038160006001600160a01b0387165af160009181612788575b50612748575061271a61268d565b805191908261274157632bfa23e760e11b6000526001600160a01b03821660045260246000fd5b9050602001fd5b6001600160e01b0319166343e6837f60e01b0161276b57503880808080806126c9565b632bfa23e760e11b6000526001600160a01b031660045260246000fd5b6127ab91925060203d6020116127b2575b6127a381836106ca565b810190612625565b903861270c565b503d612799565b6001600160a01b039182168152911660208201526040810191909152606081019190915260a0608082018190526103509291019061031a565b9091949293853b61280557505050505050565b60209361282791604051968795869563f23a6e6160e01b8752600487016127b9565b038160006001600160a01b0387165af160009181612871575b5061284e575061271a61268d565b6001600160e01b031916630dc5919f60e01b0161276b57503880808080806126c9565b61288b91925060203d6020116127b2576127a381836106ca565b9038612840565b60008061035093602081519101845af46128aa61268d565b91906128d157508051156128c057805190602001fd5b63d6bda27560e01b60005260046000fd5b81511580612903575b6128e2575090565b639996b31560e01b60009081526001600160a01b0391909116600452602490fd5b50803b156128da56fe2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0088be536d5240c274a3b1d3a1be54482fd9caa294f08c62a7cde569f49a3c4502a26469706673582212208e75664aa1d99035665650b3bdc4f98de662bbc8c4777eaf7656f78e37a9da6964736f6c634300081b0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xFDD58E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x156E29F6 EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x47428E7B EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0xEF8593E7 EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xF62D1888 EQ PUSH2 0x133 JUMPI PUSH4 0xF72C0D8B EQ PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1378 JUMP JUMPDEST PUSH2 0x120F JUMP JUMPDEST PUSH2 0x1141 JUMP JUMPDEST PUSH2 0x1045 JUMP JUMPDEST PUSH2 0xFF4 JUMP JUMPDEST PUSH2 0xFC3 JUMP JUMPDEST PUSH2 0xF92 JUMP JUMPDEST PUSH2 0xF57 JUMP JUMPDEST PUSH2 0xF10 JUMP JUMPDEST PUSH2 0xE50 JUMP JUMPDEST PUSH2 0xE34 JUMP JUMPDEST PUSH2 0xDD4 JUMP JUMPDEST PUSH2 0xC40 JUMP JUMPDEST PUSH2 0xBAC JUMP JUMPDEST PUSH2 0xA4F JUMP JUMPDEST PUSH2 0x99C JUMP JUMPDEST PUSH2 0x919 JUMP JUMPDEST PUSH2 0x88E JUMP JUMPDEST PUSH2 0x858 JUMP JUMPDEST PUSH2 0x7CC JUMP JUMPDEST PUSH2 0x68E JUMP JUMPDEST PUSH2 0x536 JUMP JUMPDEST PUSH2 0x353 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0x1F0 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1C1 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1C1 JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1C1 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x20 PUSH2 0x253 PUSH2 0x20E PUSH2 0x1AB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x0 MSTORE PUSH32 0x88BE536D5240C274A3B1D3A1BE54482FD9CAA294F08C62A7CDE569F49A3C4500 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND SUB PUSH2 0x1C1 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x28B DUP2 PUSH2 0x25C JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x2B4 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x2E6 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x2D5 JUMPI JUMPDEST POP CODESIZE PUSH2 0x2A6 JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x2CE JUMP JUMPDEST PUSH4 0x3A24D07 PUSH1 0xE2 SHL DUP2 EQ SWAP2 POP PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x30A JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2FA JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x333 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x350 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x31A JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x0 PUSH1 0x4 CALLDATALOAD DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x4E9 JUMPI JUMPDEST DUP1 PUSH14 0x4EE2D6D415B85ACEF8100000000 PUSH1 0xA SWAP3 LT ISZERO PUSH2 0x4CD JUMPI JUMPDEST PUSH7 0x2386F26FC10000 DUP2 LT ISZERO PUSH2 0x4B8 JUMPI JUMPDEST PUSH4 0x5F5E100 DUP2 LT ISZERO PUSH2 0x4A6 JUMPI JUMPDEST PUSH2 0x2710 DUP2 LT ISZERO PUSH2 0x496 JUMPI JUMPDEST PUSH1 0x64 DUP2 LT ISZERO PUSH2 0x487 JUMPI JUMPDEST LT ISZERO PUSH2 0x47C JUMPI JUMPDEST PUSH2 0x419 PUSH1 0x21 PUSH2 0x3ED PUSH1 0x1 DUP6 ADD PUSH2 0x1B7A JUMP JUMPDEST SWAP4 DUP5 ADD ADD JUMPDEST PUSH1 0x0 NOT ADD SWAP2 PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP3 MOD BYTE DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV SWAP1 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x429 JUMPI PUSH2 0x419 SWAP1 PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x478 SWAP1 PUSH2 0x46C DUP2 PUSH2 0x45E PUSH2 0x44D DUP9 PUSH2 0x447 PUSH1 0x20 DUP6 ADD PUSH2 0x14A0 JUMP JUMPDEST SWAP1 PUSH2 0x1529 JUMP JUMPDEST PUSH5 0x173539B7B7 PUSH1 0xD9 SHL DUP2 MSTORE PUSH1 0x5 ADD SWAP1 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x33F JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x2 SWAP1 PUSH1 0x64 SWAP1 DIV SWAP4 ADD SWAP3 PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x4 SWAP1 PUSH2 0x2710 SWAP1 DIV SWAP4 ADD SWAP3 PUSH2 0x3CB JUMP JUMPDEST PUSH1 0x8 SWAP1 PUSH4 0x5F5E100 SWAP1 DIV SWAP4 ADD SWAP3 PUSH2 0x3C0 JUMP JUMPDEST PUSH1 0x10 SWAP1 PUSH7 0x2386F26FC10000 SWAP1 DIV SWAP4 ADD SWAP3 PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH14 0x4EE2D6D415B85ACEF8100000000 SWAP1 DIV SWAP4 ADD SWAP3 PUSH2 0x3A3 JUMP JUMPDEST POP PUSH1 0x40 SWAP2 POP PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP2 DIV PUSH2 0x389 JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1C1 JUMPI SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH2 0x544 CALLDATASIZE PUSH2 0x50C JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x54E PUSH2 0x1BAC JUMP JUMPDEST PUSH2 0x559 DUP4 ISZERO ISZERO PUSH2 0x1540 JUMP JUMPDEST PUSH2 0x564 DUP3 ISZERO ISZERO PUSH2 0x1581 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x5F4 JUMPI JUMPDEST PUSH2 0x5EF PUSH32 0x1ACE3364065011F2A2F041CCF777C9F5394104FB5C15EC40E2ED753531E33B21 SWAP2 PUSH2 0x5B5 DUP6 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x5C0 DUP6 DUP3 SLOAD PUSH2 0x15EA JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x5D5 PUSH2 0x5CD PUSH2 0xEFB JUMP JUMPDEST DUP6 DUP8 DUP5 PUSH2 0x1D2D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG3 STOP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x689 JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x1 SSTORE DUP2 LT ISZERO PUSH2 0x684 JUMPI PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD DUP4 SWAP1 SSTORE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH32 0x1ACE3364065011F2A2F041CCF777C9F5394104FB5C15EC40E2ED753531E33B21 SWAP2 PUSH2 0x5EF SWAP2 PUSH2 0x67C SWAP1 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x57C JUMP JUMPDEST PUSH2 0x15BE JUMP JUMPDEST PUSH2 0x6B4 JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x20 PUSH2 0x6AC PUSH1 0x4 CALLDATALOAD PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x689 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x689 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x1C1 JUMPI DUP2 CALLDATALOAD PUSH2 0x719 DUP2 PUSH2 0x6EB JUMP JUMPDEST SWAP3 PUSH2 0x727 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x6CA JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x1C1 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x74F JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x742 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x689 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x786 DUP3 PUSH2 0x75F JUMP JUMPDEST SWAP2 PUSH2 0x794 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x6CA JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x1C1 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x1C1 JUMPI DUP2 PUSH1 0x20 PUSH2 0x350 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x77A JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0x7E5 PUSH2 0x1AB JUMP JUMPDEST PUSH2 0x7ED PUSH2 0x1C6 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1C1 JUMPI PUSH2 0x80D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x702 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1C1 JUMPI PUSH2 0x82C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x702 JUMP JUMPDEST SWAP1 PUSH1 0x84 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 GT PUSH2 0x1C1 JUMPI PUSH2 0x850 PUSH2 0x856 SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x7B1 JUMP JUMPDEST SWAP4 PUSH2 0x161D JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0x856 PUSH1 0x4 CALLDATALOAD PUSH2 0x877 PUSH2 0x1C6 JUMP JUMPDEST SWAP1 PUSH2 0x889 PUSH2 0x884 DUP3 PUSH2 0x15FC JUMP JUMPDEST PUSH2 0x1CE3 JUMP JUMPDEST PUSH2 0x20B0 JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x8AA PUSH2 0x1C6 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x8C3 JUMPI PUSH2 0x856 SWAP2 PUSH2 0x214C JUMP JUMPDEST PUSH4 0x334BD919 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x8F2 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x8E5 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x350 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x8D4 JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x1 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 PUSH1 0x1 PUSH1 0x0 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x986 JUMPI PUSH2 0x478 DUP6 PUSH2 0x97A DUP2 DUP8 SUB DUP3 PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x908 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x963 JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1C1 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x1C1 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH2 0x9D8 DUP3 PUSH2 0x6EB JUMP JUMPDEST SWAP2 PUSH2 0x9E6 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x6CA JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x24 PUSH1 0x20 DUP5 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x1C1 JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xA37 JUMPI DUP4 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1C1 JUMPI PUSH2 0x478 SWAP2 PUSH2 0xA31 PUSH2 0x97A SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x702 JUMP JUMPDEST SWAP1 PUSH2 0x1684 JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0xA44 DUP5 PUSH2 0x1DC JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0xA63 PUSH2 0x1AB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1C1 JUMPI PUSH2 0xA82 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x7B1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0xB89 JUMPI JUMPDEST POP PUSH2 0xB78 JUMPI PUSH2 0xAC5 PUSH2 0x1C1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 PUSH1 0x20 DUP4 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND GAS STATICCALL PUSH1 0x0 SWAP4 DUP2 PUSH2 0xB47 JUMPI JUMPDEST POP PUSH2 0xB11 JUMPI PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x292D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 SUB PUSH2 0xB31 JUMPI PUSH2 0x856 SWAP3 POP PUSH2 0x252E JUMP JUMPDEST PUSH4 0x2A875269 PUSH1 0xE2 SHL PUSH1 0x0 MSTORE PUSH1 0x4 DUP4 SWAP1 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xB6A SWAP2 SWAP5 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB71 JUMPI JUMPDEST PUSH2 0xB62 DUP2 DUP4 PUSH2 0x6CA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x21F1 JUMP JUMPDEST SWAP3 CODESIZE PUSH2 0xAEE JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xB58 JUMP JUMPDEST PUSH4 0x703E46DD PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x292D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO SWAP1 POP CODESIZE PUSH2 0xAB8 JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0xB78 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x292D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1C1 JUMPI DUP1 PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x1C1 JUMPI DUP2 PUSH1 0x24 PUSH2 0x350 SWAP4 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x77A JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH2 0xC4E CALLDATASIZE PUSH2 0xC05 JUMP JUMPDEST PUSH2 0xC56 PUSH2 0x1C90 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xD9C JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x689 JUMPI PUSH2 0xC81 DUP2 PUSH2 0xC7C PUSH1 0x3 SLOAD PUSH2 0x1466 JUMP JUMPDEST PUSH2 0x171C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0xCF4 JUMPI SWAP2 PUSH2 0xCD5 DUP3 PUSH2 0xCE4 SWAP4 PUSH32 0x6741B2FC379FAD678116FE3D4D4B9A1A184AB53BA36B86AD0FA66340B1AB41AD SWAP6 PUSH1 0x0 SWAP2 PUSH2 0xCE9 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x33F JUMP JUMPDEST SUB SWAP1 LOG1 STOP JUMPDEST SWAP1 POP DUP4 ADD MLOAD CODESIZE PUSH2 0xCC1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE PUSH1 0x1F NOT DUP3 AND SWAP1 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xD84 JUMPI POP SWAP3 PUSH32 0x6741B2FC379FAD678116FE3D4D4B9A1A184AB53BA36B86AD0FA66340B1AB41AD SWAP5 SWAP3 PUSH1 0x1 SWAP3 DUP3 PUSH2 0xCE4 SWAP7 LT PUSH2 0xD6B JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH2 0x46C JUMP JUMPDEST DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0xD5E JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP10 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0xD24 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x496E76616C6964206261736520555249 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0xE28 PUSH1 0x4 CALLDATALOAD PUSH2 0xDF7 PUSH2 0x1C6 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x294D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0xE69 PUSH2 0x1AB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x1C1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP2 DUP3 ISZERO PUSH2 0xEE6 JUMPI PUSH2 0xEAB SWAP1 PUSH2 0xE94 CALLER PUSH2 0x13E2 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH3 0xCED3E1 PUSH1 0xE8 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0xF0A PUSH1 0x20 DUP4 PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0x478 PUSH1 0x40 DUP1 MLOAD SWAP1 PUSH2 0xF33 DUP2 DUP4 PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x5 DUP3 MSTORE PUSH5 0x352E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP4 ADD MSTORE MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x31A JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0x856 PUSH1 0x4 CALLDATALOAD PUSH2 0xFB1 PUSH2 0x1C6 JUMP JUMPDEST SWAP1 PUSH2 0xFBE PUSH2 0x884 DUP3 PUSH2 0x15FC JUMP JUMPDEST PUSH2 0x214C JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0xE28 PUSH2 0xFE3 PUSH2 0x1AB JUMP JUMPDEST PUSH2 0xE94 PUSH2 0xFEE PUSH2 0x1C6 JUMP JUMPDEST SWAP2 PUSH2 0x13E2 JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1013 DUP2 ISZERO ISZERO PUSH2 0x1540 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x102D PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x191D JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0x105E PUSH2 0x1AB JUMP JUMPDEST PUSH2 0x1066 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD SWAP3 PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1C1 JUMPI PUSH2 0x108D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x7B1 JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER DUP2 EQ ISZERO DUP1 PUSH2 0x1130 JUMPI JUMPDEST PUSH2 0x1118 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x1102 JUMPI ISZERO PUSH2 0x10ED JUMPI PUSH2 0x856 SWAP5 PUSH2 0x10E5 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH2 0x236E JUMP JUMPDEST PUSH3 0x6A0D45 PUSH1 0xE2 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x711BEC91 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x113B CALLER DUP5 PUSH2 0x1909 JUMP JUMPDEST ISZERO PUSH2 0x10A2 JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH2 0x5EF PUSH32 0xD215B5584879CAEECB087ED93B0D4013D83CED647FD0A905F4F54A948CF0EB8D PUSH2 0x1173 CALLDATASIZE PUSH2 0x50C JUMP JUMPDEST SWAP3 SWAP2 PUSH2 0x1180 SWAP5 SWAP2 SWAP5 PUSH2 0x1BAC JUMP JUMPDEST PUSH2 0x118B DUP6 ISZERO ISZERO PUSH2 0x1540 JUMP JUMPDEST PUSH2 0x1196 DUP5 ISZERO ISZERO PUSH2 0x1581 JUMP JUMPDEST DUP5 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x11B0 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x191D JUMP JUMPDEST DUP5 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0x11CA PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP6 GT ISZERO PUSH2 0x1969 JUMP JUMPDEST PUSH2 0x11E3 DUP5 PUSH2 0x11DB DUP4 PUSH2 0xE94 DUP10 PUSH2 0x13B3 JUMP JUMPDEST SLOAD LT ISZERO PUSH2 0x19B5 JUMP JUMPDEST PUSH2 0x11F7 DUP6 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1202 DUP6 DUP3 SLOAD PUSH2 0x19F8 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x5D5 DUP5 DUP7 DUP4 PUSH2 0x2200 JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH2 0x121D CALLDATASIZE PUSH2 0xC05 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x296D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x124F PUSH1 0xFF PUSH1 0x40 DUP6 SWAP1 SHR AND ISZERO SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 JUMP JUMPDEST AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x1370 JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x1366 JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x135D JUMPI JUMPDEST POP PUSH2 0x134C JUMPI PUSH2 0x12B0 SWAP1 DUP3 PUSH2 0x12A7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x296D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x296D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST PUSH2 0x1315 JUMPI PUSH2 0x1A05 JUMP JUMPDEST PUSH2 0x12B6 JUMPI STOP JUMPDEST PUSH2 0x12E2 PUSH1 0xFF PUSH1 0x40 SHL NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x296D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x296D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 DUP1 PUSH1 0x20 DUP2 ADD PUSH2 0xCE4 JUMP JUMPDEST PUSH2 0x1347 PUSH1 0x1 PUSH1 0x40 SHL PUSH1 0xFF PUSH1 0x40 SHL NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x296D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x296D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST PUSH2 0x1A05 JUMP JUMPDEST PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP ISZERO CODESIZE PUSH2 0x126B JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x1263 JUMP JUMPDEST DUP4 SWAP2 POP PUSH2 0x1259 JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 MSTORE PUSH32 0x88BE536D5240C274A3B1D3A1BE54482FD9CAA294F08C62A7CDE569F49A3C4500 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x88BE536D5240C274A3B1D3A1BE54482FD9CAA294F08C62A7CDE569F49A3C4501 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1462 SWAP2 PUSH1 0x0 MSTORE PUSH32 0x88BE536D5240C274A3B1D3A1BE54482FD9CAA294F08C62A7CDE569F49A3C4500 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1496 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1480 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1475 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x14B0 DUP3 PUSH2 0x1466 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1517 JUMPI POP PUSH1 0x1 EQ PUSH2 0x14C8 JUMPI POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP4 DUP3 LT PUSH2 0x1503 JUMPI POP POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP5 DUP7 ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x14F6 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP3 MSTORE POP DUP2 ISZERO ISZERO SWAP1 SWAP2 MUL ADD SWAP2 POP JUMP JUMPDEST SWAP1 PUSH2 0x153C PUSH1 0x20 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x2F7 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1547 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081C1C9BD91D58DD081251 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1588 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A5908185B5BDD5B9D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x15F7 JUMPI JUMP JUMPDEST PUSH2 0x15D4 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x294D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER DUP2 EQ ISZERO DUP1 PUSH2 0x1658 JUMPI JUMPDEST PUSH2 0x1118 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x1102 JUMPI ISZERO PUSH2 0x10ED JUMPI PUSH2 0x1656 SWAP5 PUSH2 0x236E JUMP JUMPDEST JUMP JUMPDEST POP PUSH1 0xFF PUSH2 0x1668 CALLER PUSH2 0xE94 DUP10 PUSH2 0x13E2 JUMP JUMPDEST SLOAD AND ISZERO PUSH2 0x1635 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x684 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 MLOAD DUP4 MLOAD DUP1 DUP3 SUB PUSH2 0x1705 JUMPI POP POP DUP1 MLOAD SWAP1 PUSH2 0x16A0 DUP3 PUSH2 0x6EB JUMP JUMPDEST SWAP2 PUSH2 0x16AE PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x6CA JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH2 0x16BD PUSH1 0x1F NOT SWAP2 PUSH2 0x6EB JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x16FE JUMPI DUP1 PUSH2 0x16ED PUSH1 0x1 SWAP3 PUSH1 0x5 SHL PUSH1 0x20 DUP1 DUP3 DUP8 ADD ADD MLOAD SWAP2 DUP10 ADD ADD MLOAD SWAP1 PUSH2 0x141B JUMP JUMPDEST PUSH2 0x16F7 DUP3 DUP7 PUSH2 0x1670 JUMP JUMPDEST MSTORE ADD PUSH2 0x16C7 JUMP JUMPDEST POP SWAP1 SWAP3 POP POP JUMP JUMPDEST PUSH4 0x5B059991 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1728 JUMPI POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 LT PUSH2 0x1765 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1759 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x174E JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1745 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x177B JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x298D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 LT PUSH2 0x17C5 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x17B9 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x17AE JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x17A5 JUMP JUMPDEST PUSH1 0x1F DUP3 GT PUSH2 0x17DC JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 LT PUSH2 0x1817 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x180B JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1800 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x17F7 JUMP JUMPDEST SWAP1 DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x689 JUMPI PUSH2 0x1848 DUP2 PUSH2 0x1841 PUSH1 0x3 SLOAD PUSH2 0x1466 JUMP JUMPDEST PUSH1 0x3 PUSH2 0x17CF JUMP JUMPDEST PUSH1 0x20 SWAP3 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x188A JUMPI PUSH2 0x187A SWAP3 SWAP4 DUP3 SWAP2 PUSH1 0x0 SWAP3 PUSH2 0x187F JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x1865 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE PUSH1 0x1F NOT DUP3 AND SWAP4 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP2 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT PUSH2 0x18F1 JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x18D8 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x18CD JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x18BA JUMP JUMPDEST PUSH1 0xFF SWAP2 PUSH2 0xE94 PUSH2 0x1918 SWAP3 PUSH2 0x13E2 JUMP JUMPDEST SLOAD AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1924 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6475637420494420646F6573206E6F7420657869737400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1970 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4275726E20616D6F756E74206578636565647320737570706C79000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x19BC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x15F7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 PUSH2 0x1A14 DUP2 DUP4 PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE PUSH2 0x1A20 PUSH2 0x25D2 JUMP JUMPDEST PUSH2 0x1A28 PUSH2 0x25D2 JUMP JUMPDEST DUP2 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x689 JUMPI PUSH2 0x1A5A DUP4 PUSH2 0x1A55 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x298D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0x1466 JUMP JUMPDEST PUSH2 0x176F JUMP JUMPDEST DUP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0x1AD4 JUMPI POP SWAP2 DUP1 PUSH2 0x1A8E SWAP3 PUSH2 0x1AB4 SWAP6 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x187F JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x298D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMPDEST PUSH2 0x1AA7 PUSH2 0x25D2 JUMP JUMPDEST PUSH2 0x1AAF PUSH2 0x25D2 JUMP JUMPDEST PUSH2 0x1821 JUMP JUMPDEST PUSH2 0x1ABD CALLER PUSH2 0x1E86 JUMP JUMPDEST POP PUSH2 0x1AC7 CALLER PUSH2 0x1F26 JUMP JUMPDEST POP PUSH2 0x1AD1 CALLER PUSH2 0x1FEB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x298D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 MSTORE SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND PUSH32 0xF429CB5E2EC84CBB765E76B31964A56CCDE03E7A6122D6CC4AFB19EDC55EDEED SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1B62 JUMPI POP POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP6 PUSH2 0x1AB4 SWAP8 SWAP7 SWAP5 LT PUSH2 0x1B49 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x298D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0x1A9F JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1B2E JUMP JUMPDEST DUP1 PUSH1 0x1 DUP7 SWAP8 DUP3 SWAP5 SWAP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP7 ADD SWAP5 ADD SWAP1 PUSH2 0x1B13 JUMP JUMPDEST SWAP1 PUSH2 0x1B84 DUP3 PUSH2 0x75F JUMP JUMPDEST PUSH2 0x1B91 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x6CA JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1BA2 PUSH1 0x1F NOT SWAP2 PUSH2 0x75F JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x549FE2656C81D2947B3B913F0A53B9EA86C71E049F3A1B8AA23C09A8A05CB8D4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1BE5 JUMPI JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAB71E3F32666744D246EDFF3F96E4BDAFEE2E9867098CDD118A979A7464786A8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1C57 JUMPI JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xB7DB2DD08FCB62D0C9E08C51941CAE53C267786A0B75803FB7960902FC8EF97D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1CC9 JUMPI JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x0 PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x294D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1D15 JUMPI POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP4 SWAP3 SWAP1 SWAP2 SWAP1 DUP5 ISZERO PUSH2 0x1102 JUMPI PUSH2 0x1D69 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP3 DUP2 MLOAD DUP5 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x1E6F JUMPI POP POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1DB8 JUMPI DUP1 PUSH1 0x1 SWAP2 PUSH1 0x5 SHL PUSH2 0x1DB0 PUSH2 0x1DA8 DUP8 PUSH2 0xE94 PUSH1 0x20 DUP1 DUP7 DUP12 ADD ADD MLOAD SWAP6 DUP13 ADD ADD MLOAD SWAP5 PUSH2 0x13B3 JUMP JUMPDEST SWAP2 DUP3 SLOAD PUSH2 0x15EA JUMP JUMPDEST SWAP1 SSTORE ADD PUSH2 0x1D7B JUMP JUMPDEST POP SWAP3 SWAP2 SWAP4 PUSH1 0x1 DUP3 MLOAD EQ PUSH1 0x0 EQ PUSH2 0x1E33 JUMPI PUSH1 0x20 DUP3 DUP2 ADD MLOAD DUP5 DUP3 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP3 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 CALLER SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 SWAP1 LOG4 JUMPDEST DUP1 MLOAD PUSH1 0x1 SUB PUSH2 0x1E27 JUMPI SWAP1 PUSH1 0x20 DUP1 PUSH2 0x1656 SWAP6 SWAP4 ADD MLOAD SWAP2 ADD MLOAD SWAP2 PUSH1 0x0 CALLER PUSH2 0x27F2 JUMP JUMPDEST PUSH2 0x1656 SWAP4 PUSH1 0x0 CALLER PUSH2 0x26BD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB CALLER SWAP2 DUP1 PUSH2 0x1E67 DUP9 DUP9 DUP4 PUSH2 0x2600 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x1E07 JUMP JUMPDEST PUSH4 0x5B059991 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xB7DB2DD08FCB62D0C9E08C51941CAE53C267786A0B75803FB7960902FC8EF97D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1F20 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xB7DB2DD08FCB62D0C9E08C51941CAE53C267786A0B75803FB7960902FC8EF97D PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x290D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x549FE2656C81D2947B3B913F0A53B9EA86C71E049F3A1B8AA23C09A8A05CB8D4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1F20 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x549FE2656C81D2947B3B913F0A53B9EA86C71E049F3A1B8AA23C09A8A05CB8D4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x290D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAB71E3F32666744D246EDFF3F96E4BDAFEE2E9867098CDD118A979A7464786A8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1F20 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAB71E3F32666744D246EDFF3F96E4BDAFEE2E9867098CDD118A979A7464786A8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x290D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x294D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2145 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x294D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x290D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x294D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2145 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x294D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1C1 JUMPI MLOAD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP3 SWAP1 SWAP2 SWAP1 DUP4 ISZERO PUSH2 0x10ED JUMPI PUSH2 0x223C PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x20 SWAP2 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x2250 DUP6 DUP3 PUSH2 0x6CA JUMP JUMPDEST MSTORE DUP2 MLOAD DUP5 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x1E6F JUMPI POP POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x22E2 JUMPI DUP1 PUSH1 0x5 SHL DUP5 DUP1 DUP3 DUP7 ADD ADD MLOAD SWAP2 DUP8 ADD ADD MLOAD PUSH2 0x2288 DUP10 PUSH2 0xE94 DUP5 PUSH2 0x13B3 JUMP JUMPDEST SLOAD DUP2 DUP2 LT PUSH2 0x22AB JUMPI DUP10 PUSH2 0xE94 PUSH1 0x1 SWAP6 SWAP5 SWAP4 PUSH2 0x22A4 SWAP4 SUB SWAP4 PUSH2 0x13B3 JUMP JUMPDEST SSTORE ADD PUSH2 0x2262 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP SWAP5 POP SWAP1 SWAP2 PUSH1 0x0 SWAP4 SWAP3 PUSH1 0x1 DUP4 MLOAD EQ DUP6 EQ PUSH2 0x233A JUMPI SWAP2 DUP3 ADD MLOAD SWAP2 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 DUP2 SWAP1 DUP2 ADD JUMPDEST SUB SWAP1 LOG4 JUMP JUMPDEST POP PUSH2 0x2335 PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB SWAP2 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH2 0x2600 JUMP JUMPDEST SWAP5 SWAP4 SWAP3 SWAP1 SWAP2 SWAP4 DUP5 MLOAD DUP3 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x1E6F JUMPI POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP6 DUP7 ISZERO ISZERO SWAP6 SWAP2 DUP6 AND DUP1 ISZERO ISZERO SWAP4 SWAP2 SWAP3 SWAP1 PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x2460 JUMPI DUP1 PUSH1 0x5 SHL SWAP1 DUP10 DUP10 DUP9 PUSH1 0x20 DUP1 DUP7 DUP12 ADD ADD MLOAD SWAP6 DUP13 ADD ADD MLOAD SWAP3 PUSH2 0x23EF JUMPI JUMPDEST SWAP4 PUSH1 0x1 SWAP5 PUSH2 0x23D5 JUMPI JUMPDEST POP POP POP ADD PUSH2 0x239F JUMP JUMPDEST PUSH2 0x23E5 SWAP2 PUSH2 0xE94 PUSH2 0x1DA8 SWAP3 PUSH2 0x13B3 JUMP JUMPDEST SWAP1 SSTORE CODESIZE DUP10 DUP2 PUSH2 0x23CC JUMP JUMPDEST POP POP SWAP1 SWAP2 PUSH2 0x2400 DUP14 PUSH2 0xE94 DUP4 PUSH2 0x13B3 JUMP JUMPDEST SLOAD DUP3 DUP2 LT PUSH2 0x2429 JUMPI DUP3 SWAP2 DUP10 DUP16 PUSH2 0x2420 PUSH1 0x1 SWAP8 SWAP7 DUP16 SWAP6 SUB SWAP2 PUSH2 0xE94 DUP6 PUSH2 0x13B3 JUMP JUMPDEST SSTORE SWAP1 SWAP5 POP PUSH2 0x23C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP SWAP2 SWAP9 SWAP6 SWAP4 SWAP3 SWAP8 SWAP1 SWAP7 POP PUSH1 0x1 DUP9 MLOAD EQ PUSH1 0x0 EQ PUSH2 0x24F4 JUMPI PUSH1 0x20 DUP9 DUP2 ADD MLOAD DUP7 DUP3 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP3 DUP3 ADD MSTORE CALLER SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 LOG4 JUMPDEST PUSH2 0x24BD JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP5 MLOAD PUSH1 0x1 SUB PUSH2 0x24E3 JUMPI PUSH1 0x20 DUP1 PUSH2 0x24D9 SWAP7 ADD MLOAD SWAP3 ADD MLOAD SWAP3 CALLER PUSH2 0x27F2 JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x24B6 JUMP JUMPDEST PUSH2 0x24EF SWAP5 SWAP2 SWAP3 CALLER PUSH2 0x26BD JUMP JUMPDEST PUSH2 0x24D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB CALLER SWAP2 DUP1 PUSH2 0x2526 DUP10 DUP14 DUP4 PUSH2 0x2600 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x24B1 JUMP JUMPDEST SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x25B0 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x292D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x2596 JUMPI PUSH2 0x1AD1 SWAP2 PUSH2 0x2892 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x259F JUMPI JUMP JUMPDEST PUSH4 0xB398979F PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST POP PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x296D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x25EF JUMPI JUMP JUMPDEST PUSH4 0x1AFCD79F PUSH1 0xE3 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP2 PUSH2 0x2617 PUSH2 0x350 SWAP4 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x8D4 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x8D4 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1C1 JUMPI MLOAD PUSH2 0x350 DUP2 PUSH2 0x25C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x350 SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 PUSH2 0x267F SWAP3 SWAP2 PUSH2 0x2671 SWAP2 SWAP1 DUP7 ADD SWAP1 PUSH2 0x8D4 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x8D4 JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x31A JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x26B8 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x269E DUP3 PUSH2 0x75F JUMP JUMPDEST SWAP2 PUSH2 0x26AC PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x6CA JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP5 SWAP3 SWAP4 DUP6 EXTCODESIZE PUSH2 0x26D1 JUMPI JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP4 PUSH2 0x26F3 SWAP2 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP6 PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0x263A JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x2788 JUMPI JUMPDEST POP PUSH2 0x2748 JUMPI POP PUSH2 0x271A PUSH2 0x268D JUMP JUMPDEST DUP1 MLOAD SWAP2 SWAP1 DUP3 PUSH2 0x2741 JUMPI PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x43E6837F PUSH1 0xE0 SHL ADD PUSH2 0x276B JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x26C9 JUMP JUMPDEST PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x27AB SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x27B2 JUMPI JUMPDEST PUSH2 0x27A3 DUP2 DUP4 PUSH2 0x6CA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2625 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x270C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2799 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x350 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x31A JUMP JUMPDEST SWAP1 SWAP2 SWAP5 SWAP3 SWAP4 DUP6 EXTCODESIZE PUSH2 0x2805 JUMPI POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP4 PUSH2 0x2827 SWAP2 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP6 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0x27B9 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x2871 JUMPI JUMPDEST POP PUSH2 0x284E JUMPI POP PUSH2 0x271A PUSH2 0x268D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xDC5919F PUSH1 0xE0 SHL ADD PUSH2 0x276B JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x26C9 JUMP JUMPDEST PUSH2 0x288B SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x27B2 JUMPI PUSH2 0x27A3 DUP2 DUP4 PUSH2 0x6CA JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x2840 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x350 SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL PUSH2 0x28AA PUSH2 0x268D JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x28D1 JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x28C0 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xD6BDA275 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x2903 JUMPI JUMPDEST PUSH2 0x28E2 JUMPI POP SWAP1 JUMP JUMPDEST PUSH4 0x9996B315 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x28DA JUMP INVALID 0x2F DUP8 DUP9 GT PUSH31 0x7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D360894A1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC02DD7BC7DEC4DCEEDDA775 0xE5 DUP14 0xD5 COINBASE 0xE0 DUP11 GT PUSH13 0x6C53815C0BD028192F7B626800 CREATE 0xC5 PUSH31 0x16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A0088BE MSTORE8 PUSH14 0x5240C274A3B1D3A1BE54482FD9CA LOG2 SWAP5 CREATE DUP13 PUSH3 0xA7CDE5 PUSH10 0xF49A3C4502A264697066 PUSH20 0x582212208E75664AA1D99035665650B3BDC4F98D 0xE6 PUSH3 0xBBC8C4 PUSH24 0x7EAF7656F78E37A9DA6964736F6C634300081B0033000000 ","sourceMap":"571:6173:41:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;571:6173:41;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;571:6173:41;;;;;;:::o;:::-;;;-1:-1:-1;;;;;571:6173:41;;;;;;:::o;:::-;;;;;;-1:-1:-1;;571:6173:41;;;;;3516:24:7;571:6173:41;;:::i;:::-;;;-1:-1:-1;571:6173:41;1999:65:7;571:6173:41;;;-1:-1:-1;571:6173:41;;;;;;;;;;;;;;;;;3516:24:7;571:6173:41;;;;;;;;-1:-1:-1;;;;;;571:6173:41;;;;;:::o;:::-;;;;;;-1:-1:-1;;571:6173:41;;;;;;;;;:::i;:::-;;;;;3566:32:3;;;3551:47;;:87;;;;;571:6173:41;-1:-1:-1;571:6173:41;;;;;;;;;;3551:87:3;-1:-1:-1;;;2567:41:7;;;-1:-1:-1;2567:109:7;;;;3551:87:3;2567:161:7;;;;3551:87:3;;;;;2567:161:7;-1:-1:-1;;;1134:40:11;;-1:-1:-1;2567:161:7;;;:109;-1:-1:-1;;;2624:52:7;;;-1:-1:-1;2567:109:7;;571:6173:41;;;;;;;;-1:-1:-1;;571:6173:41;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;571:6173:41;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;-1:-1:-1;;571:6173:41;;;;-1:-1:-1;571:6173:41;;;-1:-1:-1;;;29282:17:38;;;29278:103;;571:6173:41;29398:17:38;29407:8;29978:7;29398:17;;;29394:103;;571:6173:41;29523:8:38;29514:17;;;29510:103;;571:6173:41;29639:7:38;29630:16;;;29626:100;;571:6173:41;29752:7:38;29743:16;;;29739:100;;571:6173:41;29865:7:38;29856:16;;;29852:100;;571:6173:41;29969:16:38;;29965:66;;571:6173:41;1832:11:36;1545:92;1488:18;1450:1;571:6173:41;;1488:18:36;:::i;:::-;1520:11;1545:92;;;1650:247;-1:-1:-1;;571:6173:41;;-1:-1:-1;;;29978:7:38;1704:111:36;;;571:6173:41;1704:111:36;29978:7:38;571:6173:41;;;;1832:11:36;1865:10;;;1861:21;;1832:11;;1650:247;;1861:21;571:6173:41;;;;3428:55;571:6173;;;1877:5:36;571:6173:41;;3428:55;;571:6173;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;571:6173:41;;;;;;;3428:55;571:6173;;3428:55;;;;;;:::i;:::-;571:6173;;;;;;;:::i;:::-;;;;29965:66:38;30015:1;571:6173:41;;;;29965:66:38;;29852:100;29936:1;;29865:7;571:6173:41;;;;29852:100:38;;;29739;571:6173:41;;29752:7:38;571:6173:41;;;;29739:100:38;;;29626;29710:1;;29639:7;571:6173:41;;;;29626:100:38;;;29510:103;29596:2;;29523:8;571:6173:41;;;;29510:103:38;;;29394;571:6173:41;;29407:8:38;571:6173:41;;;;29394:103:38;;;29278;-1:-1:-1;29364:2:38;;-1:-1:-1;;;;571:6173:41;;29278:103:38;;571:6173:41;;;;;;;;;;;-1:-1:-1;;;;;571:6173:41;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;3202:4:3;;;;:::i;:::-;2610:44:41;2618:13;;;2610:44;:::i;:::-;2664:37;2672:10;;;2664:37;:::i;:::-;571:6173;2630:1;571:6173;2782:16;571:6173;;;;2630:1;571:6173;;;2781:28;2777:134;;571:6173;3012:36;;2920:25;;;2630:1;571:6173;2630:1;571:6173;;;2630:1;571:6173;;;2920:25;:35;571:6173;;;2920:35;:::i;:::-;571:6173;;2965:32;571:6173;;:::i;:::-;2965:32;;;;:::i;:::-;571:6173;;;;;-1:-1:-1;;;;;571:6173:41;;;;;;;;;;3012:36;;;;571:6173;2777:134;2825:11;571:6173;-1:-1:-1;;;571:6173:41;;;;;2825:11;571:6173;;;2825:11;571:6173;;;;;;;;;;;2630:1;571:6173;;;2782:16;571:6173;;;;;3012:36;;;;2866:34;;571:6173;;-1:-1:-1;;571:6173:41;2825:11;571:6173;;;;2866:34;2777:134;;;;;571:6173;;:::i;:::-;;:::i;:::-;;;;;;-1:-1:-1;;571:6173:41;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;571:6173:41;;;;;;;:::o;:::-;-1:-1:-1;;;;;571:6173:41;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;571:6173:41;;;;;;-1:-1:-1;;571:6173:41;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;571:6173:41;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;571:6173:41;;;;;;:::i;:::-;;;:::i;:::-;;;;-1:-1:-1;;;;;571:6173:41;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;571:6173:41;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;571:6173:41;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;-1:-1:-1;;571:6173:41;;;;5350:25:3;571:6173:41;;;;:::i;:::-;5320:18:3;3202:4;5320:18;;;:::i;:::-;3202:4;:::i;:::-;5350:25;:::i;571:6173:41:-;;;;;;-1:-1:-1;;571:6173:41;;;;;;;;:::i;:::-;966:10:8;-1:-1:-1;;;;;571:6173:41;;6441:34:3;6437:102;;6549:37;;;:::i;6437:102::-;6498:30;;;-1:-1:-1;6498:30:3;571:6173:41;-1:-1:-1;6498:30:3;571:6173:41;;;;;;;;;;;;;;-1:-1:-1;571:6173:41;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;571:6173:41;;;;;;;;4701:11;571:6173;;;;;;;4701:11;571:6173;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;4701:11;571:6173;;;;;;;;;;;;;-1:-1:-1;;571:6173:41;;;;;;-1:-1:-1;;;;;571:6173:41;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;571:6173:41;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;571:6173:41;;;;;;:::i;:::-;;;-1:-1:-1;;;;;571:6173:41;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;4667:6:6;571:6173:41;4658:4:6;4650:23;;;:120;;;;571:6173:41;4633:251:6;;;3202:4:3;;:::i;:::-;571:6173:41;;-1:-1:-1;;;6131:52:6;;571:6173:41;;;;;-1:-1:-1;;;;;571:6173:41;;6131:52:6;;-1:-1:-1;;6131:52:6;;;571:6173:41;-1:-1:-1;6127:437:6;;-1:-1:-1;;;;6493:60:6;-1:-1:-1;;;;;571:6173:41;;;;;-1:-1:-1;6493:60:6;6127:437;6225:40;-1:-1:-1;;;;;;;;;;;6225:40:6;;6221:120;;6403:4;;;;:::i;6221:120::-;-1:-1:-1;;;;6292:34:6;571:6173:41;;;;;-1:-1:-1;6493:60:6;6131:52;;;;;571:6173:41;6131:52:6;571:6173:41;6131:52:6;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;4633:251;4844:29;;;-1:-1:-1;4844:29:6;571:6173:41;-1:-1:-1;4844:29:6;4650:120;-1:-1:-1;;;;;;;;;;;571:6173:41;-1:-1:-1;;;;;571:6173:41;4728:42:6;;;-1:-1:-1;4650:120:6;;;571:6173:41;;;;;;-1:-1:-1;;571:6173:41;;;;5090:6:6;-1:-1:-1;;;;;571:6173:41;5081:4:6;5073:23;5069:145;;571:6173:41;;;-1:-1:-1;;;;;;;;;;;571:6173:41;;;;;-1:-1:-1;;571:6173:41;;;;;;;;-1:-1:-1;;;;;571:6173:41;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;3202:4:3;;:::i;:::-;571:6173:41;;3837:24;571:6173;;;;-1:-1:-1;;;;;571:6173:41;;;;;;;3893:17;571:6173;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;3925:22;571:6173;3925:22;571:6173;2362:4:3;571:6173:41;;;;;;;;;;;;;;;;;;;;;3893:17;571:6173;;;3925:22;;;;;:::i;:::-;;;;571:6173;;;;;;;;;;;3893:17;571:6173;;-1:-1:-1;;571:6173:41;;;;;2362:4:3;571:6173:41;;;;;;;;3925:22;571:6173;;;;;3925:22;571:6173;;;;;;;;;;3893:17;571:6173;;;;;;;;;;;3893:17;571:6173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;571:6173:41;;;;;;;;;;;;-1:-1:-1;;;571:6173:41;;;;;;;;;;;;;-1:-1:-1;;571:6173:41;;;;;;3901:31:3;571:6173:41;;;;:::i;:::-;;-1:-1:-1;571:6173:41;-1:-1:-1;;;;;;;;;;;571:6173:41;;;-1:-1:-1;571:6173:41;;;;;;;;;;;;;;;;;3901:31:3;571:6173:41;;;;;;;;;;;;;;;;-1:-1:-1;;571:6173:41;;;;;;;;;;;;;;;;;-1:-1:-1;;571:6173:41;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;571:6173:41;;;14791:22:7;;14787:94;;14890:37;966:10:8;14890:27:7;966:10:8;14890:27:7;:::i;:::-;571:6173:41;;;;;;;;;;;;;;;;14890:37:7;571:6173:41;;;;;;;;;;;;;;;;14953:41:7;571:6173:41;966:10:8;14953:41:7;;571:6173:41;14787:94:7;14836:34;;;-1:-1:-1;14836:34:7;-1:-1:-1;571:6173:41;;;-1:-1:-1;14836:34:7;571:6173:41;;;;;;;;:::i;:::-;2630:1;571:6173;;:::o;:::-;;;;;;-1:-1:-1;;571:6173:41;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;571:6173:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;571:6173:41;;;;;;;806:24;571:6173;;;;;;;;;-1:-1:-1;;571:6173:41;;;;5767:26:3;571:6173:41;;;;:::i;:::-;5737:18:3;3202:4;5737:18;;;:::i;3202:4::-;5767:26;:::i;571:6173:41:-;;;;;;-1:-1:-1;;571:6173:41;;;;;;4705:39:7;571:6173:41;;:::i;:::-;4705:29:7;571:6173:41;;:::i;:::-;;4705:29:7;:::i;571:6173:41:-;;;;;;-1:-1:-1;;571:6173:41;;;;;;4313:44;4321:13;;;4313:44;:::i;:::-;571:6173;-1:-1:-1;571:6173:41;4375:16;571:6173;;4367:65;571:6173;;-1:-1:-1;571:6173:41;;;4367:65;:::i;:::-;-1:-1:-1;571:6173:41;-1:-1:-1;571:6173:41;;;;-1:-1:-1;571:6173:41;;;;;;;;;;;;;;-1:-1:-1;;571:6173:41;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;571:6173:41;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;571:6173:41;;966:10:8;4984:14:7;;;;:49;;571:6173:41;4980:129:7;;-1:-1:-1;;;;;571:6173:41;;9573:16:7;9569:88;;9670:18;9666:88;;9902:4;9813:29;;15285:648;;;;;;;;;;;;;;;;;;;;;;;;;;15117:822;9813:29;9902:4;;;;:::i;9666:88::-;9711:32;;;-1:-1:-1;9711:32:7;-1:-1:-1;571:6173:41;;;-1:-1:-1;9711:32:7;9569:88;9612:34;;;-1:-1:-1;9612:34:7;-1:-1:-1;571:6173:41;;;-1:-1:-1;9612:34:7;4980:129;5056:42;;;-1:-1:-1;5056:42:7;966:10:8;571:6173:41;;;;;-1:-1:-1;5056:42:7;4984:49;966:10:8;5003:30:7;966:10:8;5003:30:7;;:::i;:::-;5002:31;4984:49;;571:6173:41;;;;5896:38;;571:6173;;;:::i;:::-;3202:4:3;;;;;;;:::i;:::-;5271:44:41;5279:13;;;5271:44;:::i;:::-;5325:37;5333:10;;;5325:37;:::i;:::-;571:6173;5291:1;571:6173;5446:16;571:6173;;5438:65;571:6173;;5291:1;571:6173;;;5438:65;:::i;:::-;571:6173;5291:1;571:6173;5291:1;571:6173;;5513:74;571:6173;5291:1;571:6173;;5521:35;;;5513:74;:::i;:::-;5598:69;3516:15:7;:24;:15;;;;:::i;:24::-;571:6173:41;5606:36;;5598:69;:::i;:::-;5725:25;;2630:1;571:6173;2630:1;571:6173;;;2630:1;571:6173;;;5725:25;:35;571:6173;;;5725:35;:::i;:::-;571:6173;;5865:6;;;;;:::i;571:6173::-;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;571:6173:41;;-1:-1:-1;;;;;571:6173:41;;;;;;;4301:16:5;571:6173:41;-1:-1:-1;;;;;571:6173:41;;;;;4724:16:5;;:34;;;;571:6173:41;4803:1:5;4788:16;:50;;;;571:6173:41;4853:13:5;:30;;;;571:6173:41;4849:91:5;;;5053:1;4949:18;;;571:6173:41;-1:-1:-1;;;;;571:6173:41;-1:-1:-1;;;;;;;;;;;571:6173:41;;;-1:-1:-1;;;;;;;;;;;571:6173:41;;4949:18:5;4977:67;;5053:1;:::i;:::-;5064:101;;571:6173:41;5064:101:5;5098:23;-1:-1:-1;;;571:6173:41;-1:-1:-1;;;;;;;;;;;571:6173:41;;-1:-1:-1;;;;;;;;;;;571:6173:41;;5098:23:5;571:6173:41;;4803:1:5;571:6173:41;;5140:14:5;;571:6173:41;;;;5140:14:5;571:6173:41;4977:67:5;5011:22;-1:-1:-1;;;;;;571:6173:41;-1:-1:-1;;;;;;;;;;;571:6173:41;;;-1:-1:-1;;;;;;;;;;;571:6173:41;;5011:22:5;5053:1;:::i;4849:91::-;4906:23;;;-1:-1:-1;4906:23:5;571:6173:41;-1:-1:-1;4906:23:5;4853:30;4870:13;;;4853:30;;;4788:50;4816:4;4808:25;:30;;-1:-1:-1;4788:50:5;;4724:34;;;-1:-1:-1;4724:34:5;;571:6173:41;;;;;;-1:-1:-1;;571:6173:41;;;;;;;876:26;571:6173;;;;;;1999:65:7;571:6173:41;;;;;;:::o;:::-;-1:-1:-1;;;;;571:6173:41;;;;;14890:20:7;571:6173:41;;;;;;:::o;3356:191:7:-;3516:24;3356:191;-1:-1:-1;571:6173:41;1999:65:7;571:6173:41;;;-1:-1:-1;571:6173:41;;;;;;;;;;;;;;;;;3516:24:7;571:6173:41;3356:191:7;:::o;571:6173:41:-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;3445:8;571:6173;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;3445:8;-1:-1:-1;571:6173:41;;;;;-1:-1:-1;571:6173:41;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;571:6173:41;;;-1:-1:-1;571:6173:41;;;;;;;;-1:-1:-1;571:6173:41:o;:::-;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;571:6173:41;;;;;;;;;;;;-1:-1:-1;;;571:6173:41;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;571:6173:41;;;;;;;;;;;;-1:-1:-1;;;571:6173:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;4759:191:3:-;-1:-1:-1;571:6173:41;-1:-1:-1;;;;;;;;;;;571:6173:41;;4919:24:3;571:6173:41;-1:-1:-1;571:6173:41;4919:24:3;571:6173:41;4759:191:3;:::o;5241:429:7:-;;;;;-1:-1:-1;;;;;571:6173:41;;966:10:8;5478:14:7;;;;:49;;5241:429;5474:129;;-1:-1:-1;;;;;571:6173:41;;10508:16:7;10504:88;;10605:18;10601:88;;10748:4;;;:::i;:::-;5241:429::o;5478:49::-;5497:30;571:6173:41;4705:39:7;966:10:8;4705:29:7;;;:::i;:39::-;571:6173:41;;5496:31:7;5478:49;;571:6173:41;;;;;;;;;;;;;;;:::o;3704:552:7:-;;;;571:6173:41;;;;3860:29:7;;;3856:121;;571:6173:41;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;4102:3:7;571:6173:41;;4081:19:7;;;;;16237:82:29;4140:68:7;571:6173:41;16237:82:29;;;571:6173:41;16237:82:29;;;;;;17035;;;;;4140:68:7;;:::i;:::-;4121:87;;;;:::i;:::-;571:6173:41;;4066:13:7;;4081:19;-1:-1:-1;4081:19:7;;-1:-1:-1;;3704:552:7:o;3856:121::-;3912:54;;;-1:-1:-1;3912:54:7;;571:6173:41;;;;-1:-1:-1;3912:54:7;571:6173:41;;;;;;;;:::o;:::-;3893:17;-1:-1:-1;571:6173:41;;-1:-1:-1;571:6173:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;571:6173:41;;;;;;;;;-1:-1:-1;571:6173:41;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;;;;;;;;571:6173:41;;-1:-1:-1;571:6173:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;571:6173:41;;;;;;;;;-1:-1:-1;571:6173:41;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;571:6173:41;;-1:-1:-1;571:6173:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;571:6173:41;;;;;;;;;-1:-1:-1;571:6173:41;;;;;;;;-1:-1:-1;;;;;571:6173:41;;;;;;;1943:18;571:6173;;:::i;:::-;1943:18;571:6173;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1943:18;571:6173;:::o;:::-;;;;-1:-1:-1;571:6173:41;;;;;1943:18;571:6173;;-1:-1:-1;;571:6173:41;;;;;;;;;;;;;;;;;;;;;;;;;;;1943:18;571:6173;:::o;:::-;;;;;;;1943:18;571:6173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4535:216:7;571:6173:41;4535:216:7;4705:29;:39;4535:216;4705:29;:::i;:39::-;571:6173:41;;4535:216:7;:::o;571:6173:41:-;;;;:::o;:::-;;;-1:-1:-1;;;571:6173:41;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;571:6173:41;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;571:6173:41;;;;;;;;;;;;-1:-1:-1;;;571:6173:41;;;;;;;;;;;;;;;;;:::o;1776:336::-;571:6173;;;;;;;:::i;:::-;;;;6891:76:5;;:::i;:::-;;;:::i;:::-;571:6173:41;;;-1:-1:-1;;;;;571:6173:41;;;;;;;-1:-1:-1;;;;;;;;;;;571:6173:41;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;571:6173:41;;6891:76:5;;:::i;:::-;;;:::i;:::-;571:6173:41;:::i;:::-;1971:42;2002:10;1971:42;:::i;:::-;;2023:35;2002:10;2023:35;:::i;:::-;;2068:37;2002:10;2068:37;:::i;:::-;;1776:336::o;571:6173::-;-1:-1:-1;;;;;;;;;;;571:6173:41;;;;-1:-1:-1;;571:6173:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;571:6173:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;4148:103:3:-;966:10:8;-1:-1:-1;571:6173:41;;;;;;;;;;;;4468:23:3;4464:108;;4148:103::o;4464:108::-;4514:47;;;-1:-1:-1;4514:47:3;966:10:8;4514:47:3;571:6173:41;806:24;571:6173;;;-1:-1:-1;4514:47:3;4148:103;966:10:8;-1:-1:-1;571:6173:41;;;;;;;;;;;;4468:23:3;4464:108;;4148:103::o;4464:108::-;4514:47;;;-1:-1:-1;4514:47:3;966:10:8;4514:47:3;571:6173:41;876:26;571:6173;;;-1:-1:-1;4514:47:3;4148:103;966:10:8;2362:4:3;571:6173:41;;;;;;;;;;;;4468:23:3;4464:108;;4148:103::o;4464:108::-;4514:47;;;2362:4;4514:47;966:10:8;4514:47:3;571:6173:41;2362:4:3;571:6173:41;;;2362:4:3;4514:47;4148:103;-1:-1:-1;571:6173:41;;;-1:-1:-1;;;;;;;;;;;571:6173:41;;;;;;;;966:10:8;571:6173:41;;;;;;;;;;4468:23:3;4464:108;;4148:103;:::o;4464:108::-;4514:47;;;-1:-1:-1;4514:47:3;966:10:8;4514:47:3;571:6173:41;;;;-1:-1:-1;4514:47:3;12105:346:7;-1:-1:-1;;;;;571:6173:41;;;12105:346:7;;;;12201:16;;12197:88;;12344:29;15285:648;;;;;;;;;;;;;;;;;;;;;;;;;;15117:822;12344:29;571:6173:41;;;;;6549:27:7;;;;6545:117;;6719:13;;12215:1;6750:3;571:6173:41;;6734:14:7;;;;;17035:82:29;571:6173:41;17035:82:29;;;7358:28:7;:19;17035:82:29;7358:15:7;17035:82:29;;;;;;;;;;;;7358:15:7;;:::i;:19::-;571:6173:41;;;7358:28:7;:::i;:::-;571:6173:41;;;6719:13:7;;6734:14;;;;;571:6173:41;;;7425:15:7;7421:288;571:6173:41;;;17035:82:29;;;;;;;;;571:6173:41;;;;;;;;;;-1:-1:-1;;966:10:8;;7571:45:7;;571:6173:41;7571:45:7;7421:288;571:6173:41;;;8620:15:7;571:6173:41;;17035:82:29;;;8840:4:7;17035:82:29;;;;;;;966:10:8;12215:1:7;966:10:8;8840:4:7;:::i;8616:362::-;8958:4;966:10:8;12215:1:7;966:10:8;8958:4:7;:::i;7421:288::-;12215:1;571:6173:41;;7652:46:7;966:10:8;7652:46:7;;;;;;;:::i;:::-;;;;7421:288;;6545:117;-1:-1:-1;;;12215:1:7;6599:52;;571:6173:41;;;;-1:-1:-1;6493:60:6;7270:387:3;-1:-1:-1;;;;;571:6173:41;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;571:6173:41;;;;;;;;;;;;;-1:-1:-1;;571:6173:41;7509:4:3;571:6173:41;;;966:10:8;;571:6173:41;-1:-1:-1;;;;;;;;;;;571:6173:41;;7532:40:3;7509:4;7586:11;:::o;7432:219::-;7628:12;571:6173:41;7628:12:3;:::o;7270:387::-;-1:-1:-1;;;;;571:6173:41;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;571:6173:41;;;;;;;;;;;;;;-1:-1:-1;;571:6173:41;7509:4:3;571:6173:41;;;966:10:8;;-1:-1:-1;;;;;571:6173:41;806:24;-1:-1:-1;;;;;;;;;;;;;7532:40:3;7509:4;7586:11;:::o;7270:387::-;-1:-1:-1;;;;;571:6173:41;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;571:6173:41;;;;;;;;;;;;;;-1:-1:-1;;571:6173:41;7509:4:3;571:6173:41;;;966:10:8;;-1:-1:-1;;;;;571:6173:41;876:26;-1:-1:-1;;;;;;;;;;;;;7532:40:3;7509:4;7586:11;:::o;7270:387::-;571:6173:41;;;;-1:-1:-1;;;;;;;;;;;571:6173:41;;;;;;;;-1:-1:-1;;;;;571:6173:41;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;571:6173:41;;;;;;;;-1:-1:-1;;;;;571:6173:41;;;;;;;;;;;-1:-1:-1;;571:6173:41;7509:4:3;571:6173:41;;;966:10:8;;-1:-1:-1;;;;;571:6173:41;;-1:-1:-1;;;;;;;;;;;;;7532:40:3;7509:4;7586:11;:::o;7432:219::-;7628:12;;571:6173:41;7628:12:3;:::o;7894:388::-;571:6173:41;;;;-1:-1:-1;;;;;;;;;;;571:6173:41;;;;;;;;-1:-1:-1;;;;;571:6173:41;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;571:6173:41;;;;;;;;-1:-1:-1;;;;;571:6173:41;;;;;;;;;;;-1:-1:-1;;571:6173:41;;;966:10:8;;-1:-1:-1;;;;;571:6173:41;;8157:40:3;-1:-1:-1;;8157:40:3;571:6173:41;8211:11:3;:::o;571:6173:41:-;;;;;;;;;;;:::o;13458:329:7:-;;-1:-1:-1;;;;;571:6173:41;;;13458:329:7;;;13537:18;;13533:88;;13680:29;15285:648;;;;;;;;;;;;;;;;;;;;;;;;;;15117:822;13680:29;571:6173:41;;;;13553:1:7;571:6173:41;;;;;;:::i;:::-;;;;;;6549:27:7;;;;6545:117;;6719:13;;13553:1;6750:3;571:6173:41;;6734:14:7;;;;;17035:82:29;;;;;;;;;;;;;;;6944:21:7;:15;;;;:::i;:21::-;571:6173:41;6987:19:7;;;6983:129;;571:6173:41;7228:15:7;571:6173:41;;;;7228:21:7;571:6173:41;;7228:15:7;;:::i;:21::-;571:6173:41;;6719:13:7;;6983:129;571:6173:41;;-1:-1:-1;;;7037:56:7;;-1:-1:-1;;;;;571:6173:41;;7037:56:7;;;571:6173:41;;;;;;;;;;;;;;;;;;;;;;7037:56:7;6734:14;;;;;;13553:1;6734:14;;571:6173:41;;;7425:15:7;571:6173:41;;;;17035:82:29;;;;;;;571:6173:41;;;;;;;;;;;;;966:10:8;;7571:45:7;;571:6173:41;;;;7571:45:7;;;;13458:329::o;7421:288::-;571:6173:41;7652:46:7;;571:6173:41;;;966:10:8;;;;7652:46:7;;;:::i;8294:700::-;;;;;;;571:6173:41;;;;6549:27:7;;;;6545:117;;-1:-1:-1;;;;;;;571:6173:41;;;;6884:18:7;;;;571:6173:41;;;7322:16:7;;;;6719:13;;571:6173:41;-1:-1:-1;6750:3:7;571:6173:41;;6734:14:7;;;;;17035:82:29;;;;;;;;;;;;;;;;;;;6880:424:7;;;6750:3;7318:83;571:6173:41;7318:83:7;;;6750:3;;;;571:6173:41;6719:13:7;;7318:83;7358:28;:15;;:19;:15;;:::i;:28::-;571:6173:41;;7318:83:7;;;;;6880:424;6944:15;;;;:21;:15;;;;:::i;:21::-;571:6173:41;6987:19:7;;;6983:129;;571:6173:41;;;;7228:21:7;571:6173:41;;;;;;7228:15:7;;;;:::i;:21::-;571:6173:41;6880:424:7;;;;;6983:129;571:6173:41;;-1:-1:-1;;;7037:56:7;;-1:-1:-1;;;;;571:6173:41;;7037:56:7;;;571:6173:41;;;;;;;;;;;;;;;;;;;;;;7037:56:7;6734:14;;;;;;;;;;;571:6173:41;;;7425:15:7;7421:288;571:6173:41;;;17035:82:29;;;;;;;;;571:6173:41;;;;;;;;;;966:10:8;;7571:45:7;;;7421:288;8535:453;;7421:288;8294:700;;;;;:::o;8535:453::-;571:6173:41;;;8620:15:7;571:6173:41;;17035:82:29;;8840:4:7;17035:82:29;;;;;;966:10:8;;8840:4:7;:::i;:::-;8535:453;;;;;;;8616:362;8958:4;966:10:8;;;;8958:4:7;:::i;:::-;8616:362;;7421:288;571:6173:41;;7652:46:7;966:10:8;7652:46:7;;;;;;;:::i;:::-;;;;7421:288;;2264:344:20;;1748:29;;:34;1744:119;;-1:-1:-1;;;;;;;;;;;571:6173:41;;-1:-1:-1;;;;;;571:6173:41;-1:-1:-1;;;;;571:6173:41;;;;;;;;2407:36:20;-1:-1:-1;;2407:36:20;571:6173:41;;2458:15:20;:11;;2489:53;;;:::i;2454:148::-;6163:9;;;6159:70;;2264:344::o;6159:70::-;6199:19;;;1781:1;6199:19;;1781:1;6199:19;1744:119;-1:-1:-1;;;;1781:1:20;1805:47;;;-1:-1:-1;;;;;571:6173:41;;;;1805:47:20;571:6173:41;;;1805:47:20;7082:141:5;571:6173:41;-1:-1:-1;;;;;;;;;;;571:6173:41;;;;7148:18:5;7144:73;;7082:141::o;7144:73::-;7189:17;;;-1:-1:-1;7189:17:5;;-1:-1:-1;7189:17:5;571:6173:41;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;571:6173:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;571:6173:41;;;;:::o;:::-;;;:::o;2521:1026:25:-;;;;;;2745:14;;2741:800;;2521:1026;;;;;;;:::o;2741:800::-;2783:78;571:6173:41;2783:78:25;571:6173:41;;;;;;;;;;;2783:78:25;;;;;;:::i;:::-;;571:6173:41;2762:1:25;-1:-1:-1;;;;;571:6173:41;;2783:78:25;;2762:1;;2783:78;;;2741:800;-1:-1:-1;2779:752:25;;3145:386;;;:::i;:::-;571:6173:41;;;;3195:18:25;;;-1:-1:-1;;;2762:1:25;3300:41;-1:-1:-1;;;;;571:6173:41;;;;;-1:-1:-1;6493:60:6;3191:326:25;3388:111;;2783:78;3388:111;;2779:752;-1:-1:-1;;;;;;571:6173:41;-1:-1:-1;;;2940:60:25;2936:194;;2779:752;2741:800;;;;;;;;2936:194;-1:-1:-1;;;2762:1:25;3070:41;-1:-1:-1;;;;;571:6173:41;;;;-1:-1:-1;6493:60:6;2783:78:25;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;571:6173:41;-1:-1:-1;;;;;571:6173:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1006:959:25:-;;;;;;1205:14;;1201:758;;1006:959;;;;;;:::o;1201:758::-;1243:71;571:6173:41;1243:71:25;571:6173:41;;;;;;;;;;;1243:71:25;;;;;;:::i;:::-;;571:6173:41;1222:1:25;-1:-1:-1;;;;;571:6173:41;;1243:71:25;;1222:1;;1243:71;;;1201:758;-1:-1:-1;1239:710:25;;1563:386;;;:::i;1239:710::-;-1:-1:-1;;;;;;571:6173:41;-1:-1:-1;;;1363:55:25;1359:189;;1239:710;1201:758;;;;;;;;1243:71;;;;;;;;;;;;;;;:::i;:::-;;;;;3916:253:28;4065:25;3916:253;4107:55;3916:253;4065:25;;;;;;;;;;:::i;:::-;4107:55;4437:582;4609:8;;-1:-1:-1;571:6173:41;;5690:21:28;:17;;5815:158;;;;;;5686:354;6010:19;;;5710:1;6010:19;;5710:1;6010:19;4605:408;571:6173:41;;4857:22:28;:49;;;4605:408;4853:119;;4985:17;;:::o;4853:119::-;-1:-1:-1;;;4878:1:28;4933:24;;;-1:-1:-1;;;;;571:6173:41;;;;4933:24:28;571:6173:41;;;4933:24:28;4857:49;4883:18;;;:23;4857:49;"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","MINTER_ROLE()":"d5391393","UPGRADER_ROLE()":"f72c0d8b","UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","burn(address,uint256,uint256)":"f5298aca","getProductIds()":"47428e7b","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","initialize(string)":"f62d1888","isApprovedForAll(address,address)":"e985e9c5","mint(address,uint256,uint256)":"156e29f6","productSupply(uint256)":"ef8593e7","proxiableUUID()":"52d1902d","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","setBaseURI(string)":"55f804b3","supportsInterface(bytes4)":"01ffc9a7","upgradeToAndCall(address,bytes)":"4f1ef286","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newUri\",\"type\":\"string\"}],\"name\":\"BaseURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProductBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProductMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProductIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"baseUri\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"}],\"name\":\"productSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newUri\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Upgradeable implementation of an ERC1155 token for products with role-based access control\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"burn(address,uint256,uint256)\":{\"details\":\"Burns tokens from a specific address\",\"params\":{\"amount\":\"Amount of tokens to burn\",\"from\":\"Address from which to burn tokens\",\"productId\":\"ID of the product to burn\"}},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"getProductIds()\":{\"details\":\"Returns an array of all existing product IDs\",\"returns\":{\"_0\":\"Array of product IDs that have been created\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"initialize(string)\":{\"details\":\"Initializer replaces the constructor for upgradeable contracts\",\"params\":{\"baseUri\":\"Initial base URI for token metadata\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"mint(address,uint256,uint256)\":{\"details\":\"Mints tokens for a specific product ID to an address\",\"params\":{\"amount\":\"The amount of tokens to mint\",\"productId\":\"The ID of the product to mint\",\"to\":\"The address that will receive the minted tokens\"}},\"productSupply(uint256)\":{\"details\":\"Gets the current supply of tokens for a specific product ID\",\"params\":{\"productId\":\"ID of the product to query\"},\"returns\":{\"_0\":\"Current total supply of the product tokens\"}},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"setBaseURI(string)\":{\"details\":\"Updates the base URI for all token metadata\",\"params\":{\"newUri\":\"New base URI to set\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\",\"params\":{\"interfaceId\":\"The interface identifier to check support for\"},\"returns\":{\"_0\":\"bool True if the contract supports the interface\"}},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for a given token ID\",\"params\":{\"tokenId\":\"The ID of the token to query\"},\"returns\":{\"_0\":\"The URI string for the token metadata\"}}},\"title\":\"ProductTokenUpgradeable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(address,uint256,uint256)\":{\"notice\":\"Only accounts with MINTER_ROLE can call this functionWill revert if the product ID does not exist or amount exceeds supplyWill revert if the target address has insufficient balance\"},\"mint(address,uint256,uint256)\":{\"notice\":\"Only accounts with MINTER_ROLE can call this functionIf the product ID doesn't exist yet, it will be created\"},\"productSupply(uint256)\":{\"notice\":\"Will revert if the product ID does not exist or is invalid\"},\"setBaseURI(string)\":{\"notice\":\"Only accounts with DEFAULT_ADMIN_ROLE can call this functionEmpty strings are not allowed as URIs\"},\"supportsInterface(bytes4)\":{\"notice\":\"This implementation supports both ERC1155 and AccessControl interfaces\"},\"uri(uint256)\":{\"notice\":\"URI is constructed by concatenating the base URI, the token ID, and '.json'\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ProductTokenUpgradeable.sol\":\"ProductTokenUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da\",\"dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol\":{\"keccak256\":\"0x3a0d63838dff3fd8b77c8c44ecf37cc39b15f26fd5269da3b690879478fa3cf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://502cec8d2ef132cce69840b1c2aef2209092554292a50d628b27477ef7a441ca\",\"dweb:/ipfs/QmaSxcHDndhVuWm4E6LcSMRkhFYsMXxrgLWMLCQnyG3qHr\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x1d7a05b3219532ea5ece50a80cf390cac9109dc74e07763adfa463ab5a3af0dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://687e2ec572d0e63827bb0025b91f2246be4c938f830ef4b4c288ee2e3727d5ca\",\"dweb:/ipfs/QmZXWSAQ9ftVrqNEa5ZTpN4wxvzCgsSW12cgiSRkrLTpQ8\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x22f099c02c252dd1f6ddc464916ce683294a63b23b3c6ee3d290b77398e2474b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82d2ba4b77ecc4f70211e0de1a920e3ea29eb86c3e16ef8f2a7d746c72a97f1e\",\"dweb:/ipfs/QmYBqATARQEnxd33jW6iYCuEPaL6KdYyYSoQrjFXZka3of\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/ProductTokenUpgradeable.sol\":{\"keccak256\":\"0xaf50b2a1429b5762229e67af499d3f3915a15d02ec3043ca572b4fe946b8888a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b0593f86ba7608b376e70d0c330d051d833415f5020c0352ba685010b8fc444\",\"dweb:/ipfs/QmVqaDqNPgqSfTxhkg4ChyuE4PxzY4kXMNPiqUfifSpJLe\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":10942,"contract":"contracts/ProductTokenUpgradeable.sol:ProductTokenUpgradeable","label":"_productSupply","offset":0,"slot":"0","type":"t_mapping(t_uint256,t_uint256)"},{"astId":10945,"contract":"contracts/ProductTokenUpgradeable.sol:ProductTokenUpgradeable","label":"_productIds","offset":0,"slot":"1","type":"t_array(t_uint256)dyn_storage"},{"astId":10949,"contract":"contracts/ProductTokenUpgradeable.sol:ProductTokenUpgradeable","label":"_productIdExists","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_bool)"},{"astId":10951,"contract":"contracts/ProductTokenUpgradeable.sol:ProductTokenUpgradeable","label":"_baseUri","offset":0,"slot":"3","type":"t_string_storage"}],"types":{"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_uint256,t_bool)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"contracts/USDCFundraiserFactoryUpgradeable.sol":{"IProductToken":{"abi":[{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"productId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"productId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"burn(address,uint256,uint256)":"f5298aca","mint(address,uint256,uint256)":"156e29f6"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/USDCFundraiserFactoryUpgradeable.sol\":\"IProductToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"keccak256\":\"0x8c97744adc25cf30d1a2509bff6c0ddc9b36feb75f8e38c85d5c62b8ec773159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c53c8736dacbf8c517c63937d556c3e4873a62f509c5d84b89e32fc5c9c6c2c\",\"dweb:/ipfs/QmeR6RSce5dTDcPgbwBnG7E8U89716bqsUcv1NeWnX5RJf\"]},\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":{\"keccak256\":\"0xce623f3e7fa4addf240032d2817b2b489ac08e79fae14a5cc5850ed3f1acddf8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0546b2739f3989b897c5cb591d01211e2db22e1a8578f68117f1a8a692abd85c\",\"dweb:/ipfs/QmW6guw8uUk2Dq49PWdjeZeEvnDDRg3CVX2BVcVNcT6QNL\"]},\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e35eb46dfadf12396e92dd970547209dfd99f0ae5b1ec7b5a3e81617f620a1\",\"dweb:/ipfs/Qmanoi2CDi9MwkP44HosagvewfMEvCMN1YthGRmCexVjwY\"]},\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da\",\"dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol\":{\"keccak256\":\"0x3a0d63838dff3fd8b77c8c44ecf37cc39b15f26fd5269da3b690879478fa3cf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://502cec8d2ef132cce69840b1c2aef2209092554292a50d628b27477ef7a441ca\",\"dweb:/ipfs/QmaSxcHDndhVuWm4E6LcSMRkhFYsMXxrgLWMLCQnyG3qHr\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf\",\"dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x7162fa3c6971aa6f0a70160fed018edbb8b1db3af9b034ef3f7c224c3bdb7431\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f212d25e8f357209838ad7ce8ebc89de79906d9fe580566962e889ecb090e6b4\",\"dweb:/ipfs/QmdbLuLwX24VB1Gdrabke584WyaUkuJSWuDzzuRgqAMFge\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x1d7a05b3219532ea5ece50a80cf390cac9109dc74e07763adfa463ab5a3af0dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://687e2ec572d0e63827bb0025b91f2246be4c938f830ef4b4c288ee2e3727d5ca\",\"dweb:/ipfs/QmZXWSAQ9ftVrqNEa5ZTpN4wxvzCgsSW12cgiSRkrLTpQ8\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x22f099c02c252dd1f6ddc464916ce683294a63b23b3c6ee3d290b77398e2474b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82d2ba4b77ecc4f70211e0de1a920e3ea29eb86c3e16ef8f2a7d746c72a97f1e\",\"dweb:/ipfs/QmYBqATARQEnxd33jW6iYCuEPaL6KdYyYSoQrjFXZka3of\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/ProductTokenUpgradeable.sol\":{\"keccak256\":\"0xaf50b2a1429b5762229e67af499d3f3915a15d02ec3043ca572b4fe946b8888a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b0593f86ba7608b376e70d0c330d051d833415f5020c0352ba685010b8fc444\",\"dweb:/ipfs/QmVqaDqNPgqSfTxhkg4ChyuE4PxzY4kXMNPiqUfifSpJLe\"]},\"contracts/USDCFundraiserFactoryUpgradeable.sol\":{\"keccak256\":\"0x36cd04672debe4a56b6931a345327ef38c8e11ebed91c567c218218fb8f400f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8b9fb723c4f7c71c71d4055ade6b792622b07523165a4b66ffff25c8de6261b\",\"dweb:/ipfs/QmQv27tu9o3ffsLd9RuCYtQHru1boN4J68EdVQzqz8pocF\"]},\"contracts/USDCFundraiserUpgradeable.sol\":{\"keccak256\":\"0xde60b5784ce070f31aa839bf40c6f30b3963984c69de35087f137d3cd9b9f15e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1aefd54d126921fec4ba0859a10a59deb889bce94f8da8327cb8c423597c5d49\",\"dweb:/ipfs/QmedgoXSBEdycEJNieWEhPiBa5f8vRDfjKxEX7dAjr57rC\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"USDCFundraiserFactoryUpgradeable":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"fundraiser","type":"address"},{"indexed":true,"internalType":"address","name":"creator","type":"address"}],"name":"FundraiserCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newImplementation","type":"address"}],"name":"ImplementationUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"fundraiser","type":"address"},{"indexed":true,"internalType":"uint256","name":"originalProductId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"uniqueProductId","type":"uint256"}],"name":"ProductIdMapped","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newProductToken","type":"address"}],"name":"ProductTokenUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"BASIS_POINTS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"givenProductTokenAddress","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"productId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnForFundraiser","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newFeePercentage","type":"uint256"}],"name":"changeDefaultFeePercentage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newFeeWallet","type":"address"}],"name":"changeFeeWallet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"beneficiaryWallet","type":"address"},{"internalType":"uint256","name":"fundingType","type":"uint256"},{"internalType":"uint256","name":"minimumTarget","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"components":[{"internalType":"uint256","name":"productId","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"supplyLimit","type":"uint256"}],"internalType":"struct ProductConfig[]","name":"products","type":"tuple[]"}],"name":"createFundraiser","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"defaultFeePercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"deployedFundraisers","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeWallet","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fundraiserImplementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getDeployedFundraiser","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDeployedFundraisersCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFeeWallet","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_usdcAddress","type":"address"},{"internalType":"address","name":"_productTokenAddress","type":"address"},{"internalType":"uint256","name":"_defaultFeePercentage","type":"uint256"},{"internalType":"address","name":"_feeWallet","type":"address"},{"internalType":"address","name":"_fundraiserImplementation","type":"address"},{"internalType":"address","name":"_initialOwner","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isFundraiser","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"givenProductTokenAddress","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"productId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mintForFundraiser","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"productTokenAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"updateFundraiserImplementation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newProductToken","type":"address"}],"name":"updateProductTokenAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"usdcAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a080604052346100ea57306080527ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460ff8160401c166100d9576002600160401b03196001600160401b03821601610073575b60405161155d90816100f0823960805181818161084401526109150152f35b6001600160401b0319166001600160401b039081177ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005581527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a13880610054565b63f92ee8a960e01b60005260046000fd5b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c90816302d45457146111a45750806306f5e01814610ce85780632022285914610cbd578063270a2a6514610c045780633119e4b414610bdb578063396f970114610bb257806339d2c66914610b325780633e4d031014610ae65780634f1ef2861461089957806352d1902d146108315780635459060d1461041857806363025e97146107c2578063715018a6146107585780637a84379c146106e95780637f7977d1146106aa5780638ca0ebc6146105c85780638da5cb5b14610592578063ad3cb1cc14610518578063b4824034146104fa578063be531076146104dc578063e1f1c4a7146104bf578063eb85469014610441578063f25f4b5614610418578063f2fde38b146103f05763ff9935cb1461013457600080fd5b346103ed5760c03660031901126103ed5761014d6111c8565b6024356001600160a01b038116908190036103eb576064356001600160a01b038116908190036103e7576084356001600160a01b03811692908390036103e35760a435936001600160a01b038516908186036103df57600080516020611508833981519152549560ff8760401c16159667ffffffffffffffff8116801590816103d7575b60011490816103cd575b1590816103c4575b506103b55767ffffffffffffffff19811660011760008051602061150883398151915255610228919088610388575b5061021b611438565b610223611438565b61138c565b610230611438565b6001600160a01b031690811561034c5761024b8315156112fb565b6102568415156112ba565b610261851515611347565b15610317576001600160601b0360a01b8654161785556001600160601b0360a01b60015416176001556044356002556001600160601b0360a01b60035416176003556001600160601b0360a01b60045416176004556102bd5780f35b68ff0000000000000000196000805160206115088339815191525416600080516020611508833981519152557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a180f35b60405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b21037bbb732b960991b6044820152606490fd5b60405162461bcd60e51b8152602060048201526014602482015273496e76616c69642055534443206164647265737360601b6044820152606490fd5b68ffffffffffffffffff191668010000000000000001176000805160206115088339815191525538610212565b63f92ee8a960e01b8952600489fd5b905015386101e3565b303b1591506101db565b8991506101d1565b8680fd5b8480fd5b8380fd5b825b80fd5b50346103ed5760203660031901126103ed5761041561040d6111c8565b610223611402565b80f35b50346103ed57806003193601126103ed576003546040516001600160a01b039091168152602090f35b50346103ed5760203660031901126103ed576004356005548110156104845761046b60209161121b565b905460405160039290921b1c6001600160a01b03168152f35b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606490fd5b50346103ed57806003193601126103ed5760206040516127108152f35b50346103ed57806003193601126103ed576020600554604051908152f35b50346103ed57806003193601126103ed576020600254604051908152f35b50346103ed57806003193601126103ed57604080519161053882846111e3565b60058352640352e302e360dc1b6020840152815192839160208352815191826020850152815b83811061057b575050828201840152601f01601f19168101030190f35b60208282018101518883018801528795500161055e565b50346103ed57806003193601126103ed576000805160206114c8833981519152546040516001600160a01b039091168152602090f35b50346103ed576105d73661124c565b919091338552600660205260ff604086205416156106655784936001600160a01b0316803b156103e357604051630ab714fb60e11b81526001600160a01b039093166004840152602483019390935260448201529082908290818381606481015b03925af1801561065a576106495750f35b81610653916111e3565b6103ed5780f35b6040513d84823e3d90fd5b60405162461bcd60e51b815260206004820152601960248201527f4f6e6c792066756e64726169736572732063616e206d696e74000000000000006044820152606490fd5b50346103ed5760203660031901126103ed5760209060ff906040906001600160a01b036106d56111c8565b168152600684522054166040519015158152f35b50346103ed5760203660031901126103ed576107036111c8565b61070b611402565b6001600160a01b031661071f811515611347565b600480546001600160a01b031916821790557f310ba5f1d2ed074b51e2eccd052a47ae9ab7c6b800d1fca3db3999d6a592ca038280a280f35b50346103ed57806003193601126103ed57610771611402565b6000805160206114c883398151915280546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346103ed5760203660031901126103ed576107dc6111c8565b6107e4611402565b6001600160a01b03166107f88115156112fb565b600180546001600160a01b031916821790557f46cec2ff6f514e8ed0cc9f2a26c0135dd76e3943279345141bcba88a5af63f518280a280f35b50346103ed57806003193601126103ed577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316300361088a5760206040516000805160206114e88339815191528152f35b63703e46dd60e11b8152600490fd5b5060403660031901126103ed576108ae6111c8565b6024359067ffffffffffffffff82116103eb57366023830112156103eb57816004013590836108dc8361128a565b936108ea60405195866111e3565b838552602085019336602482840101116103eb57806024602093018637850101526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016308114908115610ac3575b50610ab45761094d611402565b6040516352d1902d60e01b81526001600160a01b0382169390602081600481885afa869181610a80575b5061099057634c9c8ce360e01b86526004859052602486fd5b93846000805160206114e8833981519152879603610a6e5750823b15610a5c576000805160206114e883398151915280546001600160a01b031916821790558491907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8380a2805115610a4157610a359382915190845af43d15610a39573d91610a198361128a565b92610a2760405194856111e3565b83523d85602085013e611466565b5080f35b606091611466565b5050505034610a4d5780f35b63b398979f60e01b8152600490fd5b634c9c8ce360e01b8552600452602484fd5b632a87526960e21b8652600452602485fd5b9091506020813d602011610aac575b81610a9c602093836111e3565b810103126103df57519038610977565b3d9150610a8f565b63703e46dd60e11b8452600484fd5b6000805160206114e8833981519152546001600160a01b03161415905038610940565b50346103ed5760203660031901126103ed57610b006111c8565b610b08611402565b6001600160a01b0316610b1c8115156112ba565b6001600160601b0360a01b600354161760035580f35b50346103ed5760203660031901126103ed57600435610b4f611402565b612710811015610b5f5760025580f35b60405162461bcd60e51b815260206004820152602560248201527f4665652070657263656e74616765206d757374206265206c657373207468616e604482015264203130302560d81b6064820152608490fd5b50346103ed57806003193601126103ed576001546040516001600160a01b039091168152602090f35b50346103ed57806003193601126103ed576004546040516001600160a01b039091168152602090f35b50346103ed57610c133661124c565b919091338552600660205260ff60408620541615610c785784936001600160a01b0316803b156103e357604051637a94c56560e11b81526001600160a01b03909316600484015260248301939093526044820152908290829081838160648101610638565b60405162461bcd60e51b815260206004820152601960248201527f4f6e6c792066756e64726169736572732063616e206275726e000000000000006044820152606490fd5b50346103ed5760203660031901126103ed57600435906005548210156103ed57602061046b8361121b565b50346103ed5760a03660031901126103ed57610d026111c8565b608435916064359167ffffffffffffffff84116111a057366023850112156111a05783600401359067ffffffffffffffff821161118c5760405194610d4d60208460051b01876111e3565b8286526020860190602460608395028201019036821161118857602401915b818310611125575050506001600160a01b03169081156110ea57428411156110b25784511561107f57600454608881901c62ffffff16763d602d80600a3d3981f3363d3d373d3d3d363d7300000017845260781b6effffffffffffffffffffffffffffff19166e5af43d82803e903d91602b57fd5bf3176020526001600160a01b036037600985f0169384156110705783546003546002546001546000805160206114c8833981519152546001600160a01b0390811695948116949181169391929116893b1561106c57969492909188969492604051988997635cb0407960e01b895261018489019560048a0152602489015260448801526064870152602435608487015260443560a487015260c486015260e48501523061010485015261018061012485015288518091526101a484019290855b81811061103657505033610144850152506101648301528190038183875af1801561065a57611026575b5090815b8351811015610f8857610ee281856112a6565b51519060405191638500efa160e01b83526004830152602082602481865afa8015610f7d578490610f49575b60019250610f1c82876112a6565b5151847f1bcb4157b04f9d491f72619552c6b6c11567e00613bbb243fffe8e7a7e5e83368780a401610ecf565b50906020813d8211610f75575b81610f63602093836111e3565b810103126103e7579060019151610f0e565b3d9150610f56565b6040513d86823e3d90fd5b5090600554916801000000000000000083101561101257610fb18360016020950160055561121b565b81546001600160a01b0360039290921b91821b19169083901b179055808252600683526040808320805460ff191660011790555191339082907fa2398daac0c8053a1e3c0280916c2ec6bc884f0959c27e639a4db829b7eabfb19080a38152f35b634e487b7160e01b82526041600452602482fd5b81611030916111e3565b38610ecb565b92945092819550606060209160406001945180518352848101518584015201516040820152019501910190869492869492610ea1565b8880fd5b63b06ebf3d60e01b8452600484fd5b60405162461bcd60e51b815260206004820152600b60248201526a4e6f2070726f647563747360a81b6044820152606490fd5b60405162461bcd60e51b815260206004820152601060248201526f496e76616c696420646561646c696e6560801b6044820152606490fd5b60405162461bcd60e51b8152602060048201526013602482015272496e76616c69642062656e656669636961727960681b6044820152606490fd5b606083360312611188576040516060810181811067ffffffffffffffff821117611174579160209160609360405285358152828601358382015260408601356040820152815201920191610d6c565b634e487b7160e01b88526041600452602488fd5b8580fd5b634e487b7160e01b83526041600452602483fd5b5080fd5b9050346111a057816003193601126111a05790546001600160a01b03168152602090f35b600435906001600160a01b03821682036111de57565b600080fd5b90601f8019910116810190811067ffffffffffffffff82111761120557604052565b634e487b7160e01b600052604160045260246000fd5b60055481101561123657600560005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b60809060031901126111de576004356001600160a01b03811681036111de57906024356001600160a01b03811681036111de57906044359060643590565b67ffffffffffffffff811161120557601f01601f191660200190565b80518210156112365760209160051b010190565b156112c157565b60405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a5908199959481dd85b1b195d60721b6044820152606490fd5b1561130257565b60405162461bcd60e51b815260206004820152601d60248201527f496e76616c69642070726f6475637420746f6b656e20616464726573730000006044820152606490fd5b1561134e57565b60405162461bcd60e51b815260206004820152601660248201527524b73b30b634b21034b6b83632b6b2b73a30ba34b7b760511b6044820152606490fd5b6001600160a01b031680156113ec576000805160206114c883398151915280546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b631e4fbdf760e01b600052600060045260246000fd5b6000805160206114c8833981519152546001600160a01b0316330361142357565b63118cdaa760e01b6000523360045260246000fd5b60ff6000805160206115088339815191525460401c161561145557565b631afcd79f60e31b60005260046000fd5b9061148c575080511561147b57805190602001fd5b63d6bda27560e01b60005260046000fd5b815115806114be575b61149d575090565b639996b31560e01b60009081526001600160a01b0391909116600452602490fd5b50803b1561149556fe9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbcf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a2646970667358221220dda13671841d1a89b2f55beb09ea07e47106fcaa7ba680e776ac9ea60997ef8164736f6c634300081b0033","opcodes":"PUSH1 0xA0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0xEA JUMPI ADDRESS PUSH1 0x80 MSTORE PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0xFF DUP2 PUSH1 0x40 SHR AND PUSH2 0xD9 JUMPI PUSH1 0x2 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND ADD PUSH2 0x73 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155D SWAP1 DUP2 PUSH2 0xF0 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x844 ADD MSTORE PUSH2 0x915 ADD MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 OR PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SSTORE DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 SWAP1 LOG1 CODESIZE DUP1 PUSH2 0x54 JUMP JUMPDEST PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x2D45457 EQ PUSH2 0x11A4 JUMPI POP DUP1 PUSH4 0x6F5E018 EQ PUSH2 0xCE8 JUMPI DUP1 PUSH4 0x20222859 EQ PUSH2 0xCBD JUMPI DUP1 PUSH4 0x270A2A65 EQ PUSH2 0xC04 JUMPI DUP1 PUSH4 0x3119E4B4 EQ PUSH2 0xBDB JUMPI DUP1 PUSH4 0x396F9701 EQ PUSH2 0xBB2 JUMPI DUP1 PUSH4 0x39D2C669 EQ PUSH2 0xB32 JUMPI DUP1 PUSH4 0x3E4D0310 EQ PUSH2 0xAE6 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x899 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x831 JUMPI DUP1 PUSH4 0x5459060D EQ PUSH2 0x418 JUMPI DUP1 PUSH4 0x63025E97 EQ PUSH2 0x7C2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x758 JUMPI DUP1 PUSH4 0x7A84379C EQ PUSH2 0x6E9 JUMPI DUP1 PUSH4 0x7F7977D1 EQ PUSH2 0x6AA JUMPI DUP1 PUSH4 0x8CA0EBC6 EQ PUSH2 0x5C8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x592 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x518 JUMPI DUP1 PUSH4 0xB4824034 EQ PUSH2 0x4FA JUMPI DUP1 PUSH4 0xBE531076 EQ PUSH2 0x4DC JUMPI DUP1 PUSH4 0xE1F1C4A7 EQ PUSH2 0x4BF JUMPI DUP1 PUSH4 0xEB854690 EQ PUSH2 0x441 JUMPI DUP1 PUSH4 0xF25F4B56 EQ PUSH2 0x418 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3F0 JUMPI PUSH4 0xFF9935CB EQ PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x14D PUSH2 0x11C8 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x3EB JUMPI PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x3E7 JUMPI PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP3 SWAP1 DUP4 SWAP1 SUB PUSH2 0x3E3 JUMPI PUSH1 0xA4 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP2 DUP7 SUB PUSH2 0x3DF JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1508 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP6 PUSH1 0xFF DUP8 PUSH1 0x40 SHR AND ISZERO SWAP7 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x3D7 JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x3CD JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x3C4 JUMPI JUMPDEST POP PUSH2 0x3B5 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0x1 OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1508 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0x228 SWAP2 SWAP1 DUP9 PUSH2 0x388 JUMPI JUMPDEST POP PUSH2 0x21B PUSH2 0x1438 JUMP JUMPDEST PUSH2 0x223 PUSH2 0x1438 JUMP JUMPDEST PUSH2 0x138C JUMP JUMPDEST PUSH2 0x230 PUSH2 0x1438 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x34C JUMPI PUSH2 0x24B DUP4 ISZERO ISZERO PUSH2 0x12FB JUMP JUMPDEST PUSH2 0x256 DUP5 ISZERO ISZERO PUSH2 0x12BA JUMP JUMPDEST PUSH2 0x261 DUP6 ISZERO ISZERO PUSH2 0x1347 JUMP JUMPDEST ISZERO PUSH2 0x317 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP7 SLOAD AND OR DUP6 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE PUSH2 0x2BD JUMPI DUP1 RETURN JUMPDEST PUSH9 0xFF0000000000000000 NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1508 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1508 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x24B73B30B634B21037BBB732B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420555344432061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF NOT AND PUSH9 0x10000000000000001 OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1508 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE CODESIZE PUSH2 0x212 JUMP JUMPDEST PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x4 DUP10 REVERT JUMPDEST SWAP1 POP ISZERO CODESIZE PUSH2 0x1E3 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x1DB JUMP JUMPDEST DUP10 SWAP2 POP PUSH2 0x1D1 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP3 JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x415 PUSH2 0x40D PUSH2 0x11C8 JUMP JUMPDEST PUSH2 0x223 PUSH2 0x1402 JUMP JUMPDEST DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x484 JUMPI PUSH2 0x46B PUSH1 0x20 SWAP2 PUSH2 0x121B JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E646578206F7574206F6620626F756E6473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x2710 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x40 DUP1 MLOAD SWAP2 PUSH2 0x538 DUP3 DUP5 PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x5 DUP4 MSTORE PUSH5 0x352E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP5 ADD MSTORE DUP2 MLOAD SWAP3 DUP4 SWAP2 PUSH1 0x20 DUP4 MSTORE DUP2 MLOAD SWAP2 DUP3 PUSH1 0x20 DUP6 ADD MSTORE DUP2 JUMPDEST DUP4 DUP2 LT PUSH2 0x57B JUMPI POP POP DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST PUSH1 0x20 DUP3 DUP3 ADD DUP2 ADD MLOAD DUP9 DUP4 ADD DUP9 ADD MSTORE DUP8 SWAP6 POP ADD PUSH2 0x55E JUMP JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14C8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI PUSH2 0x5D7 CALLDATASIZE PUSH2 0x124C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 CALLER DUP6 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP7 KECCAK256 SLOAD AND ISZERO PUSH2 0x665 JUMPI DUP5 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x3E3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xAB714FB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 DUP2 DUP4 DUP2 PUSH1 0x64 DUP2 ADD JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x65A JUMPI PUSH2 0x649 JUMPI POP RETURN JUMPDEST DUP2 PUSH2 0x653 SWAP2 PUSH2 0x11E3 JUMP JUMPDEST PUSH2 0x3ED JUMPI DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792066756E64726169736572732063616E206D696E7400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x6D5 PUSH2 0x11C8 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x6 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x703 PUSH2 0x11C8 JUMP JUMPDEST PUSH2 0x70B PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x71F DUP2 ISZERO ISZERO PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH32 0x310BA5F1D2ED074B51E2ECCD052A47AE9AB7C6B800D1FCA3DB3999D6A592CA03 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x771 PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14C8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x7DC PUSH2 0x11C8 JUMP JUMPDEST PUSH2 0x7E4 PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7F8 DUP2 ISZERO ISZERO PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH32 0x46CEC2FF6F514E8ED0CC9F2A26C0135DD76E3943279345141BCBA88A5AF63F51 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3ED JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0x88A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14E8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x8AE PUSH2 0x11C8 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x3EB JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x3EB JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP1 DUP4 PUSH2 0x8DC DUP4 PUSH2 0x128A JUMP JUMPDEST SWAP4 PUSH2 0x8EA PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x11E3 JUMP JUMPDEST DUP4 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 CALLDATASIZE PUSH1 0x24 DUP3 DUP5 ADD ADD GT PUSH2 0x3EB JUMPI DUP1 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP7 CALLDATACOPY DUP6 ADD ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0xAC3 JUMPI JUMPDEST POP PUSH2 0xAB4 JUMPI PUSH2 0x94D PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP4 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP9 GAS STATICCALL DUP7 SWAP2 DUP2 PUSH2 0xA80 JUMPI JUMPDEST POP PUSH2 0x990 JUMPI PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x4 DUP6 SWAP1 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST SWAP4 DUP5 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14E8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP8 SWAP7 SUB PUSH2 0xA6E JUMPI POP DUP3 EXTCODESIZE ISZERO PUSH2 0xA5C JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14E8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE DUP5 SWAP2 SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP4 DUP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0xA41 JUMPI PUSH2 0xA35 SWAP4 DUP3 SWAP2 MLOAD SWAP1 DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0xA39 JUMPI RETURNDATASIZE SWAP2 PUSH2 0xA19 DUP4 PUSH2 0x128A JUMP JUMPDEST SWAP3 PUSH2 0xA27 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x11E3 JUMP JUMPDEST DUP4 MSTORE RETURNDATASIZE DUP6 PUSH1 0x20 DUP6 ADD RETURNDATACOPY PUSH2 0x1466 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST PUSH1 0x60 SWAP2 PUSH2 0x1466 JUMP JUMPDEST POP POP POP POP CALLVALUE PUSH2 0xA4D JUMPI DUP1 RETURN JUMPDEST PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP7 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xAAC JUMPI JUMPDEST DUP2 PUSH2 0xA9C PUSH1 0x20 SWAP4 DUP4 PUSH2 0x11E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3DF JUMPI MLOAD SWAP1 CODESIZE PUSH2 0x977 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xA8F JUMP JUMPDEST PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14E8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO SWAP1 POP CODESIZE PUSH2 0x940 JUMP JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0xB00 PUSH2 0x11C8 JUMP JUMPDEST PUSH2 0xB08 PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB1C DUP2 ISZERO ISZERO PUSH2 0x12BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xB4F PUSH2 0x1402 JUMP JUMPDEST PUSH2 0x2710 DUP2 LT ISZERO PUSH2 0xB5F JUMPI PUSH1 0x2 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4665652070657263656E74616765206D757374206265206C657373207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x2031303025 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI PUSH2 0xC13 CALLDATASIZE PUSH2 0x124C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 CALLER DUP6 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP7 KECCAK256 SLOAD AND ISZERO PUSH2 0xC78 JUMPI DUP5 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x3E3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7A94C565 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 DUP2 DUP4 DUP2 PUSH1 0x64 DUP2 ADD PUSH2 0x638 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792066756E64726169736572732063616E206275726E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x5 SLOAD DUP3 LT ISZERO PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH2 0x46B DUP4 PUSH2 0x121B JUMP JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0xD02 PUSH2 0x11C8 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP2 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x11A0 JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x11A0 JUMPI DUP4 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x118C JUMPI PUSH1 0x40 MLOAD SWAP5 PUSH2 0xD4D PUSH1 0x20 DUP5 PUSH1 0x5 SHL ADD DUP8 PUSH2 0x11E3 JUMP JUMPDEST DUP3 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP1 PUSH1 0x24 PUSH1 0x60 DUP4 SWAP6 MUL DUP3 ADD ADD SWAP1 CALLDATASIZE DUP3 GT PUSH2 0x1188 JUMPI PUSH1 0x24 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1125 JUMPI POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x10EA JUMPI TIMESTAMP DUP5 GT ISZERO PUSH2 0x10B2 JUMPI DUP5 MLOAD ISZERO PUSH2 0x107F JUMPI PUSH1 0x4 SLOAD PUSH1 0x88 DUP2 SWAP1 SHR PUSH3 0xFFFFFF AND PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 OR DUP5 MSTORE PUSH1 0x78 SHL PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH15 0x5AF43D82803E903D91602B57FD5BF3 OR PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x37 PUSH1 0x9 DUP6 CREATE AND SWAP4 DUP5 ISZERO PUSH2 0x1070 JUMPI DUP4 SLOAD PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14C8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP6 SWAP5 DUP2 AND SWAP5 SWAP2 DUP2 AND SWAP4 SWAP2 SWAP3 SWAP2 AND DUP10 EXTCODESIZE ISZERO PUSH2 0x106C JUMPI SWAP7 SWAP5 SWAP3 SWAP1 SWAP2 DUP9 SWAP7 SWAP5 SWAP3 PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP8 PUSH4 0x5CB04079 PUSH1 0xE0 SHL DUP10 MSTORE PUSH2 0x184 DUP10 ADD SWAP6 PUSH1 0x4 DUP11 ADD MSTORE PUSH1 0x24 DUP10 ADD MSTORE PUSH1 0x44 DUP9 ADD MSTORE PUSH1 0x64 DUP8 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x84 DUP8 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0xA4 DUP8 ADD MSTORE PUSH1 0xC4 DUP7 ADD MSTORE PUSH1 0xE4 DUP6 ADD MSTORE ADDRESS PUSH2 0x104 DUP6 ADD MSTORE PUSH2 0x180 PUSH2 0x124 DUP6 ADD MSTORE DUP9 MLOAD DUP1 SWAP2 MSTORE PUSH2 0x1A4 DUP5 ADD SWAP3 SWAP1 DUP6 JUMPDEST DUP2 DUP2 LT PUSH2 0x1036 JUMPI POP POP CALLER PUSH2 0x144 DUP6 ADD MSTORE POP PUSH2 0x164 DUP4 ADD MSTORE DUP2 SWAP1 SUB DUP2 DUP4 DUP8 GAS CALL DUP1 ISZERO PUSH2 0x65A JUMPI PUSH2 0x1026 JUMPI JUMPDEST POP SWAP1 DUP2 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xF88 JUMPI PUSH2 0xEE2 DUP2 DUP6 PUSH2 0x12A6 JUMP JUMPDEST MLOAD MLOAD SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH4 0x8500EFA1 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x20 DUP3 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL DUP1 ISZERO PUSH2 0xF7D JUMPI DUP5 SWAP1 PUSH2 0xF49 JUMPI JUMPDEST PUSH1 0x1 SWAP3 POP PUSH2 0xF1C DUP3 DUP8 PUSH2 0x12A6 JUMP JUMPDEST MLOAD MLOAD DUP5 PUSH32 0x1BCB4157B04F9D491F72619552C6B6C11567E00613BBB243FFFE8E7A7E5E8336 DUP8 DUP1 LOG4 ADD PUSH2 0xECF JUMP JUMPDEST POP SWAP1 PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0xF75 JUMPI JUMPDEST DUP2 PUSH2 0xF63 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x11E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3E7 JUMPI SWAP1 PUSH1 0x1 SWAP2 MLOAD PUSH2 0xF0E JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xF56 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP1 PUSH1 0x5 SLOAD SWAP2 PUSH9 0x10000000000000000 DUP4 LT ISZERO PUSH2 0x1012 JUMPI PUSH2 0xFB1 DUP4 PUSH1 0x1 PUSH1 0x20 SWAP6 ADD PUSH1 0x5 SSTORE PUSH2 0x121B JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND SWAP1 DUP4 SWAP1 SHL OR SWAP1 SSTORE DUP1 DUP3 MSTORE PUSH1 0x6 DUP4 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD SWAP2 CALLER SWAP1 DUP3 SWAP1 PUSH32 0xA2398DAAC0C8053A1E3C0280916C2EC6BC884F0959C27E639A4DB829B7EABFB1 SWAP1 DUP1 LOG3 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP2 PUSH2 0x1030 SWAP2 PUSH2 0x11E3 JUMP JUMPDEST CODESIZE PUSH2 0xECB JUMP JUMPDEST SWAP3 SWAP5 POP SWAP3 DUP2 SWAP6 POP PUSH1 0x60 PUSH1 0x20 SWAP2 PUSH1 0x40 PUSH1 0x1 SWAP5 MLOAD DUP1 MLOAD DUP4 MSTORE DUP5 DUP2 ADD MLOAD DUP6 DUP5 ADD MSTORE ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE ADD SWAP6 ADD SWAP2 ADD SWAP1 DUP7 SWAP5 SWAP3 DUP7 SWAP5 SWAP3 PUSH2 0xEA1 JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST PUSH4 0xB06EBF3D PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x4E6F2070726F6475637473 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x496E76616C696420646561646C696E65 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E76616C69642062656E6566696369617279 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP4 CALLDATASIZE SUB SLT PUSH2 0x1188 JUMPI PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1174 JUMPI SWAP2 PUSH1 0x20 SWAP2 PUSH1 0x60 SWAP4 PUSH1 0x40 MSTORE DUP6 CALLDATALOAD DUP2 MSTORE DUP3 DUP7 ADD CALLDATALOAD DUP4 DUP3 ADD MSTORE PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0xD6C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x11A0 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x11A0 JUMPI SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x11DE JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1205 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x1236 JUMPI PUSH1 0x5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x80 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x11DE JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x11DE JUMPI SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x11DE JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1205 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1236 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x12C1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A5908199959481DD85B1B195D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1302 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642070726F6475637420746F6B656E2061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x134E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x24B73B30B634B21034B6B83632B6B2B73A30BA34B7B7 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x13EC JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14C8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14C8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1423 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1508 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x1455 JUMPI JUMP JUMPDEST PUSH4 0x1AFCD79F PUSH1 0xE3 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x148C JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x147B JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xD6BDA275 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x14BE JUMPI JUMPDEST PUSH2 0x149D JUMPI POP SWAP1 JUMP JUMPDEST PUSH4 0x9996B315 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x1495 JUMP INVALID SWAP1 AND 0xD0 SWAP14 PUSH19 0xD40FDAE2FD8CEAC6B6234C7706214FD39C1CD1 0xE6 MULMOD LOG0 MSTORE DUP13 NOT SWAP4 STOP CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCF0C57E16840DF040F15088 0xDC 0x2F DUP2 INVALID CODECOPY SHR CODECOPY 0x23 0xBE 0xC7 RETURNDATACOPY 0x23 0xA9 PUSH7 0x2EFC9C229C6A00 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD LOG1 CALLDATASIZE PUSH18 0x841D1A89B2F55BEB09EA07E47106FCAA7BA6 DUP1 0xE7 PUSH23 0xAC9EA60997EF8164736F6C634300081B00330000000000 ","sourceMap":"666:8380:42:-:0;;;;;;;1171:4:6;1163:13;;3147:66:5;666:8380:42;;;;;;7894:76:5;;-1:-1:-1;;;;;;;;;;;666:8380:42;;7983:34:5;7979:146;;-1:-1:-1;666:8380:42;;;;;;;;1163:13:6;666:8380:42;;;;;;;;;;;7979:146:5;-1:-1:-1;;;;;;666:8380:42;-1:-1:-1;;;;;666:8380:42;;;3147:66:5;666:8380:42;;;8085:29:5;;666:8380:42;;8085:29:5;7979:146;;;;7894:76;7936:23;;;-1:-1:-1;7936:23:5;;-1:-1:-1;7936:23:5;666:8380:42;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":4552,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_addresst_addresst_uint256t_uint256":{"entryPoint":4684,"id":null,"parameterSlots":1,"returnSlots":4},"abi_encode_address_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":4746,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":4579,"id":null,"parameterSlots":2,"returnSlots":0},"fun_checkInitializing":{"entryPoint":5176,"id":801,"parameterSlots":0,"returnSlots":0},"fun_checkOwner":{"entryPoint":5122,"id":553,"parameterSlots":0,"returnSlots":0},"fun_transferOwnership_inner":{"entryPoint":5004,"id":null,"parameterSlots":1,"returnSlots":0},"fun_verifyCallResultFromTarget":{"entryPoint":5222,"id":4585,"parameterSlots":3,"returnSlots":1},"memory_array_index_access_struct_ProductConfig_dyn":{"entryPoint":4774,"id":null,"parameterSlots":2,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":4859,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_26b4":{"entryPoint":4935,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_4a20":{"entryPoint":4794,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_address_dyn":{"entryPoint":4635,"id":null,"parameterSlots":1,"returnSlots":2}},"generatedSources":[],"immutableReferences":{"913":[{"length":32,"start":2116},{"length":32,"start":2325}]},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b600090813560e01c90816302d45457146111a45750806306f5e01814610ce85780632022285914610cbd578063270a2a6514610c045780633119e4b414610bdb578063396f970114610bb257806339d2c66914610b325780633e4d031014610ae65780634f1ef2861461089957806352d1902d146108315780635459060d1461041857806363025e97146107c2578063715018a6146107585780637a84379c146106e95780637f7977d1146106aa5780638ca0ebc6146105c85780638da5cb5b14610592578063ad3cb1cc14610518578063b4824034146104fa578063be531076146104dc578063e1f1c4a7146104bf578063eb85469014610441578063f25f4b5614610418578063f2fde38b146103f05763ff9935cb1461013457600080fd5b346103ed5760c03660031901126103ed5761014d6111c8565b6024356001600160a01b038116908190036103eb576064356001600160a01b038116908190036103e7576084356001600160a01b03811692908390036103e35760a435936001600160a01b038516908186036103df57600080516020611508833981519152549560ff8760401c16159667ffffffffffffffff8116801590816103d7575b60011490816103cd575b1590816103c4575b506103b55767ffffffffffffffff19811660011760008051602061150883398151915255610228919088610388575b5061021b611438565b610223611438565b61138c565b610230611438565b6001600160a01b031690811561034c5761024b8315156112fb565b6102568415156112ba565b610261851515611347565b15610317576001600160601b0360a01b8654161785556001600160601b0360a01b60015416176001556044356002556001600160601b0360a01b60035416176003556001600160601b0360a01b60045416176004556102bd5780f35b68ff0000000000000000196000805160206115088339815191525416600080516020611508833981519152557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a180f35b60405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b21037bbb732b960991b6044820152606490fd5b60405162461bcd60e51b8152602060048201526014602482015273496e76616c69642055534443206164647265737360601b6044820152606490fd5b68ffffffffffffffffff191668010000000000000001176000805160206115088339815191525538610212565b63f92ee8a960e01b8952600489fd5b905015386101e3565b303b1591506101db565b8991506101d1565b8680fd5b8480fd5b8380fd5b825b80fd5b50346103ed5760203660031901126103ed5761041561040d6111c8565b610223611402565b80f35b50346103ed57806003193601126103ed576003546040516001600160a01b039091168152602090f35b50346103ed5760203660031901126103ed576004356005548110156104845761046b60209161121b565b905460405160039290921b1c6001600160a01b03168152f35b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606490fd5b50346103ed57806003193601126103ed5760206040516127108152f35b50346103ed57806003193601126103ed576020600554604051908152f35b50346103ed57806003193601126103ed576020600254604051908152f35b50346103ed57806003193601126103ed57604080519161053882846111e3565b60058352640352e302e360dc1b6020840152815192839160208352815191826020850152815b83811061057b575050828201840152601f01601f19168101030190f35b60208282018101518883018801528795500161055e565b50346103ed57806003193601126103ed576000805160206114c8833981519152546040516001600160a01b039091168152602090f35b50346103ed576105d73661124c565b919091338552600660205260ff604086205416156106655784936001600160a01b0316803b156103e357604051630ab714fb60e11b81526001600160a01b039093166004840152602483019390935260448201529082908290818381606481015b03925af1801561065a576106495750f35b81610653916111e3565b6103ed5780f35b6040513d84823e3d90fd5b60405162461bcd60e51b815260206004820152601960248201527f4f6e6c792066756e64726169736572732063616e206d696e74000000000000006044820152606490fd5b50346103ed5760203660031901126103ed5760209060ff906040906001600160a01b036106d56111c8565b168152600684522054166040519015158152f35b50346103ed5760203660031901126103ed576107036111c8565b61070b611402565b6001600160a01b031661071f811515611347565b600480546001600160a01b031916821790557f310ba5f1d2ed074b51e2eccd052a47ae9ab7c6b800d1fca3db3999d6a592ca038280a280f35b50346103ed57806003193601126103ed57610771611402565b6000805160206114c883398151915280546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346103ed5760203660031901126103ed576107dc6111c8565b6107e4611402565b6001600160a01b03166107f88115156112fb565b600180546001600160a01b031916821790557f46cec2ff6f514e8ed0cc9f2a26c0135dd76e3943279345141bcba88a5af63f518280a280f35b50346103ed57806003193601126103ed577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316300361088a5760206040516000805160206114e88339815191528152f35b63703e46dd60e11b8152600490fd5b5060403660031901126103ed576108ae6111c8565b6024359067ffffffffffffffff82116103eb57366023830112156103eb57816004013590836108dc8361128a565b936108ea60405195866111e3565b838552602085019336602482840101116103eb57806024602093018637850101526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016308114908115610ac3575b50610ab45761094d611402565b6040516352d1902d60e01b81526001600160a01b0382169390602081600481885afa869181610a80575b5061099057634c9c8ce360e01b86526004859052602486fd5b93846000805160206114e8833981519152879603610a6e5750823b15610a5c576000805160206114e883398151915280546001600160a01b031916821790558491907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8380a2805115610a4157610a359382915190845af43d15610a39573d91610a198361128a565b92610a2760405194856111e3565b83523d85602085013e611466565b5080f35b606091611466565b5050505034610a4d5780f35b63b398979f60e01b8152600490fd5b634c9c8ce360e01b8552600452602484fd5b632a87526960e21b8652600452602485fd5b9091506020813d602011610aac575b81610a9c602093836111e3565b810103126103df57519038610977565b3d9150610a8f565b63703e46dd60e11b8452600484fd5b6000805160206114e8833981519152546001600160a01b03161415905038610940565b50346103ed5760203660031901126103ed57610b006111c8565b610b08611402565b6001600160a01b0316610b1c8115156112ba565b6001600160601b0360a01b600354161760035580f35b50346103ed5760203660031901126103ed57600435610b4f611402565b612710811015610b5f5760025580f35b60405162461bcd60e51b815260206004820152602560248201527f4665652070657263656e74616765206d757374206265206c657373207468616e604482015264203130302560d81b6064820152608490fd5b50346103ed57806003193601126103ed576001546040516001600160a01b039091168152602090f35b50346103ed57806003193601126103ed576004546040516001600160a01b039091168152602090f35b50346103ed57610c133661124c565b919091338552600660205260ff60408620541615610c785784936001600160a01b0316803b156103e357604051637a94c56560e11b81526001600160a01b03909316600484015260248301939093526044820152908290829081838160648101610638565b60405162461bcd60e51b815260206004820152601960248201527f4f6e6c792066756e64726169736572732063616e206275726e000000000000006044820152606490fd5b50346103ed5760203660031901126103ed57600435906005548210156103ed57602061046b8361121b565b50346103ed5760a03660031901126103ed57610d026111c8565b608435916064359167ffffffffffffffff84116111a057366023850112156111a05783600401359067ffffffffffffffff821161118c5760405194610d4d60208460051b01876111e3565b8286526020860190602460608395028201019036821161118857602401915b818310611125575050506001600160a01b03169081156110ea57428411156110b25784511561107f57600454608881901c62ffffff16763d602d80600a3d3981f3363d3d373d3d3d363d7300000017845260781b6effffffffffffffffffffffffffffff19166e5af43d82803e903d91602b57fd5bf3176020526001600160a01b036037600985f0169384156110705783546003546002546001546000805160206114c8833981519152546001600160a01b0390811695948116949181169391929116893b1561106c57969492909188969492604051988997635cb0407960e01b895261018489019560048a0152602489015260448801526064870152602435608487015260443560a487015260c486015260e48501523061010485015261018061012485015288518091526101a484019290855b81811061103657505033610144850152506101648301528190038183875af1801561065a57611026575b5090815b8351811015610f8857610ee281856112a6565b51519060405191638500efa160e01b83526004830152602082602481865afa8015610f7d578490610f49575b60019250610f1c82876112a6565b5151847f1bcb4157b04f9d491f72619552c6b6c11567e00613bbb243fffe8e7a7e5e83368780a401610ecf565b50906020813d8211610f75575b81610f63602093836111e3565b810103126103e7579060019151610f0e565b3d9150610f56565b6040513d86823e3d90fd5b5090600554916801000000000000000083101561101257610fb18360016020950160055561121b565b81546001600160a01b0360039290921b91821b19169083901b179055808252600683526040808320805460ff191660011790555191339082907fa2398daac0c8053a1e3c0280916c2ec6bc884f0959c27e639a4db829b7eabfb19080a38152f35b634e487b7160e01b82526041600452602482fd5b81611030916111e3565b38610ecb565b92945092819550606060209160406001945180518352848101518584015201516040820152019501910190869492869492610ea1565b8880fd5b63b06ebf3d60e01b8452600484fd5b60405162461bcd60e51b815260206004820152600b60248201526a4e6f2070726f647563747360a81b6044820152606490fd5b60405162461bcd60e51b815260206004820152601060248201526f496e76616c696420646561646c696e6560801b6044820152606490fd5b60405162461bcd60e51b8152602060048201526013602482015272496e76616c69642062656e656669636961727960681b6044820152606490fd5b606083360312611188576040516060810181811067ffffffffffffffff821117611174579160209160609360405285358152828601358382015260408601356040820152815201920191610d6c565b634e487b7160e01b88526041600452602488fd5b8580fd5b634e487b7160e01b83526041600452602483fd5b5080fd5b9050346111a057816003193601126111a05790546001600160a01b03168152602090f35b600435906001600160a01b03821682036111de57565b600080fd5b90601f8019910116810190811067ffffffffffffffff82111761120557604052565b634e487b7160e01b600052604160045260246000fd5b60055481101561123657600560005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b60809060031901126111de576004356001600160a01b03811681036111de57906024356001600160a01b03811681036111de57906044359060643590565b67ffffffffffffffff811161120557601f01601f191660200190565b80518210156112365760209160051b010190565b156112c157565b60405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a5908199959481dd85b1b195d60721b6044820152606490fd5b1561130257565b60405162461bcd60e51b815260206004820152601d60248201527f496e76616c69642070726f6475637420746f6b656e20616464726573730000006044820152606490fd5b1561134e57565b60405162461bcd60e51b815260206004820152601660248201527524b73b30b634b21034b6b83632b6b2b73a30ba34b7b760511b6044820152606490fd5b6001600160a01b031680156113ec576000805160206114c883398151915280546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b631e4fbdf760e01b600052600060045260246000fd5b6000805160206114c8833981519152546001600160a01b0316330361142357565b63118cdaa760e01b6000523360045260246000fd5b60ff6000805160206115088339815191525460401c161561145557565b631afcd79f60e31b60005260046000fd5b9061148c575080511561147b57805190602001fd5b63d6bda27560e01b60005260046000fd5b815115806114be575b61149d575090565b639996b31560e01b60009081526001600160a01b0391909116600452602490fd5b50803b1561149556fe9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbcf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a2646970667358221220dda13671841d1a89b2f55beb09ea07e47106fcaa7ba680e776ac9ea60997ef8164736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x2D45457 EQ PUSH2 0x11A4 JUMPI POP DUP1 PUSH4 0x6F5E018 EQ PUSH2 0xCE8 JUMPI DUP1 PUSH4 0x20222859 EQ PUSH2 0xCBD JUMPI DUP1 PUSH4 0x270A2A65 EQ PUSH2 0xC04 JUMPI DUP1 PUSH4 0x3119E4B4 EQ PUSH2 0xBDB JUMPI DUP1 PUSH4 0x396F9701 EQ PUSH2 0xBB2 JUMPI DUP1 PUSH4 0x39D2C669 EQ PUSH2 0xB32 JUMPI DUP1 PUSH4 0x3E4D0310 EQ PUSH2 0xAE6 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x899 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x831 JUMPI DUP1 PUSH4 0x5459060D EQ PUSH2 0x418 JUMPI DUP1 PUSH4 0x63025E97 EQ PUSH2 0x7C2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x758 JUMPI DUP1 PUSH4 0x7A84379C EQ PUSH2 0x6E9 JUMPI DUP1 PUSH4 0x7F7977D1 EQ PUSH2 0x6AA JUMPI DUP1 PUSH4 0x8CA0EBC6 EQ PUSH2 0x5C8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x592 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x518 JUMPI DUP1 PUSH4 0xB4824034 EQ PUSH2 0x4FA JUMPI DUP1 PUSH4 0xBE531076 EQ PUSH2 0x4DC JUMPI DUP1 PUSH4 0xE1F1C4A7 EQ PUSH2 0x4BF JUMPI DUP1 PUSH4 0xEB854690 EQ PUSH2 0x441 JUMPI DUP1 PUSH4 0xF25F4B56 EQ PUSH2 0x418 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3F0 JUMPI PUSH4 0xFF9935CB EQ PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x14D PUSH2 0x11C8 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x3EB JUMPI PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x3E7 JUMPI PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP3 SWAP1 DUP4 SWAP1 SUB PUSH2 0x3E3 JUMPI PUSH1 0xA4 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP2 DUP7 SUB PUSH2 0x3DF JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1508 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP6 PUSH1 0xFF DUP8 PUSH1 0x40 SHR AND ISZERO SWAP7 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x3D7 JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x3CD JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x3C4 JUMPI JUMPDEST POP PUSH2 0x3B5 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0x1 OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1508 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0x228 SWAP2 SWAP1 DUP9 PUSH2 0x388 JUMPI JUMPDEST POP PUSH2 0x21B PUSH2 0x1438 JUMP JUMPDEST PUSH2 0x223 PUSH2 0x1438 JUMP JUMPDEST PUSH2 0x138C JUMP JUMPDEST PUSH2 0x230 PUSH2 0x1438 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x34C JUMPI PUSH2 0x24B DUP4 ISZERO ISZERO PUSH2 0x12FB JUMP JUMPDEST PUSH2 0x256 DUP5 ISZERO ISZERO PUSH2 0x12BA JUMP JUMPDEST PUSH2 0x261 DUP6 ISZERO ISZERO PUSH2 0x1347 JUMP JUMPDEST ISZERO PUSH2 0x317 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP7 SLOAD AND OR DUP6 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE PUSH2 0x2BD JUMPI DUP1 RETURN JUMPDEST PUSH9 0xFF0000000000000000 NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1508 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1508 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x24B73B30B634B21037BBB732B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420555344432061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF NOT AND PUSH9 0x10000000000000001 OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1508 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE CODESIZE PUSH2 0x212 JUMP JUMPDEST PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x4 DUP10 REVERT JUMPDEST SWAP1 POP ISZERO CODESIZE PUSH2 0x1E3 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x1DB JUMP JUMPDEST DUP10 SWAP2 POP PUSH2 0x1D1 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP3 JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x415 PUSH2 0x40D PUSH2 0x11C8 JUMP JUMPDEST PUSH2 0x223 PUSH2 0x1402 JUMP JUMPDEST DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x484 JUMPI PUSH2 0x46B PUSH1 0x20 SWAP2 PUSH2 0x121B JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E646578206F7574206F6620626F756E6473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x2710 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x40 DUP1 MLOAD SWAP2 PUSH2 0x538 DUP3 DUP5 PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x5 DUP4 MSTORE PUSH5 0x352E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP5 ADD MSTORE DUP2 MLOAD SWAP3 DUP4 SWAP2 PUSH1 0x20 DUP4 MSTORE DUP2 MLOAD SWAP2 DUP3 PUSH1 0x20 DUP6 ADD MSTORE DUP2 JUMPDEST DUP4 DUP2 LT PUSH2 0x57B JUMPI POP POP DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST PUSH1 0x20 DUP3 DUP3 ADD DUP2 ADD MLOAD DUP9 DUP4 ADD DUP9 ADD MSTORE DUP8 SWAP6 POP ADD PUSH2 0x55E JUMP JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14C8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI PUSH2 0x5D7 CALLDATASIZE PUSH2 0x124C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 CALLER DUP6 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP7 KECCAK256 SLOAD AND ISZERO PUSH2 0x665 JUMPI DUP5 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x3E3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xAB714FB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 DUP2 DUP4 DUP2 PUSH1 0x64 DUP2 ADD JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x65A JUMPI PUSH2 0x649 JUMPI POP RETURN JUMPDEST DUP2 PUSH2 0x653 SWAP2 PUSH2 0x11E3 JUMP JUMPDEST PUSH2 0x3ED JUMPI DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792066756E64726169736572732063616E206D696E7400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x6D5 PUSH2 0x11C8 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x6 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x703 PUSH2 0x11C8 JUMP JUMPDEST PUSH2 0x70B PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x71F DUP2 ISZERO ISZERO PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH32 0x310BA5F1D2ED074B51E2ECCD052A47AE9AB7C6B800D1FCA3DB3999D6A592CA03 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x771 PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14C8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x7DC PUSH2 0x11C8 JUMP JUMPDEST PUSH2 0x7E4 PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7F8 DUP2 ISZERO ISZERO PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH32 0x46CEC2FF6F514E8ED0CC9F2A26C0135DD76E3943279345141BCBA88A5AF63F51 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3ED JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0x88A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14E8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0x8AE PUSH2 0x11C8 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x3EB JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x3EB JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP1 DUP4 PUSH2 0x8DC DUP4 PUSH2 0x128A JUMP JUMPDEST SWAP4 PUSH2 0x8EA PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x11E3 JUMP JUMPDEST DUP4 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 CALLDATASIZE PUSH1 0x24 DUP3 DUP5 ADD ADD GT PUSH2 0x3EB JUMPI DUP1 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP7 CALLDATACOPY DUP6 ADD ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0xAC3 JUMPI JUMPDEST POP PUSH2 0xAB4 JUMPI PUSH2 0x94D PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP4 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP9 GAS STATICCALL DUP7 SWAP2 DUP2 PUSH2 0xA80 JUMPI JUMPDEST POP PUSH2 0x990 JUMPI PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x4 DUP6 SWAP1 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST SWAP4 DUP5 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14E8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP8 SWAP7 SUB PUSH2 0xA6E JUMPI POP DUP3 EXTCODESIZE ISZERO PUSH2 0xA5C JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14E8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE DUP5 SWAP2 SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP4 DUP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0xA41 JUMPI PUSH2 0xA35 SWAP4 DUP3 SWAP2 MLOAD SWAP1 DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0xA39 JUMPI RETURNDATASIZE SWAP2 PUSH2 0xA19 DUP4 PUSH2 0x128A JUMP JUMPDEST SWAP3 PUSH2 0xA27 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x11E3 JUMP JUMPDEST DUP4 MSTORE RETURNDATASIZE DUP6 PUSH1 0x20 DUP6 ADD RETURNDATACOPY PUSH2 0x1466 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST PUSH1 0x60 SWAP2 PUSH2 0x1466 JUMP JUMPDEST POP POP POP POP CALLVALUE PUSH2 0xA4D JUMPI DUP1 RETURN JUMPDEST PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP7 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xAAC JUMPI JUMPDEST DUP2 PUSH2 0xA9C PUSH1 0x20 SWAP4 DUP4 PUSH2 0x11E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3DF JUMPI MLOAD SWAP1 CODESIZE PUSH2 0x977 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xA8F JUMP JUMPDEST PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14E8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO SWAP1 POP CODESIZE PUSH2 0x940 JUMP JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0xB00 PUSH2 0x11C8 JUMP JUMPDEST PUSH2 0xB08 PUSH2 0x1402 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB1C DUP2 ISZERO ISZERO PUSH2 0x12BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xB4F PUSH2 0x1402 JUMP JUMPDEST PUSH2 0x2710 DUP2 LT ISZERO PUSH2 0xB5F JUMPI PUSH1 0x2 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4665652070657263656E74616765206D757374206265206C657373207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x2031303025 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI PUSH2 0xC13 CALLDATASIZE PUSH2 0x124C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 CALLER DUP6 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP7 KECCAK256 SLOAD AND ISZERO PUSH2 0xC78 JUMPI DUP5 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x3E3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7A94C565 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 DUP2 DUP4 DUP2 PUSH1 0x64 DUP2 ADD PUSH2 0x638 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792066756E64726169736572732063616E206275726E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x5 SLOAD DUP3 LT ISZERO PUSH2 0x3ED JUMPI PUSH1 0x20 PUSH2 0x46B DUP4 PUSH2 0x121B JUMP JUMPDEST POP CALLVALUE PUSH2 0x3ED JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3ED JUMPI PUSH2 0xD02 PUSH2 0x11C8 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP2 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x11A0 JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x11A0 JUMPI DUP4 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x118C JUMPI PUSH1 0x40 MLOAD SWAP5 PUSH2 0xD4D PUSH1 0x20 DUP5 PUSH1 0x5 SHL ADD DUP8 PUSH2 0x11E3 JUMP JUMPDEST DUP3 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP1 PUSH1 0x24 PUSH1 0x60 DUP4 SWAP6 MUL DUP3 ADD ADD SWAP1 CALLDATASIZE DUP3 GT PUSH2 0x1188 JUMPI PUSH1 0x24 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1125 JUMPI POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x10EA JUMPI TIMESTAMP DUP5 GT ISZERO PUSH2 0x10B2 JUMPI DUP5 MLOAD ISZERO PUSH2 0x107F JUMPI PUSH1 0x4 SLOAD PUSH1 0x88 DUP2 SWAP1 SHR PUSH3 0xFFFFFF AND PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 OR DUP5 MSTORE PUSH1 0x78 SHL PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH15 0x5AF43D82803E903D91602B57FD5BF3 OR PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x37 PUSH1 0x9 DUP6 CREATE AND SWAP4 DUP5 ISZERO PUSH2 0x1070 JUMPI DUP4 SLOAD PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14C8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP6 SWAP5 DUP2 AND SWAP5 SWAP2 DUP2 AND SWAP4 SWAP2 SWAP3 SWAP2 AND DUP10 EXTCODESIZE ISZERO PUSH2 0x106C JUMPI SWAP7 SWAP5 SWAP3 SWAP1 SWAP2 DUP9 SWAP7 SWAP5 SWAP3 PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP8 PUSH4 0x5CB04079 PUSH1 0xE0 SHL DUP10 MSTORE PUSH2 0x184 DUP10 ADD SWAP6 PUSH1 0x4 DUP11 ADD MSTORE PUSH1 0x24 DUP10 ADD MSTORE PUSH1 0x44 DUP9 ADD MSTORE PUSH1 0x64 DUP8 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x84 DUP8 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0xA4 DUP8 ADD MSTORE PUSH1 0xC4 DUP7 ADD MSTORE PUSH1 0xE4 DUP6 ADD MSTORE ADDRESS PUSH2 0x104 DUP6 ADD MSTORE PUSH2 0x180 PUSH2 0x124 DUP6 ADD MSTORE DUP9 MLOAD DUP1 SWAP2 MSTORE PUSH2 0x1A4 DUP5 ADD SWAP3 SWAP1 DUP6 JUMPDEST DUP2 DUP2 LT PUSH2 0x1036 JUMPI POP POP CALLER PUSH2 0x144 DUP6 ADD MSTORE POP PUSH2 0x164 DUP4 ADD MSTORE DUP2 SWAP1 SUB DUP2 DUP4 DUP8 GAS CALL DUP1 ISZERO PUSH2 0x65A JUMPI PUSH2 0x1026 JUMPI JUMPDEST POP SWAP1 DUP2 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xF88 JUMPI PUSH2 0xEE2 DUP2 DUP6 PUSH2 0x12A6 JUMP JUMPDEST MLOAD MLOAD SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH4 0x8500EFA1 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x20 DUP3 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL DUP1 ISZERO PUSH2 0xF7D JUMPI DUP5 SWAP1 PUSH2 0xF49 JUMPI JUMPDEST PUSH1 0x1 SWAP3 POP PUSH2 0xF1C DUP3 DUP8 PUSH2 0x12A6 JUMP JUMPDEST MLOAD MLOAD DUP5 PUSH32 0x1BCB4157B04F9D491F72619552C6B6C11567E00613BBB243FFFE8E7A7E5E8336 DUP8 DUP1 LOG4 ADD PUSH2 0xECF JUMP JUMPDEST POP SWAP1 PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0xF75 JUMPI JUMPDEST DUP2 PUSH2 0xF63 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x11E3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3E7 JUMPI SWAP1 PUSH1 0x1 SWAP2 MLOAD PUSH2 0xF0E JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xF56 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP1 PUSH1 0x5 SLOAD SWAP2 PUSH9 0x10000000000000000 DUP4 LT ISZERO PUSH2 0x1012 JUMPI PUSH2 0xFB1 DUP4 PUSH1 0x1 PUSH1 0x20 SWAP6 ADD PUSH1 0x5 SSTORE PUSH2 0x121B JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND SWAP1 DUP4 SWAP1 SHL OR SWAP1 SSTORE DUP1 DUP3 MSTORE PUSH1 0x6 DUP4 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD SWAP2 CALLER SWAP1 DUP3 SWAP1 PUSH32 0xA2398DAAC0C8053A1E3C0280916C2EC6BC884F0959C27E639A4DB829B7EABFB1 SWAP1 DUP1 LOG3 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP2 PUSH2 0x1030 SWAP2 PUSH2 0x11E3 JUMP JUMPDEST CODESIZE PUSH2 0xECB JUMP JUMPDEST SWAP3 SWAP5 POP SWAP3 DUP2 SWAP6 POP PUSH1 0x60 PUSH1 0x20 SWAP2 PUSH1 0x40 PUSH1 0x1 SWAP5 MLOAD DUP1 MLOAD DUP4 MSTORE DUP5 DUP2 ADD MLOAD DUP6 DUP5 ADD MSTORE ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE ADD SWAP6 ADD SWAP2 ADD SWAP1 DUP7 SWAP5 SWAP3 DUP7 SWAP5 SWAP3 PUSH2 0xEA1 JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST PUSH4 0xB06EBF3D PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x4E6F2070726F6475637473 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x496E76616C696420646561646C696E65 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E76616C69642062656E6566696369617279 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP4 CALLDATASIZE SUB SLT PUSH2 0x1188 JUMPI PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1174 JUMPI SWAP2 PUSH1 0x20 SWAP2 PUSH1 0x60 SWAP4 PUSH1 0x40 MSTORE DUP6 CALLDATALOAD DUP2 MSTORE DUP3 DUP7 ADD CALLDATALOAD DUP4 DUP3 ADD MSTORE PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0xD6C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x11A0 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x11A0 JUMPI SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x11DE JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1205 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x1236 JUMPI PUSH1 0x5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x80 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x11DE JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x11DE JUMPI SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x11DE JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1205 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1236 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x12C1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A5908199959481DD85B1B195D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1302 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642070726F6475637420746F6B656E2061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x134E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x24B73B30B634B21034B6B83632B6B2B73A30BA34B7B7 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x13EC JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14C8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14C8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1423 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1508 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x1455 JUMPI JUMP JUMPDEST PUSH4 0x1AFCD79F PUSH1 0xE3 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x148C JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x147B JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xD6BDA275 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x14BE JUMPI JUMPDEST PUSH2 0x149D JUMPI POP SWAP1 JUMP JUMPDEST PUSH4 0x9996B315 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x1495 JUMP INVALID SWAP1 AND 0xD0 SWAP14 PUSH19 0xD40FDAE2FD8CEAC6B6234C7706214FD39C1CD1 0xE6 MULMOD LOG0 MSTORE DUP13 NOT SWAP4 STOP CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCF0C57E16840DF040F15088 0xDC 0x2F DUP2 INVALID CODECOPY SHR CODECOPY 0x23 0xBE 0xC7 RETURNDATACOPY 0x23 0xA9 PUSH7 0x2EFC9C229C6A00 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD LOG1 CALLDATASIZE PUSH18 0x841D1A89B2F55BEB09EA07E47106FCAA7BA6 DUP1 0xE7 PUSH23 0xAC9EA60997EF8164736F6C634300081B00330000000000 ","sourceMap":"666:8380:42:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;666:8380:42;;;;;;:::i;:::-;;;-1:-1:-1;;;;;666:8380:42;;;;;;;;;;-1:-1:-1;;;;;666:8380:42;;;;;;;;;;-1:-1:-1;;;;;666:8380:42;;;;;;;;;;;;-1:-1:-1;;;;;666:8380:42;;;;;;;;-1:-1:-1;;;;;;;;;;;666:8380:42;;;;;;;4301:16:5;666:8380:42;;;;4724:16:5;;:34;;;;666:8380:42;;4788:16:5;:50;;;;666:8380:42;4853:13:5;:30;;;;666:8380:42;4849:91:5;;;-1:-1:-1;;666:8380:42;;;;-1:-1:-1;;;;;;;;;;;666:8380:42;6959:1:5;;666:8380:42;;4977:67:5;;666:8380:42;6891:76:5;;;:::i;:::-;;;:::i;:::-;6959:1;:::i;:::-;6891:76;;:::i;:::-;-1:-1:-1;;;;;666:8380:42;;2118:26;;666:8380;;2179:76;2187:34;;;2179:76;:::i;:::-;2265:55;2273:24;;;2265:55;:::i;:::-;2330:74;2338:39;;;2330:74;:::i;:::-;2422:27;666:8380;;-1:-1:-1;;;;;666:8380:42;;;;;;;;-1:-1:-1;;;;;666:8380:42;;;;;;;;;;2574:44;666:8380;-1:-1:-1;;;;;666:8380:42;;2628:22;666:8380;;;2628:22;666:8380;-1:-1:-1;;;;;666:8380:42;;;;;;;;5064:101:5;;666:8380:42;;5064:101:5;666:8380:42;;-1:-1:-1;;;;;;;;;;;666:8380:42;;-1:-1:-1;;;;;;;;;;;666:8380:42;5140:14:5;666:8380:42;;;;;;5140:14:5;666:8380:42;;;;;-1:-1:-1;;;666:8380:42;;;;;;;;;;;;-1:-1:-1;;;666:8380:42;;;;;;;;;;-1:-1:-1;;;666:8380:42;;;;;;;;;;;;-1:-1:-1;;;666:8380:42;;;;;;;4977:67:5;-1:-1:-1;;666:8380:42;;;-1:-1:-1;;;;;;;;;;;666:8380:42;4977:67:5;;;4849:91;-1:-1:-1;;;4906:23:5;;666:8380:42;4906:23:5;;4853:30;4870:13;;;4853:30;;;4788:50;4816:4;4808:25;:30;;-1:-1:-1;4788:50:5;;4724:34;;;-1:-1:-1;4724:34:5;;666:8380:42;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;666:8380:42;;;;2357:1:4;666:8380:42;;:::i;:::-;2303:62:4;;:::i;2357:1::-;666:8380:42;;;;;;;;;;;;;;;991:24;666:8380;;;-1:-1:-1;;;;;666:8380:42;;;;;;;;;;;;;;;-1:-1:-1;;666:8380:42;;;;;;8721:19;666:8380;8713:34;;666:8380;;;8788:26;666:8380;8788:26;;:::i;:::-;666:8380;;;;;;;;;;-1:-1:-1;;;;;666:8380:42;;;;;;;-1:-1:-1;;;666:8380:42;;;;;;;;;;;;-1:-1:-1;;;666:8380:42;;;;;;;;;;;;;;;;;;;;;;;838:5;666:8380;;;;;;;;;;;;;;;;;8401:19;666:8380;;;;;;;;;;;;;;;;;;;;;950:35;666:8380;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;666:8380:42;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;666:8380:42;;;;;;;;-1:-1:-1;;666:8380:42;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;666:8380:42;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;666:8380:42;;;-1:-1:-1;;;;;666:8380:42;;;;;;;;;;;;;;;;:::i;:::-;5638:10;;;;666:8380;;5625:12;666:8380;;;;;;;;;;;;;-1:-1:-1;;;;;666:8380:42;5689:67;;;;;666:8380;;-1:-1:-1;;;5689:67:42;;-1:-1:-1;;;;;666:8380:42;;;;5689:67;;666:8380;;;;;;;;;;;;;;;;;;;;;;;5689:67;;;;;;;;;;;666:8380;;5689:67;;;;;:::i;:::-;666:8380;;5689:67;666:8380;5689:67;666:8380;;;;;;;;;;;;-1:-1:-1;;;666:8380:42;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;666:8380:42;;;;;;;;;;-1:-1:-1;;;;;666:8380:42;;:::i;:::-;;;;1223:44;666:8380;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;666:8380:42;;;;;;:::i;:::-;2303:62:4;;:::i;:::-;-1:-1:-1;;;;;666:8380:42;7275:66;7283:31;;;7275:66;:::i;:::-;666:8380;;;-1:-1:-1;;;;;;666:8380:42;;;;;7410:40;;;;666:8380;;;;;;;;;;;;;;;2303:62:4;;:::i;:::-;-1:-1:-1;;;;;;;;;;;666:8380:42;;-1:-1:-1;;;;;;666:8380:42;;;;;;;-1:-1:-1;;;;;666:8380:42;3975:40:4;666:8380:42;;3975:40:4;666:8380:42;;;;;;;;;-1:-1:-1;;666:8380:42;;;;;;:::i;:::-;2303:62:4;;:::i;:::-;-1:-1:-1;;;;;666:8380:42;7840:71;7848:29;;;7840:71;:::i;:::-;7921:37;666:8380;;-1:-1:-1;;;;;;666:8380:42;;;;;7973:36;;;;666:8380;;;;;;;;;;;;;;;5090:6:6;-1:-1:-1;;;;;666:8380:42;5081:4:6;5073:23;5069:145;;666:8380:42;;;-1:-1:-1;;;;;;;;;;;666:8380:42;;;5069:145:6;-1:-1:-1;;;5174:29:6;;666:8380:42;;5174:29:6;666:8380:42;-1:-1:-1;666:8380:42;;-1:-1:-1;;666:8380:42;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4667:6:6;666:8380:42;4658:4:6;4650:23;;;:120;;;;666:8380:42;4633:251:6;;;2303:62:4;;:::i;:::-;666:8380:42;;-1:-1:-1;;;6131:52:6;;-1:-1:-1;;;;;666:8380:42;;;;;;;;;6131:52:6;;;;;;;666:8380:42;-1:-1:-1;6127:437:6;;-1:-1:-1;;;6493:60:6;;666:8380:42;;;;;1805:47:20;6493:60:6;6127:437;6225:40;;-1:-1:-1;;;;;;;;;;;6225:40:6;;;6221:120;;1748:29:20;;;:34;1744:119;;-1:-1:-1;;;;;;;;;;;666:8380:42;;-1:-1:-1;;;;;;666:8380:42;;;;;;;;2407:36:20;666:8380:42;;2407:36:20;666:8380:42;;2458:15:20;:11;;4107:55:28;4065:25;;;;;;;;666:8380:42;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;4107:55:28;:::i;:::-;;666:8380:42;;;;;4107:55:28;:::i;2454:148:20:-;6163:9;;;;;6159:70;;666:8380:42;;6159:70:20;-1:-1:-1;;;6199:19:20;;666:8380:42;;6199:19:20;1744:119;-1:-1:-1;;;1805:47:20;;666:8380:42;;;1805:47:20;;6221:120:6;-1:-1:-1;;;6292:34:6;;666:8380:42;;;6292:34:6;;6131:52;;;;666:8380:42;6131:52:6;;666:8380:42;6131:52:6;;;;;;666:8380:42;6131:52:6;;;:::i;:::-;;;666:8380:42;;;;;6131:52:6;;;;;;;-1:-1:-1;6131:52:6;;4633:251;-1:-1:-1;;;4844:29:6;;666:8380:42;4844:29:6;;4650:120;-1:-1:-1;;;;;;;;;;;666:8380:42;-1:-1:-1;;;;;666:8380:42;4728:42:6;;;-1:-1:-1;4650:120:6;;;666:8380:42;;;;;;;-1:-1:-1;;666:8380:42;;;;;;:::i;:::-;2303:62:4;;:::i;:::-;-1:-1:-1;;;;;666:8380:42;6950:57;6958:26;;;6950:57;:::i;:::-;-1:-1:-1;;;;;666:8380:42;;7017:24;666:8380;;;7017:24;666:8380;;;;;;;;;;-1:-1:-1;;666:8380:42;;;;;;2303:62:4;;:::i;:::-;838:5:42;6638:31;;666:8380;;;6721:39;666:8380;;;;;;-1:-1:-1;;;666:8380:42;;;;;;;;;;;;;;;;;-1:-1:-1;;;666:8380:42;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;666:8380:42;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;666:8380:42;;;;;;;;;;;;;;;;:::i;:::-;6278:10;;;;666:8380;;6265:12;666:8380;;;;;;;;;;;;;-1:-1:-1;;;;;666:8380:42;6329:69;;;;;666:8380;;-1:-1:-1;;;6329:69:42;;-1:-1:-1;;;;;666:8380:42;;;;6329:69;;666:8380;;;;;;;;;;;;;;;;;;;;;;;6329:69;666:8380;;;;-1:-1:-1;;;666:8380:42;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;666:8380:42;;;;;;;1181:36;666:8380;1181:36;;;;;666:8380;1181:36;;;:::i;666:8380::-;;;;;;;-1:-1:-1;;666:8380:42;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;666:8380:42;;3348:31;;666:8380;;3432:15;3421:26;;666:8380;;;;;3486:19;666:8380;;;;1817:578:19;;;;;;;;;;;;-1:-1:-1;;1817:578:19;;;666:8380:42;1817:578:19;-1:-1:-1;;;;;1817:578:19;;;;666:8380:42;2408:22:19;;;2404:85;;666:8380:42;;3980:9;666:8380;4003:20;666:8380;;;-1:-1:-1;;;;;;;;;;;666:8380:42;-1:-1:-1;;;;;666:8380:42;;;;;;;;;;;;;;;;3857:514;;;;;666:8380;;;;;;;;;;;;;;;;;3857:514;;666:8380;;;3857:514;666:8380;3857:514;;666:8380;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1697:4:19;666:8380:42;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3556:10:42;666:8380;;;;-1:-1:-1;666:8380:42;;;;3857:514;;;3556:10;3857:514;;;;;;;;;;666:8380;4460:13;;;4496:3;666:8380;;4475:19;;;;;4681:11;;;;:::i;:::-;;666:8380;;;;;;;;4619:84;;666:8380;4619:84;;666:8380;;4619:84;666:8380;4619:84;;;;;;;;;;;;4496:3;666:8380;4840:11;;;;;;:::i;:::-;;666:8380;4807:72;;;;;666:8380;4460:13;;4619:84;;;666:8380;4619:84;;;;;;;;;666:8380;4619:84;;;:::i;:::-;;;666:8380;;;;;;;;4619:84;;;;;-1:-1:-1;4619:84:42;;;666:8380;;;;;;;;;4475:19;;;666:8380;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;3980:9:42;666:8380;;;;;;;;;;;;;;;;;;;4992:12;666:8380;;;;;;;;-1:-1:-1;;666:8380:42;;;;;;;3556:10;;666:8380;;5044:46;;666:8380;5044:46;666:8380;;;;-1:-1:-1;;;666:8380:42;;;;;;;;3857:514;;;;;:::i;:::-;;;;666:8380;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3857:514;666:8380;;;2404:85:19;-1:-1:-1;;;2453:25:19;;666:8380:42;2453:25:19;;666:8380:42;;;-1:-1:-1;;;666:8380:42;;;;;;;;;;;;-1:-1:-1;;;666:8380:42;;;;;;;;;;-1:-1:-1;;;666:8380:42;;;;;;;;;;;;-1:-1:-1;;;666:8380:42;;;;;;;;;;-1:-1:-1;;;666:8380:42;;;;;;;;;;;;-1:-1:-1;;;666:8380:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;666:8380:42;;;;;;;;;;;;;-1:-1:-1;;;666:8380:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;666:8380:42;;;;;;;;;;-1:-1:-1;;;;;666:8380:42;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;666:8380:42;;;;;-1:-1:-1;666:8380:42;;;;;;;;;;-1:-1:-1;666:8380:42;;-1:-1:-1;666:8380:42;;;-1:-1:-1;666:8380:42;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;666:8380:42;;;;;;;;;-1:-1:-1;;;;;666:8380:42;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;666:8380:42;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;666:8380:42;;;;;;;;;;;;-1:-1:-1;;;666:8380:42;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;666:8380:42;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;666:8380:42;;;;;;;;;;;;-1:-1:-1;;;666:8380:42;;;;;;;3405:215:4;-1:-1:-1;;;;;666:8380:42;3489:22:4;;3485:91;;-1:-1:-1;;;;;;;;;;;666:8380:42;;-1:-1:-1;;;;;;666:8380:42;;;;;;;-1:-1:-1;;;;;666:8380:42;3975:40:4;-1:-1:-1;;3975:40:4;3405:215::o;3485:91::-;3534:31;;;3509:1;3534:31;3509:1;3534:31;666:8380:42;;3509:1:4;3534:31;2658:162;-1:-1:-1;;;;;;;;;;;666:8380:42;-1:-1:-1;;;;;666:8380:42;966:10:8;2717:23:4;2713:101;;2658:162::o;2713:101::-;2763:40;;;-1:-1:-1;2763:40:4;966:10:8;2763:40:4;666:8380:42;;-1:-1:-1;2763:40:4;7082:141:5;666:8380:42;-1:-1:-1;;;;;;;;;;;666:8380:42;;;;7148:18:5;7144:73;;7082:141::o;7144:73::-;7189:17;;;-1:-1:-1;7189:17:5;;-1:-1:-1;7189:17:5;4437:582:28;;4609:8;;-1:-1:-1;666:8380:42;;5690:21:28;:17;;5815:158;;;;;;5686:354;6010:19;;;5710:1;6010:19;;5710:1;6010:19;4605:408;666:8380:42;;4857:22:28;:49;;;4605:408;4853:119;;4985:17;;:::o;4853:119::-;-1:-1:-1;;;4878:1:28;4933:24;;;-1:-1:-1;;;;;666:8380:42;;;;4933:24:28;666:8380:42;;;4933:24:28;4857:49;4883:18;;;:23;4857:49;"},"methodIdentifiers":{"BASIS_POINTS()":"e1f1c4a7","UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","burnForFundraiser(address,address,uint256,uint256)":"270a2a65","changeDefaultFeePercentage(uint256)":"39d2c669","changeFeeWallet(address)":"3e4d0310","createFundraiser(address,uint256,uint256,uint256,(uint256,uint256,uint256)[])":"06f5e018","defaultFeePercentage()":"b4824034","deployedFundraisers(uint256)":"20222859","feeWallet()":"f25f4b56","fundraiserImplementation()":"3119e4b4","getDeployedFundraiser(uint256)":"eb854690","getDeployedFundraisersCount()":"be531076","getFeeWallet()":"5459060d","initialize(address,address,uint256,address,address,address)":"ff9935cb","isFundraiser(address)":"7f7977d1","mintForFundraiser(address,address,uint256,uint256)":"8ca0ebc6","owner()":"8da5cb5b","productTokenAddress()":"396f9701","proxiableUUID()":"52d1902d","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","updateFundraiserImplementation(address)":"7a84379c","updateProductTokenAddress(address)":"63025e97","upgradeToAndCall(address,bytes)":"4f1ef286","usdcAddress()":"02d45457"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fundraiser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"FundraiserCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"ImplementationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fundraiser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"originalProductId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"uniqueProductId\",\"type\":\"uint256\"}],\"name\":\"ProductIdMapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newProductToken\",\"type\":\"address\"}],\"name\":\"ProductTokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASIS_POINTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"givenProductTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnForFundraiser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFeePercentage\",\"type\":\"uint256\"}],\"name\":\"changeDefaultFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newFeeWallet\",\"type\":\"address\"}],\"name\":\"changeFeeWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiaryWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundingType\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumTarget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyLimit\",\"type\":\"uint256\"}],\"internalType\":\"struct ProductConfig[]\",\"name\":\"products\",\"type\":\"tuple[]\"}],\"name\":\"createFundraiser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"deployedFundraisers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundraiserImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getDeployedFundraiser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeployedFundraisersCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdcAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_productTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_defaultFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_feeWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_fundraiserImplementation\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isFundraiser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"givenProductTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintForFundraiser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"productTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"updateFundraiserImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newProductToken\",\"type\":\"address\"}],\"name\":\"updateProductTokenAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdcAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"burnForFundraiser(address,address,uint256,uint256)\":{\"details\":\"Allows authorized fundraisers to burn tokens through the factory\",\"params\":{\"amount\":\"Amount to burn\",\"from\":\"Address to burn tokens from\",\"productId\":\"Product ID to burn\"}},\"changeDefaultFeePercentage(uint256)\":{\"details\":\"Change the default fee percentage\",\"params\":{\"newFeePercentage\":\"The new fee percentage (basis points)\"}},\"changeFeeWallet(address)\":{\"details\":\"Change the fee wallet\",\"params\":{\"newFeeWallet\":\"The new fee wallet address\"}},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"createFundraiser(address,uint256,uint256,uint256,(uint256,uint256,uint256)[])\":{\"details\":\"Create a new fundraiser campaign\",\"params\":{\"beneficiaryWallet\":\"The wallet to receive raised funds\",\"deadline\":\"The deadline for the campaign\",\"fundingType\":\"The funding type (0: All or Nothing, 1: Limitless)\",\"minimumTarget\":\"The minimum target amount for the campaign\",\"products\":\"The array of products for the campaign\"}},\"getDeployedFundraiser(uint256)\":{\"details\":\"Get a deployed fundraiser by index\",\"params\":{\"index\":\"The index of the fundraiser to retrieve\"},\"returns\":{\"_0\":\"The address of the deployed fundraiser\"}},\"getDeployedFundraisersCount()\":{\"details\":\"Get the deployed fundraisers count\",\"returns\":{\"_0\":\"The number of deployed fundraisers\"}},\"getFeeWallet()\":{\"details\":\"Get the fee wallet\",\"returns\":{\"_0\":\"The fee wallet address\"}},\"mintForFundraiser(address,address,uint256,uint256)\":{\"details\":\"Allows authorized fundraisers to mint tokens through the factory\",\"params\":{\"amount\":\"Amount to mint\",\"productId\":\"Product ID to mint\",\"to\":\"Address to mint tokens to\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateFundraiserImplementation(address)\":{\"details\":\"Update the fundraiser implementation\",\"params\":{\"newImplementation\":\"The new implementation address\"}},\"updateProductTokenAddress(address)\":{\"details\":\"Updates the product token address\",\"params\":{\"newProductToken\":\"The address of the new product token contract\"}},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burnForFundraiser(address,address,uint256,uint256)\":{\"notice\":\"Only fundraisers created by this factory can call this functionFactory must have MINTER_ROLE on ProductToken\"},\"mintForFundraiser(address,address,uint256,uint256)\":{\"notice\":\"Only fundraisers created by this factory can call this functionFactory must have MINTER_ROLE on ProductToken\"},\"updateProductTokenAddress(address)\":{\"notice\":\"Only the owner can update the product token addressThis only affects new fundraiser deployments, not existing ones\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/USDCFundraiserFactoryUpgradeable.sol\":\"USDCFundraiserFactoryUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"keccak256\":\"0x8c97744adc25cf30d1a2509bff6c0ddc9b36feb75f8e38c85d5c62b8ec773159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c53c8736dacbf8c517c63937d556c3e4873a62f509c5d84b89e32fc5c9c6c2c\",\"dweb:/ipfs/QmeR6RSce5dTDcPgbwBnG7E8U89716bqsUcv1NeWnX5RJf\"]},\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":{\"keccak256\":\"0xce623f3e7fa4addf240032d2817b2b489ac08e79fae14a5cc5850ed3f1acddf8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0546b2739f3989b897c5cb591d01211e2db22e1a8578f68117f1a8a692abd85c\",\"dweb:/ipfs/QmW6guw8uUk2Dq49PWdjeZeEvnDDRg3CVX2BVcVNcT6QNL\"]},\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e35eb46dfadf12396e92dd970547209dfd99f0ae5b1ec7b5a3e81617f620a1\",\"dweb:/ipfs/Qmanoi2CDi9MwkP44HosagvewfMEvCMN1YthGRmCexVjwY\"]},\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da\",\"dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol\":{\"keccak256\":\"0x3a0d63838dff3fd8b77c8c44ecf37cc39b15f26fd5269da3b690879478fa3cf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://502cec8d2ef132cce69840b1c2aef2209092554292a50d628b27477ef7a441ca\",\"dweb:/ipfs/QmaSxcHDndhVuWm4E6LcSMRkhFYsMXxrgLWMLCQnyG3qHr\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf\",\"dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x7162fa3c6971aa6f0a70160fed018edbb8b1db3af9b034ef3f7c224c3bdb7431\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f212d25e8f357209838ad7ce8ebc89de79906d9fe580566962e889ecb090e6b4\",\"dweb:/ipfs/QmdbLuLwX24VB1Gdrabke584WyaUkuJSWuDzzuRgqAMFge\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x1d7a05b3219532ea5ece50a80cf390cac9109dc74e07763adfa463ab5a3af0dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://687e2ec572d0e63827bb0025b91f2246be4c938f830ef4b4c288ee2e3727d5ca\",\"dweb:/ipfs/QmZXWSAQ9ftVrqNEa5ZTpN4wxvzCgsSW12cgiSRkrLTpQ8\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x22f099c02c252dd1f6ddc464916ce683294a63b23b3c6ee3d290b77398e2474b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82d2ba4b77ecc4f70211e0de1a920e3ea29eb86c3e16ef8f2a7d746c72a97f1e\",\"dweb:/ipfs/QmYBqATARQEnxd33jW6iYCuEPaL6KdYyYSoQrjFXZka3of\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/ProductTokenUpgradeable.sol\":{\"keccak256\":\"0xaf50b2a1429b5762229e67af499d3f3915a15d02ec3043ca572b4fe946b8888a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b0593f86ba7608b376e70d0c330d051d833415f5020c0352ba685010b8fc444\",\"dweb:/ipfs/QmVqaDqNPgqSfTxhkg4ChyuE4PxzY4kXMNPiqUfifSpJLe\"]},\"contracts/USDCFundraiserFactoryUpgradeable.sol\":{\"keccak256\":\"0x36cd04672debe4a56b6931a345327ef38c8e11ebed91c567c218218fb8f400f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8b9fb723c4f7c71c71d4055ade6b792622b07523165a4b66ffff25c8de6261b\",\"dweb:/ipfs/QmQv27tu9o3ffsLd9RuCYtQHru1boN4J68EdVQzqz8pocF\"]},\"contracts/USDCFundraiserUpgradeable.sol\":{\"keccak256\":\"0xde60b5784ce070f31aa839bf40c6f30b3963984c69de35087f137d3cd9b9f15e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1aefd54d126921fec4ba0859a10a59deb889bce94f8da8327cb8c423597c5d49\",\"dweb:/ipfs/QmedgoXSBEdycEJNieWEhPiBa5f8vRDfjKxEX7dAjr57rC\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":11317,"contract":"contracts/USDCFundraiserFactoryUpgradeable.sol:USDCFundraiserFactoryUpgradeable","label":"usdcAddress","offset":0,"slot":"0","type":"t_address"},{"astId":11319,"contract":"contracts/USDCFundraiserFactoryUpgradeable.sol:USDCFundraiserFactoryUpgradeable","label":"productTokenAddress","offset":0,"slot":"1","type":"t_address"},{"astId":11321,"contract":"contracts/USDCFundraiserFactoryUpgradeable.sol:USDCFundraiserFactoryUpgradeable","label":"defaultFeePercentage","offset":0,"slot":"2","type":"t_uint256"},{"astId":11323,"contract":"contracts/USDCFundraiserFactoryUpgradeable.sol:USDCFundraiserFactoryUpgradeable","label":"feeWallet","offset":0,"slot":"3","type":"t_address"},{"astId":11325,"contract":"contracts/USDCFundraiserFactoryUpgradeable.sol:USDCFundraiserFactoryUpgradeable","label":"fundraiserImplementation","offset":0,"slot":"4","type":"t_address"},{"astId":11328,"contract":"contracts/USDCFundraiserFactoryUpgradeable.sol:USDCFundraiserFactoryUpgradeable","label":"deployedFundraisers","offset":0,"slot":"5","type":"t_array(t_address)dyn_storage"},{"astId":11332,"contract":"contracts/USDCFundraiserFactoryUpgradeable.sol:USDCFundraiserFactoryUpgradeable","label":"isFundraiser","offset":0,"slot":"6","type":"t_mapping(t_address,t_bool)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"contracts/USDCFundraiserUpgradeable.sol":{"IFactory":{"abi":[{"inputs":[{"internalType":"address","name":"productTokenAddress","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"productId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnForFundraiser","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"productTokenAddress","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"productId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mintForFundraiser","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"burnForFundraiser(address,address,uint256,uint256)":"270a2a65","mintForFundraiser(address,address,uint256,uint256)":"8ca0ebc6"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"productTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnForFundraiser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"productTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintForFundraiser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/USDCFundraiserUpgradeable.sol\":\"IFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"keccak256\":\"0x8c97744adc25cf30d1a2509bff6c0ddc9b36feb75f8e38c85d5c62b8ec773159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c53c8736dacbf8c517c63937d556c3e4873a62f509c5d84b89e32fc5c9c6c2c\",\"dweb:/ipfs/QmeR6RSce5dTDcPgbwBnG7E8U89716bqsUcv1NeWnX5RJf\"]},\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":{\"keccak256\":\"0xce623f3e7fa4addf240032d2817b2b489ac08e79fae14a5cc5850ed3f1acddf8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0546b2739f3989b897c5cb591d01211e2db22e1a8578f68117f1a8a692abd85c\",\"dweb:/ipfs/QmW6guw8uUk2Dq49PWdjeZeEvnDDRg3CVX2BVcVNcT6QNL\"]},\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e35eb46dfadf12396e92dd970547209dfd99f0ae5b1ec7b5a3e81617f620a1\",\"dweb:/ipfs/Qmanoi2CDi9MwkP44HosagvewfMEvCMN1YthGRmCexVjwY\"]},\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da\",\"dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol\":{\"keccak256\":\"0x3a0d63838dff3fd8b77c8c44ecf37cc39b15f26fd5269da3b690879478fa3cf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://502cec8d2ef132cce69840b1c2aef2209092554292a50d628b27477ef7a441ca\",\"dweb:/ipfs/QmaSxcHDndhVuWm4E6LcSMRkhFYsMXxrgLWMLCQnyG3qHr\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf\",\"dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x1d7a05b3219532ea5ece50a80cf390cac9109dc74e07763adfa463ab5a3af0dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://687e2ec572d0e63827bb0025b91f2246be4c938f830ef4b4c288ee2e3727d5ca\",\"dweb:/ipfs/QmZXWSAQ9ftVrqNEa5ZTpN4wxvzCgsSW12cgiSRkrLTpQ8\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x22f099c02c252dd1f6ddc464916ce683294a63b23b3c6ee3d290b77398e2474b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82d2ba4b77ecc4f70211e0de1a920e3ea29eb86c3e16ef8f2a7d746c72a97f1e\",\"dweb:/ipfs/QmYBqATARQEnxd33jW6iYCuEPaL6KdYyYSoQrjFXZka3of\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/ProductTokenUpgradeable.sol\":{\"keccak256\":\"0xaf50b2a1429b5762229e67af499d3f3915a15d02ec3043ca572b4fe946b8888a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b0593f86ba7608b376e70d0c330d051d833415f5020c0352ba685010b8fc444\",\"dweb:/ipfs/QmVqaDqNPgqSfTxhkg4ChyuE4PxzY4kXMNPiqUfifSpJLe\"]},\"contracts/USDCFundraiserUpgradeable.sol\":{\"keccak256\":\"0xde60b5784ce070f31aa839bf40c6f30b3963984c69de35087f137d3cd9b9f15e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1aefd54d126921fec4ba0859a10a59deb889bce94f8da8327cb8c423597c5d49\",\"dweb:/ipfs/QmedgoXSBEdycEJNieWEhPiBa5f8vRDfjKxEX7dAjr57rC\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"USDCFundraiserUpgradeable":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"depositor","type":"address"},{"indexed":false,"internalType":"uint256","name":"netAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"feeAmount","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"success","type":"bool"},{"indexed":false,"internalType":"uint256","name":"totalRaised","type":"uint256"}],"name":"Finalized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"productId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"supplyLimit","type":"uint256"}],"name":"ProductAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"productId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"oldPrice","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newPrice","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"oldSupplyLimit","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newSupplyLimit","type":"uint256"}],"name":"ProductUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"depositor","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"productId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"quantity","type":"uint256"}],"name":"Refund","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"BASIS_POINTS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"productId","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"supplyLimit","type":"uint256"}],"internalType":"struct ProductConfig","name":"product","type":"tuple"}],"name":"addProduct","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"beneficiaryWallet","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"campaignAdmin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"productId","type":"uint256"},{"internalType":"uint256","name":"quantity","type":"uint256"}],"name":"claimRefund","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"deadline","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"productId","type":"uint256"},{"internalType":"uint256","name":"quantity","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feePercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeWallet","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"finalize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"finalized","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fundingType","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"uniqueProductId","type":"uint256"}],"name":"getOriginalProductId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"productId","type":"uint256"}],"name":"getProduct","outputs":[{"components":[{"internalType":"uint256","name":"productId","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"supplyLimit","type":"uint256"}],"internalType":"struct ProductConfig","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getProductIds","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"productId","type":"uint256"}],"name":"getUniqueProductId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_usdcAddress","type":"address"},{"internalType":"address","name":"_beneficiaryWallet","type":"address"},{"internalType":"address","name":"_feeWallet","type":"address"},{"internalType":"uint256","name":"_feePercentage","type":"uint256"},{"internalType":"uint256","name":"_fundingType","type":"uint256"},{"internalType":"uint256","name":"_minimumTarget","type":"uint256"},{"internalType":"uint256","name":"_deadline","type":"uint256"},{"internalType":"address","name":"_productTokenAddress","type":"address"},{"internalType":"address","name":"_factoryAddress","type":"address"},{"components":[{"internalType":"uint256","name":"productId","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"supplyLimit","type":"uint256"}],"internalType":"struct ProductConfig[]","name":"_products","type":"tuple[]"},{"internalType":"address","name":"_campaignAdmin","type":"address"},{"internalType":"address","name":"_owner","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"minimumTarget","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"productIds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"productSoldCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"productToken","outputs":[{"internalType":"contract ProductTokenUpgradeable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"products","outputs":[{"internalType":"uint256","name":"productId","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"supplyLimit","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokenDeposits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalRaised","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uniqueToOriginalProductId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"productId","type":"uint256"},{"internalType":"uint256","name":"newPrice","type":"uint256"},{"internalType":"uint256","name":"newSupplyLimit","type":"uint256"}],"name":"updateProduct","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"usdc","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460d2577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460ff8160401c1660c1576002600160401b03196001600160401b03821601605c575b60405161241790816100d88239f35b6001600160401b0319166001600160401b039081177ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005581527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a13880604d565b63f92ee8a960e01b60005260046000fd5b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c90816325b4f65f14611c94575080632903d9cf14611c6a57806329dcb0cf14611c4c5780633e413bee14611c255780633f4ba83a14611ba357806342235da614611b8557806347428e7b14611acf5780634bb278f31461196d5780635c975abb1461193d5780635cb04079146111ce57806366bff1db146111a4578063715018a61461113a57806372afddf01461111157806375390e73146110d25780637acc0b20146110825780638456cb591461100d5780638500efa114610fe65780638527d58f14610c305780638da5cb5b14610bfa578063a001ecdd14610bdc578063b3f05b9714610bb9578063b9db15b414610b39578063c45a015514610b10578063c5c4744c14610af2578063c978863114610ac9578063cb51bba914610a72578063dd5934b314610902578063e1f1c4a7146108e5578063e2bbb15814610422578063ebd692ea146103f8578063f25f4b56146103cf578063f2fde38b146103a2578063f85292ca146101b75763fa8ab0ee1461019757600080fd5b346101b457806003193601126101b4576020600d54604051908152f35b80fd5b50346101b45760603660031901126101b4576024356044359060018060a01b0360008051602061236283398151915254163314801561038e575b6101fa90611d81565b610205600435612262565b91828452600e60205261022060016040862001541515611e79565b61022b821515611f89565b828452600e60205260016040852001548203610337575b806102ca575b7fcbbdbe54b7b042a5d03f5b760745fbebd762875c3197b43499936461abc3395091608091848652600e602052600160408720015491858752600e602052600260408820015490868852600e60205280600160408a200155868852600e60205282600260408a200155604051938452602084015260408301526060820152a280f35b828452600c60205260408420548110156102485760405162461bcd60e51b815260206004820152602b60248201527f537570706c79206c696d69742063616e6e6f74206265206c657373207468616e60448201526a081cdbdb190818dbdd5b9d60aa1b6064820152608490fd5b828452600c6020526040842054156102425760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206368616e67652070726963652061667465722073616c6573006044820152606490fd5b506010546001600160a01b031633146101f1565b50346101b45760203660031901126101b4576103cc6103bf611cb9565b6103c76120e3565b61206d565b80f35b50346101b457806003193601126101b4576004546040516001600160a01b039091168152602090f35b50346101b45760203660031901126101b45760406020916004358152600c83522054604051908152f35b50346101b45761044b61043436611d28565b919061043e612119565b610446612155565b612262565b808352600e6020526040832060405161046381611cd4565b8154815260406002600184015493602084019485520154910190815260ff600954166108a8576001600d5403610865575b6104a082511515611ebe565b831561082d57808491516107cb575b506104ba9151611f53565b916127106104ca60075485611f53565b04906104d68285611f7c565b85546040516323b872dd60e01b60208201523360248201523060448201526064808201889052815291949161051e916001600160a01b0316610519608483611d06565b612306565b6002546001546001600160a01b0390811691889116803b156107c75760405163465075e360e11b81526001600160a01b03939093166004840152336024840152604483018490526064830185905281908390608490829084905af191826107ae575b50506107165785858160033d11610706575b6308c379a014610658575b3d1561064f573d67ffffffffffffffff811161063b576040516105ea93916105cf601f8201601f191660200183611d06565b81528160203d92013e5b5433906001600160a01b031661229a565b60405162461bcd60e51b8152602060048201526024808201527f4e4654206d696e74206661696c65642077697468206c6f772d6c6576656c2065604482015263393937b960e11b6064820152608490fd5b634e487b7160e01b83526041600452602483fd5b6105ea916105d9565b610660611fd2565b8061066b575061059d565b6106866044926106f894339060018060a01b0390541661229a565b604051906106d0603183602081019370027232a1036b4b73a103330b4b632b21d1607d1b85526106bf815180926020868601910161204a565b81010301601f198101845283611d06565b60405193849262461bcd60e51b8452602060048501525180928160248601528585019061204a565b601f01601f19168101030190fd5b50600482803e815160e01c610592565b8580955052600c60205261072f60408520918254611fc5565b905561073d82600854611fc5565b6008558061078c575b60405191825260208201527f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1560403392a260016000805160206123a28339815191525580f35b82546004546107a99183916001600160a01b03908116911661229a565b610746565b816107b891611d06565b6107c3578638610580565b8680fd5b5080fd5b9050828552600c6020526107e3846040872054611fc5565b9051106107f15782386104af565b60405162461bcd60e51b8152602060048201526014602482015273115e18d959591cc81cdd5c1c1b1e481b1a5b5a5d60621b6044820152606490fd5b60405162461bcd60e51b815260206004820152601060248201526f496e76616c6964207175616e7469747960801b6044820152606490fd5b60065442106104945760405162461bcd60e51b815260206004820152601260248201527110d85b5c185a59db881a185cc8195b99195960721b6044820152606490fd5b60405162461bcd60e51b815260206004820152601560248201527410d85b5c185a59db881a5cc8199a5b985b1a5e9959605a1b6044820152606490fd5b50346101b457806003193601126101b45760206040516127108152f35b50346101b45760603660031901126101b45760405161092081611cd4565b60043581526020810160243581526040820191604435835260018060a01b03600080516020612362833981519152541633148015610a5e575b61096290611d81565b61096e82511515611f89565b61097a81511515611de8565b6109848151612262565b92838552600e6020526001604086200154610a2057826040927f0bb34bc6bcdd4ba28b7de4669c2e7d94d1b828b2a6a14b82991e087b20d735499451600284518651926109d084611cd4565b89845260208401908152878401918252898b52600e602052878b209351845551600184015551910155610a0286611e29565b51858752600f6020528387205551905182519182526020820152a280f35b60405162461bcd60e51b815260206004820152601660248201527550726f6475637420616c72656164792065786973747360501b6044820152606490fd5b506010546001600160a01b03163314610959565b50346101b45760203660031901126101b45760043590600b548210156101b457600b54821015610ab557602091600b825282822001549060031b1c604051908152f35b634e487b7160e01b81526032600452602490fd5b50346101b457806003193601126101b4576003546040516001600160a01b039091168152602090f35b50346101b457806003193601126101b4576020600854604051908152f35b50346101b457806003193601126101b4576002546040516001600160a01b039091168152602090f35b50346101b45760203660031901126101b457604081606092828051610b5d81611cd4565b8281528260208201520152610b73600435612262565b8152600e60205220604051610b8781611cd4565b815491828252604060026001830154926020850193845201549201918252604051928352516020830152516040820152f35b50346101b457806003193601126101b457602060ff600954166040519015158152f35b50346101b457806003193601126101b4576020600754604051908152f35b50346101b457806003193601126101b457600080516020612362833981519152546040516001600160a01b039091168152602090f35b50346101b457610c4261043436611d28565b90818352600e60205260408320610c80604051610c5e81611cd4565b8254815260018301549060406002602083019584875201549101521515611ebe565b600d5480610ec45750610c9860085460055411611efc565b600154604051627eeac760e11b8152336004820152602481018590526001600160a01b0390911690602081604481855afa8015610eb95784918791610e80575b5010610e3b576002546001600160a01b0316908590823b156107c75760405163270a2a6560e01b81526001600160a01b039190911660048201523360248201526044810186905260648101859052918290608490829084905af18015610e3057610df0575b5090610d8681610d8184612710610d797fb7048c2ad36aadee977bb16b4543a18866044d27a2ca753e1c7dbcfa7d7a6962975160075490611f53565b049051611f7c565b611f53565b92610d9b843360018060a01b0388541661229a565b808552600c60205260408520610db2838254611f7c565b9055610dc084600854611f7c565b6008556040805194855260208501919091528301523391606090a260016000805160206123a28339815191525580f35b82610d8186610e257fb7048c2ad36aadee977bb16b4543a18866044d27a2ca753e1c7dbcfa7d7a6962969598610d8695611d06565b969350509250610d3d565b6040513d87823e3d90fd5b60405162461bcd60e51b815260206004820152601860248201527f496e73756666696369656e74204e46542062616c616e636500000000000000006044820152606490fd5b9150506020813d602011610eb1575b81610e9c60209383611d06565b81010312610ead5783905138610cd8565b8580fd5b3d9150610e8f565b6040513d88823e3d90fd5b60018103610f30575060ff6009541615610c985760405162461bcd60e51b815260206004820152602a60248201527f43616d706169676e2066696e616c697a6564202d20726566756e6473206e6f7460448201526920617661696c61626c6560b01b6064820152608490fd5b600203610faa57600654421015610f5557610f5060085460055411611efc565b610c98565b60405162461bcd60e51b815260206004820152602760248201527f446561646c696e6520706173736564202d20726566756e6473206e6f7420617660448201526661696c61626c6560c81b6064820152608490fd5b60405162461bcd60e51b8152602060048201526014602482015273496e76616c69642066756e64696e67207479706560601b6044820152606490fd5b50346101b45760203660031901126101b4576020611005600435612262565b604051908152f35b50346101b457806003193601126101b4576110266120e3565b61102e612155565b600160ff19600080516020612382833981519152541617600080516020612382833981519152557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a180f35b50346101b45760203660031901126101b4576040906004358152600e6020522080546110ce60026001840154930154604051938493846040919493926060820195825260208201520152565b0390f35b50346101b45760203660031901126101b4576040602091600435808252600f8452611101838320541515611e79565b8152600f83522054604051908152f35b50346101b457806003193601126101b4576010546040516001600160a01b039091168152602090f35b50346101b457806003193601126101b4576111536120e3565b60008051602061236283398151915280546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346101b45760203660031901126101b45760406020916004358152600a83522054604051908152f35b50346101b4576101803660031901126101b4576111e9611cb9565b6024356001600160a01b03811690819003611939576044356001600160a01b03811691908290036119355760643560e4356001600160a01b0381169060c435908290036107c357610104356001600160a01b038116939084900361193157610124359567ffffffffffffffff871161192d573660238801121561192d57866004013567ffffffffffffffff8111611919576040519761128e60208360051b018a611d06565b8189526024606060208b019302820101903682116118d557602401915b8183106118dd57505050610144356001600160a01b03811696908790036118d95761016435986001600160a01b038a1690818b036118d5576000805160206123c2833981519152549a60ff8c60401c16159b8c67ffffffffffffffff8216801591826118cd575b5060011490816118c3575b1590816118ba575b506118ab5767ffffffffffffffff1981166001176000805160206123c28339815191525561136591908d61187e575b5061135d6122d8565b6103c76122d8565b61136d6122d8565b6113756122d8565b61137d6122d8565b60016000805160206123a2833981519152556001600160a01b03169081156118425782156117fd5783156117c357861561177e5787156117395742861115611701578951156116c55788156116875715611652576127108410156115ff576001600160601b0360a01b8b5416178a556001600160601b0360a01b60035416176003556001600160601b0360a01b600454161760045560075560a4356005556006556001600160601b0360a01b60015416176001556001600160601b0360a01b60025416176002556001600160601b0360a01b6010541617601055608435600d55825b815181101561159c5760206114748284611dbe565b5101511561155f578061149561148c60019385611dbe565b51511515611de8565b61149f8184611dbe565b51516040513060601b6bffffffffffffffffffffffff19166020820190815260348201929092526114dd81605481015b03601f198101835282611d06565b51902060206114ec8386611dbe565b510151600260406114fd8588611dbe565b5101516040519261150d84611cd4565b8484526020840190815260408401918252848a52600e60205260408a209351845551868401555191015561154081611e29565b61154a8285611dbe565b5151908652600f60205260408620550161145f565b60405162461bcd60e51b8152602060048201526015602482015274496e76616c69642070726f6475637420707269636560581b6044820152606490fd5b50506115a55780f35b68ff0000000000000000196000805160206123c283398151915254166000805160206123c2833981519152557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a180f35b60405162461bcd60e51b815260206004820152602560248201527f4665652070657263656e74616765206d757374206265206c657373207468616e604482015264203130302560d81b6064820152608490fd5b60405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b21037bbb732b960991b6044820152606490fd5b60405162461bcd60e51b815260206004820152601660248201527524b73b30b634b21031b0b6b830b4b3b71030b236b4b760511b6044820152606490fd5b60405162461bcd60e51b8152602060048201526014602482015273139bc81c1c9bd91d58dd1cc81c1c9bdd9a59195960621b6044820152606490fd5b60405162461bcd60e51b815260206004820152601060248201526f496e76616c696420646561646c696e6560801b6044820152606490fd5b60405162461bcd60e51b815260206004820152601760248201527f496e76616c696420666163746f727920616464726573730000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601d60248201527f496e76616c69642070726f6475637420746f6b656e20616464726573730000006044820152606490fd5b60405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a5908199959481dd85b1b195d60721b6044820152606490fd5b60405162461bcd60e51b815260206004820152601a60248201527f496e76616c69642062656e65666963696172792077616c6c65740000000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526014602482015273496e76616c69642055534443206164647265737360601b6044820152606490fd5b68ffffffffffffffffff191668010000000000000001176000805160206123c28339815191525538611354565b63f92ee8a960e01b8e5260048efd5b90501538611325565b303b15915061131d565b91508e611312565b8b80fd5b8980fd5b6060833603126118d55760206060916040516118f881611cd4565b853581528286013583820152604086013560408201528152019201916112ab565b634e487b7160e01b8a52604160045260248afd5b8880fd5b8780fd5b8380fd5b8280fd5b50346101b457806003193601126101b457602060ff60008051602061238283398151915254166040519015158152f35b50346101b457806003193601126101b457611986612119565b61198e612155565b60ff60095416611a9657600d5480611a1a5750600854600554116119c9576119b461217f565b60016000805160206123a28339815191525580f35b6119d66006544211611d3e565b600160ff1960095416176009557fdd0f555ae5273de37f96c52aa0ba4ae26fc23a0d7b0e2b8904ba8cf1636d6ce060406008548151908482526020820152a16119b4565b60018103611a6f5750600080516020612362833981519152546001600160a01b031633148015611a5b575b611a4e90611d81565b611a5661217f565b6119b4565b506010546001600160a01b03163314611a45565b6002036119b45760085460055411611a8957611a5661217f565b611a4e6006544211611d3e565b60405162461bcd60e51b8152602060048201526011602482015270105b1c9958591e48199a5b985b1a5e9959607a1b6044820152606490fd5b50346101b457806003193601126101b457604051806020600b5491828152018091600b85527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db990855b818110611b6f5750505082611b2e910383611d06565b604051928392602084019060208552518091526040840192915b818110611b56575050500390f35b8251845285945060209384019390920191600101611b48565b8254845260209093019260019283019201611b18565b50346101b457806003193601126101b4576020600554604051908152f35b50346101b457806003193601126101b457611bbc6120e3565b6000805160206123828339815191525460ff811615611c165760ff1916600080516020612382833981519152557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a180f35b638dfc202b60e01b8252600482fd5b50346101b457806003193601126101b457546040516001600160a01b039091168152602090f35b50346101b457806003193601126101b4576020600654604051908152f35b50346101b45760203660031901126101b45760406020916004358152600f83522054604051908152f35b9050346107c757816003193601126107c7576001546001600160a01b03168152602090f35b600435906001600160a01b0382168203611ccf57565b600080fd5b6060810190811067ffffffffffffffff821117611cf057604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117611cf057604052565b6040906003190112611ccf576004359060243590565b15611d4557565b60405162461bcd60e51b8152602060048201526014602482015273111958591b1a5b99481b9bdd081c995858da195960621b6044820152606490fd5b15611d8857565b60405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606490fd5b8051821015611dd25760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b15611def57565b60405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c1c9bd91d58dd08125160721b6044820152606490fd5b600b5468010000000000000000811015611cf05760018101600b556000600b54821015610ab557600b90527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90155565b15611e8057565b60405162461bcd60e51b8152602060048201526016602482015275141c9bd91d58dd08191bd95cc81b9bdd08195e1a5cdd60521b6044820152606490fd5b15611ec557565b60405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081c1c9bd91d58dd608a1b6044820152606490fd5b15611f0357565b60405162461bcd60e51b815260206004820152602260248201527f546172676574206d6574202d20726566756e6473206e6f7420617661696c61626044820152616c6560f01b6064820152608490fd5b81810292918115918404141715611f6657565b634e487b7160e01b600052601160045260246000fd5b91908203918211611f6657565b15611f9057565b60405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420707269636560981b6044820152606490fd5b91908201809211611f6657565b600060443d10612039576040513d600319016004823e8051913d602484011167ffffffffffffffff841117612044578282019283519167ffffffffffffffff831161203c573d8401600319018584016020011161203c575061203992910160200190611d06565b90565b949350505050565b92915050565b60005b83811061205d5750506000910152565b818101518382015260200161204d565b6001600160a01b031680156120cd5760008051602061236283398151915280546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b631e4fbdf760e01b600052600060045260246000fd5b600080516020612362833981519152546001600160a01b0316330361210457565b63118cdaa760e01b6000523360045260246000fd5b60026000805160206123a283398151915254146121445760026000805160206123a283398151915255565b633ee5aeb560e01b60005260046000fd5b60ff600080516020612382833981519152541661216e57565b63d93c066560e01b60005260046000fd5b6009805460ff191660011790556000546040516370a0823160e01b81523060048201526001600160a01b039190911690602081602481855afa90811561225657600091612224575b5080612205575b50507fdd0f555ae5273de37f96c52aa0ba4ae26fc23a0d7b0e2b8904ba8cf1636d6ce06040600854815190600182526020820152a1565b60035461221d926001600160a01b039091169061229a565b38806121ce565b906020823d60201161224e575b8161223e60209383611d06565b810103126101b4575051386121c7565b3d9150612231565b6040513d6000823e3d90fd5b6040513060601b6bffffffffffffffffffffffff191660208201908152603482019290925261229481605481016114cf565b51902090565b60405163a9059cbb60e01b60208201526001600160a01b039290921660248301526044808301939093529181526122d691610519606483611d06565b565b60ff6000805160206123c28339815191525460401c16156122f557565b631afcd79f60e31b60005260046000fd5b906000602091828151910182855af115612256576000513d61235857506001600160a01b0381163b155b6123375750565b635274afe760e01b60009081526001600160a01b0391909116600452602490fd5b6001141561233056fe9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033009b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a2646970667358221220d44f6795ecd11eb09cc6b29d95bae73c3b8f7172ef0ef7a6c5acfc77bbab671764736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0xD2 JUMPI PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0xFF DUP2 PUSH1 0x40 SHR AND PUSH1 0xC1 JUMPI PUSH1 0x2 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND ADD PUSH1 0x5C JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2417 SWAP1 DUP2 PUSH2 0xD8 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 OR PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SSTORE DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 SWAP1 LOG1 CODESIZE DUP1 PUSH1 0x4D JUMP JUMPDEST PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x25B4F65F EQ PUSH2 0x1C94 JUMPI POP DUP1 PUSH4 0x2903D9CF EQ PUSH2 0x1C6A JUMPI DUP1 PUSH4 0x29DCB0CF EQ PUSH2 0x1C4C JUMPI DUP1 PUSH4 0x3E413BEE EQ PUSH2 0x1C25 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1BA3 JUMPI DUP1 PUSH4 0x42235DA6 EQ PUSH2 0x1B85 JUMPI DUP1 PUSH4 0x47428E7B EQ PUSH2 0x1ACF JUMPI DUP1 PUSH4 0x4BB278F3 EQ PUSH2 0x196D JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x193D JUMPI DUP1 PUSH4 0x5CB04079 EQ PUSH2 0x11CE JUMPI DUP1 PUSH4 0x66BFF1DB EQ PUSH2 0x11A4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x113A JUMPI DUP1 PUSH4 0x72AFDDF0 EQ PUSH2 0x1111 JUMPI DUP1 PUSH4 0x75390E73 EQ PUSH2 0x10D2 JUMPI DUP1 PUSH4 0x7ACC0B20 EQ PUSH2 0x1082 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x100D JUMPI DUP1 PUSH4 0x8500EFA1 EQ PUSH2 0xFE6 JUMPI DUP1 PUSH4 0x8527D58F EQ PUSH2 0xC30 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xBFA JUMPI DUP1 PUSH4 0xA001ECDD EQ PUSH2 0xBDC JUMPI DUP1 PUSH4 0xB3F05B97 EQ PUSH2 0xBB9 JUMPI DUP1 PUSH4 0xB9DB15B4 EQ PUSH2 0xB39 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0xB10 JUMPI DUP1 PUSH4 0xC5C4744C EQ PUSH2 0xAF2 JUMPI DUP1 PUSH4 0xC9788631 EQ PUSH2 0xAC9 JUMPI DUP1 PUSH4 0xCB51BBA9 EQ PUSH2 0xA72 JUMPI DUP1 PUSH4 0xDD5934B3 EQ PUSH2 0x902 JUMPI DUP1 PUSH4 0xE1F1C4A7 EQ PUSH2 0x8E5 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0xEBD692EA EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0xF25F4B56 EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0xF85292CA EQ PUSH2 0x1B7 JUMPI PUSH4 0xFA8AB0EE EQ PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x20 PUSH1 0xD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2362 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x38E JUMPI JUMPDEST PUSH2 0x1FA SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH2 0x205 PUSH1 0x4 CALLDATALOAD PUSH2 0x2262 JUMP JUMPDEST SWAP2 DUP3 DUP5 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH2 0x220 PUSH1 0x1 PUSH1 0x40 DUP7 KECCAK256 ADD SLOAD ISZERO ISZERO PUSH2 0x1E79 JUMP JUMPDEST PUSH2 0x22B DUP3 ISZERO ISZERO PUSH2 0x1F89 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 DUP6 KECCAK256 ADD SLOAD DUP3 SUB PUSH2 0x337 JUMPI JUMPDEST DUP1 PUSH2 0x2CA JUMPI JUMPDEST PUSH32 0xCBBDBE54B7B042A5D03F5B760745FBEBD762875C3197B43499936461ABC33950 SWAP2 PUSH1 0x80 SWAP2 DUP5 DUP7 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 DUP8 KECCAK256 ADD SLOAD SWAP2 DUP6 DUP8 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 DUP9 KECCAK256 ADD SLOAD SWAP1 DUP7 DUP9 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH1 0x1 PUSH1 0x40 DUP11 KECCAK256 ADD SSTORE DUP7 DUP9 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE DUP3 PUSH1 0x2 PUSH1 0x40 DUP11 KECCAK256 ADD SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE LOG2 DUP1 RETURN JUMPDEST DUP3 DUP5 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x248 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537570706C79206C696D69742063616E6E6F74206265206C657373207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x81CDBDB190818DBDD5B9D PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP3 DUP5 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD ISZERO PUSH2 0x242 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206368616E67652070726963652061667465722073616C657300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1F1 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH2 0x3CC PUSH2 0x3BF PUSH2 0x1CB9 JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x20E3 JUMP JUMPDEST PUSH2 0x206D JUMP JUMPDEST DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x40 PUSH1 0x20 SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xC DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI PUSH2 0x44B PUSH2 0x434 CALLDATASIZE PUSH2 0x1D28 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x43E PUSH2 0x2119 JUMP JUMPDEST PUSH2 0x446 PUSH2 0x2155 JUMP JUMPDEST PUSH2 0x2262 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x463 DUP2 PUSH2 0x1CD4 JUMP JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x40 PUSH1 0x2 PUSH1 0x1 DUP5 ADD SLOAD SWAP4 PUSH1 0x20 DUP5 ADD SWAP5 DUP6 MSTORE ADD SLOAD SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0xFF PUSH1 0x9 SLOAD AND PUSH2 0x8A8 JUMPI PUSH1 0x1 PUSH1 0xD SLOAD SUB PUSH2 0x865 JUMPI JUMPDEST PUSH2 0x4A0 DUP3 MLOAD ISZERO ISZERO PUSH2 0x1EBE JUMP JUMPDEST DUP4 ISZERO PUSH2 0x82D JUMPI DUP1 DUP5 SWAP2 MLOAD PUSH2 0x7CB JUMPI JUMPDEST POP PUSH2 0x4BA SWAP2 MLOAD PUSH2 0x1F53 JUMP JUMPDEST SWAP2 PUSH2 0x2710 PUSH2 0x4CA PUSH1 0x7 SLOAD DUP6 PUSH2 0x1F53 JUMP JUMPDEST DIV SWAP1 PUSH2 0x4D6 DUP3 DUP6 PUSH2 0x1F7C JUMP JUMPDEST DUP6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP9 SWAP1 MSTORE DUP2 MSTORE SWAP2 SWAP5 SWAP2 PUSH2 0x51E SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x519 PUSH1 0x84 DUP4 PUSH2 0x1D06 JUMP JUMPDEST PUSH2 0x2306 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP9 SWAP2 AND DUP1 EXTCODESIZE ISZERO PUSH2 0x7C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x465075E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE CALLER PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 DUP4 ADD DUP6 SWAP1 MSTORE DUP2 SWAP1 DUP4 SWAP1 PUSH1 0x84 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL SWAP2 DUP3 PUSH2 0x7AE JUMPI JUMPDEST POP POP PUSH2 0x716 JUMPI DUP6 DUP6 DUP2 PUSH1 0x3 RETURNDATASIZE GT PUSH2 0x706 JUMPI JUMPDEST PUSH4 0x8C379A0 EQ PUSH2 0x658 JUMPI JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x64F JUMPI RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x63B JUMPI PUSH1 0x40 MLOAD PUSH2 0x5EA SWAP4 SWAP2 PUSH2 0x5CF PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP4 PUSH2 0x1D06 JUMP JUMPDEST DUP2 MSTORE DUP2 PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST SLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x229A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4E4654206D696E74206661696C65642077697468206C6F772D6C6576656C2065 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x393937B9 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH2 0x5EA SWAP2 PUSH2 0x5D9 JUMP JUMPDEST PUSH2 0x660 PUSH2 0x1FD2 JUMP JUMPDEST DUP1 PUSH2 0x66B JUMPI POP PUSH2 0x59D JUMP JUMPDEST PUSH2 0x686 PUSH1 0x44 SWAP3 PUSH2 0x6F8 SWAP5 CALLER SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 SLOAD AND PUSH2 0x229A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x6D0 PUSH1 0x31 DUP4 PUSH1 0x20 DUP2 ADD SWAP4 PUSH17 0x27232A1036B4B73A103330B4B632B21D1 PUSH1 0x7D SHL DUP6 MSTORE PUSH2 0x6BF DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0x204A JUMP JUMPDEST DUP2 ADD SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP5 MSTORE DUP4 PUSH2 0x1D06 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP5 MSTORE PUSH1 0x20 PUSH1 0x4 DUP6 ADD MSTORE MLOAD DUP1 SWAP3 DUP2 PUSH1 0x24 DUP7 ADD MSTORE DUP6 DUP6 ADD SWAP1 PUSH2 0x204A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST POP PUSH1 0x4 DUP3 DUP1 RETURNDATACOPY DUP2 MLOAD PUSH1 0xE0 SHR PUSH2 0x592 JUMP JUMPDEST DUP6 DUP1 SWAP6 POP MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH2 0x72F PUSH1 0x40 DUP6 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x1FC5 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x73D DUP3 PUSH1 0x8 SLOAD PUSH2 0x1FC5 JUMP JUMPDEST PUSH1 0x8 SSTORE DUP1 PUSH2 0x78C JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 PUSH1 0x40 CALLER SWAP3 LOG2 PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23A2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP1 RETURN JUMPDEST DUP3 SLOAD PUSH1 0x4 SLOAD PUSH2 0x7A9 SWAP2 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND PUSH2 0x229A JUMP JUMPDEST PUSH2 0x746 JUMP JUMPDEST DUP2 PUSH2 0x7B8 SWAP2 PUSH2 0x1D06 JUMP JUMPDEST PUSH2 0x7C3 JUMPI DUP7 CODESIZE PUSH2 0x580 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 POP DUP3 DUP6 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH2 0x7E3 DUP5 PUSH1 0x40 DUP8 KECCAK256 SLOAD PUSH2 0x1FC5 JUMP JUMPDEST SWAP1 MLOAD LT PUSH2 0x7F1 JUMPI DUP3 CODESIZE PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x115E18D959591CC81CDD5C1C1B1E481B1A5B5A5D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x496E76616C6964207175616E74697479 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD TIMESTAMP LT PUSH2 0x494 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x10D85B5C185A59DB881A185CC8195B991959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x10D85B5C185A59DB881A5CC8199A5B985B1A5E9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x2710 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x40 MLOAD PUSH2 0x920 DUP2 PUSH2 0x1CD4 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 DUP2 ADD PUSH1 0x24 CALLDATALOAD DUP2 MSTORE PUSH1 0x40 DUP3 ADD SWAP2 PUSH1 0x44 CALLDATALOAD DUP4 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2362 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0xA5E JUMPI JUMPDEST PUSH2 0x962 SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH2 0x96E DUP3 MLOAD ISZERO ISZERO PUSH2 0x1F89 JUMP JUMPDEST PUSH2 0x97A DUP2 MLOAD ISZERO ISZERO PUSH2 0x1DE8 JUMP JUMPDEST PUSH2 0x984 DUP2 MLOAD PUSH2 0x2262 JUMP JUMPDEST SWAP3 DUP4 DUP6 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 DUP7 KECCAK256 ADD SLOAD PUSH2 0xA20 JUMPI DUP3 PUSH1 0x40 SWAP3 PUSH32 0xBB34BC6BCDD4BA28B7DE4669C2E7D94D1B828B2A6A14B82991E087B20D73549 SWAP5 MLOAD PUSH1 0x2 DUP5 MLOAD DUP7 MLOAD SWAP3 PUSH2 0x9D0 DUP5 PUSH2 0x1CD4 JUMP JUMPDEST DUP10 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP1 DUP2 MSTORE DUP8 DUP5 ADD SWAP2 DUP3 MSTORE DUP10 DUP12 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE DUP8 DUP12 KECCAK256 SWAP4 MLOAD DUP5 SSTORE MLOAD PUSH1 0x1 DUP5 ADD SSTORE MLOAD SWAP2 ADD SSTORE PUSH2 0xA02 DUP7 PUSH2 0x1E29 JUMP JUMPDEST MLOAD DUP6 DUP8 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE DUP4 DUP8 KECCAK256 SSTORE MLOAD SWAP1 MLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG2 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x50726F6475637420616C726561647920657869737473 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x959 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0xB SLOAD DUP3 LT ISZERO PUSH2 0x1B4 JUMPI PUSH1 0xB SLOAD DUP3 LT ISZERO PUSH2 0xAB5 JUMPI PUSH1 0x20 SWAP2 PUSH1 0xB DUP3 MSTORE DUP3 DUP3 KECCAK256 ADD SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x20 PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x40 DUP2 PUSH1 0x60 SWAP3 DUP3 DUP1 MLOAD PUSH2 0xB5D DUP2 PUSH2 0x1CD4 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE PUSH2 0xB73 PUSH1 0x4 CALLDATALOAD PUSH2 0x2262 JUMP JUMPDEST DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x40 MLOAD PUSH2 0xB87 DUP2 PUSH2 0x1CD4 JUMP JUMPDEST DUP2 SLOAD SWAP2 DUP3 DUP3 MSTORE PUSH1 0x40 PUSH1 0x2 PUSH1 0x1 DUP4 ADD SLOAD SWAP3 PUSH1 0x20 DUP6 ADD SWAP4 DUP5 MSTORE ADD SLOAD SWAP3 ADD SWAP2 DUP3 MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE MLOAD PUSH1 0x20 DUP4 ADD MSTORE MLOAD PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x9 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2362 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI PUSH2 0xC42 PUSH2 0x434 CALLDATASIZE PUSH2 0x1D28 JUMP JUMPDEST SWAP1 DUP2 DUP4 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH2 0xC80 PUSH1 0x40 MLOAD PUSH2 0xC5E DUP2 PUSH2 0x1CD4 JUMP JUMPDEST DUP3 SLOAD DUP2 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP1 PUSH1 0x40 PUSH1 0x2 PUSH1 0x20 DUP4 ADD SWAP6 DUP5 DUP8 MSTORE ADD SLOAD SWAP2 ADD MSTORE ISZERO ISZERO PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0xD SLOAD DUP1 PUSH2 0xEC4 JUMPI POP PUSH2 0xC98 PUSH1 0x8 SLOAD PUSH1 0x5 SLOAD GT PUSH2 0x1EFC JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH3 0x7EEAC7 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0xEB9 JUMPI DUP5 SWAP2 DUP8 SWAP2 PUSH2 0xE80 JUMPI JUMPDEST POP LT PUSH2 0xE3B JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP6 SWAP1 DUP3 EXTCODESIZE ISZERO PUSH2 0x7C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x270A2A65 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 DUP3 SWAP1 PUSH1 0x84 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0xE30 JUMPI PUSH2 0xDF0 JUMPI JUMPDEST POP SWAP1 PUSH2 0xD86 DUP2 PUSH2 0xD81 DUP5 PUSH2 0x2710 PUSH2 0xD79 PUSH32 0xB7048C2AD36AADEE977BB16B4543A18866044D27A2CA753E1C7DBCFA7D7A6962 SWAP8 MLOAD PUSH1 0x7 SLOAD SWAP1 PUSH2 0x1F53 JUMP JUMPDEST DIV SWAP1 MLOAD PUSH2 0x1F7C JUMP JUMPDEST PUSH2 0x1F53 JUMP JUMPDEST SWAP3 PUSH2 0xD9B DUP5 CALLER PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP9 SLOAD AND PUSH2 0x229A JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 PUSH2 0xDB2 DUP4 DUP3 SLOAD PUSH2 0x1F7C JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xDC0 DUP5 PUSH1 0x8 SLOAD PUSH2 0x1F7C JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 ADD MSTORE CALLER SWAP2 PUSH1 0x60 SWAP1 LOG2 PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23A2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP1 RETURN JUMPDEST DUP3 PUSH2 0xD81 DUP7 PUSH2 0xE25 PUSH32 0xB7048C2AD36AADEE977BB16B4543A18866044D27A2CA753E1C7DBCFA7D7A6962 SWAP7 SWAP6 SWAP9 PUSH2 0xD86 SWAP6 PUSH2 0x1D06 JUMP JUMPDEST SWAP7 SWAP4 POP POP SWAP3 POP PUSH2 0xD3D JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74204E46542062616C616E63650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xEB1 JUMPI JUMPDEST DUP2 PUSH2 0xE9C PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1D06 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xEAD JUMPI DUP4 SWAP1 MLOAD CODESIZE PUSH2 0xCD8 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xE8F JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0xF30 JUMPI POP PUSH1 0xFF PUSH1 0x9 SLOAD AND ISZERO PUSH2 0xC98 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616D706169676E2066696E616C697A6564202D20726566756E6473206E6F74 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x20617661696C61626C65 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x2 SUB PUSH2 0xFAA JUMPI PUSH1 0x6 SLOAD TIMESTAMP LT ISZERO PUSH2 0xF55 JUMPI PUSH2 0xF50 PUSH1 0x8 SLOAD PUSH1 0x5 SLOAD GT PUSH2 0x1EFC JUMP JUMPDEST PUSH2 0xC98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446561646C696E6520706173736564202D20726566756E6473206E6F74206176 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x61696C61626C65 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C69642066756E64696E672074797065 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x20 PUSH2 0x1005 PUSH1 0x4 CALLDATALOAD PUSH2 0x2262 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI PUSH2 0x1026 PUSH2 0x20E3 JUMP JUMPDEST PUSH2 0x102E PUSH2 0x2155 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2382 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2382 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x40 SWAP1 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD PUSH2 0x10CE PUSH1 0x2 PUSH1 0x1 DUP5 ADD SLOAD SWAP4 ADD SLOAD PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x40 PUSH1 0x20 SWAP2 PUSH1 0x4 CALLDATALOAD DUP1 DUP3 MSTORE PUSH1 0xF DUP5 MSTORE PUSH2 0x1101 DUP4 DUP4 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x1E79 JUMP JUMPDEST DUP2 MSTORE PUSH1 0xF DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI PUSH2 0x1153 PUSH2 0x20E3 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2362 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x40 PUSH1 0x20 SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xA DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI PUSH2 0x180 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH2 0x11E9 PUSH2 0x1CB9 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1939 JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x1935 JUMPI PUSH1 0x64 CALLDATALOAD PUSH1 0xE4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0xC4 CALLDATALOAD SWAP1 DUP3 SWAP1 SUB PUSH2 0x7C3 JUMPI PUSH2 0x104 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP4 SWAP1 DUP5 SWAP1 SUB PUSH2 0x1931 JUMPI PUSH2 0x124 CALLDATALOAD SWAP6 PUSH8 0xFFFFFFFFFFFFFFFF DUP8 GT PUSH2 0x192D JUMPI CALLDATASIZE PUSH1 0x23 DUP9 ADD SLT ISZERO PUSH2 0x192D JUMPI DUP7 PUSH1 0x4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1919 JUMPI PUSH1 0x40 MLOAD SWAP8 PUSH2 0x128E PUSH1 0x20 DUP4 PUSH1 0x5 SHL ADD DUP11 PUSH2 0x1D06 JUMP JUMPDEST DUP2 DUP10 MSTORE PUSH1 0x24 PUSH1 0x60 PUSH1 0x20 DUP12 ADD SWAP4 MUL DUP3 ADD ADD SWAP1 CALLDATASIZE DUP3 GT PUSH2 0x18D5 JUMPI PUSH1 0x24 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x18DD JUMPI POP POP POP PUSH2 0x144 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP7 SWAP1 DUP8 SWAP1 SUB PUSH2 0x18D9 JUMPI PUSH2 0x164 CALLDATALOAD SWAP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 DUP2 DUP12 SUB PUSH2 0x18D5 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23C2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP11 PUSH1 0xFF DUP13 PUSH1 0x40 SHR AND ISZERO SWAP12 DUP13 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND DUP1 ISZERO SWAP2 DUP3 PUSH2 0x18CD JUMPI JUMPDEST POP PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x18C3 JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x18BA JUMPI JUMPDEST POP PUSH2 0x18AB JUMPI PUSH8 0xFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0x1 OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23C2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0x1365 SWAP2 SWAP1 DUP14 PUSH2 0x187E JUMPI JUMPDEST POP PUSH2 0x135D PUSH2 0x22D8 JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x22D8 JUMP JUMPDEST PUSH2 0x136D PUSH2 0x22D8 JUMP JUMPDEST PUSH2 0x1375 PUSH2 0x22D8 JUMP JUMPDEST PUSH2 0x137D PUSH2 0x22D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23A2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1842 JUMPI DUP3 ISZERO PUSH2 0x17FD JUMPI DUP4 ISZERO PUSH2 0x17C3 JUMPI DUP7 ISZERO PUSH2 0x177E JUMPI DUP8 ISZERO PUSH2 0x1739 JUMPI TIMESTAMP DUP7 GT ISZERO PUSH2 0x1701 JUMPI DUP10 MLOAD ISZERO PUSH2 0x16C5 JUMPI DUP9 ISZERO PUSH2 0x1687 JUMPI ISZERO PUSH2 0x1652 JUMPI PUSH2 0x2710 DUP5 LT ISZERO PUSH2 0x15FF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP12 SLOAD AND OR DUP11 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE PUSH1 0x7 SSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0x5 SSTORE PUSH1 0x6 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x10 SLOAD AND OR PUSH1 0x10 SSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0xD SSTORE DUP3 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x159C JUMPI PUSH1 0x20 PUSH2 0x1474 DUP3 DUP5 PUSH2 0x1DBE JUMP JUMPDEST MLOAD ADD MLOAD ISZERO PUSH2 0x155F JUMPI DUP1 PUSH2 0x1495 PUSH2 0x148C PUSH1 0x1 SWAP4 DUP6 PUSH2 0x1DBE JUMP JUMPDEST MLOAD MLOAD ISZERO ISZERO PUSH2 0x1DE8 JUMP JUMPDEST PUSH2 0x149F DUP2 DUP5 PUSH2 0x1DBE JUMP JUMPDEST MLOAD MLOAD PUSH1 0x40 MLOAD ADDRESS PUSH1 0x60 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x34 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x14DD DUP2 PUSH1 0x54 DUP2 ADD JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x1D06 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x20 PUSH2 0x14EC DUP4 DUP7 PUSH2 0x1DBE JUMP JUMPDEST MLOAD ADD MLOAD PUSH1 0x2 PUSH1 0x40 PUSH2 0x14FD DUP6 DUP9 PUSH2 0x1DBE JUMP JUMPDEST MLOAD ADD MLOAD PUSH1 0x40 MLOAD SWAP3 PUSH2 0x150D DUP5 PUSH2 0x1CD4 JUMP JUMPDEST DUP5 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 DUP3 MSTORE DUP5 DUP11 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP11 KECCAK256 SWAP4 MLOAD DUP5 SSTORE MLOAD DUP7 DUP5 ADD SSTORE MLOAD SWAP2 ADD SSTORE PUSH2 0x1540 DUP2 PUSH2 0x1E29 JUMP JUMPDEST PUSH2 0x154A DUP3 DUP6 PUSH2 0x1DBE JUMP JUMPDEST MLOAD MLOAD SWAP1 DUP7 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 SSTORE ADD PUSH2 0x145F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C69642070726F64756374207072696365 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP POP PUSH2 0x15A5 JUMPI DUP1 RETURN JUMPDEST PUSH9 0xFF0000000000000000 NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23C2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23C2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4665652070657263656E74616765206D757374206265206C657373207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x2031303025 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x24B73B30B634B21037BBB732B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x24B73B30B634B21031B0B6B830B4B3B71030B236B4B7 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x139BC81C1C9BD91D58DD1CC81C1C9BDD9A591959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x496E76616C696420646561646C696E65 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420666163746F72792061646472657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642070726F6475637420746F6B656E2061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A5908199959481DD85B1B195D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642062656E65666963696172792077616C6C6574000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420555344432061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF NOT AND PUSH9 0x10000000000000001 OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23C2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE CODESIZE PUSH2 0x1354 JUMP JUMPDEST PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP15 MSTORE PUSH1 0x4 DUP15 REVERT JUMPDEST SWAP1 POP ISZERO CODESIZE PUSH2 0x1325 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x131D JUMP JUMPDEST SWAP2 POP DUP15 PUSH2 0x1312 JUMP JUMPDEST DUP12 DUP1 REVERT JUMPDEST DUP10 DUP1 REVERT JUMPDEST PUSH1 0x60 DUP4 CALLDATASIZE SUB SLT PUSH2 0x18D5 JUMPI PUSH1 0x20 PUSH1 0x60 SWAP2 PUSH1 0x40 MLOAD PUSH2 0x18F8 DUP2 PUSH2 0x1CD4 JUMP JUMPDEST DUP6 CALLDATALOAD DUP2 MSTORE DUP3 DUP7 ADD CALLDATALOAD DUP4 DUP3 ADD MSTORE PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x12AB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP11 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2382 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI PUSH2 0x1986 PUSH2 0x2119 JUMP JUMPDEST PUSH2 0x198E PUSH2 0x2155 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x9 SLOAD AND PUSH2 0x1A96 JUMPI PUSH1 0xD SLOAD DUP1 PUSH2 0x1A1A JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x5 SLOAD GT PUSH2 0x19C9 JUMPI PUSH2 0x19B4 PUSH2 0x217F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23A2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP1 RETURN JUMPDEST PUSH2 0x19D6 PUSH1 0x6 SLOAD TIMESTAMP GT PUSH2 0x1D3E JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x9 SLOAD AND OR PUSH1 0x9 SSTORE PUSH32 0xDD0F555AE5273DE37F96C52AA0BA4AE26FC23A0D7B0E2B8904BA8CF1636D6CE0 PUSH1 0x40 PUSH1 0x8 SLOAD DUP2 MLOAD SWAP1 DUP5 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 PUSH2 0x19B4 JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x1A6F JUMPI POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2362 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x1A5B JUMPI JUMPDEST PUSH2 0x1A4E SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH2 0x1A56 PUSH2 0x217F JUMP JUMPDEST PUSH2 0x19B4 JUMP JUMPDEST POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1A45 JUMP JUMPDEST PUSH1 0x2 SUB PUSH2 0x19B4 JUMPI PUSH1 0x8 SLOAD PUSH1 0x5 SLOAD GT PUSH2 0x1A89 JUMPI PUSH2 0x1A56 PUSH2 0x217F JUMP JUMPDEST PUSH2 0x1A4E PUSH1 0x6 SLOAD TIMESTAMP GT PUSH2 0x1D3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x105B1C9958591E48199A5B985B1A5E9959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0xB SLOAD SWAP2 DUP3 DUP2 MSTORE ADD DUP1 SWAP2 PUSH1 0xB DUP6 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 SWAP1 DUP6 JUMPDEST DUP2 DUP2 LT PUSH2 0x1B6F JUMPI POP POP POP DUP3 PUSH2 0x1B2E SWAP2 SUB DUP4 PUSH2 0x1D06 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x1B56 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1B48 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x1B18 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI PUSH2 0x1BBC PUSH2 0x20E3 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2382 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x1C16 JUMPI PUSH1 0xFF NOT AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2382 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x40 PUSH1 0x20 SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xF DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x7C7 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7C7 JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1CCF JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1CF0 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1CF0 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x1CCF JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1D45 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x111958591B1A5B99481B9BDD081C995858DA1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1D88 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1DD2 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x1DEF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081C1C9BD91D58DD081251 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x1CF0 JUMPI PUSH1 0x1 DUP2 ADD PUSH1 0xB SSTORE PUSH1 0x0 PUSH1 0xB SLOAD DUP3 LT ISZERO PUSH2 0xAB5 JUMPI PUSH1 0xB SWAP1 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 ADD SSTORE JUMP JUMPDEST ISZERO PUSH2 0x1E80 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x141C9BD91D58DD08191BD95CC81B9BDD08195E1A5CDD PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1EC5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x125B9D985B1A59081C1C9BD91D58DD PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1F03 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546172676574206D6574202D20726566756E6473206E6F7420617661696C6162 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6C65 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1F66 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1F66 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x1F90 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x496E76616C6964207072696365 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1F66 JUMPI JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT PUSH2 0x2039 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x3 NOT ADD PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD SWAP2 RETURNDATASIZE PUSH1 0x24 DUP5 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT OR PUSH2 0x2044 JUMPI DUP3 DUP3 ADD SWAP3 DUP4 MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x203C JUMPI RETURNDATASIZE DUP5 ADD PUSH1 0x3 NOT ADD DUP6 DUP5 ADD PUSH1 0x20 ADD GT PUSH2 0x203C JUMPI POP PUSH2 0x2039 SWAP3 SWAP2 ADD PUSH1 0x20 ADD SWAP1 PUSH2 0x1D06 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x205D JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x204D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x20CD JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2362 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2362 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2104 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23A2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD EQ PUSH2 0x2144 JUMPI PUSH1 0x2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23A2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2382 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH2 0x216E JUMPI JUMP JUMPDEST PUSH4 0xD93C0665 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2256 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2224 JUMPI JUMPDEST POP DUP1 PUSH2 0x2205 JUMPI JUMPDEST POP POP PUSH32 0xDD0F555AE5273DE37F96C52AA0BA4AE26FC23A0D7B0E2B8904BA8CF1636D6CE0 PUSH1 0x40 PUSH1 0x8 SLOAD DUP2 MLOAD SWAP1 PUSH1 0x1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x221D SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x229A JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x21CE JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x224E JUMPI JUMPDEST DUP2 PUSH2 0x223E PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1D06 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1B4 JUMPI POP MLOAD CODESIZE PUSH2 0x21C7 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2231 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD ADDRESS PUSH1 0x60 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x34 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x2294 DUP2 PUSH1 0x54 DUP2 ADD PUSH2 0x14CF JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0x22D6 SWAP2 PUSH2 0x519 PUSH1 0x64 DUP4 PUSH2 0x1D06 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23C2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x22F5 JUMPI JUMP JUMPDEST PUSH4 0x1AFCD79F PUSH1 0xE3 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x2256 JUMPI PUSH1 0x0 MLOAD RETURNDATASIZE PUSH2 0x2358 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0x2337 JUMPI POP JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x2330 JUMP INVALID SWAP1 AND 0xD0 SWAP14 PUSH19 0xD40FDAE2FD8CEAC6B6234C7706214FD39C1CD1 0xE6 MULMOD LOG0 MSTORE DUP13 NOT SWAP4 STOP 0xCD MCOPY 0xD1 TLOAD PUSH15 0x187E77E9AEE88184C21F4F2182AB58 0x27 0xCB EXTCODESIZE PUSH31 0x7FBEDCD63F033009B779B17422D0DF92223018B32B4D1FA46E071723D6817 0xE2 BASEFEE PUSH14 0x3BECC55F00F0C57E16840DF040 CALL POP DUP9 0xDC 0x2F DUP2 INVALID CODECOPY SHR CODECOPY 0x23 0xBE 0xC7 RETURNDATACOPY 0x23 0xA9 PUSH7 0x2EFC9C229C6A00 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 0x4F PUSH8 0x95ECD11EB09CC6B2 SWAP14 SWAP6 0xBA 0xE7 EXTCODECOPY EXTCODESIZE DUP16 PUSH18 0x72EF0EF7A6C5ACFC77BBAB671764736F6C63 NUMBER STOP ADDMOD SHL STOP CALLER ","sourceMap":"1032:15727:43:-:0;;;;;;;3147:66:5;1032:15727:43;;;;;;7894:76:5;;-1:-1:-1;;;;;;;;;;;1032:15727:43;;7983:34:5;7979:146;;-1:-1:-1;1032:15727:43;;;;;;;;;7979:146:5;-1:-1:-1;;;;;;1032:15727:43;-1:-1:-1;;;;;1032:15727:43;;;3147:66:5;1032:15727:43;;;8085:29:5;;1032:15727:43;;8085:29:5;7979:146;;;;7894:76;7936:23;;;-1:-1:-1;7936:23:5;;-1:-1:-1;7936:23:5;1032:15727:43;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":7353,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint256t_uint256":{"entryPoint":7464,"id":null,"parameterSlots":1,"returnSlots":2},"abi_encode_address_address_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_packed_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_uint256_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"array_push_from_uint256_to_array_uint256_dyn_storage_ptr":{"entryPoint":7721,"id":null,"parameterSlots":1,"returnSlots":0},"checked_add_uint256":{"entryPoint":8133,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":8019,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":8060,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":8266,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":7430,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_30663":{"entryPoint":7380,"id":null,"parameterSlots":1,"returnSlots":0},"fun_callOptionalReturn":{"entryPoint":8966,"id":4326,"parameterSlots":2,"returnSlots":0},"fun_checkInitializing":{"entryPoint":8920,"id":801,"parameterSlots":0,"returnSlots":0},"fun_checkOwner":{"entryPoint":8419,"id":553,"parameterSlots":0,"returnSlots":0},"fun_executeFinalization":{"entryPoint":8575,"id":12580,"parameterSlots":0,"returnSlots":0},"fun_generateUniqueProductId":{"entryPoint":8802,"id":12941,"parameterSlots":1,"returnSlots":1},"fun_nonReentrantBefore":{"entryPoint":8473,"id":2372,"parameterSlots":0,"returnSlots":0},"fun_requireNotPaused":{"entryPoint":8533,"id":2216,"parameterSlots":0,"returnSlots":0},"fun_safeTransfer":{"entryPoint":8858,"id":3949,"parameterSlots":3,"returnSlots":0},"fun_transferOwnership_inner":{"entryPoint":8301,"id":null,"parameterSlots":1,"returnSlots":0},"memory_array_index_access_struct_ProductConfig_dyn":{"entryPoint":7614,"id":null,"parameterSlots":2,"returnSlots":1},"require_helper_stringliteral_024c":{"entryPoint":7801,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_53e2":{"entryPoint":7486,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_72fa":{"entryPoint":7870,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_c5e0":{"entryPoint":7656,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_e51d":{"entryPoint":7932,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_eaa0":{"entryPoint":8073,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_fac3":{"entryPoint":7553,"id":null,"parameterSlots":1,"returnSlots":0},"try_decode_error_message":{"entryPoint":8146,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b600090813560e01c90816325b4f65f14611c94575080632903d9cf14611c6a57806329dcb0cf14611c4c5780633e413bee14611c255780633f4ba83a14611ba357806342235da614611b8557806347428e7b14611acf5780634bb278f31461196d5780635c975abb1461193d5780635cb04079146111ce57806366bff1db146111a4578063715018a61461113a57806372afddf01461111157806375390e73146110d25780637acc0b20146110825780638456cb591461100d5780638500efa114610fe65780638527d58f14610c305780638da5cb5b14610bfa578063a001ecdd14610bdc578063b3f05b9714610bb9578063b9db15b414610b39578063c45a015514610b10578063c5c4744c14610af2578063c978863114610ac9578063cb51bba914610a72578063dd5934b314610902578063e1f1c4a7146108e5578063e2bbb15814610422578063ebd692ea146103f8578063f25f4b56146103cf578063f2fde38b146103a2578063f85292ca146101b75763fa8ab0ee1461019757600080fd5b346101b457806003193601126101b4576020600d54604051908152f35b80fd5b50346101b45760603660031901126101b4576024356044359060018060a01b0360008051602061236283398151915254163314801561038e575b6101fa90611d81565b610205600435612262565b91828452600e60205261022060016040862001541515611e79565b61022b821515611f89565b828452600e60205260016040852001548203610337575b806102ca575b7fcbbdbe54b7b042a5d03f5b760745fbebd762875c3197b43499936461abc3395091608091848652600e602052600160408720015491858752600e602052600260408820015490868852600e60205280600160408a200155868852600e60205282600260408a200155604051938452602084015260408301526060820152a280f35b828452600c60205260408420548110156102485760405162461bcd60e51b815260206004820152602b60248201527f537570706c79206c696d69742063616e6e6f74206265206c657373207468616e60448201526a081cdbdb190818dbdd5b9d60aa1b6064820152608490fd5b828452600c6020526040842054156102425760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206368616e67652070726963652061667465722073616c6573006044820152606490fd5b506010546001600160a01b031633146101f1565b50346101b45760203660031901126101b4576103cc6103bf611cb9565b6103c76120e3565b61206d565b80f35b50346101b457806003193601126101b4576004546040516001600160a01b039091168152602090f35b50346101b45760203660031901126101b45760406020916004358152600c83522054604051908152f35b50346101b45761044b61043436611d28565b919061043e612119565b610446612155565b612262565b808352600e6020526040832060405161046381611cd4565b8154815260406002600184015493602084019485520154910190815260ff600954166108a8576001600d5403610865575b6104a082511515611ebe565b831561082d57808491516107cb575b506104ba9151611f53565b916127106104ca60075485611f53565b04906104d68285611f7c565b85546040516323b872dd60e01b60208201523360248201523060448201526064808201889052815291949161051e916001600160a01b0316610519608483611d06565b612306565b6002546001546001600160a01b0390811691889116803b156107c75760405163465075e360e11b81526001600160a01b03939093166004840152336024840152604483018490526064830185905281908390608490829084905af191826107ae575b50506107165785858160033d11610706575b6308c379a014610658575b3d1561064f573d67ffffffffffffffff811161063b576040516105ea93916105cf601f8201601f191660200183611d06565b81528160203d92013e5b5433906001600160a01b031661229a565b60405162461bcd60e51b8152602060048201526024808201527f4e4654206d696e74206661696c65642077697468206c6f772d6c6576656c2065604482015263393937b960e11b6064820152608490fd5b634e487b7160e01b83526041600452602483fd5b6105ea916105d9565b610660611fd2565b8061066b575061059d565b6106866044926106f894339060018060a01b0390541661229a565b604051906106d0603183602081019370027232a1036b4b73a103330b4b632b21d1607d1b85526106bf815180926020868601910161204a565b81010301601f198101845283611d06565b60405193849262461bcd60e51b8452602060048501525180928160248601528585019061204a565b601f01601f19168101030190fd5b50600482803e815160e01c610592565b8580955052600c60205261072f60408520918254611fc5565b905561073d82600854611fc5565b6008558061078c575b60405191825260208201527f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1560403392a260016000805160206123a28339815191525580f35b82546004546107a99183916001600160a01b03908116911661229a565b610746565b816107b891611d06565b6107c3578638610580565b8680fd5b5080fd5b9050828552600c6020526107e3846040872054611fc5565b9051106107f15782386104af565b60405162461bcd60e51b8152602060048201526014602482015273115e18d959591cc81cdd5c1c1b1e481b1a5b5a5d60621b6044820152606490fd5b60405162461bcd60e51b815260206004820152601060248201526f496e76616c6964207175616e7469747960801b6044820152606490fd5b60065442106104945760405162461bcd60e51b815260206004820152601260248201527110d85b5c185a59db881a185cc8195b99195960721b6044820152606490fd5b60405162461bcd60e51b815260206004820152601560248201527410d85b5c185a59db881a5cc8199a5b985b1a5e9959605a1b6044820152606490fd5b50346101b457806003193601126101b45760206040516127108152f35b50346101b45760603660031901126101b45760405161092081611cd4565b60043581526020810160243581526040820191604435835260018060a01b03600080516020612362833981519152541633148015610a5e575b61096290611d81565b61096e82511515611f89565b61097a81511515611de8565b6109848151612262565b92838552600e6020526001604086200154610a2057826040927f0bb34bc6bcdd4ba28b7de4669c2e7d94d1b828b2a6a14b82991e087b20d735499451600284518651926109d084611cd4565b89845260208401908152878401918252898b52600e602052878b209351845551600184015551910155610a0286611e29565b51858752600f6020528387205551905182519182526020820152a280f35b60405162461bcd60e51b815260206004820152601660248201527550726f6475637420616c72656164792065786973747360501b6044820152606490fd5b506010546001600160a01b03163314610959565b50346101b45760203660031901126101b45760043590600b548210156101b457600b54821015610ab557602091600b825282822001549060031b1c604051908152f35b634e487b7160e01b81526032600452602490fd5b50346101b457806003193601126101b4576003546040516001600160a01b039091168152602090f35b50346101b457806003193601126101b4576020600854604051908152f35b50346101b457806003193601126101b4576002546040516001600160a01b039091168152602090f35b50346101b45760203660031901126101b457604081606092828051610b5d81611cd4565b8281528260208201520152610b73600435612262565b8152600e60205220604051610b8781611cd4565b815491828252604060026001830154926020850193845201549201918252604051928352516020830152516040820152f35b50346101b457806003193601126101b457602060ff600954166040519015158152f35b50346101b457806003193601126101b4576020600754604051908152f35b50346101b457806003193601126101b457600080516020612362833981519152546040516001600160a01b039091168152602090f35b50346101b457610c4261043436611d28565b90818352600e60205260408320610c80604051610c5e81611cd4565b8254815260018301549060406002602083019584875201549101521515611ebe565b600d5480610ec45750610c9860085460055411611efc565b600154604051627eeac760e11b8152336004820152602481018590526001600160a01b0390911690602081604481855afa8015610eb95784918791610e80575b5010610e3b576002546001600160a01b0316908590823b156107c75760405163270a2a6560e01b81526001600160a01b039190911660048201523360248201526044810186905260648101859052918290608490829084905af18015610e3057610df0575b5090610d8681610d8184612710610d797fb7048c2ad36aadee977bb16b4543a18866044d27a2ca753e1c7dbcfa7d7a6962975160075490611f53565b049051611f7c565b611f53565b92610d9b843360018060a01b0388541661229a565b808552600c60205260408520610db2838254611f7c565b9055610dc084600854611f7c565b6008556040805194855260208501919091528301523391606090a260016000805160206123a28339815191525580f35b82610d8186610e257fb7048c2ad36aadee977bb16b4543a18866044d27a2ca753e1c7dbcfa7d7a6962969598610d8695611d06565b969350509250610d3d565b6040513d87823e3d90fd5b60405162461bcd60e51b815260206004820152601860248201527f496e73756666696369656e74204e46542062616c616e636500000000000000006044820152606490fd5b9150506020813d602011610eb1575b81610e9c60209383611d06565b81010312610ead5783905138610cd8565b8580fd5b3d9150610e8f565b6040513d88823e3d90fd5b60018103610f30575060ff6009541615610c985760405162461bcd60e51b815260206004820152602a60248201527f43616d706169676e2066696e616c697a6564202d20726566756e6473206e6f7460448201526920617661696c61626c6560b01b6064820152608490fd5b600203610faa57600654421015610f5557610f5060085460055411611efc565b610c98565b60405162461bcd60e51b815260206004820152602760248201527f446561646c696e6520706173736564202d20726566756e6473206e6f7420617660448201526661696c61626c6560c81b6064820152608490fd5b60405162461bcd60e51b8152602060048201526014602482015273496e76616c69642066756e64696e67207479706560601b6044820152606490fd5b50346101b45760203660031901126101b4576020611005600435612262565b604051908152f35b50346101b457806003193601126101b4576110266120e3565b61102e612155565b600160ff19600080516020612382833981519152541617600080516020612382833981519152557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a180f35b50346101b45760203660031901126101b4576040906004358152600e6020522080546110ce60026001840154930154604051938493846040919493926060820195825260208201520152565b0390f35b50346101b45760203660031901126101b4576040602091600435808252600f8452611101838320541515611e79565b8152600f83522054604051908152f35b50346101b457806003193601126101b4576010546040516001600160a01b039091168152602090f35b50346101b457806003193601126101b4576111536120e3565b60008051602061236283398151915280546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346101b45760203660031901126101b45760406020916004358152600a83522054604051908152f35b50346101b4576101803660031901126101b4576111e9611cb9565b6024356001600160a01b03811690819003611939576044356001600160a01b03811691908290036119355760643560e4356001600160a01b0381169060c435908290036107c357610104356001600160a01b038116939084900361193157610124359567ffffffffffffffff871161192d573660238801121561192d57866004013567ffffffffffffffff8111611919576040519761128e60208360051b018a611d06565b8189526024606060208b019302820101903682116118d557602401915b8183106118dd57505050610144356001600160a01b03811696908790036118d95761016435986001600160a01b038a1690818b036118d5576000805160206123c2833981519152549a60ff8c60401c16159b8c67ffffffffffffffff8216801591826118cd575b5060011490816118c3575b1590816118ba575b506118ab5767ffffffffffffffff1981166001176000805160206123c28339815191525561136591908d61187e575b5061135d6122d8565b6103c76122d8565b61136d6122d8565b6113756122d8565b61137d6122d8565b60016000805160206123a2833981519152556001600160a01b03169081156118425782156117fd5783156117c357861561177e5787156117395742861115611701578951156116c55788156116875715611652576127108410156115ff576001600160601b0360a01b8b5416178a556001600160601b0360a01b60035416176003556001600160601b0360a01b600454161760045560075560a4356005556006556001600160601b0360a01b60015416176001556001600160601b0360a01b60025416176002556001600160601b0360a01b6010541617601055608435600d55825b815181101561159c5760206114748284611dbe565b5101511561155f578061149561148c60019385611dbe565b51511515611de8565b61149f8184611dbe565b51516040513060601b6bffffffffffffffffffffffff19166020820190815260348201929092526114dd81605481015b03601f198101835282611d06565b51902060206114ec8386611dbe565b510151600260406114fd8588611dbe565b5101516040519261150d84611cd4565b8484526020840190815260408401918252848a52600e60205260408a209351845551868401555191015561154081611e29565b61154a8285611dbe565b5151908652600f60205260408620550161145f565b60405162461bcd60e51b8152602060048201526015602482015274496e76616c69642070726f6475637420707269636560581b6044820152606490fd5b50506115a55780f35b68ff0000000000000000196000805160206123c283398151915254166000805160206123c2833981519152557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a180f35b60405162461bcd60e51b815260206004820152602560248201527f4665652070657263656e74616765206d757374206265206c657373207468616e604482015264203130302560d81b6064820152608490fd5b60405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b21037bbb732b960991b6044820152606490fd5b60405162461bcd60e51b815260206004820152601660248201527524b73b30b634b21031b0b6b830b4b3b71030b236b4b760511b6044820152606490fd5b60405162461bcd60e51b8152602060048201526014602482015273139bc81c1c9bd91d58dd1cc81c1c9bdd9a59195960621b6044820152606490fd5b60405162461bcd60e51b815260206004820152601060248201526f496e76616c696420646561646c696e6560801b6044820152606490fd5b60405162461bcd60e51b815260206004820152601760248201527f496e76616c696420666163746f727920616464726573730000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601d60248201527f496e76616c69642070726f6475637420746f6b656e20616464726573730000006044820152606490fd5b60405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a5908199959481dd85b1b195d60721b6044820152606490fd5b60405162461bcd60e51b815260206004820152601a60248201527f496e76616c69642062656e65666963696172792077616c6c65740000000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526014602482015273496e76616c69642055534443206164647265737360601b6044820152606490fd5b68ffffffffffffffffff191668010000000000000001176000805160206123c28339815191525538611354565b63f92ee8a960e01b8e5260048efd5b90501538611325565b303b15915061131d565b91508e611312565b8b80fd5b8980fd5b6060833603126118d55760206060916040516118f881611cd4565b853581528286013583820152604086013560408201528152019201916112ab565b634e487b7160e01b8a52604160045260248afd5b8880fd5b8780fd5b8380fd5b8280fd5b50346101b457806003193601126101b457602060ff60008051602061238283398151915254166040519015158152f35b50346101b457806003193601126101b457611986612119565b61198e612155565b60ff60095416611a9657600d5480611a1a5750600854600554116119c9576119b461217f565b60016000805160206123a28339815191525580f35b6119d66006544211611d3e565b600160ff1960095416176009557fdd0f555ae5273de37f96c52aa0ba4ae26fc23a0d7b0e2b8904ba8cf1636d6ce060406008548151908482526020820152a16119b4565b60018103611a6f5750600080516020612362833981519152546001600160a01b031633148015611a5b575b611a4e90611d81565b611a5661217f565b6119b4565b506010546001600160a01b03163314611a45565b6002036119b45760085460055411611a8957611a5661217f565b611a4e6006544211611d3e565b60405162461bcd60e51b8152602060048201526011602482015270105b1c9958591e48199a5b985b1a5e9959607a1b6044820152606490fd5b50346101b457806003193601126101b457604051806020600b5491828152018091600b85527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db990855b818110611b6f5750505082611b2e910383611d06565b604051928392602084019060208552518091526040840192915b818110611b56575050500390f35b8251845285945060209384019390920191600101611b48565b8254845260209093019260019283019201611b18565b50346101b457806003193601126101b4576020600554604051908152f35b50346101b457806003193601126101b457611bbc6120e3565b6000805160206123828339815191525460ff811615611c165760ff1916600080516020612382833981519152557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a180f35b638dfc202b60e01b8252600482fd5b50346101b457806003193601126101b457546040516001600160a01b039091168152602090f35b50346101b457806003193601126101b4576020600654604051908152f35b50346101b45760203660031901126101b45760406020916004358152600f83522054604051908152f35b9050346107c757816003193601126107c7576001546001600160a01b03168152602090f35b600435906001600160a01b0382168203611ccf57565b600080fd5b6060810190811067ffffffffffffffff821117611cf057604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117611cf057604052565b6040906003190112611ccf576004359060243590565b15611d4557565b60405162461bcd60e51b8152602060048201526014602482015273111958591b1a5b99481b9bdd081c995858da195960621b6044820152606490fd5b15611d8857565b60405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606490fd5b8051821015611dd25760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b15611def57565b60405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c1c9bd91d58dd08125160721b6044820152606490fd5b600b5468010000000000000000811015611cf05760018101600b556000600b54821015610ab557600b90527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90155565b15611e8057565b60405162461bcd60e51b8152602060048201526016602482015275141c9bd91d58dd08191bd95cc81b9bdd08195e1a5cdd60521b6044820152606490fd5b15611ec557565b60405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081c1c9bd91d58dd608a1b6044820152606490fd5b15611f0357565b60405162461bcd60e51b815260206004820152602260248201527f546172676574206d6574202d20726566756e6473206e6f7420617661696c61626044820152616c6560f01b6064820152608490fd5b81810292918115918404141715611f6657565b634e487b7160e01b600052601160045260246000fd5b91908203918211611f6657565b15611f9057565b60405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420707269636560981b6044820152606490fd5b91908201809211611f6657565b600060443d10612039576040513d600319016004823e8051913d602484011167ffffffffffffffff841117612044578282019283519167ffffffffffffffff831161203c573d8401600319018584016020011161203c575061203992910160200190611d06565b90565b949350505050565b92915050565b60005b83811061205d5750506000910152565b818101518382015260200161204d565b6001600160a01b031680156120cd5760008051602061236283398151915280546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b631e4fbdf760e01b600052600060045260246000fd5b600080516020612362833981519152546001600160a01b0316330361210457565b63118cdaa760e01b6000523360045260246000fd5b60026000805160206123a283398151915254146121445760026000805160206123a283398151915255565b633ee5aeb560e01b60005260046000fd5b60ff600080516020612382833981519152541661216e57565b63d93c066560e01b60005260046000fd5b6009805460ff191660011790556000546040516370a0823160e01b81523060048201526001600160a01b039190911690602081602481855afa90811561225657600091612224575b5080612205575b50507fdd0f555ae5273de37f96c52aa0ba4ae26fc23a0d7b0e2b8904ba8cf1636d6ce06040600854815190600182526020820152a1565b60035461221d926001600160a01b039091169061229a565b38806121ce565b906020823d60201161224e575b8161223e60209383611d06565b810103126101b4575051386121c7565b3d9150612231565b6040513d6000823e3d90fd5b6040513060601b6bffffffffffffffffffffffff191660208201908152603482019290925261229481605481016114cf565b51902090565b60405163a9059cbb60e01b60208201526001600160a01b039290921660248301526044808301939093529181526122d691610519606483611d06565b565b60ff6000805160206123c28339815191525460401c16156122f557565b631afcd79f60e31b60005260046000fd5b906000602091828151910182855af115612256576000513d61235857506001600160a01b0381163b155b6123375750565b635274afe760e01b60009081526001600160a01b0391909116600452602490fd5b6001141561233056fe9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033009b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a2646970667358221220d44f6795ecd11eb09cc6b29d95bae73c3b8f7172ef0ef7a6c5acfc77bbab671764736f6c634300081b0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x25B4F65F EQ PUSH2 0x1C94 JUMPI POP DUP1 PUSH4 0x2903D9CF EQ PUSH2 0x1C6A JUMPI DUP1 PUSH4 0x29DCB0CF EQ PUSH2 0x1C4C JUMPI DUP1 PUSH4 0x3E413BEE EQ PUSH2 0x1C25 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1BA3 JUMPI DUP1 PUSH4 0x42235DA6 EQ PUSH2 0x1B85 JUMPI DUP1 PUSH4 0x47428E7B EQ PUSH2 0x1ACF JUMPI DUP1 PUSH4 0x4BB278F3 EQ PUSH2 0x196D JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x193D JUMPI DUP1 PUSH4 0x5CB04079 EQ PUSH2 0x11CE JUMPI DUP1 PUSH4 0x66BFF1DB EQ PUSH2 0x11A4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x113A JUMPI DUP1 PUSH4 0x72AFDDF0 EQ PUSH2 0x1111 JUMPI DUP1 PUSH4 0x75390E73 EQ PUSH2 0x10D2 JUMPI DUP1 PUSH4 0x7ACC0B20 EQ PUSH2 0x1082 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x100D JUMPI DUP1 PUSH4 0x8500EFA1 EQ PUSH2 0xFE6 JUMPI DUP1 PUSH4 0x8527D58F EQ PUSH2 0xC30 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xBFA JUMPI DUP1 PUSH4 0xA001ECDD EQ PUSH2 0xBDC JUMPI DUP1 PUSH4 0xB3F05B97 EQ PUSH2 0xBB9 JUMPI DUP1 PUSH4 0xB9DB15B4 EQ PUSH2 0xB39 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0xB10 JUMPI DUP1 PUSH4 0xC5C4744C EQ PUSH2 0xAF2 JUMPI DUP1 PUSH4 0xC9788631 EQ PUSH2 0xAC9 JUMPI DUP1 PUSH4 0xCB51BBA9 EQ PUSH2 0xA72 JUMPI DUP1 PUSH4 0xDD5934B3 EQ PUSH2 0x902 JUMPI DUP1 PUSH4 0xE1F1C4A7 EQ PUSH2 0x8E5 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0xEBD692EA EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0xF25F4B56 EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0xF85292CA EQ PUSH2 0x1B7 JUMPI PUSH4 0xFA8AB0EE EQ PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x20 PUSH1 0xD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2362 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x38E JUMPI JUMPDEST PUSH2 0x1FA SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH2 0x205 PUSH1 0x4 CALLDATALOAD PUSH2 0x2262 JUMP JUMPDEST SWAP2 DUP3 DUP5 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH2 0x220 PUSH1 0x1 PUSH1 0x40 DUP7 KECCAK256 ADD SLOAD ISZERO ISZERO PUSH2 0x1E79 JUMP JUMPDEST PUSH2 0x22B DUP3 ISZERO ISZERO PUSH2 0x1F89 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 DUP6 KECCAK256 ADD SLOAD DUP3 SUB PUSH2 0x337 JUMPI JUMPDEST DUP1 PUSH2 0x2CA JUMPI JUMPDEST PUSH32 0xCBBDBE54B7B042A5D03F5B760745FBEBD762875C3197B43499936461ABC33950 SWAP2 PUSH1 0x80 SWAP2 DUP5 DUP7 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 DUP8 KECCAK256 ADD SLOAD SWAP2 DUP6 DUP8 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 DUP9 KECCAK256 ADD SLOAD SWAP1 DUP7 DUP9 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH1 0x1 PUSH1 0x40 DUP11 KECCAK256 ADD SSTORE DUP7 DUP9 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE DUP3 PUSH1 0x2 PUSH1 0x40 DUP11 KECCAK256 ADD SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE LOG2 DUP1 RETURN JUMPDEST DUP3 DUP5 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x248 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537570706C79206C696D69742063616E6E6F74206265206C657373207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x81CDBDB190818DBDD5B9D PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP3 DUP5 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD ISZERO PUSH2 0x242 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206368616E67652070726963652061667465722073616C657300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1F1 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH2 0x3CC PUSH2 0x3BF PUSH2 0x1CB9 JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x20E3 JUMP JUMPDEST PUSH2 0x206D JUMP JUMPDEST DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x40 PUSH1 0x20 SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xC DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI PUSH2 0x44B PUSH2 0x434 CALLDATASIZE PUSH2 0x1D28 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x43E PUSH2 0x2119 JUMP JUMPDEST PUSH2 0x446 PUSH2 0x2155 JUMP JUMPDEST PUSH2 0x2262 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x463 DUP2 PUSH2 0x1CD4 JUMP JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x40 PUSH1 0x2 PUSH1 0x1 DUP5 ADD SLOAD SWAP4 PUSH1 0x20 DUP5 ADD SWAP5 DUP6 MSTORE ADD SLOAD SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0xFF PUSH1 0x9 SLOAD AND PUSH2 0x8A8 JUMPI PUSH1 0x1 PUSH1 0xD SLOAD SUB PUSH2 0x865 JUMPI JUMPDEST PUSH2 0x4A0 DUP3 MLOAD ISZERO ISZERO PUSH2 0x1EBE JUMP JUMPDEST DUP4 ISZERO PUSH2 0x82D JUMPI DUP1 DUP5 SWAP2 MLOAD PUSH2 0x7CB JUMPI JUMPDEST POP PUSH2 0x4BA SWAP2 MLOAD PUSH2 0x1F53 JUMP JUMPDEST SWAP2 PUSH2 0x2710 PUSH2 0x4CA PUSH1 0x7 SLOAD DUP6 PUSH2 0x1F53 JUMP JUMPDEST DIV SWAP1 PUSH2 0x4D6 DUP3 DUP6 PUSH2 0x1F7C JUMP JUMPDEST DUP6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP9 SWAP1 MSTORE DUP2 MSTORE SWAP2 SWAP5 SWAP2 PUSH2 0x51E SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x519 PUSH1 0x84 DUP4 PUSH2 0x1D06 JUMP JUMPDEST PUSH2 0x2306 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP9 SWAP2 AND DUP1 EXTCODESIZE ISZERO PUSH2 0x7C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x465075E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE CALLER PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 DUP4 ADD DUP6 SWAP1 MSTORE DUP2 SWAP1 DUP4 SWAP1 PUSH1 0x84 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL SWAP2 DUP3 PUSH2 0x7AE JUMPI JUMPDEST POP POP PUSH2 0x716 JUMPI DUP6 DUP6 DUP2 PUSH1 0x3 RETURNDATASIZE GT PUSH2 0x706 JUMPI JUMPDEST PUSH4 0x8C379A0 EQ PUSH2 0x658 JUMPI JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x64F JUMPI RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x63B JUMPI PUSH1 0x40 MLOAD PUSH2 0x5EA SWAP4 SWAP2 PUSH2 0x5CF PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP4 PUSH2 0x1D06 JUMP JUMPDEST DUP2 MSTORE DUP2 PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST SLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x229A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4E4654206D696E74206661696C65642077697468206C6F772D6C6576656C2065 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x393937B9 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH2 0x5EA SWAP2 PUSH2 0x5D9 JUMP JUMPDEST PUSH2 0x660 PUSH2 0x1FD2 JUMP JUMPDEST DUP1 PUSH2 0x66B JUMPI POP PUSH2 0x59D JUMP JUMPDEST PUSH2 0x686 PUSH1 0x44 SWAP3 PUSH2 0x6F8 SWAP5 CALLER SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 SLOAD AND PUSH2 0x229A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x6D0 PUSH1 0x31 DUP4 PUSH1 0x20 DUP2 ADD SWAP4 PUSH17 0x27232A1036B4B73A103330B4B632B21D1 PUSH1 0x7D SHL DUP6 MSTORE PUSH2 0x6BF DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0x204A JUMP JUMPDEST DUP2 ADD SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP5 MSTORE DUP4 PUSH2 0x1D06 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP5 MSTORE PUSH1 0x20 PUSH1 0x4 DUP6 ADD MSTORE MLOAD DUP1 SWAP3 DUP2 PUSH1 0x24 DUP7 ADD MSTORE DUP6 DUP6 ADD SWAP1 PUSH2 0x204A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST POP PUSH1 0x4 DUP3 DUP1 RETURNDATACOPY DUP2 MLOAD PUSH1 0xE0 SHR PUSH2 0x592 JUMP JUMPDEST DUP6 DUP1 SWAP6 POP MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH2 0x72F PUSH1 0x40 DUP6 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x1FC5 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x73D DUP3 PUSH1 0x8 SLOAD PUSH2 0x1FC5 JUMP JUMPDEST PUSH1 0x8 SSTORE DUP1 PUSH2 0x78C JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 PUSH1 0x40 CALLER SWAP3 LOG2 PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23A2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP1 RETURN JUMPDEST DUP3 SLOAD PUSH1 0x4 SLOAD PUSH2 0x7A9 SWAP2 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND PUSH2 0x229A JUMP JUMPDEST PUSH2 0x746 JUMP JUMPDEST DUP2 PUSH2 0x7B8 SWAP2 PUSH2 0x1D06 JUMP JUMPDEST PUSH2 0x7C3 JUMPI DUP7 CODESIZE PUSH2 0x580 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 POP DUP3 DUP6 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH2 0x7E3 DUP5 PUSH1 0x40 DUP8 KECCAK256 SLOAD PUSH2 0x1FC5 JUMP JUMPDEST SWAP1 MLOAD LT PUSH2 0x7F1 JUMPI DUP3 CODESIZE PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x115E18D959591CC81CDD5C1C1B1E481B1A5B5A5D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x496E76616C6964207175616E74697479 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD TIMESTAMP LT PUSH2 0x494 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x10D85B5C185A59DB881A185CC8195B991959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x10D85B5C185A59DB881A5CC8199A5B985B1A5E9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x2710 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x40 MLOAD PUSH2 0x920 DUP2 PUSH2 0x1CD4 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 DUP2 ADD PUSH1 0x24 CALLDATALOAD DUP2 MSTORE PUSH1 0x40 DUP3 ADD SWAP2 PUSH1 0x44 CALLDATALOAD DUP4 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2362 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0xA5E JUMPI JUMPDEST PUSH2 0x962 SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH2 0x96E DUP3 MLOAD ISZERO ISZERO PUSH2 0x1F89 JUMP JUMPDEST PUSH2 0x97A DUP2 MLOAD ISZERO ISZERO PUSH2 0x1DE8 JUMP JUMPDEST PUSH2 0x984 DUP2 MLOAD PUSH2 0x2262 JUMP JUMPDEST SWAP3 DUP4 DUP6 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 DUP7 KECCAK256 ADD SLOAD PUSH2 0xA20 JUMPI DUP3 PUSH1 0x40 SWAP3 PUSH32 0xBB34BC6BCDD4BA28B7DE4669C2E7D94D1B828B2A6A14B82991E087B20D73549 SWAP5 MLOAD PUSH1 0x2 DUP5 MLOAD DUP7 MLOAD SWAP3 PUSH2 0x9D0 DUP5 PUSH2 0x1CD4 JUMP JUMPDEST DUP10 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP1 DUP2 MSTORE DUP8 DUP5 ADD SWAP2 DUP3 MSTORE DUP10 DUP12 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE DUP8 DUP12 KECCAK256 SWAP4 MLOAD DUP5 SSTORE MLOAD PUSH1 0x1 DUP5 ADD SSTORE MLOAD SWAP2 ADD SSTORE PUSH2 0xA02 DUP7 PUSH2 0x1E29 JUMP JUMPDEST MLOAD DUP6 DUP8 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE DUP4 DUP8 KECCAK256 SSTORE MLOAD SWAP1 MLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG2 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x50726F6475637420616C726561647920657869737473 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x959 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0xB SLOAD DUP3 LT ISZERO PUSH2 0x1B4 JUMPI PUSH1 0xB SLOAD DUP3 LT ISZERO PUSH2 0xAB5 JUMPI PUSH1 0x20 SWAP2 PUSH1 0xB DUP3 MSTORE DUP3 DUP3 KECCAK256 ADD SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x20 PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x40 DUP2 PUSH1 0x60 SWAP3 DUP3 DUP1 MLOAD PUSH2 0xB5D DUP2 PUSH2 0x1CD4 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE PUSH2 0xB73 PUSH1 0x4 CALLDATALOAD PUSH2 0x2262 JUMP JUMPDEST DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x40 MLOAD PUSH2 0xB87 DUP2 PUSH2 0x1CD4 JUMP JUMPDEST DUP2 SLOAD SWAP2 DUP3 DUP3 MSTORE PUSH1 0x40 PUSH1 0x2 PUSH1 0x1 DUP4 ADD SLOAD SWAP3 PUSH1 0x20 DUP6 ADD SWAP4 DUP5 MSTORE ADD SLOAD SWAP3 ADD SWAP2 DUP3 MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE MLOAD PUSH1 0x20 DUP4 ADD MSTORE MLOAD PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x9 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2362 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI PUSH2 0xC42 PUSH2 0x434 CALLDATASIZE PUSH2 0x1D28 JUMP JUMPDEST SWAP1 DUP2 DUP4 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH2 0xC80 PUSH1 0x40 MLOAD PUSH2 0xC5E DUP2 PUSH2 0x1CD4 JUMP JUMPDEST DUP3 SLOAD DUP2 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP1 PUSH1 0x40 PUSH1 0x2 PUSH1 0x20 DUP4 ADD SWAP6 DUP5 DUP8 MSTORE ADD SLOAD SWAP2 ADD MSTORE ISZERO ISZERO PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0xD SLOAD DUP1 PUSH2 0xEC4 JUMPI POP PUSH2 0xC98 PUSH1 0x8 SLOAD PUSH1 0x5 SLOAD GT PUSH2 0x1EFC JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH3 0x7EEAC7 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0xEB9 JUMPI DUP5 SWAP2 DUP8 SWAP2 PUSH2 0xE80 JUMPI JUMPDEST POP LT PUSH2 0xE3B JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP6 SWAP1 DUP3 EXTCODESIZE ISZERO PUSH2 0x7C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x270A2A65 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 DUP3 SWAP1 PUSH1 0x84 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0xE30 JUMPI PUSH2 0xDF0 JUMPI JUMPDEST POP SWAP1 PUSH2 0xD86 DUP2 PUSH2 0xD81 DUP5 PUSH2 0x2710 PUSH2 0xD79 PUSH32 0xB7048C2AD36AADEE977BB16B4543A18866044D27A2CA753E1C7DBCFA7D7A6962 SWAP8 MLOAD PUSH1 0x7 SLOAD SWAP1 PUSH2 0x1F53 JUMP JUMPDEST DIV SWAP1 MLOAD PUSH2 0x1F7C JUMP JUMPDEST PUSH2 0x1F53 JUMP JUMPDEST SWAP3 PUSH2 0xD9B DUP5 CALLER PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP9 SLOAD AND PUSH2 0x229A JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 PUSH2 0xDB2 DUP4 DUP3 SLOAD PUSH2 0x1F7C JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xDC0 DUP5 PUSH1 0x8 SLOAD PUSH2 0x1F7C JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 ADD MSTORE CALLER SWAP2 PUSH1 0x60 SWAP1 LOG2 PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23A2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP1 RETURN JUMPDEST DUP3 PUSH2 0xD81 DUP7 PUSH2 0xE25 PUSH32 0xB7048C2AD36AADEE977BB16B4543A18866044D27A2CA753E1C7DBCFA7D7A6962 SWAP7 SWAP6 SWAP9 PUSH2 0xD86 SWAP6 PUSH2 0x1D06 JUMP JUMPDEST SWAP7 SWAP4 POP POP SWAP3 POP PUSH2 0xD3D JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74204E46542062616C616E63650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xEB1 JUMPI JUMPDEST DUP2 PUSH2 0xE9C PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1D06 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xEAD JUMPI DUP4 SWAP1 MLOAD CODESIZE PUSH2 0xCD8 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xE8F JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0xF30 JUMPI POP PUSH1 0xFF PUSH1 0x9 SLOAD AND ISZERO PUSH2 0xC98 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616D706169676E2066696E616C697A6564202D20726566756E6473206E6F74 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x20617661696C61626C65 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x2 SUB PUSH2 0xFAA JUMPI PUSH1 0x6 SLOAD TIMESTAMP LT ISZERO PUSH2 0xF55 JUMPI PUSH2 0xF50 PUSH1 0x8 SLOAD PUSH1 0x5 SLOAD GT PUSH2 0x1EFC JUMP JUMPDEST PUSH2 0xC98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446561646C696E6520706173736564202D20726566756E6473206E6F74206176 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x61696C61626C65 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C69642066756E64696E672074797065 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x20 PUSH2 0x1005 PUSH1 0x4 CALLDATALOAD PUSH2 0x2262 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI PUSH2 0x1026 PUSH2 0x20E3 JUMP JUMPDEST PUSH2 0x102E PUSH2 0x2155 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2382 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2382 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x40 SWAP1 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD PUSH2 0x10CE PUSH1 0x2 PUSH1 0x1 DUP5 ADD SLOAD SWAP4 ADD SLOAD PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x40 PUSH1 0x20 SWAP2 PUSH1 0x4 CALLDATALOAD DUP1 DUP3 MSTORE PUSH1 0xF DUP5 MSTORE PUSH2 0x1101 DUP4 DUP4 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x1E79 JUMP JUMPDEST DUP2 MSTORE PUSH1 0xF DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI PUSH2 0x1153 PUSH2 0x20E3 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2362 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x40 PUSH1 0x20 SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xA DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI PUSH2 0x180 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH2 0x11E9 PUSH2 0x1CB9 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1939 JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x1935 JUMPI PUSH1 0x64 CALLDATALOAD PUSH1 0xE4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0xC4 CALLDATALOAD SWAP1 DUP3 SWAP1 SUB PUSH2 0x7C3 JUMPI PUSH2 0x104 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP4 SWAP1 DUP5 SWAP1 SUB PUSH2 0x1931 JUMPI PUSH2 0x124 CALLDATALOAD SWAP6 PUSH8 0xFFFFFFFFFFFFFFFF DUP8 GT PUSH2 0x192D JUMPI CALLDATASIZE PUSH1 0x23 DUP9 ADD SLT ISZERO PUSH2 0x192D JUMPI DUP7 PUSH1 0x4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1919 JUMPI PUSH1 0x40 MLOAD SWAP8 PUSH2 0x128E PUSH1 0x20 DUP4 PUSH1 0x5 SHL ADD DUP11 PUSH2 0x1D06 JUMP JUMPDEST DUP2 DUP10 MSTORE PUSH1 0x24 PUSH1 0x60 PUSH1 0x20 DUP12 ADD SWAP4 MUL DUP3 ADD ADD SWAP1 CALLDATASIZE DUP3 GT PUSH2 0x18D5 JUMPI PUSH1 0x24 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x18DD JUMPI POP POP POP PUSH2 0x144 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP7 SWAP1 DUP8 SWAP1 SUB PUSH2 0x18D9 JUMPI PUSH2 0x164 CALLDATALOAD SWAP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 DUP2 DUP12 SUB PUSH2 0x18D5 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23C2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP11 PUSH1 0xFF DUP13 PUSH1 0x40 SHR AND ISZERO SWAP12 DUP13 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND DUP1 ISZERO SWAP2 DUP3 PUSH2 0x18CD JUMPI JUMPDEST POP PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x18C3 JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x18BA JUMPI JUMPDEST POP PUSH2 0x18AB JUMPI PUSH8 0xFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0x1 OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23C2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0x1365 SWAP2 SWAP1 DUP14 PUSH2 0x187E JUMPI JUMPDEST POP PUSH2 0x135D PUSH2 0x22D8 JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x22D8 JUMP JUMPDEST PUSH2 0x136D PUSH2 0x22D8 JUMP JUMPDEST PUSH2 0x1375 PUSH2 0x22D8 JUMP JUMPDEST PUSH2 0x137D PUSH2 0x22D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23A2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1842 JUMPI DUP3 ISZERO PUSH2 0x17FD JUMPI DUP4 ISZERO PUSH2 0x17C3 JUMPI DUP7 ISZERO PUSH2 0x177E JUMPI DUP8 ISZERO PUSH2 0x1739 JUMPI TIMESTAMP DUP7 GT ISZERO PUSH2 0x1701 JUMPI DUP10 MLOAD ISZERO PUSH2 0x16C5 JUMPI DUP9 ISZERO PUSH2 0x1687 JUMPI ISZERO PUSH2 0x1652 JUMPI PUSH2 0x2710 DUP5 LT ISZERO PUSH2 0x15FF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP12 SLOAD AND OR DUP11 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE PUSH1 0x7 SSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0x5 SSTORE PUSH1 0x6 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x10 SLOAD AND OR PUSH1 0x10 SSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0xD SSTORE DUP3 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x159C JUMPI PUSH1 0x20 PUSH2 0x1474 DUP3 DUP5 PUSH2 0x1DBE JUMP JUMPDEST MLOAD ADD MLOAD ISZERO PUSH2 0x155F JUMPI DUP1 PUSH2 0x1495 PUSH2 0x148C PUSH1 0x1 SWAP4 DUP6 PUSH2 0x1DBE JUMP JUMPDEST MLOAD MLOAD ISZERO ISZERO PUSH2 0x1DE8 JUMP JUMPDEST PUSH2 0x149F DUP2 DUP5 PUSH2 0x1DBE JUMP JUMPDEST MLOAD MLOAD PUSH1 0x40 MLOAD ADDRESS PUSH1 0x60 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x34 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x14DD DUP2 PUSH1 0x54 DUP2 ADD JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x1D06 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x20 PUSH2 0x14EC DUP4 DUP7 PUSH2 0x1DBE JUMP JUMPDEST MLOAD ADD MLOAD PUSH1 0x2 PUSH1 0x40 PUSH2 0x14FD DUP6 DUP9 PUSH2 0x1DBE JUMP JUMPDEST MLOAD ADD MLOAD PUSH1 0x40 MLOAD SWAP3 PUSH2 0x150D DUP5 PUSH2 0x1CD4 JUMP JUMPDEST DUP5 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 DUP3 MSTORE DUP5 DUP11 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP11 KECCAK256 SWAP4 MLOAD DUP5 SSTORE MLOAD DUP7 DUP5 ADD SSTORE MLOAD SWAP2 ADD SSTORE PUSH2 0x1540 DUP2 PUSH2 0x1E29 JUMP JUMPDEST PUSH2 0x154A DUP3 DUP6 PUSH2 0x1DBE JUMP JUMPDEST MLOAD MLOAD SWAP1 DUP7 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 SSTORE ADD PUSH2 0x145F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C69642070726F64756374207072696365 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP POP PUSH2 0x15A5 JUMPI DUP1 RETURN JUMPDEST PUSH9 0xFF0000000000000000 NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23C2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23C2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4665652070657263656E74616765206D757374206265206C657373207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x2031303025 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x24B73B30B634B21037BBB732B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x24B73B30B634B21031B0B6B830B4B3B71030B236B4B7 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x139BC81C1C9BD91D58DD1CC81C1C9BDD9A591959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x496E76616C696420646561646C696E65 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420666163746F72792061646472657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642070726F6475637420746F6B656E2061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A5908199959481DD85B1B195D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642062656E65666963696172792077616C6C6574000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420555344432061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF NOT AND PUSH9 0x10000000000000001 OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23C2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE CODESIZE PUSH2 0x1354 JUMP JUMPDEST PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP15 MSTORE PUSH1 0x4 DUP15 REVERT JUMPDEST SWAP1 POP ISZERO CODESIZE PUSH2 0x1325 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x131D JUMP JUMPDEST SWAP2 POP DUP15 PUSH2 0x1312 JUMP JUMPDEST DUP12 DUP1 REVERT JUMPDEST DUP10 DUP1 REVERT JUMPDEST PUSH1 0x60 DUP4 CALLDATASIZE SUB SLT PUSH2 0x18D5 JUMPI PUSH1 0x20 PUSH1 0x60 SWAP2 PUSH1 0x40 MLOAD PUSH2 0x18F8 DUP2 PUSH2 0x1CD4 JUMP JUMPDEST DUP6 CALLDATALOAD DUP2 MSTORE DUP3 DUP7 ADD CALLDATALOAD DUP4 DUP3 ADD MSTORE PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x12AB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP11 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2382 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI PUSH2 0x1986 PUSH2 0x2119 JUMP JUMPDEST PUSH2 0x198E PUSH2 0x2155 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x9 SLOAD AND PUSH2 0x1A96 JUMPI PUSH1 0xD SLOAD DUP1 PUSH2 0x1A1A JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x5 SLOAD GT PUSH2 0x19C9 JUMPI PUSH2 0x19B4 PUSH2 0x217F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23A2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP1 RETURN JUMPDEST PUSH2 0x19D6 PUSH1 0x6 SLOAD TIMESTAMP GT PUSH2 0x1D3E JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x9 SLOAD AND OR PUSH1 0x9 SSTORE PUSH32 0xDD0F555AE5273DE37F96C52AA0BA4AE26FC23A0D7B0E2B8904BA8CF1636D6CE0 PUSH1 0x40 PUSH1 0x8 SLOAD DUP2 MLOAD SWAP1 DUP5 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 PUSH2 0x19B4 JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x1A6F JUMPI POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2362 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x1A5B JUMPI JUMPDEST PUSH2 0x1A4E SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH2 0x1A56 PUSH2 0x217F JUMP JUMPDEST PUSH2 0x19B4 JUMP JUMPDEST POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1A45 JUMP JUMPDEST PUSH1 0x2 SUB PUSH2 0x19B4 JUMPI PUSH1 0x8 SLOAD PUSH1 0x5 SLOAD GT PUSH2 0x1A89 JUMPI PUSH2 0x1A56 PUSH2 0x217F JUMP JUMPDEST PUSH2 0x1A4E PUSH1 0x6 SLOAD TIMESTAMP GT PUSH2 0x1D3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x105B1C9958591E48199A5B985B1A5E9959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0xB SLOAD SWAP2 DUP3 DUP2 MSTORE ADD DUP1 SWAP2 PUSH1 0xB DUP6 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 SWAP1 DUP6 JUMPDEST DUP2 DUP2 LT PUSH2 0x1B6F JUMPI POP POP POP DUP3 PUSH2 0x1B2E SWAP2 SUB DUP4 PUSH2 0x1D06 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x1B56 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1B48 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x1B18 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI PUSH2 0x1BBC PUSH2 0x20E3 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2382 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x1C16 JUMPI PUSH1 0xFF NOT AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2382 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x40 PUSH1 0x20 SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xF DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x7C7 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7C7 JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1CCF JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1CF0 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1CF0 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x1CCF JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1D45 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x111958591B1A5B99481B9BDD081C995858DA1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1D88 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1DD2 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x1DEF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081C1C9BD91D58DD081251 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x1CF0 JUMPI PUSH1 0x1 DUP2 ADD PUSH1 0xB SSTORE PUSH1 0x0 PUSH1 0xB SLOAD DUP3 LT ISZERO PUSH2 0xAB5 JUMPI PUSH1 0xB SWAP1 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 ADD SSTORE JUMP JUMPDEST ISZERO PUSH2 0x1E80 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x141C9BD91D58DD08191BD95CC81B9BDD08195E1A5CDD PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1EC5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x125B9D985B1A59081C1C9BD91D58DD PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1F03 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546172676574206D6574202D20726566756E6473206E6F7420617661696C6162 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6C65 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1F66 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1F66 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x1F90 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x496E76616C6964207072696365 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1F66 JUMPI JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT PUSH2 0x2039 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x3 NOT ADD PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD SWAP2 RETURNDATASIZE PUSH1 0x24 DUP5 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT OR PUSH2 0x2044 JUMPI DUP3 DUP3 ADD SWAP3 DUP4 MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x203C JUMPI RETURNDATASIZE DUP5 ADD PUSH1 0x3 NOT ADD DUP6 DUP5 ADD PUSH1 0x20 ADD GT PUSH2 0x203C JUMPI POP PUSH2 0x2039 SWAP3 SWAP2 ADD PUSH1 0x20 ADD SWAP1 PUSH2 0x1D06 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x205D JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x204D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x20CD JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2362 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2362 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2104 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23A2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD EQ PUSH2 0x2144 JUMPI PUSH1 0x2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23A2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2382 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH2 0x216E JUMPI JUMP JUMPDEST PUSH4 0xD93C0665 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2256 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2224 JUMPI JUMPDEST POP DUP1 PUSH2 0x2205 JUMPI JUMPDEST POP POP PUSH32 0xDD0F555AE5273DE37F96C52AA0BA4AE26FC23A0D7B0E2B8904BA8CF1636D6CE0 PUSH1 0x40 PUSH1 0x8 SLOAD DUP2 MLOAD SWAP1 PUSH1 0x1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x221D SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x229A JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x21CE JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x224E JUMPI JUMPDEST DUP2 PUSH2 0x223E PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1D06 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1B4 JUMPI POP MLOAD CODESIZE PUSH2 0x21C7 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2231 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD ADDRESS PUSH1 0x60 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x34 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x2294 DUP2 PUSH1 0x54 DUP2 ADD PUSH2 0x14CF JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0x22D6 SWAP2 PUSH2 0x519 PUSH1 0x64 DUP4 PUSH2 0x1D06 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23C2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x22F5 JUMPI JUMP JUMPDEST PUSH4 0x1AFCD79F PUSH1 0xE3 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x2256 JUMPI PUSH1 0x0 MLOAD RETURNDATASIZE PUSH2 0x2358 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0x2337 JUMPI POP JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x2330 JUMP INVALID SWAP1 AND 0xD0 SWAP14 PUSH19 0xD40FDAE2FD8CEAC6B6234C7706214FD39C1CD1 0xE6 MULMOD LOG0 MSTORE DUP13 NOT SWAP4 STOP 0xCD MCOPY 0xD1 TLOAD PUSH15 0x187E77E9AEE88184C21F4F2182AB58 0x27 0xCB EXTCODESIZE PUSH31 0x7FBEDCD63F033009B779B17422D0DF92223018B32B4D1FA46E071723D6817 0xE2 BASEFEE PUSH14 0x3BECC55F00F0C57E16840DF040 CALL POP DUP9 0xDC 0x2F DUP2 INVALID CODECOPY SHR CODECOPY 0x23 0xBE 0xC7 RETURNDATACOPY 0x23 0xA9 PUSH7 0x2EFC9C229C6A00 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 0x4F PUSH8 0x95ECD11EB09CC6B2 SWAP14 SWAP6 0xBA 0xE7 EXTCODECOPY EXTCODESIZE DUP16 PUSH18 0x72EF0EF7A6C5ACFC77BBAB671764736F6C63 NUMBER STOP ADDMOD SHL STOP CALLER ","sourceMap":"1032:15727:43:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1902:26;1032:15727;;;;;;;;;;;;;;;;;-1:-1:-1;;1032:15727:43;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1032:15727:43;;2227:10;:21;:52;;;;1032:15727;2219:79;;;:::i;:::-;13908:35;1032:15727;;13908:35;:::i;:::-;1032:15727;;;;13966:8;1032:15727;;13958:70;1032:15727;;;;13966:31;1032:15727;13966:35;;13958:70;:::i;:::-;14038:38;14046:12;;;14038:38;:::i;:::-;1032:15727;;;13966:8;1032:15727;;;;;;14152:31;1032:15727;14140:43;;14136:156;;1032:15727;14428:18;14424:156;;1032:15727;14853:83;1032:15727;;;;;;13966:8;1032:15727;;;;;;14609:31;1032:15727;;;;;13966:8;1032:15727;;14675:37;1032:15727;;;14675:37;1032:15727;;;;;13966:8;1032:15727;;;;;;;14723:31;1032:15727;;;;13966:8;1032:15727;;;14675:37;1032:15727;;;14775:37;1032:15727;;;;;;;;;;;;;;;;;;14853:83;1032:15727;;14424:156;1032:15727;;;14488:16;1032:15727;;;;;;14470:51;;1032:15727;14424:156;1032:15727;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;;;;;;;;-1:-1:-1;;;1032:15727:43;;;;;;;14136:156;1032:15727;;;14207:16;1032:15727;;;;;;;14136:156;1032:15727;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;;;;;;;;;;;2227:52;-1:-1:-1;2266:13:43;1032:15727;-1:-1:-1;;;;;1032:15727:43;2227:10;2252:27;2227:52;;1032:15727;;;;;;;-1:-1:-1;;1032:15727:43;;;;2357:1:4;1032:15727:43;;:::i;:::-;2303:62:4;;:::i;:::-;2357:1;:::i;:::-;1032:15727:43;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1032:15727:43;;;;;;;;;;;;;;;-1:-1:-1;;1032:15727:43;;;;;;;;;;;1806:51;1032:15727;;;;;;;;;;;;;;;6130:35;1032:15727;;;:::i;:::-;3361:103:10;;;;:::i;:::-;1944:72:9;;:::i;:::-;6130:35:43;:::i;:::-;1032:15727;;;6215:8;1032:15727;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;6258:9;1032:15727;;;;;6316:11;1032:15727;6316:16;6312:104;;1032:15727;6425:45;1032:15727;;6433:17;;6425:45;:::i;:::-;6488:12;;1032:15727;;;;;;6570:154;;1032:15727;;6756:24;1032:15727;;6756:24;:::i;:::-;1032:15727;1235:5;6811:27;6825:13;1032:15727;6811:27;;:::i;:::-;1032:15727;6884:23;;;;;:::i;:::-;1032:15727;;;;-1:-1:-1;;;1032:15727:43;1745:53:27;;;6987:10:43;1745:53:27;;;1032:15727:43;7007:4;1032:15727;;;;;;;;;;;1745:53:27;;1032:15727:43;;;1745:53:27;;-1:-1:-1;;;;;1032:15727:43;1745:53:27;;1032:15727:43;1745:53:27;:::i;:::-;;:::i;:::-;1032:15727:43;;;;-1:-1:-1;;;;;1032:15727:43;;;;;;;7180:97;;;;;1032:15727;;-1:-1:-1;;;7180:97:43;;-1:-1:-1;;;;;1032:15727:43;;;;;7180:97;;1032:15727;6987:10;1032:15727;;;;;;;;;;;;;;;;;;;;;;;;;;7180:97;;;;;;1032:15727;-1:-1:-1;;7176:1097:43;;;;;1032:15727;;;;;7176:1097;;;;;;1032:15727;;;;;;;;;;;;8190:11;;1032:15727;;5218:55;1032:15727;;-1:-1:-1;;1032:15727:43;;;;;:::i;:::-;;;;;;;;;;;6987:10;;-1:-1:-1;;;;;1032:15727:43;8190:11;:::i;:::-;1032:15727;;-1:-1:-1;;;8216:46:43;;1032:15727;;8216:46;;1032:15727;1745:53:27;1032:15727:43;;;;;;;;;-1:-1:-1;;;1032:15727:43;;;;1745:53:27;;8216:46:43;1032:15727;-1:-1:-1;;;1032:15727:43;;;;;1745:53:27;1032:15727:43;;;8190:11;1032:15727;;;7176:1097;7807:240;;:::i;:::-;;;;7176:1097;;;7807:240;7960:11;1032:15727;6987:10;1032:15727;6987:10;;1032:15727;;;;;;;;;7960:11;:::i;:::-;1032:15727;;;;;;;;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;;;;;:::i;:::-;;;;;5218:55;;1032:15727;;;;;;:::i;:::-;;;;;;;;;7986:50;;1032:15727;;7986:50;;1032:15727;;;;;1745:53:27;1032:15727:43;;;;;;;;:::i;:::-;;;-1:-1:-1;;1032:15727:43;;;7986:50;;;;1032:15727;;;;;;;;;;;;7176:1097;1032:15727;;;;;7419:16;1032:15727;;7419:45;1032:15727;;;;;;7419:45;:::i;:::-;1032:15727;;7478:24;1032:15727;7478:24;1032:15727;7478:24;:::i;:::-;;1032:15727;7636:13;7632:91;;7176:1097;1032:15727;;;;;;;;;7754:41;1032:15727;6987:10;7754:41;;1032:15727;-1:-1:-1;;;;;;;;;;;1032:15727:43;;;7632:91;1032:15727;;;;7698:9;;1032:15727;;-1:-1:-1;;;;;1032:15727:43;;;;;7698:9;:::i;:::-;7632:91;;7180:97;;;;;:::i;:::-;1032:15727;;7180:97;;;;1032:15727;;;;7180:97;1032:15727;;;6570:154;1032:15727;;;;;6621:16;1032:15727;;6621:44;1032:15727;;;;;6621:44;:::i;:::-;1032:15727;;-1:-1:-1;1032:15727:43;;6570:154;;;;1032:15727;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;;;-1:-1:-1;;;1032:15727:43;;;;;;;6312:104;6374:8;1032:15727;6356:15;:26;6312:104;1032:15727;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;;;;;;;;;;;;;;1235:5;1032:15727;;;;;;;;;;-1:-1:-1;;1032:15727:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1032:15727:43;;2227:10;:21;:52;;;;1032:15727;2219:79;;;:::i;:::-;12675:43;1032:15727;;12683:17;;12675:43;:::i;:::-;12728:52;1032:15727;;12736:21;;12728:52;:::i;:::-;12873:43;1032:15727;;12873:43;:::i;:::-;1032:15727;;;;12943:8;1032:15727;;12943:31;1032:15727;;;12943:31;1032:15727;;;;;;13402:65;1032:15727;;;;;;;;;;;:::i;:::-;;;;;13077:145;;1032:15727;;;13077:145;;;1032:15727;;;;;;12943:8;1032:15727;;;;;;;;;;12943:31;1032:15727;;;;;;;13232:32;;;:::i;:::-;1032:15727;;;;13316:25;1032:15727;;;;;;;;;;;;;;;;;;13402:65;1032:15727;;;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;;;-1:-1:-1;;;1032:15727:43;;;;;;;2227:52;-1:-1:-1;2266:13:43;1032:15727;-1:-1:-1;;;;;1032:15727:43;2227:10;2252:27;2227:52;;1032:15727;;;;;;;-1:-1:-1;;1032:15727:43;;;;;;;1773:27;1032:15727;1773:27;;;;;;1032:15727;;;;;;;;1773:27;1032:15727;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;;;;;;;;;;;;1416:32;1032:15727;;;-1:-1:-1;;;;;1032:15727:43;;;;;;;;;;;;;;;;;;;;;;1631:26;1032:15727;;;;;;;;;;;;;;;;;;;;1348:22;1032:15727;;;-1:-1:-1;;;;;1032:15727:43;;;;;;;;;;;;;;;-1:-1:-1;;1032:15727:43;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;15943:35;1032:15727;;15943:35;:::i;:::-;1032:15727;;15995:8;1032:15727;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1663:21;1032:15727;;;;;;;;;;;;;;;;;;;;;;;;1547:28;1032:15727;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1032:15727:43;;;-1:-1:-1;;;;;1032:15727:43;;;;;;;;;;;;;10583:35;1032:15727;;;:::i;10583:35::-;1032:15727;;;;10668:8;1032:15727;;;;;10703:45;1032:15727;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;10711:17;;10703:45;:::i;:::-;10813:11;1032:15727;10813:16;;;1032:15727;10909:74;10917:11;1032:15727;10931:13;1032:15727;-1:-1:-1;10909:74:43;:::i;:::-;1032:15727;;;;-1:-1:-1;;;11769:51:43;;11792:10;1032:15727;11769:51;;1032:15727;;;;;;;-1:-1:-1;;;;;1032:15727:43;;;;;;;;;11769:51;;;;;;;;;;;;10809:879;11838:19;;1032:15727;;;;-1:-1:-1;;;;;1032:15727:43;;;;11905:97;;;;;1032:15727;;-1:-1:-1;;;11905:97:43;;-1:-1:-1;;;;;1032:15727:43;;;;;11905:97;;1032:15727;11792:10;1032:15727;;;;;;;;;;;;;;;;;;;;;;;;;11905:97;;;;;;;;10809:879;1032:15727;;12114:32;1032:15727;12115:19;1032:15727;1235:5;12036:29;12316:59;1032:15727;;12052:13;1032:15727;12036:29;;:::i;:::-;1032:15727;;;12115:19;:::i;:::-;12114:32;:::i;:::-;11792:10;12186:12;11792:10;;1032:15727;;;;;;;;12186:12;:::i;:::-;1032:15727;;;12218:16;1032:15727;;;;;12218:45;1032:15727;;;12218:45;:::i;:::-;1032:15727;;12273:27;1032:15727;12273:27;1032:15727;12273:27;:::i;:::-;;1032:15727;;;;;;;;;;;;;;;;;11792:10;;1032:15727;;12316:59;1032:15727;-1:-1:-1;;;;;;;;;;;1032:15727:43;;;11905:97;;12115:19;11905:97;;12316:59;11905:97;;;12114:32;11905:97;;:::i;:::-;;;;;;;;;;1032:15727;;;;;;;;;;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;;;;;;;;;;;11769:51;;;;1032:15727;11769:51;;1032:15727;11769:51;;;;;;1032:15727;11769:51;;;:::i;:::-;;;1032:15727;;;;;;;11769:51;;;1032:15727;;;;11769:51;;;-1:-1:-1;11769:51:43;;;1032:15727;;;;;;;;;10809:879;1032:15727;11050:16;;1032:15727;;;;11188:9;1032:15727;;;10809:879;1032:15727;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;;;;;;;;-1:-1:-1;;;1032:15727:43;;;;;;;11046:642;1032:15727;11319:16;1032:15727;;11476:8;1032:15727;11458:15;:26;1032:15727;;;11542:74;11550:11;1032:15727;11564:13;1032:15727;-1:-1:-1;11542:74:43;:::i;:::-;10809:879;;1032:15727;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;;;;;;;;-1:-1:-1;;;1032:15727:43;;;;;;;11315:373;1032:15727;;-1:-1:-1;;;11647:30:43;;1032:15727;;11647:30;;1032:15727;;;;;;-1:-1:-1;;;1032:15727:43;;;;11647:30;;;1032:15727;;;;;;;-1:-1:-1;;1032:15727:43;;;;;16303:35;1032:15727;;16303:35;:::i;:::-;1032:15727;;;;;;;;;;;;;;;;;;;2303:62:4;;:::i;:::-;1944:72:9;;:::i;:::-;3300:4;1032:15727:43;;-1:-1:-1;;;;;;;;;;;1032:15727:43;;;-1:-1:-1;;;;;;;;;;;1032:15727:43;3319:20:9;1032:15727:43;;;966:10:8;1032:15727:43;;3319:20:9;1032:15727:43;;;;;;;;;-1:-1:-1;;1032:15727:43;;;;;;;;;;1985:49;1032:15727;;;;;;1985:49;1032:15727;1985:49;;1032:15727;1985:49;;1032:15727;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1032:15727:43;;;;;;;;;;;;16618:25;1032:15727;;16610:81;1032:15727;;;;16618:46;;16610:81;:::i;:::-;1032:15727;;16618:25;1032:15727;;;;;;;;;;;;;;;;;;;;;;;2146:28;1032:15727;;;-1:-1:-1;;;;;1032:15727:43;;;;;;;;;;;;;;;;;;;;;2303:62:4;;:::i;:::-;-1:-1:-1;;;;;;;;;;;1032:15727:43;;-1:-1:-1;;;;;;1032:15727:43;;;;;;;-1:-1:-1;;;;;1032:15727:43;3975:40:4;1032:15727:43;;3975:40:4;1032:15727:43;;;;;;;;;-1:-1:-1;;1032:15727:43;;;;;;;;;;;1690:48;1032:15727;;;;;;;;;;;;;;;;;-1:-1:-1;;1032:15727:43;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1032:15727:43;;;;;;;;;;-1:-1:-1;;;;;1032:15727:43;;;;;;;;;;;;;-1:-1:-1;;;;;1032:15727:43;;;;;;;;;;;;;-1:-1:-1;;;;;1032:15727:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1032:15727:43;;-1:-1:-1;;;;;1032:15727:43;;;;;;;;;;;;-1:-1:-1;;;;;1032:15727:43;;;;;;;;-1:-1:-1;;;;;;;;;;;1032:15727:43;;;;;;;4301:16:5;1032:15727:43;;;;;4724:16:5;;:34;;;;1032:15727:43;4788:16:5;1032:15727:43;4788:16:5;:50;;;;1032:15727:43;4853:13:5;:30;;;;1032:15727:43;4849:91:5;;;-1:-1:-1;;1032:15727:43;;;;-1:-1:-1;;;;;;;;;;;1032:15727:43;6959:1:5;;1032:15727:43;;4977:67:5;;1032:15727:43;6891:76:5;;;:::i;:::-;;;:::i;6959:1::-;6891:76;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;1032:15727:43;-1:-1:-1;;;;;;;;;;;1032:15727:43;-1:-1:-1;;;;;1032:15727:43;;3757:26;;1032:15727;;3826:32;;1032:15727;;3907:24;;1032:15727;;3972:34;;1032:15727;;4058:29;;1032:15727;;4145:15;4133:27;;1032:15727;;;;;4199:20;1032:15727;;4262:28;;1032:15727;;4335:20;1032:15727;;1235:5;4391:29;;1032:15727;;;-1:-1:-1;;;;;1032:15727:43;;;;;;;;-1:-1:-1;;;;;1032:15727:43;;4510:38;1032:15727;;;4510:38;1032:15727;-1:-1:-1;;;;;1032:15727:43;;;;;;;;4590:30;1032:15727;;;;;4670:20;1032:15727;-1:-1:-1;;;;;1032:15727:43;;;;;;;;-1:-1:-1;;;;;1032:15727:43;;4770:25;1032:15727;;;4770:25;1032:15727;-1:-1:-1;;;;;1032:15727:43;;4805:30;1032:15727;;;4805:30;1032:15727;;;4845:26;1032:15727;4887:13;4924:3;1032:15727;;4902:20;;;;;1032:15727;4951:12;;;;:::i;:::-;;:18;1032:15727;4951:22;1032:15727;;5021:12;5013:57;5021:12;1032:15727;5021:12;;;:::i;:::-;;1032:15727;5021:26;;5013:57;:::i;:::-;5250:12;;;;:::i;:::-;;1032:15727;;;5243:4;1032:15727;;-1:-1:-1;;1032:15727:43;;5218:55;;1032:15727;;;;;;;;;;5218:55;1032:15727;;;;5218:55;;;;;;;;;;:::i;:::-;1032:15727;5191:96;;1032:15727;5462:12;;;;:::i;:::-;;:18;1032:15727;4770:25;1032:15727;5511:12;;;;:::i;:::-;;:24;1032:15727;;;;;;;:::i;:::-;;;;;5379:171;;1032:15727;;;;5379:171;;1032:15727;;;;;;5351:8;1032:15727;;;;;;;;;;;;;;;;;;5564:32;;;:::i;:::-;5705:12;;;;:::i;:::-;;1032:15727;;;;5660:25;1032:15727;;;;;;;4887:13;;1032:15727;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;;;-1:-1:-1;;;1032:15727:43;;;;;;;4902:20;;;5064:101:5;;1032:15727:43;;5064:101:5;1032:15727:43;;-1:-1:-1;;;;;;;;;;;1032:15727:43;;-1:-1:-1;;;;;;;;;;;1032:15727:43;5140:14:5;1032:15727:43;;;;;;5140:14:5;1032:15727:43;;;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;;;;;;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;;;-1:-1:-1;;;1032:15727:43;;;;;;;4977:67:5;-1:-1:-1;;1032:15727:43;;;-1:-1:-1;;;;;;;;;;;1032:15727:43;4977:67:5;;;4849:91;-1:-1:-1;;;4906:23:5;;1032:15727:43;4906:23:5;;4853:30;4870:13;;;4853:30;;;4788:50;4816:4;4808:25;:30;;-1:-1:-1;4788:50:5;;4724:34;;-1:-1:-1;4724:34:5;;;1032:15727:43;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1032:15727:43;;;;;;;;;;;;;;;;;;;;;;;3361:103:10;;:::i;:::-;1944:72:9;;:::i;:::-;1032:15727:43;8406:9;1032:15727;;;;8460:11;1032:15727;8460:16;;;-1:-1:-1;8526:11:43;1032:15727;8541:13;1032:15727;-1:-1:-1;8541:13:43;;8682:4;;:::i;:::-;1949:1:10;-1:-1:-1;;;;;;;;;;;1032:15727:43;;;8522:453;8785:59;8811:8;1032:15727;8793:15;:26;8785:59;:::i;:::-;9770:4;1032:15727;;8406:9;1032:15727;;;8406:9;1032:15727;10151:36;1032:15727;8526:11;1032:15727;;;;;;;;;;;10151:36;8522:453;;8456:1223;9010:1;8995:16;;9010:1;;-1:-1:-1;;;;;;;;;;;;1032:15727:43;-1:-1:-1;;;;;1032:15727:43;9100:10;:21;:52;;;;8991:688;9092:79;;;:::i;:::-;9206:4;;:::i;:::-;8456:1223;;9100:52;-1:-1:-1;9139:13:43;1032:15727;-1:-1:-1;;;;;1032:15727:43;9100:10;9125:27;9100:52;;8991:688;9247:1;9232:16;8456:1223;9228:451;9292:11;1032:15727;9307:13;1032:15727;-1:-1:-1;9307:13:43;;9448:4;;:::i;9288:381::-;9551:59;9577:8;1032:15727;9559:15;:26;9551:59;:::i;1032:15727::-;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;;;;;;;;;;;;;;;15624:10;1032:15727;;;;;;;;15624:10;1032:15727;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1032:15727:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1484:28;1032:15727;;;;;;;;;;;;;;;;;;;;2303:62:4;;:::i;:::-;-1:-1:-1;;;;;;;;;;;1032:15727:43;;;;2971:9:9;2967:62;;1032:15727:43;;;-1:-1:-1;;;;;;;;;;;1032:15727:43;3627:22:9;1032:15727:43;;;966:10:8;1032:15727:43;;3627:22:9;1032:15727:43;;2967:62:9;-1:-1:-1;;;3003:15:9;;1032:15727:43;3003:15:9;;1032:15727:43;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1032:15727:43;;;;;;;;;;;;;;;;;;;;;;1518:23;1032:15727;;;;;;;;;;;;;;-1:-1:-1;;1032:15727:43;;;;;;;;;;;2040:60;1032:15727;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1032:15727:43;;;;;;;;;;-1:-1:-1;;;;;1032:15727:43;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;1032:15727:43;;;;;-1:-1:-1;1032:15727:43;;;;5218:55;;1032:15727;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;;;-1:-1:-1;;;1032:15727:43;;;;;;;;5564:10;1032:15727;;;;;;;;;;5564:10;1032:15727;-1:-1:-1;5564:10:43;1032:15727;;;;;;5564:10;1032:15727;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;;;;;;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;;;-1:-1:-1;;;1032:15727:43;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;1032:15727:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1032:15727:43;;;;;;;;;-1:-1:-1;1032:15727:43;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;:::o;:::-;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;1032:15727:43;;;;:::o;:::-;;;;;;;;;;;;;3405:215:4;-1:-1:-1;;;;;1032:15727:43;3489:22:4;;3485:91;;-1:-1:-1;;;;;;;;;;;1032:15727:43;;-1:-1:-1;;;;;;1032:15727:43;;;;;;;-1:-1:-1;;;;;1032:15727:43;3975:40:4;-1:-1:-1;;3975:40:4;3405:215::o;3485:91::-;3534:31;;;3509:1;3534:31;3509:1;3534:31;1032:15727:43;;3509:1:4;3534:31;2658:162;-1:-1:-1;;;;;;;;;;;1032:15727:43;-1:-1:-1;;;;;1032:15727:43;966:10:8;2717:23:4;2713:101;;2658:162::o;2713:101::-;2763:40;;;-1:-1:-1;2763:40:4;966:10:8;2763:40:4;1032:15727:43;;-1:-1:-1;2763:40:4;3470:384:10;1991:1;-1:-1:-1;;;;;;;;;;;1032:15727:43;3670:20:10;3666:88;;1991:1;-1:-1:-1;;;;;;;;;;;1032:15727:43;3470:384:10:o;3666:88::-;3713:30;;;-1:-1:-1;3713:30:10;;-1:-1:-1;3713:30:10;2709:128:9;1032:15727:43;-1:-1:-1;;;;;;;;;;;1032:15727:43;;2770:61:9;;2709:128::o;2770:61::-;2805:15;;;-1:-1:-1;2805:15:9;;-1:-1:-1;2805:15:9;9691:503:43;9758:16;1032:15727;;-1:-1:-1;;1032:15727:43;9010:1;1032:15727;;;-1:-1:-1;1032:15727:43;;;-1:-1:-1;;;9951:29:43;;9974:4;9951:29;;;1032:15727;-1:-1:-1;;;;;1032:15727:43;;;;;;;9951:29;1032:15727;;9951:29;;;;;;;1032:15727;9951:29;;;9691:503;10011:19;;10007:111;;9691:503;1032:15727;;10151:36;1032:15727;10175:11;1032:15727;;;;9010:1;1032:15727;;;;;;10151:36;9691:503::o;10007:111::-;10068:17;1032:15727;10087:15;;-1:-1:-1;;;;;1032:15727:43;;;;10087:15;:::i;:::-;10007:111;;;;9951:29;;1032:15727;9951:29;;1032:15727;9951:29;;;;;;1032:15727;9951:29;;;:::i;:::-;;;1032:15727;;;;;;9951:29;;;;;;-1:-1:-1;9951:29:43;;;1032:15727;;;;;;;;;15188:209;1032:15727;;15354:4;1032:15727;;-1:-1:-1;;1032:15727:43;15329:50;;;1032:15727;;;;;;;;;;15329:50;1032:15727;;;;15329:50;1032:15727;15329:50;1032:15727;15306:83;;15188:209;:::o;1219:160:27:-;1032:15727:43;;-1:-1:-1;;;1328:43:27;;;;-1:-1:-1;;;;;1032:15727:43;;;;1328:43:27;;;1032:15727:43;;;;;;;;;1328:43:27;;;;;;1032:15727:43;;1328:43:27;:::i;:::-;1219:160::o;7082:141:5:-;1032:15727:43;-1:-1:-1;;;;;;;;;;;1032:15727:43;;;;7148:18:5;7144:73;;7082:141::o;7144:73::-;7189:17;;;-1:-1:-1;7189:17:5;;-1:-1:-1;7189:17:5;8370:720:27;;-1:-1:-1;8507:421:27;8370:720;8507:421;;;;;;;;;;;;-1:-1:-1;8507:421:27;;8942:15;;-1:-1:-1;;;;;;1032:15727:43;;8960:26:27;:31;8942:68;8938:146;;8370:720;:::o;8938:146::-;-1:-1:-1;;;;9033:40:27;;;-1:-1:-1;;;;;1032:15727:43;;;;9033:40:27;1032:15727:43;;;9033:40:27;8942:68;9009:1;8994:16;;8942:68;"},"methodIdentifiers":{"BASIS_POINTS()":"e1f1c4a7","addProduct((uint256,uint256,uint256))":"dd5934b3","beneficiaryWallet()":"c9788631","campaignAdmin()":"72afddf0","claimRefund(uint256,uint256)":"8527d58f","deadline()":"29dcb0cf","deposit(uint256,uint256)":"e2bbb158","factory()":"c45a0155","feePercentage()":"a001ecdd","feeWallet()":"f25f4b56","finalize()":"4bb278f3","finalized()":"b3f05b97","fundingType()":"fa8ab0ee","getOriginalProductId(uint256)":"75390e73","getProduct(uint256)":"b9db15b4","getProductIds()":"47428e7b","getUniqueProductId(uint256)":"8500efa1","initialize(address,address,address,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256)[],address,address)":"5cb04079","minimumTarget()":"42235da6","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","productIds(uint256)":"cb51bba9","productSoldCount(uint256)":"ebd692ea","productToken()":"25b4f65f","products(uint256)":"7acc0b20","renounceOwnership()":"715018a6","tokenDeposits(uint256)":"66bff1db","totalRaised()":"c5c4744c","transferOwnership(address)":"f2fde38b","uniqueToOriginalProductId(uint256)":"2903d9cf","unpause()":"3f4ba83a","updateProduct(uint256,uint256,uint256)":"f85292ca","usdc()":"3e413bee"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"netAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalRaised\",\"type\":\"uint256\"}],\"name\":\"Finalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supplyLimit\",\"type\":\"uint256\"}],\"name\":\"ProductAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldSupplyLimit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newSupplyLimit\",\"type\":\"uint256\"}],\"name\":\"ProductUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"Refund\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASIS_POINTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyLimit\",\"type\":\"uint256\"}],\"internalType\":\"struct ProductConfig\",\"name\":\"product\",\"type\":\"tuple\"}],\"name\":\"addProduct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beneficiaryWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"campaignAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"claimRefund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingType\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"uniqueProductId\",\"type\":\"uint256\"}],\"name\":\"getOriginalProductId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"}],\"name\":\"getProduct\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyLimit\",\"type\":\"uint256\"}],\"internalType\":\"struct ProductConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProductIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"}],\"name\":\"getUniqueProductId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdcAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_beneficiaryWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_feeWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_feePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fundingType\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minimumTarget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_productTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_factoryAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyLimit\",\"type\":\"uint256\"}],\"internalType\":\"struct ProductConfig[]\",\"name\":\"_products\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"_campaignAdmin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumTarget\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"productIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"productSoldCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"productToken\",\"outputs\":[{\"internalType\":\"contract ProductTokenUpgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"products\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyLimit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uniqueToOriginalProductId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newSupplyLimit\",\"type\":\"uint256\"}],\"name\":\"updateProduct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdc\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"addProduct((uint256,uint256,uint256))\":{\"details\":\"Add a new product to the campaign\",\"params\":{\"product\":\"Product configuration with original product ID\"}},\"claimRefund(uint256,uint256)\":{\"details\":\"Claim refund for a specific product\",\"params\":{\"productId\":\"The original product ID (not the unique hashed one)\",\"quantity\":\"The quantity of the product to refund\"}},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"deposit(uint256,uint256)\":{\"details\":\"Deposit USDC for a specific product\",\"params\":{\"productId\":\"The original product ID (not the unique hashed one)\",\"quantity\":\"The quantity of the product to deposit\"}},\"finalize()\":{\"details\":\"Finalize the campaign\"},\"getOriginalProductId(uint256)\":{\"details\":\"Get original product ID from unique product ID\",\"params\":{\"uniqueProductId\":\"The unique product ID\"},\"returns\":{\"_0\":\"The original product ID\"}},\"getProduct(uint256)\":{\"details\":\"Get product by original product ID\",\"params\":{\"productId\":\"The original product ID (not the unique hashed one)\"},\"returns\":{\"_0\":\"The product configuration\"}},\"getUniqueProductId(uint256)\":{\"details\":\"Get unique product ID from original product ID\",\"params\":{\"productId\":\"The original product ID\"},\"returns\":{\"_0\":\"The unique product ID for this campaign\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateProduct(uint256,uint256,uint256)\":{\"details\":\"Update an existing product\",\"params\":{\"newPrice\":\"New price for the product\",\"newSupplyLimit\":\"New supply limit (0 for unlimited)\",\"productId\":\"The original product ID (will be converted to unique ID)\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addProduct((uint256,uint256,uint256))\":{\"notice\":\"The product ID will be converted to a unique ID internally\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/USDCFundraiserUpgradeable.sol\":\"USDCFundraiserUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"keccak256\":\"0x8c97744adc25cf30d1a2509bff6c0ddc9b36feb75f8e38c85d5c62b8ec773159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c53c8736dacbf8c517c63937d556c3e4873a62f509c5d84b89e32fc5c9c6c2c\",\"dweb:/ipfs/QmeR6RSce5dTDcPgbwBnG7E8U89716bqsUcv1NeWnX5RJf\"]},\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":{\"keccak256\":\"0xce623f3e7fa4addf240032d2817b2b489ac08e79fae14a5cc5850ed3f1acddf8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0546b2739f3989b897c5cb591d01211e2db22e1a8578f68117f1a8a692abd85c\",\"dweb:/ipfs/QmW6guw8uUk2Dq49PWdjeZeEvnDDRg3CVX2BVcVNcT6QNL\"]},\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e35eb46dfadf12396e92dd970547209dfd99f0ae5b1ec7b5a3e81617f620a1\",\"dweb:/ipfs/Qmanoi2CDi9MwkP44HosagvewfMEvCMN1YthGRmCexVjwY\"]},\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da\",\"dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol\":{\"keccak256\":\"0x3a0d63838dff3fd8b77c8c44ecf37cc39b15f26fd5269da3b690879478fa3cf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://502cec8d2ef132cce69840b1c2aef2209092554292a50d628b27477ef7a441ca\",\"dweb:/ipfs/QmaSxcHDndhVuWm4E6LcSMRkhFYsMXxrgLWMLCQnyG3qHr\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf\",\"dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x1d7a05b3219532ea5ece50a80cf390cac9109dc74e07763adfa463ab5a3af0dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://687e2ec572d0e63827bb0025b91f2246be4c938f830ef4b4c288ee2e3727d5ca\",\"dweb:/ipfs/QmZXWSAQ9ftVrqNEa5ZTpN4wxvzCgsSW12cgiSRkrLTpQ8\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x22f099c02c252dd1f6ddc464916ce683294a63b23b3c6ee3d290b77398e2474b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82d2ba4b77ecc4f70211e0de1a920e3ea29eb86c3e16ef8f2a7d746c72a97f1e\",\"dweb:/ipfs/QmYBqATARQEnxd33jW6iYCuEPaL6KdYyYSoQrjFXZka3of\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/ProductTokenUpgradeable.sol\":{\"keccak256\":\"0xaf50b2a1429b5762229e67af499d3f3915a15d02ec3043ca572b4fe946b8888a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b0593f86ba7608b376e70d0c330d051d833415f5020c0352ba685010b8fc444\",\"dweb:/ipfs/QmVqaDqNPgqSfTxhkg4ChyuE4PxzY4kXMNPiqUfifSpJLe\"]},\"contracts/USDCFundraiserUpgradeable.sol\":{\"keccak256\":\"0xde60b5784ce070f31aa839bf40c6f30b3963984c69de35087f137d3cd9b9f15e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1aefd54d126921fec4ba0859a10a59deb889bce94f8da8327cb8c423597c5d49\",\"dweb:/ipfs/QmedgoXSBEdycEJNieWEhPiBa5f8vRDfjKxEX7dAjr57rC\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":11855,"contract":"contracts/USDCFundraiserUpgradeable.sol:USDCFundraiserUpgradeable","label":"usdc","offset":0,"slot":"0","type":"t_contract(IERC20)3904"},{"astId":11858,"contract":"contracts/USDCFundraiserUpgradeable.sol:USDCFundraiserUpgradeable","label":"productToken","offset":0,"slot":"1","type":"t_contract(ProductTokenUpgradeable)11276"},{"astId":11860,"contract":"contracts/USDCFundraiserUpgradeable.sol:USDCFundraiserUpgradeable","label":"factory","offset":0,"slot":"2","type":"t_address"},{"astId":11862,"contract":"contracts/USDCFundraiserUpgradeable.sol:USDCFundraiserUpgradeable","label":"beneficiaryWallet","offset":0,"slot":"3","type":"t_address"},{"astId":11864,"contract":"contracts/USDCFundraiserUpgradeable.sol:USDCFundraiserUpgradeable","label":"feeWallet","offset":0,"slot":"4","type":"t_address"},{"astId":11866,"contract":"contracts/USDCFundraiserUpgradeable.sol:USDCFundraiserUpgradeable","label":"minimumTarget","offset":0,"slot":"5","type":"t_uint256"},{"astId":11868,"contract":"contracts/USDCFundraiserUpgradeable.sol:USDCFundraiserUpgradeable","label":"deadline","offset":0,"slot":"6","type":"t_uint256"},{"astId":11870,"contract":"contracts/USDCFundraiserUpgradeable.sol:USDCFundraiserUpgradeable","label":"feePercentage","offset":0,"slot":"7","type":"t_uint256"},{"astId":11872,"contract":"contracts/USDCFundraiserUpgradeable.sol:USDCFundraiserUpgradeable","label":"totalRaised","offset":0,"slot":"8","type":"t_uint256"},{"astId":11874,"contract":"contracts/USDCFundraiserUpgradeable.sol:USDCFundraiserUpgradeable","label":"finalized","offset":0,"slot":"9","type":"t_bool"},{"astId":11878,"contract":"contracts/USDCFundraiserUpgradeable.sol:USDCFundraiserUpgradeable","label":"tokenDeposits","offset":0,"slot":"10","type":"t_mapping(t_uint256,t_uint256)"},{"astId":11881,"contract":"contracts/USDCFundraiserUpgradeable.sol:USDCFundraiserUpgradeable","label":"productIds","offset":0,"slot":"11","type":"t_array(t_uint256)dyn_storage"},{"astId":11885,"contract":"contracts/USDCFundraiserUpgradeable.sol:USDCFundraiserUpgradeable","label":"productSoldCount","offset":0,"slot":"12","type":"t_mapping(t_uint256,t_uint256)"},{"astId":11887,"contract":"contracts/USDCFundraiserUpgradeable.sol:USDCFundraiserUpgradeable","label":"fundingType","offset":0,"slot":"13","type":"t_uint256"},{"astId":11892,"contract":"contracts/USDCFundraiserUpgradeable.sol:USDCFundraiserUpgradeable","label":"products","offset":0,"slot":"14","type":"t_mapping(t_uint256,t_struct(ProductConfig)11814_storage)"},{"astId":11896,"contract":"contracts/USDCFundraiserUpgradeable.sol:USDCFundraiserUpgradeable","label":"uniqueToOriginalProductId","offset":0,"slot":"15","type":"t_mapping(t_uint256,t_uint256)"},{"astId":11898,"contract":"contracts/USDCFundraiserUpgradeable.sol:USDCFundraiserUpgradeable","label":"campaignAdmin","offset":0,"slot":"16","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(IERC20)3904":{"encoding":"inplace","label":"contract IERC20","numberOfBytes":"20"},"t_contract(ProductTokenUpgradeable)11276":{"encoding":"inplace","label":"contract ProductTokenUpgradeable","numberOfBytes":"20"},"t_mapping(t_uint256,t_struct(ProductConfig)11814_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct ProductConfig)","numberOfBytes":"32","value":"t_struct(ProductConfig)11814_storage"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_struct(ProductConfig)11814_storage":{"encoding":"inplace","label":"struct ProductConfig","members":[{"astId":11809,"contract":"contracts/USDCFundraiserUpgradeable.sol:USDCFundraiserUpgradeable","label":"productId","offset":0,"slot":"0","type":"t_uint256"},{"astId":11811,"contract":"contracts/USDCFundraiserUpgradeable.sol:USDCFundraiserUpgradeable","label":"price","offset":0,"slot":"1","type":"t_uint256"},{"astId":11813,"contract":"contracts/USDCFundraiserUpgradeable.sol:USDCFundraiserUpgradeable","label":"supplyLimit","offset":0,"slot":"2","type":"t_uint256"}],"numberOfBytes":"96"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}}}}}